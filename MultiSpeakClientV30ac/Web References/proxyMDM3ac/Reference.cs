//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MultiSpeakClientV30ac.proxyMDM3ac {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MDM_ServerSoap", Namespace="http://www.multispeak.org/Version_3.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeometryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterRead[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricMeter[]))]
    public partial class MDM_Server : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private MultiSpeakMsgHeader multiSpeakMsgHeaderValueField;
        
        private System.Threading.SendOrPostCallback IntervalDataNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsageMonitoringNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PowerFactorManagementEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubstationNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownlineCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUplineCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownlineMeterConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUplineMeterConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiblingMeterConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnenrollPPMCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitPaymentTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeableDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustPPMBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceLocationChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAStatusChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAPointChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAPointChangedNotificationForAnalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAPointChangedNotificationForStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationByPointIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationForPowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationForVoltageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAStatusChangedNotificationByPointIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomersAffectedByOutageNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterConnectivityNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndDeviceShipmentNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormattedBlockNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ODEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ODDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback HistoryLogChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProfileChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterTestTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCBDataForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCBDataForServiceLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCBDataForMeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadingChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStateNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStatesNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadingScheduleResultNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectDisconnectChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormattedBlockTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsByMeterNoListFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingByMeterIDAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByBillingCycleIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingByMeterIDIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByMeterListAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByMeterConnectionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInHomeDisplayInIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveInHomeDisplayFromIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateLoadManagementEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateLoadManagementEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiatePowerFactorManagementEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiatePlannedOutageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPlannedOutageOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateUsageMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelUsageMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDisconnectedStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDisconnectedStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadByMeterNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMeterInMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMetersFromMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateGroupMeterReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduleGroupMeterReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadByMeterNoAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateOutageDetectionEventRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateODEventRequestByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateODMonitoringRequestByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisplayODMonitoringRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelODMonitoringRequestByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateConnectDisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStateChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStatesChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateServiceLocationDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteAccountHistoryCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateCDStateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutageEventChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateArmCDDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateEnableCDDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDisableCDDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDemandResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMetersInConfigurationGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMetersFromConfigurationGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishReadingSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableReadingScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableReadingScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReadingScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadsByFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateODEventRequestByServiceLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyODDataForOutageDetectionDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PPMMeterExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayMessageNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayBillingMessageNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnrollPPMCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPropaneMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllElectricServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGasServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllWaterServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPropaneServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetElectricMeterByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGasMeterByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaterMeterByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropaneMeterByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomersByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByMeterNumberAndServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMetersByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllServiceLocationsByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByAccountNumberAndServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByCustIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByDBANameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceTreeConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterConnectivityBySubstationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentByShipmentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentsByDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentByTransponderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPDataByMeterNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterHistoryByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByMeterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByServLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByCustIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByAMRTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterGroupNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterGroupNamesByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByServiceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByServLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByCustIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByGridLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByPhaseCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByLoadGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByShutOffDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByEALocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByFacilityIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersBySiteIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByCustomerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByHomePhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersBySearchStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingScheduleByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsByMeterNoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationGroupNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationGroupNamesByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterBaseByObjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestRegistrationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterForServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnregisterForServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrationInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublishMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DomainMembersChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DomainNamesChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPMPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPMBalanceAdjustmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilledUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllConnectDisconnectEventsByReasonCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllInHomeDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrePayStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeableDevicesByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAMRSupportedMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedAMRMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAMRMeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountOfControllableLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLoadManagementDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoadManagementDeviceByMeterNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoadManagementDeviceByServLocOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLoadManagementActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountOfControlledLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSubstationLoadControlStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByBillingCycleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingByMeterNumberFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogsByMeterNoAndEventCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogsByDateAndEventCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestMeterReadingsByMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByMeterNoAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportedReadingTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByMeterNoAndTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByUOMAndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOutageDetectionDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageDetectionDevicesByMeterNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageDetectionDevicesByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageDetectionDevicesByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutagedODDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCDSupportedMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedCDMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCDMeterStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageEventStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveOutagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageEventStatusByOutageLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllElectricMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGasMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllWaterMetersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MDM_Server() {
            this.Url = global::MultiSpeakClientV30ac.Properties.Settings.Default.MultiSpeakClientV30ac_proxyMDM3ac_MDM_Server;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MultiSpeakMsgHeader MultiSpeakMsgHeaderValue {
            get {
                return this.multiSpeakMsgHeaderValueField;
            }
            set {
                this.multiSpeakMsgHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IntervalDataNotificationCompletedEventHandler IntervalDataNotificationCompleted;
        
        /// <remarks/>
        public event UsageMonitoringNotificationCompletedEventHandler UsageMonitoringNotificationCompleted;
        
        /// <remarks/>
        public event PowerFactorManagementEventNotificationCompletedEventHandler PowerFactorManagementEventNotificationCompleted;
        
        /// <remarks/>
        public event GetSubstationNamesCompletedEventHandler GetSubstationNamesCompleted;
        
        /// <remarks/>
        public event GetDownlineCircuitElementsCompletedEventHandler GetDownlineCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetUplineCircuitElementsCompletedEventHandler GetUplineCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetChildCircuitElementsCompletedEventHandler GetChildCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetParentCircuitElementsCompletedEventHandler GetParentCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetAllCircuitElementsCompletedEventHandler GetAllCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetModifiedCircuitElementsCompletedEventHandler GetModifiedCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetDownlineMeterConnectivityCompletedEventHandler GetDownlineMeterConnectivityCompleted;
        
        /// <remarks/>
        public event GetUplineMeterConnectivityCompletedEventHandler GetUplineMeterConnectivityCompleted;
        
        /// <remarks/>
        public event GetSiblingMeterConnectivityCompletedEventHandler GetSiblingMeterConnectivityCompleted;
        
        /// <remarks/>
        public event UnenrollPPMCustomerCompletedEventHandler UnenrollPPMCustomerCompleted;
        
        /// <remarks/>
        public event EstablishIHDGroupCompletedEventHandler EstablishIHDGroupCompleted;
        
        /// <remarks/>
        public event DeleteIHDGroupCompletedEventHandler DeleteIHDGroupCompleted;
        
        /// <remarks/>
        public event CommitPaymentTransactionCompletedEventHandler CommitPaymentTransactionCompleted;
        
        /// <remarks/>
        public event ChargeableDeviceChangedNotificationCompletedEventHandler ChargeableDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceAddNotificationCompletedEventHandler LMDeviceAddNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceChangedNotificationCompletedEventHandler LMDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceExchangeNotificationCompletedEventHandler LMDeviceExchangeNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceInstalledNotificationCompletedEventHandler LMDeviceInstalledNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceRemoveNotificationCompletedEventHandler LMDeviceRemoveNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceRetireNotificationCompletedEventHandler LMDeviceRetireNotificationCompleted;
        
        /// <remarks/>
        public event AdjustPPMBalanceCompletedEventHandler AdjustPPMBalanceCompleted;
        
        /// <remarks/>
        public event ServiceLocationChangedNotificationCompletedEventHandler ServiceLocationChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterChangedNotificationCompletedEventHandler MeterChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterRemoveNotificationCompletedEventHandler MeterRemoveNotificationCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationCompletedEventHandler SCADAAnalogChangedNotificationCompleted;
        
        /// <remarks/>
        public event SCADAStatusChangedNotificationCompletedEventHandler SCADAStatusChangedNotificationCompleted;
        
        /// <remarks/>
        public event SCADAPointChangedNotificationCompletedEventHandler SCADAPointChangedNotificationCompleted;
        
        /// <remarks/>
        public event SCADAPointChangedNotificationForAnalogCompletedEventHandler SCADAPointChangedNotificationForAnalogCompleted;
        
        /// <remarks/>
        public event SCADAPointChangedNotificationForStatusCompletedEventHandler SCADAPointChangedNotificationForStatusCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationByPointIDCompletedEventHandler SCADAAnalogChangedNotificationByPointIDCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationForPowerCompletedEventHandler SCADAAnalogChangedNotificationForPowerCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationForVoltageCompletedEventHandler SCADAAnalogChangedNotificationForVoltageCompleted;
        
        /// <remarks/>
        public event SCADAStatusChangedNotificationByPointIDCompletedEventHandler SCADAStatusChangedNotificationByPointIDCompleted;
        
        /// <remarks/>
        public event MeterRetireNotificationCompletedEventHandler MeterRetireNotificationCompleted;
        
        /// <remarks/>
        public event MeterAddNotificationCompletedEventHandler MeterAddNotificationCompleted;
        
        /// <remarks/>
        public event MeterExchangeNotificationCompletedEventHandler MeterExchangeNotificationCompleted;
        
        /// <remarks/>
        public event CustomersAffectedByOutageNotificationCompletedEventHandler CustomersAffectedByOutageNotificationCompleted;
        
        /// <remarks/>
        public event MeterConnectivityNotificationCompletedEventHandler MeterConnectivityNotificationCompleted;
        
        /// <remarks/>
        public event EndDeviceShipmentNotificationCompletedEventHandler EndDeviceShipmentNotificationCompleted;
        
        /// <remarks/>
        public event FormattedBlockNotificationCompletedEventHandler FormattedBlockNotificationCompleted;
        
        /// <remarks/>
        public event ODEventNotificationCompletedEventHandler ODEventNotificationCompleted;
        
        /// <remarks/>
        public event ODDeviceChangedNotificationCompletedEventHandler ODDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceAddNotificationCompletedEventHandler CDDeviceAddNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceChangedNotificationCompletedEventHandler CDDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceExchangeNotificationCompletedEventHandler CDDeviceExchangeNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceRemoveNotificationCompletedEventHandler CDDeviceRemoveNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceInstalledNotificationCompletedEventHandler CDDeviceInstalledNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceRetireNotificationCompletedEventHandler CDDeviceRetireNotificationCompleted;
        
        /// <remarks/>
        public event HistoryLogChangedNotificationCompletedEventHandler HistoryLogChangedNotificationCompleted;
        
        /// <remarks/>
        public event LoadProfileChangedNotificationCompletedEventHandler LoadProfileChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterTestTransactionCompletedEventHandler MeterTestTransactionCompleted;
        
        /// <remarks/>
        public event MeterInstalledNotificationCompletedEventHandler MeterInstalledNotificationCompleted;
        
        /// <remarks/>
        public event ModifyCBDataForCustomerCompletedEventHandler ModifyCBDataForCustomerCompleted;
        
        /// <remarks/>
        public event ModifyCBDataForServiceLocationCompletedEventHandler ModifyCBDataForServiceLocationCompleted;
        
        /// <remarks/>
        public event ModifyCBDataForMeterCompletedEventHandler ModifyCBDataForMeterCompleted;
        
        /// <remarks/>
        public event ReadingChangedNotificationCompletedEventHandler ReadingChangedNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayAddNotificationCompletedEventHandler InHomeDisplayAddNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayChangedNotificationCompletedEventHandler InHomeDisplayChangedNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayExchangeNotificationCompletedEventHandler InHomeDisplayExchangeNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayInstalledNotificationCompletedEventHandler InHomeDisplayInstalledNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayRemoveNotificationCompletedEventHandler InHomeDisplayRemoveNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayRetireNotificationCompletedEventHandler InHomeDisplayRetireNotificationCompleted;
        
        /// <remarks/>
        public event CDStateNotificationCompletedEventHandler CDStateNotificationCompleted;
        
        /// <remarks/>
        public event CDStatesNotificationCompletedEventHandler CDStatesNotificationCompleted;
        
        /// <remarks/>
        public event ReadingScheduleResultNotificationCompletedEventHandler ReadingScheduleResultNotificationCompleted;
        
        /// <remarks/>
        public event MeterEventNotificationCompletedEventHandler MeterEventNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseExchangeNotificationCompletedEventHandler MeterBaseExchangeNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseInstalledNotificationCompletedEventHandler MeterBaseInstalledNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseChangedNotificationCompletedEventHandler MeterBaseChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseRemoveNotificationCompletedEventHandler MeterBaseRemoveNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseRetireNotificationCompletedEventHandler MeterBaseRetireNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseAddNotificationCompletedEventHandler MeterBaseAddNotificationCompleted;
        
        /// <remarks/>
        public event ConnectDisconnectChangedNotificationCompletedEventHandler ConnectDisconnectChangedNotificationCompleted;
        
        /// <remarks/>
        public event GetFormattedBlockTemplatesCompletedEventHandler GetFormattedBlockTemplatesCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsByMeterNoListFormattedBlockCompletedEventHandler GetLatestReadingsByMeterNoListFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetReadingByMeterIDAndFieldNameIntervalDataCompletedEventHandler GetReadingByMeterIDAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateIntervalDataCompletedEventHandler GetReadingsByDateIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateAndFieldNameIntervalDataCompletedEventHandler GetReadingsByDateAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingsByBillingCycleIntervalDataCompletedEventHandler GetReadingsByBillingCycleIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingByMeterIDIntervalDataCompletedEventHandler GetReadingByMeterIDIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByMeterListAndFieldNameIntervalDataCompletedEventHandler GetLatestReadingByMeterListAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventHandler GetLatestReadingByMeterIDAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByFieldNameIntervalDataCompletedEventHandler GetLatestReadingByFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventHandler GetLatestMeterReadingsByMeterGroupIntervalDataCompleted;
        
        /// <remarks/>
        public event GetMetersByMeterConnectionStatusCompletedEventHandler GetMetersByMeterConnectionStatusCompleted;
        
        /// <remarks/>
        public event InsertInHomeDisplayInIHDGroupCompletedEventHandler InsertInHomeDisplayInIHDGroupCompleted;
        
        /// <remarks/>
        public event RemoveInHomeDisplayFromIHDGroupCompletedEventHandler RemoveInHomeDisplayFromIHDGroupCompleted;
        
        /// <remarks/>
        public event InitiateLoadManagementEventCompletedEventHandler InitiateLoadManagementEventCompleted;
        
        /// <remarks/>
        public event InitiateLoadManagementEventsCompletedEventHandler InitiateLoadManagementEventsCompleted;
        
        /// <remarks/>
        public event InitiatePowerFactorManagementEventCompletedEventHandler InitiatePowerFactorManagementEventCompleted;
        
        /// <remarks/>
        public event InitiatePlannedOutageCompletedEventHandler InitiatePlannedOutageCompleted;
        
        /// <remarks/>
        public event CancelPlannedOutageCompletedEventHandler CancelPlannedOutageCompleted;
        
        /// <remarks/>
        public event InitiateUsageMonitoringCompletedEventHandler InitiateUsageMonitoringCompleted;
        
        /// <remarks/>
        public event CancelUsageMonitoringCompletedEventHandler CancelUsageMonitoringCompleted;
        
        /// <remarks/>
        public event InitiateDisconnectedStatusCompletedEventHandler InitiateDisconnectedStatusCompleted;
        
        /// <remarks/>
        public event CancelDisconnectedStatusCompletedEventHandler CancelDisconnectedStatusCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadByMeterNumberCompletedEventHandler InitiateMeterReadByMeterNumberCompleted;
        
        /// <remarks/>
        public event EstablishMeterGroupCompletedEventHandler EstablishMeterGroupCompleted;
        
        /// <remarks/>
        public event DeleteMeterGroupCompletedEventHandler DeleteMeterGroupCompleted;
        
        /// <remarks/>
        public event InsertMeterInMeterGroupCompletedEventHandler InsertMeterInMeterGroupCompleted;
        
        /// <remarks/>
        public event RemoveMetersFromMeterGroupCompletedEventHandler RemoveMetersFromMeterGroupCompleted;
        
        /// <remarks/>
        public event InitiateGroupMeterReadCompletedEventHandler InitiateGroupMeterReadCompleted;
        
        /// <remarks/>
        public event ScheduleGroupMeterReadCompletedEventHandler ScheduleGroupMeterReadCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadByMeterNoAndTypeCompletedEventHandler InitiateMeterReadByMeterNoAndTypeCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadByObjectCompletedEventHandler InitiateMeterReadByObjectCompleted;
        
        /// <remarks/>
        public event InitiateOutageDetectionEventRequestCompletedEventHandler InitiateOutageDetectionEventRequestCompleted;
        
        /// <remarks/>
        public event InitiateODEventRequestByObjectCompletedEventHandler InitiateODEventRequestByObjectCompleted;
        
        /// <remarks/>
        public event InitiateODMonitoringRequestByObjectCompletedEventHandler InitiateODMonitoringRequestByObjectCompleted;
        
        /// <remarks/>
        public event DisplayODMonitoringRequestsCompletedEventHandler DisplayODMonitoringRequestsCompleted;
        
        /// <remarks/>
        public event CancelODMonitoringRequestByObjectCompletedEventHandler CancelODMonitoringRequestByObjectCompleted;
        
        /// <remarks/>
        public event InitiateConnectDisconnectCompletedEventHandler InitiateConnectDisconnectCompleted;
        
        /// <remarks/>
        public event CDStateChangedNotificationCompletedEventHandler CDStateChangedNotificationCompleted;
        
        /// <remarks/>
        public event CDStatesChangedNotificationCompletedEventHandler CDStatesChangedNotificationCompleted;
        
        /// <remarks/>
        public event UpdateServiceLocationDisplaysCompletedEventHandler UpdateServiceLocationDisplaysCompleted;
        
        /// <remarks/>
        public event WriteAccountHistoryCommentsCompletedEventHandler WriteAccountHistoryCommentsCompleted;
        
        /// <remarks/>
        public event InitiateCDStateRequestCompletedEventHandler InitiateCDStateRequestCompleted;
        
        /// <remarks/>
        public event OutageEventChangedNotificationCompletedEventHandler OutageEventChangedNotificationCompleted;
        
        /// <remarks/>
        public event InitiateArmCDDeviceCompletedEventHandler InitiateArmCDDeviceCompleted;
        
        /// <remarks/>
        public event InitiateEnableCDDeviceCompletedEventHandler InitiateEnableCDDeviceCompleted;
        
        /// <remarks/>
        public event InitiateDisableCDDeviceCompletedEventHandler InitiateDisableCDDeviceCompleted;
        
        /// <remarks/>
        public event InitiateDemandResetCompletedEventHandler InitiateDemandResetCompleted;
        
        /// <remarks/>
        public event InsertMetersInConfigurationGroupCompletedEventHandler InsertMetersInConfigurationGroupCompleted;
        
        /// <remarks/>
        public event RemoveMetersFromConfigurationGroupCompletedEventHandler RemoveMetersFromConfigurationGroupCompleted;
        
        /// <remarks/>
        public event EstablishSchedulesCompletedEventHandler EstablishSchedulesCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event EstablishReadingSchedulesCompletedEventHandler EstablishReadingSchedulesCompleted;
        
        /// <remarks/>
        public event EnableReadingScheduleCompletedEventHandler EnableReadingScheduleCompleted;
        
        /// <remarks/>
        public event DisableReadingScheduleCompletedEventHandler DisableReadingScheduleCompleted;
        
        /// <remarks/>
        public event DeleteReadingScheduleCompletedEventHandler DeleteReadingScheduleCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadsByFieldNameCompletedEventHandler InitiateMeterReadsByFieldNameCompleted;
        
        /// <remarks/>
        public event InitiateODEventRequestByServiceLocationCompletedEventHandler InitiateODEventRequestByServiceLocationCompleted;
        
        /// <remarks/>
        public event ModifyODDataForOutageDetectionDeviceCompletedEventHandler ModifyODDataForOutageDetectionDeviceCompleted;
        
        /// <remarks/>
        public event CustomerChangedNotificationCompletedEventHandler CustomerChangedNotificationCompleted;
        
        /// <remarks/>
        public event PPMMeterExchangeNotificationCompletedEventHandler PPMMeterExchangeNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayMessageNotificationCompletedEventHandler InHomeDisplayMessageNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayBillingMessageNotificationCompletedEventHandler InHomeDisplayBillingMessageNotificationCompleted;
        
        /// <remarks/>
        public event EnrollPPMCustomerCompletedEventHandler EnrollPPMCustomerCompleted;
        
        /// <remarks/>
        public event GetAllPropaneMetersCompletedEventHandler GetAllPropaneMetersCompleted;
        
        /// <remarks/>
        public event GetAllElectricServiceLocationsCompletedEventHandler GetAllElectricServiceLocationsCompleted;
        
        /// <remarks/>
        public event GetAllGasServiceLocationsCompletedEventHandler GetAllGasServiceLocationsCompleted;
        
        /// <remarks/>
        public event GetAllWaterServiceLocationsCompletedEventHandler GetAllWaterServiceLocationsCompleted;
        
        /// <remarks/>
        public event GetAllPropaneServiceLocationsCompletedEventHandler GetAllPropaneServiceLocationsCompleted;
        
        /// <remarks/>
        public event GetElectricMeterByAccountNumberCompletedEventHandler GetElectricMeterByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetGasMeterByAccountNumberCompletedEventHandler GetGasMeterByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetWaterMeterByAccountNumberCompletedEventHandler GetWaterMeterByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetPropaneMeterByAccountNumberCompletedEventHandler GetPropaneMeterByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetAllCustomersByServiceTypeCompletedEventHandler GetAllCustomersByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetCustomerByMeterNumberAndServiceTypeCompletedEventHandler GetCustomerByMeterNumberAndServiceTypeCompleted;
        
        /// <remarks/>
        public event GetAllMetersByServiceTypeCompletedEventHandler GetAllMetersByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetAllServiceLocationsByServiceTypeCompletedEventHandler GetAllServiceLocationsByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetMeterByAccountNumberAndServiceTypeCompletedEventHandler GetMeterByAccountNumberAndServiceTypeCompleted;
        
        /// <remarks/>
        public event GetAllCustomersCompletedEventHandler GetAllCustomersCompleted;
        
        /// <remarks/>
        public event GetModifiedCustomersCompletedEventHandler GetModifiedCustomersCompleted;
        
        /// <remarks/>
        public event GetModifiedServiceLocationsCompletedEventHandler GetModifiedServiceLocationsCompleted;
        
        /// <remarks/>
        public event GetCustomerByCustIdCompletedEventHandler GetCustomerByCustIdCompleted;
        
        /// <remarks/>
        public event GetCustomerByMeterNoCompletedEventHandler GetCustomerByMeterNoCompleted;
        
        /// <remarks/>
        public event GetCustomerByNameCompletedEventHandler GetCustomerByNameCompleted;
        
        /// <remarks/>
        public event GetCustomerByDBANameCompletedEventHandler GetCustomerByDBANameCompleted;
        
        /// <remarks/>
        public event GetDeviceTreeConnectivityCompletedEventHandler GetDeviceTreeConnectivityCompleted;
        
        /// <remarks/>
        public event GetMeterConnectivityBySubstationCompletedEventHandler GetMeterConnectivityBySubstationCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentByShipmentIDCompletedEventHandler GetEndDeviceShipmentByShipmentIDCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentsByDateRangeCompletedEventHandler GetEndDeviceShipmentsByDateRangeCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentByMeterIDCompletedEventHandler GetEndDeviceShipmentByMeterIDCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentByTransponderIDCompletedEventHandler GetEndDeviceShipmentByTransponderIDCompleted;
        
        /// <remarks/>
        public event GetLPDataByMeterNumberCompletedEventHandler GetLPDataByMeterNumberCompleted;
        
        /// <remarks/>
        public event GetMeterHistoryByMeterIDCompletedEventHandler GetMeterHistoryByMeterIDCompleted;
        
        /// <remarks/>
        public event GetMeterByMeterIdCompletedEventHandler GetMeterByMeterIdCompleted;
        
        /// <remarks/>
        public event GetMeterByMeterNoCompletedEventHandler GetMeterByMeterNoCompleted;
        
        /// <remarks/>
        public event GetMeterByServLocCompletedEventHandler GetMeterByServLocCompleted;
        
        /// <remarks/>
        public event GetMeterByAccountNumberCompletedEventHandler GetMeterByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetMeterByCustIDCompletedEventHandler GetMeterByCustIDCompleted;
        
        /// <remarks/>
        public event GetMeterByAMRTypeCompletedEventHandler GetMeterByAMRTypeCompleted;
        
        /// <remarks/>
        public event GetMeterGroupNamesCompletedEventHandler GetMeterGroupNamesCompleted;
        
        /// <remarks/>
        public event GetMeterGroupNamesByMeterNoCompletedEventHandler GetMeterGroupNamesByMeterNoCompleted;
        
        /// <remarks/>
        public event GetMeterGroupMembersCompletedEventHandler GetMeterGroupMembersCompleted;
        
        /// <remarks/>
        public event GetModifiedMetersCompletedEventHandler GetModifiedMetersCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByServiceStatusCompletedEventHandler GetServiceLocationByServiceStatusCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByServLocCompletedEventHandler GetServiceLocationByServLocCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByCustIdCompletedEventHandler GetServiceLocationByCustIdCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByMeterNoCompletedEventHandler GetServiceLocationByMeterNoCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByAccountNumberCompletedEventHandler GetServiceLocationByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByGridLocationCompletedEventHandler GetServiceLocationByGridLocationCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByPhaseCodeCompletedEventHandler GetServiceLocationByPhaseCodeCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByLoadGroupCompletedEventHandler GetServiceLocationByLoadGroupCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByServiceTypeCompletedEventHandler GetServiceLocationByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByShutOffDateCompletedEventHandler GetServiceLocationByShutOffDateCompleted;
        
        /// <remarks/>
        public event GetMetersByEALocationCompletedEventHandler GetMetersByEALocationCompleted;
        
        /// <remarks/>
        public event GetMetersByFacilityIDCompletedEventHandler GetMetersByFacilityIDCompleted;
        
        /// <remarks/>
        public event GetMetersBySiteIDCompletedEventHandler GetMetersBySiteIDCompleted;
        
        /// <remarks/>
        public event GetMetersByCustomerNameCompletedEventHandler GetMetersByCustomerNameCompleted;
        
        /// <remarks/>
        public event GetMetersByHomePhoneCompletedEventHandler GetMetersByHomePhoneCompleted;
        
        /// <remarks/>
        public event GetMetersBySearchStringCompletedEventHandler GetMetersBySearchStringCompleted;
        
        /// <remarks/>
        public event GetSchedulesCompletedEventHandler GetSchedulesCompleted;
        
        /// <remarks/>
        public event GetScheduleByIDCompletedEventHandler GetScheduleByIDCompleted;
        
        /// <remarks/>
        public event GetReadingSchedulesCompletedEventHandler GetReadingSchedulesCompleted;
        
        /// <remarks/>
        public event GetReadingScheduleByIDCompletedEventHandler GetReadingScheduleByIDCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsByMeterNoListCompletedEventHandler GetLatestReadingsByMeterNoListCompleted;
        
        /// <remarks/>
        public event GetConfigurationGroupNamesCompletedEventHandler GetConfigurationGroupNamesCompleted;
        
        /// <remarks/>
        public event GetConfigurationGroupNamesByMeterNoCompletedEventHandler GetConfigurationGroupNamesByMeterNoCompleted;
        
        /// <remarks/>
        public event GetConfigurationGroupMembersCompletedEventHandler GetConfigurationGroupMembersCompleted;
        
        /// <remarks/>
        public event GetMeterBaseByObjectIdCompletedEventHandler GetMeterBaseByObjectIdCompleted;
        
        /// <remarks/>
        public event PingURLCompletedEventHandler PingURLCompleted;
        
        /// <remarks/>
        public event GetMethodsCompletedEventHandler GetMethodsCompleted;
        
        /// <remarks/>
        public event GetDomainNamesCompletedEventHandler GetDomainNamesCompleted;
        
        /// <remarks/>
        public event GetDomainMembersCompletedEventHandler GetDomainMembersCompleted;
        
        /// <remarks/>
        public event RequestRegistrationIDCompletedEventHandler RequestRegistrationIDCompleted;
        
        /// <remarks/>
        public event RegisterForServiceCompletedEventHandler RegisterForServiceCompleted;
        
        /// <remarks/>
        public event UnregisterForServiceCompletedEventHandler UnregisterForServiceCompleted;
        
        /// <remarks/>
        public event GetRegistrationInfoByIDCompletedEventHandler GetRegistrationInfoByIDCompleted;
        
        /// <remarks/>
        public event GetPublishMethodsCompletedEventHandler GetPublishMethodsCompleted;
        
        /// <remarks/>
        public event DomainMembersChangedNotificationCompletedEventHandler DomainMembersChangedNotificationCompleted;
        
        /// <remarks/>
        public event DomainNamesChangedNotificationCompletedEventHandler DomainNamesChangedNotificationCompleted;
        
        /// <remarks/>
        public event GetAllMetersCompletedEventHandler GetAllMetersCompleted;
        
        /// <remarks/>
        public event GetPPMPaymentsCompletedEventHandler GetPPMPaymentsCompleted;
        
        /// <remarks/>
        public event GetPPMBalanceAdjustmentsCompletedEventHandler GetPPMBalanceAdjustmentsCompleted;
        
        /// <remarks/>
        public event GetBillingDataCompletedEventHandler GetBillingDataCompleted;
        
        /// <remarks/>
        public event GetBillingDetailCompletedEventHandler GetBillingDetailCompleted;
        
        /// <remarks/>
        public event GetBilledUsageCompletedEventHandler GetBilledUsageCompleted;
        
        /// <remarks/>
        public event GetAllConnectDisconnectEventsByReasonCodeCompletedEventHandler GetAllConnectDisconnectEventsByReasonCodeCompleted;
        
        /// <remarks/>
        public event GetAllInHomeDisplaysCompletedEventHandler GetAllInHomeDisplaysCompleted;
        
        /// <remarks/>
        public event GetPrePayStatusCompletedEventHandler GetPrePayStatusCompleted;
        
        /// <remarks/>
        public event GetChargeableDevicesByAccountNumberCompletedEventHandler GetChargeableDevicesByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetAMRSupportedMetersCompletedEventHandler GetAMRSupportedMetersCompleted;
        
        /// <remarks/>
        public event GetModifiedAMRMetersCompletedEventHandler GetModifiedAMRMetersCompleted;
        
        /// <remarks/>
        public event IsAMRMeterCompletedEventHandler IsAMRMeterCompleted;
        
        /// <remarks/>
        public event GetAmountOfControllableLoadCompletedEventHandler GetAmountOfControllableLoadCompleted;
        
        /// <remarks/>
        public event GetAllLoadManagementDevicesCompletedEventHandler GetAllLoadManagementDevicesCompleted;
        
        /// <remarks/>
        public event GetLoadManagementDeviceByMeterNumberCompletedEventHandler GetLoadManagementDeviceByMeterNumberCompleted;
        
        /// <remarks/>
        public event GetLoadManagementDeviceByServLocCompletedEventHandler GetLoadManagementDeviceByServLocCompleted;
        
        /// <remarks/>
        public event IsLoadManagementActiveCompletedEventHandler IsLoadManagementActiveCompleted;
        
        /// <remarks/>
        public event GetAmountOfControlledLoadCompletedEventHandler GetAmountOfControlledLoadCompleted;
        
        /// <remarks/>
        public event GetAllSubstationLoadControlStatusesCompletedEventHandler GetAllSubstationLoadControlStatusesCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateCompletedEventHandler GetReadingsByDateCompleted;
        
        /// <remarks/>
        public event GetReadingsByMeterNoCompletedEventHandler GetReadingsByMeterNoCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByMeterNoCompletedEventHandler GetLatestReadingByMeterNoCompleted;
        
        /// <remarks/>
        public event GetReadingsByBillingCycleCompletedEventHandler GetReadingsByBillingCycleCompleted;
        
        /// <remarks/>
        public event GetReadingByMeterNumberFormattedBlockCompletedEventHandler GetReadingByMeterNumberFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateFormattedBlockCompletedEventHandler GetReadingsByDateFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetHistoryLogByMeterNoCompletedEventHandler GetHistoryLogByMeterNoCompleted;
        
        /// <remarks/>
        public event GetHistoryLogsByDateCompletedEventHandler GetHistoryLogsByDateCompleted;
        
        /// <remarks/>
        public event GetHistoryLogsByMeterNoAndEventCodeCompletedEventHandler GetHistoryLogsByMeterNoAndEventCodeCompleted;
        
        /// <remarks/>
        public event GetHistoryLogsByDateAndEventCodeCompletedEventHandler GetHistoryLogsByDateAndEventCodeCompleted;
        
        /// <remarks/>
        public event GetLatestMeterReadingsByMeterGroupCompletedEventHandler GetLatestMeterReadingsByMeterGroupCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByMeterNoAndTypeCompletedEventHandler GetLatestReadingByMeterNoAndTypeCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByTypeCompletedEventHandler GetLatestReadingByTypeCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateAndTypeCompletedEventHandler GetReadingsByDateAndTypeCompleted;
        
        /// <remarks/>
        public event GetSupportedReadingTypesCompletedEventHandler GetSupportedReadingTypesCompleted;
        
        /// <remarks/>
        public event GetReadingsByMeterNoAndTypeCompletedEventHandler GetReadingsByMeterNoAndTypeCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsCompletedEventHandler GetLatestReadingsCompleted;
        
        /// <remarks/>
        public event GetReadingsByUOMAndDateCompletedEventHandler GetReadingsByUOMAndDateCompleted;
        
        /// <remarks/>
        public event GetAllOutageDetectionDevicesCompletedEventHandler GetAllOutageDetectionDevicesCompleted;
        
        /// <remarks/>
        public event GetOutageDetectionDevicesByMeterNoCompletedEventHandler GetOutageDetectionDevicesByMeterNoCompleted;
        
        /// <remarks/>
        public event GetOutageDetectionDevicesByStatusCompletedEventHandler GetOutageDetectionDevicesByStatusCompleted;
        
        /// <remarks/>
        public event GetOutageDetectionDevicesByTypeCompletedEventHandler GetOutageDetectionDevicesByTypeCompleted;
        
        /// <remarks/>
        public event GetOutagedODDevicesCompletedEventHandler GetOutagedODDevicesCompleted;
        
        /// <remarks/>
        public event GetCDSupportedMetersCompletedEventHandler GetCDSupportedMetersCompleted;
        
        /// <remarks/>
        public event GetModifiedCDMetersCompletedEventHandler GetModifiedCDMetersCompleted;
        
        /// <remarks/>
        public event GetCDMeterStateCompletedEventHandler GetCDMeterStateCompleted;
        
        /// <remarks/>
        public event GetOutageEventStatusCompletedEventHandler GetOutageEventStatusCompleted;
        
        /// <remarks/>
        public event GetActiveOutagesCompletedEventHandler GetActiveOutagesCompleted;
        
        /// <remarks/>
        public event GetOutageEventStatusByOutageLocationCompletedEventHandler GetOutageEventStatusByOutageLocationCompleted;
        
        /// <remarks/>
        public event GetAllElectricMetersCompletedEventHandler GetAllElectricMetersCompleted;
        
        /// <remarks/>
        public event GetAllGasMetersCompletedEventHandler GetAllGasMetersCompleted;
        
        /// <remarks/>
        public event GetAllWaterMetersCompletedEventHandler GetAllWaterMetersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/IntervalDataNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] IntervalDataNotification(intervalData intervalReads, string transactionID, string errorString) {
            object[] results = this.Invoke("IntervalDataNotification", new object[] {
                        intervalReads,
                        transactionID,
                        errorString});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void IntervalDataNotificationAsync(intervalData intervalReads, string transactionID, string errorString) {
            this.IntervalDataNotificationAsync(intervalReads, transactionID, errorString, null);
        }
        
        /// <remarks/>
        public void IntervalDataNotificationAsync(intervalData intervalReads, string transactionID, string errorString, object userState) {
            if ((this.IntervalDataNotificationOperationCompleted == null)) {
                this.IntervalDataNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIntervalDataNotificationOperationCompleted);
            }
            this.InvokeAsync("IntervalDataNotification", new object[] {
                        intervalReads,
                        transactionID,
                        errorString}, this.IntervalDataNotificationOperationCompleted, userState);
        }
        
        private void OnIntervalDataNotificationOperationCompleted(object arg) {
            if ((this.IntervalDataNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IntervalDataNotificationCompleted(this, new IntervalDataNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/UsageMonitoringNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UsageMonitoringNotification(string[] meterNos, meterRead[] readings, string transactionID) {
            object[] results = this.Invoke("UsageMonitoringNotification", new object[] {
                        meterNos,
                        readings,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UsageMonitoringNotificationAsync(string[] meterNos, meterRead[] readings, string transactionID) {
            this.UsageMonitoringNotificationAsync(meterNos, readings, transactionID, null);
        }
        
        /// <remarks/>
        public void UsageMonitoringNotificationAsync(string[] meterNos, meterRead[] readings, string transactionID, object userState) {
            if ((this.UsageMonitoringNotificationOperationCompleted == null)) {
                this.UsageMonitoringNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsageMonitoringNotificationOperationCompleted);
            }
            this.InvokeAsync("UsageMonitoringNotification", new object[] {
                        meterNos,
                        readings,
                        transactionID}, this.UsageMonitoringNotificationOperationCompleted, userState);
        }
        
        private void OnUsageMonitoringNotificationOperationCompleted(object arg) {
            if ((this.UsageMonitoringNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsageMonitoringNotificationCompleted(this, new UsageMonitoringNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/PowerFactorManagementEventNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] PowerFactorManagementEventNotification(string switchID, capacitorSwitchStatus capacitorSwitchStatus, string transactionID, meterEvent[] endDeviceEvents) {
            object[] results = this.Invoke("PowerFactorManagementEventNotification", new object[] {
                        switchID,
                        capacitorSwitchStatus,
                        transactionID,
                        endDeviceEvents});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void PowerFactorManagementEventNotificationAsync(string switchID, capacitorSwitchStatus capacitorSwitchStatus, string transactionID, meterEvent[] endDeviceEvents) {
            this.PowerFactorManagementEventNotificationAsync(switchID, capacitorSwitchStatus, transactionID, endDeviceEvents, null);
        }
        
        /// <remarks/>
        public void PowerFactorManagementEventNotificationAsync(string switchID, capacitorSwitchStatus capacitorSwitchStatus, string transactionID, meterEvent[] endDeviceEvents, object userState) {
            if ((this.PowerFactorManagementEventNotificationOperationCompleted == null)) {
                this.PowerFactorManagementEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPowerFactorManagementEventNotificationOperationCompleted);
            }
            this.InvokeAsync("PowerFactorManagementEventNotification", new object[] {
                        switchID,
                        capacitorSwitchStatus,
                        transactionID,
                        endDeviceEvents}, this.PowerFactorManagementEventNotificationOperationCompleted, userState);
        }
        
        private void OnPowerFactorManagementEventNotificationOperationCompleted(object arg) {
            if ((this.PowerFactorManagementEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PowerFactorManagementEventNotificationCompleted(this, new PowerFactorManagementEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetSubstationNames", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSubstationNames() {
            object[] results = this.Invoke("GetSubstationNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubstationNamesAsync() {
            this.GetSubstationNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetSubstationNamesAsync(object userState) {
            if ((this.GetSubstationNamesOperationCompleted == null)) {
                this.GetSubstationNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubstationNamesOperationCompleted);
            }
            this.InvokeAsync("GetSubstationNames", new object[0], this.GetSubstationNamesOperationCompleted, userState);
        }
        
        private void OnGetSubstationNamesOperationCompleted(object arg) {
            if ((this.GetSubstationNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubstationNamesCompleted(this, new GetSubstationNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetDownlineCircuitElements", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetDownlineCircuitElements(string eaLoc, string lastReceived) {
            object[] results = this.Invoke("GetDownlineCircuitElements", new object[] {
                        eaLoc,
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDownlineCircuitElementsAsync(string eaLoc, string lastReceived) {
            this.GetDownlineCircuitElementsAsync(eaLoc, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetDownlineCircuitElementsAsync(string eaLoc, string lastReceived, object userState) {
            if ((this.GetDownlineCircuitElementsOperationCompleted == null)) {
                this.GetDownlineCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownlineCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetDownlineCircuitElements", new object[] {
                        eaLoc,
                        lastReceived}, this.GetDownlineCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetDownlineCircuitElementsOperationCompleted(object arg) {
            if ((this.GetDownlineCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownlineCircuitElementsCompleted(this, new GetDownlineCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetUplineCircuitElements", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetUplineCircuitElements(string eaLoc) {
            object[] results = this.Invoke("GetUplineCircuitElements", new object[] {
                        eaLoc});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUplineCircuitElementsAsync(string eaLoc) {
            this.GetUplineCircuitElementsAsync(eaLoc, null);
        }
        
        /// <remarks/>
        public void GetUplineCircuitElementsAsync(string eaLoc, object userState) {
            if ((this.GetUplineCircuitElementsOperationCompleted == null)) {
                this.GetUplineCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUplineCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetUplineCircuitElements", new object[] {
                        eaLoc}, this.GetUplineCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetUplineCircuitElementsOperationCompleted(object arg) {
            if ((this.GetUplineCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUplineCircuitElementsCompleted(this, new GetUplineCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetChildCircuitElements", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetChildCircuitElements(string eaLoc) {
            object[] results = this.Invoke("GetChildCircuitElements", new object[] {
                        eaLoc});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildCircuitElementsAsync(string eaLoc) {
            this.GetChildCircuitElementsAsync(eaLoc, null);
        }
        
        /// <remarks/>
        public void GetChildCircuitElementsAsync(string eaLoc, object userState) {
            if ((this.GetChildCircuitElementsOperationCompleted == null)) {
                this.GetChildCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetChildCircuitElements", new object[] {
                        eaLoc}, this.GetChildCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetChildCircuitElementsOperationCompleted(object arg) {
            if ((this.GetChildCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildCircuitElementsCompleted(this, new GetChildCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetParentCircuitElements", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetParentCircuitElements(string eaLoc) {
            object[] results = this.Invoke("GetParentCircuitElements", new object[] {
                        eaLoc});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParentCircuitElementsAsync(string eaLoc) {
            this.GetParentCircuitElementsAsync(eaLoc, null);
        }
        
        /// <remarks/>
        public void GetParentCircuitElementsAsync(string eaLoc, object userState) {
            if ((this.GetParentCircuitElementsOperationCompleted == null)) {
                this.GetParentCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetParentCircuitElements", new object[] {
                        eaLoc}, this.GetParentCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetParentCircuitElementsOperationCompleted(object arg) {
            if ((this.GetParentCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentCircuitElementsCompleted(this, new GetParentCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllCircuitElements", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetAllCircuitElements(string lastReceived) {
            object[] results = this.Invoke("GetAllCircuitElements", new object[] {
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCircuitElementsAsync(string lastReceived) {
            this.GetAllCircuitElementsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllCircuitElementsAsync(string lastReceived, object userState) {
            if ((this.GetAllCircuitElementsOperationCompleted == null)) {
                this.GetAllCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetAllCircuitElements", new object[] {
                        lastReceived}, this.GetAllCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetAllCircuitElementsOperationCompleted(object arg) {
            if ((this.GetAllCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCircuitElementsCompleted(this, new GetAllCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetModifiedCircuitElements", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetModifiedCircuitElements(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedCircuitElements", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedCircuitElementsAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedCircuitElementsAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedCircuitElementsAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedCircuitElementsOperationCompleted == null)) {
                this.GetModifiedCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetModifiedCircuitElements", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetModifiedCircuitElementsOperationCompleted(object arg) {
            if ((this.GetModifiedCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedCircuitElementsCompleted(this, new GetModifiedCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetDownlineMeterConnectivity", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetDownlineMeterConnectivity(string meterNo) {
            object[] results = this.Invoke("GetDownlineMeterConnectivity", new object[] {
                        meterNo});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDownlineMeterConnectivityAsync(string meterNo) {
            this.GetDownlineMeterConnectivityAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetDownlineMeterConnectivityAsync(string meterNo, object userState) {
            if ((this.GetDownlineMeterConnectivityOperationCompleted == null)) {
                this.GetDownlineMeterConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownlineMeterConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetDownlineMeterConnectivity", new object[] {
                        meterNo}, this.GetDownlineMeterConnectivityOperationCompleted, userState);
        }
        
        private void OnGetDownlineMeterConnectivityOperationCompleted(object arg) {
            if ((this.GetDownlineMeterConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownlineMeterConnectivityCompleted(this, new GetDownlineMeterConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetUplineMeterConnectivity", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetUplineMeterConnectivity(string meterNo) {
            object[] results = this.Invoke("GetUplineMeterConnectivity", new object[] {
                        meterNo});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUplineMeterConnectivityAsync(string meterNo) {
            this.GetUplineMeterConnectivityAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetUplineMeterConnectivityAsync(string meterNo, object userState) {
            if ((this.GetUplineMeterConnectivityOperationCompleted == null)) {
                this.GetUplineMeterConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUplineMeterConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetUplineMeterConnectivity", new object[] {
                        meterNo}, this.GetUplineMeterConnectivityOperationCompleted, userState);
        }
        
        private void OnGetUplineMeterConnectivityOperationCompleted(object arg) {
            if ((this.GetUplineMeterConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUplineMeterConnectivityCompleted(this, new GetUplineMeterConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetSiblingMeterConnectivity", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetSiblingMeterConnectivity(string meterNo) {
            object[] results = this.Invoke("GetSiblingMeterConnectivity", new object[] {
                        meterNo});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiblingMeterConnectivityAsync(string meterNo) {
            this.GetSiblingMeterConnectivityAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetSiblingMeterConnectivityAsync(string meterNo, object userState) {
            if ((this.GetSiblingMeterConnectivityOperationCompleted == null)) {
                this.GetSiblingMeterConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiblingMeterConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetSiblingMeterConnectivity", new object[] {
                        meterNo}, this.GetSiblingMeterConnectivityOperationCompleted, userState);
        }
        
        private void OnGetSiblingMeterConnectivityOperationCompleted(object arg) {
            if ((this.GetSiblingMeterConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiblingMeterConnectivityCompleted(this, new GetSiblingMeterConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/UnenrollPPMCustomer", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UnenrollPPMCustomer(ppmLocation[] newPPMCustomers) {
            object[] results = this.Invoke("UnenrollPPMCustomer", new object[] {
                        newPPMCustomers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UnenrollPPMCustomerAsync(ppmLocation[] newPPMCustomers) {
            this.UnenrollPPMCustomerAsync(newPPMCustomers, null);
        }
        
        /// <remarks/>
        public void UnenrollPPMCustomerAsync(ppmLocation[] newPPMCustomers, object userState) {
            if ((this.UnenrollPPMCustomerOperationCompleted == null)) {
                this.UnenrollPPMCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnenrollPPMCustomerOperationCompleted);
            }
            this.InvokeAsync("UnenrollPPMCustomer", new object[] {
                        newPPMCustomers}, this.UnenrollPPMCustomerOperationCompleted, userState);
        }
        
        private void OnUnenrollPPMCustomerOperationCompleted(object arg) {
            if ((this.UnenrollPPMCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnenrollPPMCustomerCompleted(this, new UnenrollPPMCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/EstablishIHDGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishIHDGroup(inHomeDisplayGroup IHDGroup) {
            object[] results = this.Invoke("EstablishIHDGroup", new object[] {
                        IHDGroup});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishIHDGroupAsync(inHomeDisplayGroup IHDGroup) {
            this.EstablishIHDGroupAsync(IHDGroup, null);
        }
        
        /// <remarks/>
        public void EstablishIHDGroupAsync(inHomeDisplayGroup IHDGroup, object userState) {
            if ((this.EstablishIHDGroupOperationCompleted == null)) {
                this.EstablishIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishIHDGroupOperationCompleted);
            }
            this.InvokeAsync("EstablishIHDGroup", new object[] {
                        IHDGroup}, this.EstablishIHDGroupOperationCompleted, userState);
        }
        
        private void OnEstablishIHDGroupOperationCompleted(object arg) {
            if ((this.EstablishIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishIHDGroupCompleted(this, new EstablishIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DeleteIHDGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteIHDGroup(string IHDGroupID) {
            object[] results = this.Invoke("DeleteIHDGroup", new object[] {
                        IHDGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteIHDGroupAsync(string IHDGroupID) {
            this.DeleteIHDGroupAsync(IHDGroupID, null);
        }
        
        /// <remarks/>
        public void DeleteIHDGroupAsync(string IHDGroupID, object userState) {
            if ((this.DeleteIHDGroupOperationCompleted == null)) {
                this.DeleteIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteIHDGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteIHDGroup", new object[] {
                        IHDGroupID}, this.DeleteIHDGroupOperationCompleted, userState);
        }
        
        private void OnDeleteIHDGroupOperationCompleted(object arg) {
            if ((this.DeleteIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteIHDGroupCompleted(this, new DeleteIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CommitPaymentTransaction", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public paymentTransaction[] CommitPaymentTransaction([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] paymentTransaction[] transactions) {
            object[] results = this.Invoke("CommitPaymentTransaction", new object[] {
                        transactions});
            return ((paymentTransaction[])(results[0]));
        }
        
        /// <remarks/>
        public void CommitPaymentTransactionAsync(paymentTransaction[] transactions) {
            this.CommitPaymentTransactionAsync(transactions, null);
        }
        
        /// <remarks/>
        public void CommitPaymentTransactionAsync(paymentTransaction[] transactions, object userState) {
            if ((this.CommitPaymentTransactionOperationCompleted == null)) {
                this.CommitPaymentTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitPaymentTransactionOperationCompleted);
            }
            this.InvokeAsync("CommitPaymentTransaction", new object[] {
                        transactions}, this.CommitPaymentTransactionOperationCompleted, userState);
        }
        
        private void OnCommitPaymentTransactionOperationCompleted(object arg) {
            if ((this.CommitPaymentTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitPaymentTransactionCompleted(this, new CommitPaymentTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ChargeableDeviceChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ChargeableDeviceChangedNotification(chargeableDeviceList[] deviceList) {
            object[] results = this.Invoke("ChargeableDeviceChangedNotification", new object[] {
                        deviceList});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ChargeableDeviceChangedNotificationAsync(chargeableDeviceList[] deviceList) {
            this.ChargeableDeviceChangedNotificationAsync(deviceList, null);
        }
        
        /// <remarks/>
        public void ChargeableDeviceChangedNotificationAsync(chargeableDeviceList[] deviceList, object userState) {
            if ((this.ChargeableDeviceChangedNotificationOperationCompleted == null)) {
                this.ChargeableDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeableDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ChargeableDeviceChangedNotification", new object[] {
                        deviceList}, this.ChargeableDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnChargeableDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.ChargeableDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeableDeviceChangedNotificationCompleted(this, new ChargeableDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/LMDeviceAddNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceAddNotification(loadManagementDevice[] addedLMDs) {
            object[] results = this.Invoke("LMDeviceAddNotification", new object[] {
                        addedLMDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceAddNotificationAsync(loadManagementDevice[] addedLMDs) {
            this.LMDeviceAddNotificationAsync(addedLMDs, null);
        }
        
        /// <remarks/>
        public void LMDeviceAddNotificationAsync(loadManagementDevice[] addedLMDs, object userState) {
            if ((this.LMDeviceAddNotificationOperationCompleted == null)) {
                this.LMDeviceAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceAddNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceAddNotification", new object[] {
                        addedLMDs}, this.LMDeviceAddNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceAddNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceAddNotificationCompleted(this, new LMDeviceAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/LMDeviceChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceChangedNotification(loadManagementDevice[] changedLMDs) {
            object[] results = this.Invoke("LMDeviceChangedNotification", new object[] {
                        changedLMDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceChangedNotificationAsync(loadManagementDevice[] changedLMDs) {
            this.LMDeviceChangedNotificationAsync(changedLMDs, null);
        }
        
        /// <remarks/>
        public void LMDeviceChangedNotificationAsync(loadManagementDevice[] changedLMDs, object userState) {
            if ((this.LMDeviceChangedNotificationOperationCompleted == null)) {
                this.LMDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceChangedNotification", new object[] {
                        changedLMDs}, this.LMDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceChangedNotificationCompleted(this, new LMDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/LMDeviceExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceExchangeNotification(LMDeviceExchange[] LMDChangeout) {
            object[] results = this.Invoke("LMDeviceExchangeNotification", new object[] {
                        LMDChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceExchangeNotificationAsync(LMDeviceExchange[] LMDChangeout) {
            this.LMDeviceExchangeNotificationAsync(LMDChangeout, null);
        }
        
        /// <remarks/>
        public void LMDeviceExchangeNotificationAsync(LMDeviceExchange[] LMDChangeout, object userState) {
            if ((this.LMDeviceExchangeNotificationOperationCompleted == null)) {
                this.LMDeviceExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceExchangeNotification", new object[] {
                        LMDChangeout}, this.LMDeviceExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceExchangeNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceExchangeNotificationCompleted(this, new LMDeviceExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/LMDeviceInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceInstalledNotification(loadManagementDevice[] installedLMDs) {
            object[] results = this.Invoke("LMDeviceInstalledNotification", new object[] {
                        installedLMDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceInstalledNotificationAsync(loadManagementDevice[] installedLMDs) {
            this.LMDeviceInstalledNotificationAsync(installedLMDs, null);
        }
        
        /// <remarks/>
        public void LMDeviceInstalledNotificationAsync(loadManagementDevice[] installedLMDs, object userState) {
            if ((this.LMDeviceInstalledNotificationOperationCompleted == null)) {
                this.LMDeviceInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceInstalledNotification", new object[] {
                        installedLMDs}, this.LMDeviceInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceInstalledNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceInstalledNotificationCompleted(this, new LMDeviceInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/LMDeviceRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceRemoveNotification(loadManagementDevice[] removedLMDs) {
            object[] results = this.Invoke("LMDeviceRemoveNotification", new object[] {
                        removedLMDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceRemoveNotificationAsync(loadManagementDevice[] removedLMDs) {
            this.LMDeviceRemoveNotificationAsync(removedLMDs, null);
        }
        
        /// <remarks/>
        public void LMDeviceRemoveNotificationAsync(loadManagementDevice[] removedLMDs, object userState) {
            if ((this.LMDeviceRemoveNotificationOperationCompleted == null)) {
                this.LMDeviceRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceRemoveNotification", new object[] {
                        removedLMDs}, this.LMDeviceRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceRemoveNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceRemoveNotificationCompleted(this, new LMDeviceRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/LMDeviceRetireNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceRetireNotification(loadManagementDevice[] retiredLMDs) {
            object[] results = this.Invoke("LMDeviceRetireNotification", new object[] {
                        retiredLMDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceRetireNotificationAsync(loadManagementDevice[] retiredLMDs) {
            this.LMDeviceRetireNotificationAsync(retiredLMDs, null);
        }
        
        /// <remarks/>
        public void LMDeviceRetireNotificationAsync(loadManagementDevice[] retiredLMDs, object userState) {
            if ((this.LMDeviceRetireNotificationOperationCompleted == null)) {
                this.LMDeviceRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceRetireNotification", new object[] {
                        retiredLMDs}, this.LMDeviceRetireNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceRetireNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceRetireNotificationCompleted(this, new LMDeviceRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/AdjustPPMBalance", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] AdjustPPMBalance(ppmBalanceAdjustment[] adjustments) {
            object[] results = this.Invoke("AdjustPPMBalance", new object[] {
                        adjustments});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void AdjustPPMBalanceAsync(ppmBalanceAdjustment[] adjustments) {
            this.AdjustPPMBalanceAsync(adjustments, null);
        }
        
        /// <remarks/>
        public void AdjustPPMBalanceAsync(ppmBalanceAdjustment[] adjustments, object userState) {
            if ((this.AdjustPPMBalanceOperationCompleted == null)) {
                this.AdjustPPMBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustPPMBalanceOperationCompleted);
            }
            this.InvokeAsync("AdjustPPMBalance", new object[] {
                        adjustments}, this.AdjustPPMBalanceOperationCompleted, userState);
        }
        
        private void OnAdjustPPMBalanceOperationCompleted(object arg) {
            if ((this.AdjustPPMBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustPPMBalanceCompleted(this, new AdjustPPMBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ServiceLocationChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ServiceLocationChangedNotification(serviceLocation[] changedServiceLocations) {
            object[] results = this.Invoke("ServiceLocationChangedNotification", new object[] {
                        changedServiceLocations});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ServiceLocationChangedNotificationAsync(serviceLocation[] changedServiceLocations) {
            this.ServiceLocationChangedNotificationAsync(changedServiceLocations, null);
        }
        
        /// <remarks/>
        public void ServiceLocationChangedNotificationAsync(serviceLocation[] changedServiceLocations, object userState) {
            if ((this.ServiceLocationChangedNotificationOperationCompleted == null)) {
                this.ServiceLocationChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceLocationChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ServiceLocationChangedNotification", new object[] {
                        changedServiceLocations}, this.ServiceLocationChangedNotificationOperationCompleted, userState);
        }
        
        private void OnServiceLocationChangedNotificationOperationCompleted(object arg) {
            if ((this.ServiceLocationChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceLocationChangedNotificationCompleted(this, new ServiceLocationChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterChangedNotification(meter[] changedMeters) {
            object[] results = this.Invoke("MeterChangedNotification", new object[] {
                        changedMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterChangedNotificationAsync(meter[] changedMeters) {
            this.MeterChangedNotificationAsync(changedMeters, null);
        }
        
        /// <remarks/>
        public void MeterChangedNotificationAsync(meter[] changedMeters, object userState) {
            if ((this.MeterChangedNotificationOperationCompleted == null)) {
                this.MeterChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterChangedNotification", new object[] {
                        changedMeters}, this.MeterChangedNotificationOperationCompleted, userState);
        }
        
        private void OnMeterChangedNotificationOperationCompleted(object arg) {
            if ((this.MeterChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterChangedNotificationCompleted(this, new MeterChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterRemoveNotification(meter[] removedMeters) {
            object[] results = this.Invoke("MeterRemoveNotification", new object[] {
                        removedMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterRemoveNotificationAsync(meter[] removedMeters) {
            this.MeterRemoveNotificationAsync(removedMeters, null);
        }
        
        /// <remarks/>
        public void MeterRemoveNotificationAsync(meter[] removedMeters, object userState) {
            if ((this.MeterRemoveNotificationOperationCompleted == null)) {
                this.MeterRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterRemoveNotification", new object[] {
                        removedMeters}, this.MeterRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnMeterRemoveNotificationOperationCompleted(object arg) {
            if ((this.MeterRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterRemoveNotificationCompleted(this, new MeterRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAAnalogChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAAnalogChangedNotification(scadaAnalog[] scadaAnalogs) {
            object[] results = this.Invoke("SCADAAnalogChangedNotification", new object[] {
                        scadaAnalogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationAsync(scadaAnalog[] scadaAnalogs) {
            this.SCADAAnalogChangedNotificationAsync(scadaAnalogs, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationAsync(scadaAnalog[] scadaAnalogs, object userState) {
            if ((this.SCADAAnalogChangedNotificationOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotification", new object[] {
                        scadaAnalogs}, this.SCADAAnalogChangedNotificationOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationCompleted(this, new SCADAAnalogChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAStatusChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAStatusChangedNotification(scadaStatus[] scadaStatuses) {
            object[] results = this.Invoke("SCADAStatusChangedNotification", new object[] {
                        scadaStatuses});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationAsync(scadaStatus[] scadaStatuses) {
            this.SCADAStatusChangedNotificationAsync(scadaStatuses, null);
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationAsync(scadaStatus[] scadaStatuses, object userState) {
            if ((this.SCADAStatusChangedNotificationOperationCompleted == null)) {
                this.SCADAStatusChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAStatusChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("SCADAStatusChangedNotification", new object[] {
                        scadaStatuses}, this.SCADAStatusChangedNotificationOperationCompleted, userState);
        }
        
        private void OnSCADAStatusChangedNotificationOperationCompleted(object arg) {
            if ((this.SCADAStatusChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAStatusChangedNotificationCompleted(this, new SCADAStatusChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAPointChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAPointChangedNotification(scadaPoint[] scadaPoints) {
            object[] results = this.Invoke("SCADAPointChangedNotification", new object[] {
                        scadaPoints});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationAsync(scadaPoint[] scadaPoints) {
            this.SCADAPointChangedNotificationAsync(scadaPoints, null);
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationAsync(scadaPoint[] scadaPoints, object userState) {
            if ((this.SCADAPointChangedNotificationOperationCompleted == null)) {
                this.SCADAPointChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAPointChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("SCADAPointChangedNotification", new object[] {
                        scadaPoints}, this.SCADAPointChangedNotificationOperationCompleted, userState);
        }
        
        private void OnSCADAPointChangedNotificationOperationCompleted(object arg) {
            if ((this.SCADAPointChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAPointChangedNotificationCompleted(this, new SCADAPointChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAPointChangedNotificationForAnalog", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAPointChangedNotificationForAnalog(scadaPoint[] scadaPoints) {
            object[] results = this.Invoke("SCADAPointChangedNotificationForAnalog", new object[] {
                        scadaPoints});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForAnalogAsync(scadaPoint[] scadaPoints) {
            this.SCADAPointChangedNotificationForAnalogAsync(scadaPoints, null);
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForAnalogAsync(scadaPoint[] scadaPoints, object userState) {
            if ((this.SCADAPointChangedNotificationForAnalogOperationCompleted == null)) {
                this.SCADAPointChangedNotificationForAnalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAPointChangedNotificationForAnalogOperationCompleted);
            }
            this.InvokeAsync("SCADAPointChangedNotificationForAnalog", new object[] {
                        scadaPoints}, this.SCADAPointChangedNotificationForAnalogOperationCompleted, userState);
        }
        
        private void OnSCADAPointChangedNotificationForAnalogOperationCompleted(object arg) {
            if ((this.SCADAPointChangedNotificationForAnalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAPointChangedNotificationForAnalogCompleted(this, new SCADAPointChangedNotificationForAnalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAPointChangedNotificationForStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAPointChangedNotificationForStatus(scadaPoint[] scadaPoints) {
            object[] results = this.Invoke("SCADAPointChangedNotificationForStatus", new object[] {
                        scadaPoints});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForStatusAsync(scadaPoint[] scadaPoints) {
            this.SCADAPointChangedNotificationForStatusAsync(scadaPoints, null);
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForStatusAsync(scadaPoint[] scadaPoints, object userState) {
            if ((this.SCADAPointChangedNotificationForStatusOperationCompleted == null)) {
                this.SCADAPointChangedNotificationForStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAPointChangedNotificationForStatusOperationCompleted);
            }
            this.InvokeAsync("SCADAPointChangedNotificationForStatus", new object[] {
                        scadaPoints}, this.SCADAPointChangedNotificationForStatusOperationCompleted, userState);
        }
        
        private void OnSCADAPointChangedNotificationForStatusOperationCompleted(object arg) {
            if ((this.SCADAPointChangedNotificationForStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAPointChangedNotificationForStatusCompleted(this, new SCADAPointChangedNotificationForStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAAnalogChangedNotificationByPointID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SCADAAnalogChangedNotificationByPointID(scadaAnalog scadaAnalog) {
            this.Invoke("SCADAAnalogChangedNotificationByPointID", new object[] {
                        scadaAnalog});
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationByPointIDAsync(scadaAnalog scadaAnalog) {
            this.SCADAAnalogChangedNotificationByPointIDAsync(scadaAnalog, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationByPointIDAsync(scadaAnalog scadaAnalog, object userState) {
            if ((this.SCADAAnalogChangedNotificationByPointIDOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationByPointIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationByPointIDOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotificationByPointID", new object[] {
                        scadaAnalog}, this.SCADAAnalogChangedNotificationByPointIDOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationByPointIDOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationByPointIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationByPointIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAAnalogChangedNotificationForPower", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAAnalogChangedNotificationForPower(scadaAnalog[] scadaAnalogs) {
            object[] results = this.Invoke("SCADAAnalogChangedNotificationForPower", new object[] {
                        scadaAnalogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForPowerAsync(scadaAnalog[] scadaAnalogs) {
            this.SCADAAnalogChangedNotificationForPowerAsync(scadaAnalogs, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForPowerAsync(scadaAnalog[] scadaAnalogs, object userState) {
            if ((this.SCADAAnalogChangedNotificationForPowerOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationForPowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationForPowerOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotificationForPower", new object[] {
                        scadaAnalogs}, this.SCADAAnalogChangedNotificationForPowerOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationForPowerOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationForPowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationForPowerCompleted(this, new SCADAAnalogChangedNotificationForPowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAAnalogChangedNotificationForVoltage", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAAnalogChangedNotificationForVoltage(scadaAnalog[] scadaAnalogs) {
            object[] results = this.Invoke("SCADAAnalogChangedNotificationForVoltage", new object[] {
                        scadaAnalogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForVoltageAsync(scadaAnalog[] scadaAnalogs) {
            this.SCADAAnalogChangedNotificationForVoltageAsync(scadaAnalogs, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForVoltageAsync(scadaAnalog[] scadaAnalogs, object userState) {
            if ((this.SCADAAnalogChangedNotificationForVoltageOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationForVoltageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationForVoltageOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotificationForVoltage", new object[] {
                        scadaAnalogs}, this.SCADAAnalogChangedNotificationForVoltageOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationForVoltageOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationForVoltageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationForVoltageCompleted(this, new SCADAAnalogChangedNotificationForVoltageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/SCADAStatusChangedNotificationByPointID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SCADAStatusChangedNotificationByPointID(scadaStatus scadaStatus) {
            this.Invoke("SCADAStatusChangedNotificationByPointID", new object[] {
                        scadaStatus});
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationByPointIDAsync(scadaStatus scadaStatus) {
            this.SCADAStatusChangedNotificationByPointIDAsync(scadaStatus, null);
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationByPointIDAsync(scadaStatus scadaStatus, object userState) {
            if ((this.SCADAStatusChangedNotificationByPointIDOperationCompleted == null)) {
                this.SCADAStatusChangedNotificationByPointIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAStatusChangedNotificationByPointIDOperationCompleted);
            }
            this.InvokeAsync("SCADAStatusChangedNotificationByPointID", new object[] {
                        scadaStatus}, this.SCADAStatusChangedNotificationByPointIDOperationCompleted, userState);
        }
        
        private void OnSCADAStatusChangedNotificationByPointIDOperationCompleted(object arg) {
            if ((this.SCADAStatusChangedNotificationByPointIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAStatusChangedNotificationByPointIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterRetireNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterRetireNotification(meter[] retiredMeters) {
            object[] results = this.Invoke("MeterRetireNotification", new object[] {
                        retiredMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterRetireNotificationAsync(meter[] retiredMeters) {
            this.MeterRetireNotificationAsync(retiredMeters, null);
        }
        
        /// <remarks/>
        public void MeterRetireNotificationAsync(meter[] retiredMeters, object userState) {
            if ((this.MeterRetireNotificationOperationCompleted == null)) {
                this.MeterRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterRetireNotification", new object[] {
                        retiredMeters}, this.MeterRetireNotificationOperationCompleted, userState);
        }
        
        private void OnMeterRetireNotificationOperationCompleted(object arg) {
            if ((this.MeterRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterRetireNotificationCompleted(this, new MeterRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterAddNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterAddNotification(meter[] addedMeters) {
            object[] results = this.Invoke("MeterAddNotification", new object[] {
                        addedMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterAddNotificationAsync(meter[] addedMeters) {
            this.MeterAddNotificationAsync(addedMeters, null);
        }
        
        /// <remarks/>
        public void MeterAddNotificationAsync(meter[] addedMeters, object userState) {
            if ((this.MeterAddNotificationOperationCompleted == null)) {
                this.MeterAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterAddNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterAddNotification", new object[] {
                        addedMeters}, this.MeterAddNotificationOperationCompleted, userState);
        }
        
        private void OnMeterAddNotificationOperationCompleted(object arg) {
            if ((this.MeterAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterAddNotificationCompleted(this, new MeterAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterExchangeNotification(meterExchange[] meterChangeout) {
            object[] results = this.Invoke("MeterExchangeNotification", new object[] {
                        meterChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterExchangeNotificationAsync(meterExchange[] meterChangeout) {
            this.MeterExchangeNotificationAsync(meterChangeout, null);
        }
        
        /// <remarks/>
        public void MeterExchangeNotificationAsync(meterExchange[] meterChangeout, object userState) {
            if ((this.MeterExchangeNotificationOperationCompleted == null)) {
                this.MeterExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterExchangeNotification", new object[] {
                        meterChangeout}, this.MeterExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnMeterExchangeNotificationOperationCompleted(object arg) {
            if ((this.MeterExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterExchangeNotificationCompleted(this, new MeterExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CustomersAffectedByOutageNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CustomersAffectedByOutageNotification(customersAffectedByOutage[] newOutages) {
            object[] results = this.Invoke("CustomersAffectedByOutageNotification", new object[] {
                        newOutages});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomersAffectedByOutageNotificationAsync(customersAffectedByOutage[] newOutages) {
            this.CustomersAffectedByOutageNotificationAsync(newOutages, null);
        }
        
        /// <remarks/>
        public void CustomersAffectedByOutageNotificationAsync(customersAffectedByOutage[] newOutages, object userState) {
            if ((this.CustomersAffectedByOutageNotificationOperationCompleted == null)) {
                this.CustomersAffectedByOutageNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomersAffectedByOutageNotificationOperationCompleted);
            }
            this.InvokeAsync("CustomersAffectedByOutageNotification", new object[] {
                        newOutages}, this.CustomersAffectedByOutageNotificationOperationCompleted, userState);
        }
        
        private void OnCustomersAffectedByOutageNotificationOperationCompleted(object arg) {
            if ((this.CustomersAffectedByOutageNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomersAffectedByOutageNotificationCompleted(this, new CustomersAffectedByOutageNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterConnectivityNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterConnectivityNotification(meterConnectivity[] newConnectivity) {
            object[] results = this.Invoke("MeterConnectivityNotification", new object[] {
                        newConnectivity});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterConnectivityNotificationAsync(meterConnectivity[] newConnectivity) {
            this.MeterConnectivityNotificationAsync(newConnectivity, null);
        }
        
        /// <remarks/>
        public void MeterConnectivityNotificationAsync(meterConnectivity[] newConnectivity, object userState) {
            if ((this.MeterConnectivityNotificationOperationCompleted == null)) {
                this.MeterConnectivityNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterConnectivityNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterConnectivityNotification", new object[] {
                        newConnectivity}, this.MeterConnectivityNotificationOperationCompleted, userState);
        }
        
        private void OnMeterConnectivityNotificationOperationCompleted(object arg) {
            if ((this.MeterConnectivityNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterConnectivityNotificationCompleted(this, new MeterConnectivityNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/EndDeviceShipmentNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EndDeviceShipmentNotification(endDeviceShipment shipment) {
            object[] results = this.Invoke("EndDeviceShipmentNotification", new object[] {
                        shipment});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EndDeviceShipmentNotificationAsync(endDeviceShipment shipment) {
            this.EndDeviceShipmentNotificationAsync(shipment, null);
        }
        
        /// <remarks/>
        public void EndDeviceShipmentNotificationAsync(endDeviceShipment shipment, object userState) {
            if ((this.EndDeviceShipmentNotificationOperationCompleted == null)) {
                this.EndDeviceShipmentNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndDeviceShipmentNotificationOperationCompleted);
            }
            this.InvokeAsync("EndDeviceShipmentNotification", new object[] {
                        shipment}, this.EndDeviceShipmentNotificationOperationCompleted, userState);
        }
        
        private void OnEndDeviceShipmentNotificationOperationCompleted(object arg) {
            if ((this.EndDeviceShipmentNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndDeviceShipmentNotificationCompleted(this, new EndDeviceShipmentNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/FormattedBlockNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] FormattedBlockNotification(formattedBlock changedMeterReads, string transactionID, string errorString) {
            object[] results = this.Invoke("FormattedBlockNotification", new object[] {
                        changedMeterReads,
                        transactionID,
                        errorString});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void FormattedBlockNotificationAsync(formattedBlock changedMeterReads, string transactionID, string errorString) {
            this.FormattedBlockNotificationAsync(changedMeterReads, transactionID, errorString, null);
        }
        
        /// <remarks/>
        public void FormattedBlockNotificationAsync(formattedBlock changedMeterReads, string transactionID, string errorString, object userState) {
            if ((this.FormattedBlockNotificationOperationCompleted == null)) {
                this.FormattedBlockNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormattedBlockNotificationOperationCompleted);
            }
            this.InvokeAsync("FormattedBlockNotification", new object[] {
                        changedMeterReads,
                        transactionID,
                        errorString}, this.FormattedBlockNotificationOperationCompleted, userState);
        }
        
        private void OnFormattedBlockNotificationOperationCompleted(object arg) {
            if ((this.FormattedBlockNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormattedBlockNotificationCompleted(this, new FormattedBlockNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ODEventNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ODEventNotification(outageDetectionEvent[] ODEvents, string transactionID) {
            object[] results = this.Invoke("ODEventNotification", new object[] {
                        ODEvents,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ODEventNotificationAsync(outageDetectionEvent[] ODEvents, string transactionID) {
            this.ODEventNotificationAsync(ODEvents, transactionID, null);
        }
        
        /// <remarks/>
        public void ODEventNotificationAsync(outageDetectionEvent[] ODEvents, string transactionID, object userState) {
            if ((this.ODEventNotificationOperationCompleted == null)) {
                this.ODEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnODEventNotificationOperationCompleted);
            }
            this.InvokeAsync("ODEventNotification", new object[] {
                        ODEvents,
                        transactionID}, this.ODEventNotificationOperationCompleted, userState);
        }
        
        private void OnODEventNotificationOperationCompleted(object arg) {
            if ((this.ODEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ODEventNotificationCompleted(this, new ODEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ODDeviceChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ODDeviceChangedNotification(outageDetectionDevice[] ODDevices) {
            object[] results = this.Invoke("ODDeviceChangedNotification", new object[] {
                        ODDevices});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ODDeviceChangedNotificationAsync(outageDetectionDevice[] ODDevices) {
            this.ODDeviceChangedNotificationAsync(ODDevices, null);
        }
        
        /// <remarks/>
        public void ODDeviceChangedNotificationAsync(outageDetectionDevice[] ODDevices, object userState) {
            if ((this.ODDeviceChangedNotificationOperationCompleted == null)) {
                this.ODDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnODDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ODDeviceChangedNotification", new object[] {
                        ODDevices}, this.ODDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnODDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.ODDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ODDeviceChangedNotificationCompleted(this, new ODDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDDeviceAddNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceAddNotification(CDDevice[] addedCDDs) {
            object[] results = this.Invoke("CDDeviceAddNotification", new object[] {
                        addedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceAddNotificationAsync(CDDevice[] addedCDDs) {
            this.CDDeviceAddNotificationAsync(addedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceAddNotificationAsync(CDDevice[] addedCDDs, object userState) {
            if ((this.CDDeviceAddNotificationOperationCompleted == null)) {
                this.CDDeviceAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceAddNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceAddNotification", new object[] {
                        addedCDDs}, this.CDDeviceAddNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceAddNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceAddNotificationCompleted(this, new CDDeviceAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDDeviceChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceChangedNotification(CDDevice[] changedCDDs) {
            object[] results = this.Invoke("CDDeviceChangedNotification", new object[] {
                        changedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceChangedNotificationAsync(CDDevice[] changedCDDs) {
            this.CDDeviceChangedNotificationAsync(changedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceChangedNotificationAsync(CDDevice[] changedCDDs, object userState) {
            if ((this.CDDeviceChangedNotificationOperationCompleted == null)) {
                this.CDDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceChangedNotification", new object[] {
                        changedCDDs}, this.CDDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceChangedNotificationCompleted(this, new CDDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDDeviceExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceExchangeNotification(CDDeviceExchange[] CDDChangeout) {
            object[] results = this.Invoke("CDDeviceExchangeNotification", new object[] {
                        CDDChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceExchangeNotificationAsync(CDDeviceExchange[] CDDChangeout) {
            this.CDDeviceExchangeNotificationAsync(CDDChangeout, null);
        }
        
        /// <remarks/>
        public void CDDeviceExchangeNotificationAsync(CDDeviceExchange[] CDDChangeout, object userState) {
            if ((this.CDDeviceExchangeNotificationOperationCompleted == null)) {
                this.CDDeviceExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceExchangeNotification", new object[] {
                        CDDChangeout}, this.CDDeviceExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceExchangeNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceExchangeNotificationCompleted(this, new CDDeviceExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDDeviceRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceRemoveNotification(CDDevice[] removedCDDs) {
            object[] results = this.Invoke("CDDeviceRemoveNotification", new object[] {
                        removedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceRemoveNotificationAsync(CDDevice[] removedCDDs) {
            this.CDDeviceRemoveNotificationAsync(removedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceRemoveNotificationAsync(CDDevice[] removedCDDs, object userState) {
            if ((this.CDDeviceRemoveNotificationOperationCompleted == null)) {
                this.CDDeviceRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceRemoveNotification", new object[] {
                        removedCDDs}, this.CDDeviceRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceRemoveNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceRemoveNotificationCompleted(this, new CDDeviceRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDDeviceInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceInstalledNotification(CDDevice[] installedCDDs) {
            object[] results = this.Invoke("CDDeviceInstalledNotification", new object[] {
                        installedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceInstalledNotificationAsync(CDDevice[] installedCDDs) {
            this.CDDeviceInstalledNotificationAsync(installedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceInstalledNotificationAsync(CDDevice[] installedCDDs, object userState) {
            if ((this.CDDeviceInstalledNotificationOperationCompleted == null)) {
                this.CDDeviceInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceInstalledNotification", new object[] {
                        installedCDDs}, this.CDDeviceInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceInstalledNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceInstalledNotificationCompleted(this, new CDDeviceInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDDeviceRetireNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceRetireNotification(CDDevice[] retiredCDDs) {
            object[] results = this.Invoke("CDDeviceRetireNotification", new object[] {
                        retiredCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceRetireNotificationAsync(CDDevice[] retiredCDDs) {
            this.CDDeviceRetireNotificationAsync(retiredCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceRetireNotificationAsync(CDDevice[] retiredCDDs, object userState) {
            if ((this.CDDeviceRetireNotificationOperationCompleted == null)) {
                this.CDDeviceRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceRetireNotification", new object[] {
                        retiredCDDs}, this.CDDeviceRetireNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceRetireNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceRetireNotificationCompleted(this, new CDDeviceRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/HistoryLogChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] HistoryLogChangedNotification(historyLog[] changedHistoryLogs) {
            object[] results = this.Invoke("HistoryLogChangedNotification", new object[] {
                        changedHistoryLogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void HistoryLogChangedNotificationAsync(historyLog[] changedHistoryLogs) {
            this.HistoryLogChangedNotificationAsync(changedHistoryLogs, null);
        }
        
        /// <remarks/>
        public void HistoryLogChangedNotificationAsync(historyLog[] changedHistoryLogs, object userState) {
            if ((this.HistoryLogChangedNotificationOperationCompleted == null)) {
                this.HistoryLogChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHistoryLogChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("HistoryLogChangedNotification", new object[] {
                        changedHistoryLogs}, this.HistoryLogChangedNotificationOperationCompleted, userState);
        }
        
        private void OnHistoryLogChangedNotificationOperationCompleted(object arg) {
            if ((this.HistoryLogChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HistoryLogChangedNotificationCompleted(this, new HistoryLogChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/LoadProfileChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LoadProfileChangedNotification(profileObject[] changedLoadProfiles) {
            object[] results = this.Invoke("LoadProfileChangedNotification", new object[] {
                        changedLoadProfiles});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadProfileChangedNotificationAsync(profileObject[] changedLoadProfiles) {
            this.LoadProfileChangedNotificationAsync(changedLoadProfiles, null);
        }
        
        /// <remarks/>
        public void LoadProfileChangedNotificationAsync(profileObject[] changedLoadProfiles, object userState) {
            if ((this.LoadProfileChangedNotificationOperationCompleted == null)) {
                this.LoadProfileChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProfileChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("LoadProfileChangedNotification", new object[] {
                        changedLoadProfiles}, this.LoadProfileChangedNotificationOperationCompleted, userState);
        }
        
        private void OnLoadProfileChangedNotificationOperationCompleted(object arg) {
            if ((this.LoadProfileChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProfileChangedNotificationCompleted(this, new LoadProfileChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterTestTransaction", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterTestTransaction([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] meterTest[] test) {
            object[] results = this.Invoke("MeterTestTransaction", new object[] {
                        test});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterTestTransactionAsync(meterTest[] test) {
            this.MeterTestTransactionAsync(test, null);
        }
        
        /// <remarks/>
        public void MeterTestTransactionAsync(meterTest[] test, object userState) {
            if ((this.MeterTestTransactionOperationCompleted == null)) {
                this.MeterTestTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterTestTransactionOperationCompleted);
            }
            this.InvokeAsync("MeterTestTransaction", new object[] {
                        test}, this.MeterTestTransactionOperationCompleted, userState);
        }
        
        private void OnMeterTestTransactionOperationCompleted(object arg) {
            if ((this.MeterTestTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterTestTransactionCompleted(this, new MeterTestTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterInstalledNotification(meter[] addedMeters) {
            object[] results = this.Invoke("MeterInstalledNotification", new object[] {
                        addedMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterInstalledNotificationAsync(meter[] addedMeters) {
            this.MeterInstalledNotificationAsync(addedMeters, null);
        }
        
        /// <remarks/>
        public void MeterInstalledNotificationAsync(meter[] addedMeters, object userState) {
            if ((this.MeterInstalledNotificationOperationCompleted == null)) {
                this.MeterInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterInstalledNotification", new object[] {
                        addedMeters}, this.MeterInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnMeterInstalledNotificationOperationCompleted(object arg) {
            if ((this.MeterInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterInstalledNotificationCompleted(this, new MeterInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ModifyCBDataForCustomer", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ModifyCBDataForCustomer(customer[] customerData) {
            object[] results = this.Invoke("ModifyCBDataForCustomer", new object[] {
                        customerData});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCBDataForCustomerAsync(customer[] customerData) {
            this.ModifyCBDataForCustomerAsync(customerData, null);
        }
        
        /// <remarks/>
        public void ModifyCBDataForCustomerAsync(customer[] customerData, object userState) {
            if ((this.ModifyCBDataForCustomerOperationCompleted == null)) {
                this.ModifyCBDataForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCBDataForCustomerOperationCompleted);
            }
            this.InvokeAsync("ModifyCBDataForCustomer", new object[] {
                        customerData}, this.ModifyCBDataForCustomerOperationCompleted, userState);
        }
        
        private void OnModifyCBDataForCustomerOperationCompleted(object arg) {
            if ((this.ModifyCBDataForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCBDataForCustomerCompleted(this, new ModifyCBDataForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ModifyCBDataForServiceLocation", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ModifyCBDataForServiceLocation(serviceLocation[] serviceLocationData) {
            object[] results = this.Invoke("ModifyCBDataForServiceLocation", new object[] {
                        serviceLocationData});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCBDataForServiceLocationAsync(serviceLocation[] serviceLocationData) {
            this.ModifyCBDataForServiceLocationAsync(serviceLocationData, null);
        }
        
        /// <remarks/>
        public void ModifyCBDataForServiceLocationAsync(serviceLocation[] serviceLocationData, object userState) {
            if ((this.ModifyCBDataForServiceLocationOperationCompleted == null)) {
                this.ModifyCBDataForServiceLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCBDataForServiceLocationOperationCompleted);
            }
            this.InvokeAsync("ModifyCBDataForServiceLocation", new object[] {
                        serviceLocationData}, this.ModifyCBDataForServiceLocationOperationCompleted, userState);
        }
        
        private void OnModifyCBDataForServiceLocationOperationCompleted(object arg) {
            if ((this.ModifyCBDataForServiceLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCBDataForServiceLocationCompleted(this, new ModifyCBDataForServiceLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ModifyCBDataForMeter", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ModifyCBDataForMeter(meter[] meterData) {
            object[] results = this.Invoke("ModifyCBDataForMeter", new object[] {
                        meterData});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCBDataForMeterAsync(meter[] meterData) {
            this.ModifyCBDataForMeterAsync(meterData, null);
        }
        
        /// <remarks/>
        public void ModifyCBDataForMeterAsync(meter[] meterData, object userState) {
            if ((this.ModifyCBDataForMeterOperationCompleted == null)) {
                this.ModifyCBDataForMeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCBDataForMeterOperationCompleted);
            }
            this.InvokeAsync("ModifyCBDataForMeter", new object[] {
                        meterData}, this.ModifyCBDataForMeterOperationCompleted, userState);
        }
        
        private void OnModifyCBDataForMeterOperationCompleted(object arg) {
            if ((this.ModifyCBDataForMeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCBDataForMeterCompleted(this, new ModifyCBDataForMeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ReadingChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ReadingChangedNotification(meterRead[] changedMeterReads, string transactionID) {
            object[] results = this.Invoke("ReadingChangedNotification", new object[] {
                        changedMeterReads,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadingChangedNotificationAsync(meterRead[] changedMeterReads, string transactionID) {
            this.ReadingChangedNotificationAsync(changedMeterReads, transactionID, null);
        }
        
        /// <remarks/>
        public void ReadingChangedNotificationAsync(meterRead[] changedMeterReads, string transactionID, object userState) {
            if ((this.ReadingChangedNotificationOperationCompleted == null)) {
                this.ReadingChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadingChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ReadingChangedNotification", new object[] {
                        changedMeterReads,
                        transactionID}, this.ReadingChangedNotificationOperationCompleted, userState);
        }
        
        private void OnReadingChangedNotificationOperationCompleted(object arg) {
            if ((this.ReadingChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadingChangedNotificationCompleted(this, new ReadingChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayAddNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayAddNotification(inHomeDisplay[] addedIHDs) {
            object[] results = this.Invoke("InHomeDisplayAddNotification", new object[] {
                        addedIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayAddNotificationAsync(inHomeDisplay[] addedIHDs) {
            this.InHomeDisplayAddNotificationAsync(addedIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayAddNotificationAsync(inHomeDisplay[] addedIHDs, object userState) {
            if ((this.InHomeDisplayAddNotificationOperationCompleted == null)) {
                this.InHomeDisplayAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayAddNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayAddNotification", new object[] {
                        addedIHDs}, this.InHomeDisplayAddNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayAddNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayAddNotificationCompleted(this, new InHomeDisplayAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayChangedNotification(inHomeDisplay[] changedIHDs) {
            object[] results = this.Invoke("InHomeDisplayChangedNotification", new object[] {
                        changedIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayChangedNotificationAsync(inHomeDisplay[] changedIHDs) {
            this.InHomeDisplayChangedNotificationAsync(changedIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayChangedNotificationAsync(inHomeDisplay[] changedIHDs, object userState) {
            if ((this.InHomeDisplayChangedNotificationOperationCompleted == null)) {
                this.InHomeDisplayChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayChangedNotification", new object[] {
                        changedIHDs}, this.InHomeDisplayChangedNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayChangedNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayChangedNotificationCompleted(this, new InHomeDisplayChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayExchangeNotification(inHomeDisplayExchange[] IHDChangeout) {
            object[] results = this.Invoke("InHomeDisplayExchangeNotification", new object[] {
                        IHDChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayExchangeNotificationAsync(inHomeDisplayExchange[] IHDChangeout) {
            this.InHomeDisplayExchangeNotificationAsync(IHDChangeout, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayExchangeNotificationAsync(inHomeDisplayExchange[] IHDChangeout, object userState) {
            if ((this.InHomeDisplayExchangeNotificationOperationCompleted == null)) {
                this.InHomeDisplayExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayExchangeNotification", new object[] {
                        IHDChangeout}, this.InHomeDisplayExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayExchangeNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayExchangeNotificationCompleted(this, new InHomeDisplayExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayInstalledNotification(inHomeDisplay[] addedIHDs) {
            object[] results = this.Invoke("InHomeDisplayInstalledNotification", new object[] {
                        addedIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayInstalledNotificationAsync(inHomeDisplay[] addedIHDs) {
            this.InHomeDisplayInstalledNotificationAsync(addedIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayInstalledNotificationAsync(inHomeDisplay[] addedIHDs, object userState) {
            if ((this.InHomeDisplayInstalledNotificationOperationCompleted == null)) {
                this.InHomeDisplayInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayInstalledNotification", new object[] {
                        addedIHDs}, this.InHomeDisplayInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayInstalledNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayInstalledNotificationCompleted(this, new InHomeDisplayInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayRemoveNotification(inHomeDisplay[] removedIHDs) {
            object[] results = this.Invoke("InHomeDisplayRemoveNotification", new object[] {
                        removedIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayRemoveNotificationAsync(inHomeDisplay[] removedIHDs) {
            this.InHomeDisplayRemoveNotificationAsync(removedIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayRemoveNotificationAsync(inHomeDisplay[] removedIHDs, object userState) {
            if ((this.InHomeDisplayRemoveNotificationOperationCompleted == null)) {
                this.InHomeDisplayRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayRemoveNotification", new object[] {
                        removedIHDs}, this.InHomeDisplayRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayRemoveNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayRemoveNotificationCompleted(this, new InHomeDisplayRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayRetireNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayRetireNotification(inHomeDisplay[] retiredIHDs) {
            object[] results = this.Invoke("InHomeDisplayRetireNotification", new object[] {
                        retiredIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayRetireNotificationAsync(inHomeDisplay[] retiredIHDs) {
            this.InHomeDisplayRetireNotificationAsync(retiredIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayRetireNotificationAsync(inHomeDisplay[] retiredIHDs, object userState) {
            if ((this.InHomeDisplayRetireNotificationOperationCompleted == null)) {
                this.InHomeDisplayRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayRetireNotification", new object[] {
                        retiredIHDs}, this.InHomeDisplayRetireNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayRetireNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayRetireNotificationCompleted(this, new InHomeDisplayRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDStateNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CDStateNotification(CDState state, string transactionID) {
            this.Invoke("CDStateNotification", new object[] {
                        state,
                        transactionID});
        }
        
        /// <remarks/>
        public void CDStateNotificationAsync(CDState state, string transactionID) {
            this.CDStateNotificationAsync(state, transactionID, null);
        }
        
        /// <remarks/>
        public void CDStateNotificationAsync(CDState state, string transactionID, object userState) {
            if ((this.CDStateNotificationOperationCompleted == null)) {
                this.CDStateNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStateNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStateNotification", new object[] {
                        state,
                        transactionID}, this.CDStateNotificationOperationCompleted, userState);
        }
        
        private void OnCDStateNotificationOperationCompleted(object arg) {
            if ((this.CDStateNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStateNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDStatesNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDStatesNotification(CDState[] states, string transactionID) {
            object[] results = this.Invoke("CDStatesNotification", new object[] {
                        states,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDStatesNotificationAsync(CDState[] states, string transactionID) {
            this.CDStatesNotificationAsync(states, transactionID, null);
        }
        
        /// <remarks/>
        public void CDStatesNotificationAsync(CDState[] states, string transactionID, object userState) {
            if ((this.CDStatesNotificationOperationCompleted == null)) {
                this.CDStatesNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStatesNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStatesNotification", new object[] {
                        states,
                        transactionID}, this.CDStatesNotificationOperationCompleted, userState);
        }
        
        private void OnCDStatesNotificationOperationCompleted(object arg) {
            if ((this.CDStatesNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStatesNotificationCompleted(this, new CDStatesNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ReadingScheduleResultNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ReadingScheduleResultNotification(readingScheduleResult[] scheduleResult, string transactionID, string errorString) {
            object[] results = this.Invoke("ReadingScheduleResultNotification", new object[] {
                        scheduleResult,
                        transactionID,
                        errorString});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadingScheduleResultNotificationAsync(readingScheduleResult[] scheduleResult, string transactionID, string errorString) {
            this.ReadingScheduleResultNotificationAsync(scheduleResult, transactionID, errorString, null);
        }
        
        /// <remarks/>
        public void ReadingScheduleResultNotificationAsync(readingScheduleResult[] scheduleResult, string transactionID, string errorString, object userState) {
            if ((this.ReadingScheduleResultNotificationOperationCompleted == null)) {
                this.ReadingScheduleResultNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadingScheduleResultNotificationOperationCompleted);
            }
            this.InvokeAsync("ReadingScheduleResultNotification", new object[] {
                        scheduleResult,
                        transactionID,
                        errorString}, this.ReadingScheduleResultNotificationOperationCompleted, userState);
        }
        
        private void OnReadingScheduleResultNotificationOperationCompleted(object arg) {
            if ((this.ReadingScheduleResultNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadingScheduleResultNotificationCompleted(this, new ReadingScheduleResultNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterEventNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterEventNotification(meterEventList events) {
            object[] results = this.Invoke("MeterEventNotification", new object[] {
                        events});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterEventNotificationAsync(meterEventList events) {
            this.MeterEventNotificationAsync(events, null);
        }
        
        /// <remarks/>
        public void MeterEventNotificationAsync(meterEventList events, object userState) {
            if ((this.MeterEventNotificationOperationCompleted == null)) {
                this.MeterEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterEventNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterEventNotification", new object[] {
                        events}, this.MeterEventNotificationOperationCompleted, userState);
        }
        
        private void OnMeterEventNotificationOperationCompleted(object arg) {
            if ((this.MeterEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterEventNotificationCompleted(this, new MeterEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterBaseExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseExchangeNotification(meterBaseExchange[] MBChangeout) {
            object[] results = this.Invoke("MeterBaseExchangeNotification", new object[] {
                        MBChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseExchangeNotificationAsync(meterBaseExchange[] MBChangeout) {
            this.MeterBaseExchangeNotificationAsync(MBChangeout, null);
        }
        
        /// <remarks/>
        public void MeterBaseExchangeNotificationAsync(meterBaseExchange[] MBChangeout, object userState) {
            if ((this.MeterBaseExchangeNotificationOperationCompleted == null)) {
                this.MeterBaseExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseExchangeNotification", new object[] {
                        MBChangeout}, this.MeterBaseExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseExchangeNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseExchangeNotificationCompleted(this, new MeterBaseExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterBaseInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseInstalledNotification(meterBase[] addedMBs) {
            object[] results = this.Invoke("MeterBaseInstalledNotification", new object[] {
                        addedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseInstalledNotificationAsync(meterBase[] addedMBs) {
            this.MeterBaseInstalledNotificationAsync(addedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseInstalledNotificationAsync(meterBase[] addedMBs, object userState) {
            if ((this.MeterBaseInstalledNotificationOperationCompleted == null)) {
                this.MeterBaseInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseInstalledNotification", new object[] {
                        addedMBs}, this.MeterBaseInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseInstalledNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseInstalledNotificationCompleted(this, new MeterBaseInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterBaseChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseChangedNotification(meterBase[] changedMBs) {
            object[] results = this.Invoke("MeterBaseChangedNotification", new object[] {
                        changedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseChangedNotificationAsync(meterBase[] changedMBs) {
            this.MeterBaseChangedNotificationAsync(changedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseChangedNotificationAsync(meterBase[] changedMBs, object userState) {
            if ((this.MeterBaseChangedNotificationOperationCompleted == null)) {
                this.MeterBaseChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseChangedNotification", new object[] {
                        changedMBs}, this.MeterBaseChangedNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseChangedNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseChangedNotificationCompleted(this, new MeterBaseChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterBaseRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseRemoveNotification(meterBase[] removedMBs) {
            object[] results = this.Invoke("MeterBaseRemoveNotification", new object[] {
                        removedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseRemoveNotificationAsync(meterBase[] removedMBs) {
            this.MeterBaseRemoveNotificationAsync(removedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseRemoveNotificationAsync(meterBase[] removedMBs, object userState) {
            if ((this.MeterBaseRemoveNotificationOperationCompleted == null)) {
                this.MeterBaseRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseRemoveNotification", new object[] {
                        removedMBs}, this.MeterBaseRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseRemoveNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseRemoveNotificationCompleted(this, new MeterBaseRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterBaseRetireNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseRetireNotification(meterBase[] retiredMBs) {
            object[] results = this.Invoke("MeterBaseRetireNotification", new object[] {
                        retiredMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseRetireNotificationAsync(meterBase[] retiredMBs) {
            this.MeterBaseRetireNotificationAsync(retiredMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseRetireNotificationAsync(meterBase[] retiredMBs, object userState) {
            if ((this.MeterBaseRetireNotificationOperationCompleted == null)) {
                this.MeterBaseRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseRetireNotification", new object[] {
                        retiredMBs}, this.MeterBaseRetireNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseRetireNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseRetireNotificationCompleted(this, new MeterBaseRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/MeterBaseAddNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseAddNotification(meterBase[] addedMBs) {
            object[] results = this.Invoke("MeterBaseAddNotification", new object[] {
                        addedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseAddNotificationAsync(meterBase[] addedMBs) {
            this.MeterBaseAddNotificationAsync(addedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseAddNotificationAsync(meterBase[] addedMBs, object userState) {
            if ((this.MeterBaseAddNotificationOperationCompleted == null)) {
                this.MeterBaseAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseAddNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseAddNotification", new object[] {
                        addedMBs}, this.MeterBaseAddNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseAddNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseAddNotificationCompleted(this, new MeterBaseAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ConnectDisconnectChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ConnectDisconnectChangedNotification(connectDisconnectEvent[] changedCDEvents) {
            object[] results = this.Invoke("ConnectDisconnectChangedNotification", new object[] {
                        changedCDEvents});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ConnectDisconnectChangedNotificationAsync(connectDisconnectEvent[] changedCDEvents) {
            this.ConnectDisconnectChangedNotificationAsync(changedCDEvents, null);
        }
        
        /// <remarks/>
        public void ConnectDisconnectChangedNotificationAsync(connectDisconnectEvent[] changedCDEvents, object userState) {
            if ((this.ConnectDisconnectChangedNotificationOperationCompleted == null)) {
                this.ConnectDisconnectChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectDisconnectChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ConnectDisconnectChangedNotification", new object[] {
                        changedCDEvents}, this.ConnectDisconnectChangedNotificationOperationCompleted, userState);
        }
        
        private void OnConnectDisconnectChangedNotificationOperationCompleted(object arg) {
            if ((this.ConnectDisconnectChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectDisconnectChangedNotificationCompleted(this, new ConnectDisconnectChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetFormattedBlockTemplates", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlockTemplate[] GetFormattedBlockTemplates(string lastReceived) {
            object[] results = this.Invoke("GetFormattedBlockTemplates", new object[] {
                        lastReceived});
            return ((formattedBlockTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFormattedBlockTemplatesAsync(string lastReceived) {
            this.GetFormattedBlockTemplatesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetFormattedBlockTemplatesAsync(string lastReceived, object userState) {
            if ((this.GetFormattedBlockTemplatesOperationCompleted == null)) {
                this.GetFormattedBlockTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormattedBlockTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetFormattedBlockTemplates", new object[] {
                        lastReceived}, this.GetFormattedBlockTemplatesOperationCompleted, userState);
        }
        
        private void OnGetFormattedBlockTemplatesOperationCompleted(object arg) {
            if ((this.GetFormattedBlockTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormattedBlockTemplatesCompleted(this, new GetFormattedBlockTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingsByMeterNoListFormattedBloc" +
            "k", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLatestReadingsByMeterNoListFormattedBlock(string[] meterNo, System.DateTime startDate, System.DateTime endDate, string formattedBlockTemplateName, string[] fieldName, string lastReceived, serviceType serviceType) {
            object[] results = this.Invoke("GetLatestReadingsByMeterNoListFormattedBlock", new object[] {
                        meterNo,
                        startDate,
                        endDate,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived,
                        serviceType});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterNoListFormattedBlockAsync(string[] meterNo, System.DateTime startDate, System.DateTime endDate, string formattedBlockTemplateName, string[] fieldName, string lastReceived, serviceType serviceType) {
            this.GetLatestReadingsByMeterNoListFormattedBlockAsync(meterNo, startDate, endDate, formattedBlockTemplateName, fieldName, lastReceived, serviceType, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterNoListFormattedBlockAsync(string[] meterNo, System.DateTime startDate, System.DateTime endDate, string formattedBlockTemplateName, string[] fieldName, string lastReceived, serviceType serviceType, object userState) {
            if ((this.GetLatestReadingsByMeterNoListFormattedBlockOperationCompleted == null)) {
                this.GetLatestReadingsByMeterNoListFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsByMeterNoListFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingsByMeterNoListFormattedBlock", new object[] {
                        meterNo,
                        startDate,
                        endDate,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived,
                        serviceType}, this.GetLatestReadingsByMeterNoListFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsByMeterNoListFormattedBlockOperationCompleted(object arg) {
            if ((this.GetLatestReadingsByMeterNoListFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsByMeterNoListFormattedBlockCompleted(this, new GetLatestReadingsByMeterNoListFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingByMeterIDAndFieldNameIntervalData" +
            "", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingByMeterIDAndFieldNameIntervalData(meterIdentifier meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDAndFieldNameIntervalDataAsync(meterIdentifier meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            this.GetReadingByMeterIDAndFieldNameIntervalDataAsync(meterID, startDate, endDate, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDAndFieldNameIntervalDataAsync(meterIdentifier meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingByMeterIDAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetReadingByMeterIDAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingByMeterIDAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName}, this.GetReadingByMeterIDAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingByMeterIDAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingByMeterIDAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingByMeterIDAndFieldNameIntervalDataCompleted(this, new GetReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByDateIntervalData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByDateIntervalData(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateIntervalData", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateIntervalDataAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            this.GetReadingsByDateIntervalDataAsync(billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateIntervalDataAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateIntervalDataOperationCompleted == null)) {
                this.GetReadingsByDateIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateIntervalData", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName}, this.GetReadingsByDateIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByDateIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateIntervalDataCompleted(this, new GetReadingsByDateIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByDateAndFieldNameIntervalData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByDateAndFieldNameIntervalData(System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateAndFieldNameIntervalData", new object[] {
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndFieldNameIntervalDataAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            this.GetReadingsByDateAndFieldNameIntervalDataAsync(startDate, endDate, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndFieldNameIntervalDataAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetReadingsByDateAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateAndFieldNameIntervalData", new object[] {
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName}, this.GetReadingsByDateAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByDateAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateAndFieldNameIntervalDataCompleted(this, new GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByBillingCycleIntervalData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByBillingCycleIntervalData(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByBillingCycleIntervalData", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleIntervalDataAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            this.GetReadingsByBillingCycleIntervalDataAsync(billingCycle, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleIntervalDataAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByBillingCycleIntervalDataOperationCompleted == null)) {
                this.GetReadingsByBillingCycleIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByBillingCycleIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByBillingCycleIntervalData", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName}, this.GetReadingsByBillingCycleIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByBillingCycleIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByBillingCycleIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByBillingCycleIntervalDataCompleted(this, new GetReadingsByBillingCycleIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingByMeterIDIntervalData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingByMeterIDIntervalData(meterIdentifier meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingByMeterIDIntervalData", new object[] {
                        meterID,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDIntervalDataAsync(meterIdentifier meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            this.GetReadingByMeterIDIntervalDataAsync(meterID, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDIntervalDataAsync(meterIdentifier meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingByMeterIDIntervalDataOperationCompleted == null)) {
                this.GetReadingByMeterIDIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingByMeterIDIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingByMeterIDIntervalData", new object[] {
                        meterID,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName}, this.GetReadingByMeterIDIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingByMeterIDIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingByMeterIDIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingByMeterIDIntervalDataCompleted(this, new GetReadingByMeterIDIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingByMeterListAndFieldNameInte" +
            "rvalData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLatestReadingByMeterListAndFieldNameIntervalData(meterIdentifier[] meterIDs, System.DateTime startDate, System.DateTime endDate, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingByMeterListAndFieldNameIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        fieldName,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterListAndFieldNameIntervalDataAsync(meterIdentifier[] meterIDs, System.DateTime startDate, System.DateTime endDate, string[] fieldName, string lastReceived) {
            this.GetLatestReadingByMeterListAndFieldNameIntervalDataAsync(meterIDs, startDate, endDate, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterListAndFieldNameIntervalDataAsync(meterIdentifier[] meterIDs, System.DateTime startDate, System.DateTime endDate, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingByMeterListAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetLatestReadingByMeterListAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByMeterListAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByMeterListAndFieldNameIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        fieldName,
                        lastReceived}, this.GetLatestReadingByMeterListAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByMeterListAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestReadingByMeterListAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByMeterListAndFieldNameIntervalDataCompleted(this, new GetLatestReadingByMeterListAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingByMeterIDAndFieldNameInterv" +
            "alData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLatestReadingByMeterIDAndFieldNameIntervalData(meterIdentifier meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetLatestReadingByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAndFieldNameIntervalDataAsync(meterIdentifier meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            this.GetLatestReadingByMeterIDAndFieldNameIntervalDataAsync(meterID, startDate, endDate, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAndFieldNameIntervalDataAsync(meterIdentifier meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName}, this.GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestReadingByMeterIDAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByMeterIDAndFieldNameIntervalDataCompleted(this, new GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingByFieldNameIntervalData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLatestReadingByFieldNameIntervalData(string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingByFieldNameIntervalData", new object[] {
                        fieldName,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByFieldNameIntervalDataAsync(string[] fieldName, string lastReceived) {
            this.GetLatestReadingByFieldNameIntervalDataAsync(fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByFieldNameIntervalDataAsync(string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingByFieldNameIntervalDataOperationCompleted == null)) {
                this.GetLatestReadingByFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByFieldNameIntervalData", new object[] {
                        fieldName,
                        lastReceived}, this.GetLatestReadingByFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestReadingByFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByFieldNameIntervalDataCompleted(this, new GetLatestReadingByFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestMeterReadingsByMeterGroupIntervalD" +
            "ata", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLatestMeterReadingsByMeterGroupIntervalData(string meterGroupID, serviceType serviceType, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestMeterReadingsByMeterGroupIntervalData", new object[] {
                        meterGroupID,
                        serviceType,
                        fieldName,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupIntervalDataAsync(string meterGroupID, serviceType serviceType, string[] fieldName, string lastReceived) {
            this.GetLatestMeterReadingsByMeterGroupIntervalDataAsync(meterGroupID, serviceType, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupIntervalDataAsync(string meterGroupID, serviceType serviceType, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted == null)) {
                this.GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestMeterReadingsByMeterGroupIntervalData", new object[] {
                        meterGroupID,
                        serviceType,
                        fieldName,
                        lastReceived}, this.GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestMeterReadingsByMeterGroupIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestMeterReadingsByMeterGroupIntervalDataCompleted(this, new GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMetersByMeterConnectionStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByMeterConnectionStatus(meterConnectionStatus meterConnectionStatus, string lastReceived) {
            object[] results = this.Invoke("GetMetersByMeterConnectionStatus", new object[] {
                        meterConnectionStatus,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByMeterConnectionStatusAsync(meterConnectionStatus meterConnectionStatus, string lastReceived) {
            this.GetMetersByMeterConnectionStatusAsync(meterConnectionStatus, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetMetersByMeterConnectionStatusAsync(meterConnectionStatus meterConnectionStatus, string lastReceived, object userState) {
            if ((this.GetMetersByMeterConnectionStatusOperationCompleted == null)) {
                this.GetMetersByMeterConnectionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByMeterConnectionStatusOperationCompleted);
            }
            this.InvokeAsync("GetMetersByMeterConnectionStatus", new object[] {
                        meterConnectionStatus,
                        lastReceived}, this.GetMetersByMeterConnectionStatusOperationCompleted, userState);
        }
        
        private void OnGetMetersByMeterConnectionStatusOperationCompleted(object arg) {
            if ((this.GetMetersByMeterConnectionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByMeterConnectionStatusCompleted(this, new GetMetersByMeterConnectionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InsertInHomeDisplayInIHDGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InsertInHomeDisplayInIHDGroup(string[] inHomeDisplayIDs, string IHDGroupID) {
            object[] results = this.Invoke("InsertInHomeDisplayInIHDGroup", new object[] {
                        inHomeDisplayIDs,
                        IHDGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertInHomeDisplayInIHDGroupAsync(string[] inHomeDisplayIDs, string IHDGroupID) {
            this.InsertInHomeDisplayInIHDGroupAsync(inHomeDisplayIDs, IHDGroupID, null);
        }
        
        /// <remarks/>
        public void InsertInHomeDisplayInIHDGroupAsync(string[] inHomeDisplayIDs, string IHDGroupID, object userState) {
            if ((this.InsertInHomeDisplayInIHDGroupOperationCompleted == null)) {
                this.InsertInHomeDisplayInIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInHomeDisplayInIHDGroupOperationCompleted);
            }
            this.InvokeAsync("InsertInHomeDisplayInIHDGroup", new object[] {
                        inHomeDisplayIDs,
                        IHDGroupID}, this.InsertInHomeDisplayInIHDGroupOperationCompleted, userState);
        }
        
        private void OnInsertInHomeDisplayInIHDGroupOperationCompleted(object arg) {
            if ((this.InsertInHomeDisplayInIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInHomeDisplayInIHDGroupCompleted(this, new InsertInHomeDisplayInIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/RemoveInHomeDisplayFromIHDGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RemoveInHomeDisplayFromIHDGroup(string[] inHomeDisplays, string IHDGroupID) {
            object[] results = this.Invoke("RemoveInHomeDisplayFromIHDGroup", new object[] {
                        inHomeDisplays,
                        IHDGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RemoveInHomeDisplayFromIHDGroupAsync(string[] inHomeDisplays, string IHDGroupID) {
            this.RemoveInHomeDisplayFromIHDGroupAsync(inHomeDisplays, IHDGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveInHomeDisplayFromIHDGroupAsync(string[] inHomeDisplays, string IHDGroupID, object userState) {
            if ((this.RemoveInHomeDisplayFromIHDGroupOperationCompleted == null)) {
                this.RemoveInHomeDisplayFromIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveInHomeDisplayFromIHDGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveInHomeDisplayFromIHDGroup", new object[] {
                        inHomeDisplays,
                        IHDGroupID}, this.RemoveInHomeDisplayFromIHDGroupOperationCompleted, userState);
        }
        
        private void OnRemoveInHomeDisplayFromIHDGroupOperationCompleted(object arg) {
            if ((this.RemoveInHomeDisplayFromIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveInHomeDisplayFromIHDGroupCompleted(this, new RemoveInHomeDisplayFromIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateLoadManagementEvent", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject InitiateLoadManagementEvent(loadManagementEvent theLMEvent) {
            object[] results = this.Invoke("InitiateLoadManagementEvent", new object[] {
                        theLMEvent});
            return ((errorObject)(results[0]));
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventAsync(loadManagementEvent theLMEvent) {
            this.InitiateLoadManagementEventAsync(theLMEvent, null);
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventAsync(loadManagementEvent theLMEvent, object userState) {
            if ((this.InitiateLoadManagementEventOperationCompleted == null)) {
                this.InitiateLoadManagementEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateLoadManagementEventOperationCompleted);
            }
            this.InvokeAsync("InitiateLoadManagementEvent", new object[] {
                        theLMEvent}, this.InitiateLoadManagementEventOperationCompleted, userState);
        }
        
        private void OnInitiateLoadManagementEventOperationCompleted(object arg) {
            if ((this.InitiateLoadManagementEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateLoadManagementEventCompleted(this, new InitiateLoadManagementEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateLoadManagementEvents", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateLoadManagementEvents(loadManagementEvent[] theLMEvents) {
            object[] results = this.Invoke("InitiateLoadManagementEvents", new object[] {
                        theLMEvents});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventsAsync(loadManagementEvent[] theLMEvents) {
            this.InitiateLoadManagementEventsAsync(theLMEvents, null);
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventsAsync(loadManagementEvent[] theLMEvents, object userState) {
            if ((this.InitiateLoadManagementEventsOperationCompleted == null)) {
                this.InitiateLoadManagementEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateLoadManagementEventsOperationCompleted);
            }
            this.InvokeAsync("InitiateLoadManagementEvents", new object[] {
                        theLMEvents}, this.InitiateLoadManagementEventsOperationCompleted, userState);
        }
        
        private void OnInitiateLoadManagementEventsOperationCompleted(object arg) {
            if ((this.InitiateLoadManagementEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateLoadManagementEventsCompleted(this, new InitiateLoadManagementEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiatePowerFactorManagementEvent", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject InitiatePowerFactorManagementEvent(powerFactorManagementEvent thePFMEvent, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiatePowerFactorManagementEvent", new object[] {
                        thePFMEvent,
                        transactionID,
                        responseURL});
            return ((errorObject)(results[0]));
        }
        
        /// <remarks/>
        public void InitiatePowerFactorManagementEventAsync(powerFactorManagementEvent thePFMEvent, string transactionID, string responseURL) {
            this.InitiatePowerFactorManagementEventAsync(thePFMEvent, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiatePowerFactorManagementEventAsync(powerFactorManagementEvent thePFMEvent, string transactionID, string responseURL, object userState) {
            if ((this.InitiatePowerFactorManagementEventOperationCompleted == null)) {
                this.InitiatePowerFactorManagementEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiatePowerFactorManagementEventOperationCompleted);
            }
            this.InvokeAsync("InitiatePowerFactorManagementEvent", new object[] {
                        thePFMEvent,
                        transactionID,
                        responseURL}, this.InitiatePowerFactorManagementEventOperationCompleted, userState);
        }
        
        private void OnInitiatePowerFactorManagementEventOperationCompleted(object arg) {
            if ((this.InitiatePowerFactorManagementEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiatePowerFactorManagementEventCompleted(this, new InitiatePowerFactorManagementEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiatePlannedOutage", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiatePlannedOutage(string[] meterNos, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("InitiatePlannedOutage", new object[] {
                        meterNos,
                        startDate,
                        endDate});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiatePlannedOutageAsync(string[] meterNos, System.DateTime startDate, System.DateTime endDate) {
            this.InitiatePlannedOutageAsync(meterNos, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void InitiatePlannedOutageAsync(string[] meterNos, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.InitiatePlannedOutageOperationCompleted == null)) {
                this.InitiatePlannedOutageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiatePlannedOutageOperationCompleted);
            }
            this.InvokeAsync("InitiatePlannedOutage", new object[] {
                        meterNos,
                        startDate,
                        endDate}, this.InitiatePlannedOutageOperationCompleted, userState);
        }
        
        private void OnInitiatePlannedOutageOperationCompleted(object arg) {
            if ((this.InitiatePlannedOutageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiatePlannedOutageCompleted(this, new InitiatePlannedOutageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CancelPlannedOutage", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelPlannedOutage(string[] meterNos) {
            object[] results = this.Invoke("CancelPlannedOutage", new object[] {
                        meterNos});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelPlannedOutageAsync(string[] meterNos) {
            this.CancelPlannedOutageAsync(meterNos, null);
        }
        
        /// <remarks/>
        public void CancelPlannedOutageAsync(string[] meterNos, object userState) {
            if ((this.CancelPlannedOutageOperationCompleted == null)) {
                this.CancelPlannedOutageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPlannedOutageOperationCompleted);
            }
            this.InvokeAsync("CancelPlannedOutage", new object[] {
                        meterNos}, this.CancelPlannedOutageOperationCompleted, userState);
        }
        
        private void OnCancelPlannedOutageOperationCompleted(object arg) {
            if ((this.CancelPlannedOutageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPlannedOutageCompleted(this, new CancelPlannedOutageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateUsageMonitoring", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateUsageMonitoring(string[] meterNos, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateUsageMonitoring", new object[] {
                        meterNos,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateUsageMonitoringAsync(string[] meterNos, string responseURL, string transactionID) {
            this.InitiateUsageMonitoringAsync(meterNos, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateUsageMonitoringAsync(string[] meterNos, string responseURL, string transactionID, object userState) {
            if ((this.InitiateUsageMonitoringOperationCompleted == null)) {
                this.InitiateUsageMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateUsageMonitoringOperationCompleted);
            }
            this.InvokeAsync("InitiateUsageMonitoring", new object[] {
                        meterNos,
                        responseURL,
                        transactionID}, this.InitiateUsageMonitoringOperationCompleted, userState);
        }
        
        private void OnInitiateUsageMonitoringOperationCompleted(object arg) {
            if ((this.InitiateUsageMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateUsageMonitoringCompleted(this, new InitiateUsageMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CancelUsageMonitoring", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelUsageMonitoring(string[] meterNos) {
            object[] results = this.Invoke("CancelUsageMonitoring", new object[] {
                        meterNos});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelUsageMonitoringAsync(string[] meterNos) {
            this.CancelUsageMonitoringAsync(meterNos, null);
        }
        
        /// <remarks/>
        public void CancelUsageMonitoringAsync(string[] meterNos, object userState) {
            if ((this.CancelUsageMonitoringOperationCompleted == null)) {
                this.CancelUsageMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelUsageMonitoringOperationCompleted);
            }
            this.InvokeAsync("CancelUsageMonitoring", new object[] {
                        meterNos}, this.CancelUsageMonitoringOperationCompleted, userState);
        }
        
        private void OnCancelUsageMonitoringOperationCompleted(object arg) {
            if ((this.CancelUsageMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelUsageMonitoringCompleted(this, new CancelUsageMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateDisconnectedStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDisconnectedStatus(string[] meterNos) {
            object[] results = this.Invoke("InitiateDisconnectedStatus", new object[] {
                        meterNos});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDisconnectedStatusAsync(string[] meterNos) {
            this.InitiateDisconnectedStatusAsync(meterNos, null);
        }
        
        /// <remarks/>
        public void InitiateDisconnectedStatusAsync(string[] meterNos, object userState) {
            if ((this.InitiateDisconnectedStatusOperationCompleted == null)) {
                this.InitiateDisconnectedStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDisconnectedStatusOperationCompleted);
            }
            this.InvokeAsync("InitiateDisconnectedStatus", new object[] {
                        meterNos}, this.InitiateDisconnectedStatusOperationCompleted, userState);
        }
        
        private void OnInitiateDisconnectedStatusOperationCompleted(object arg) {
            if ((this.InitiateDisconnectedStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDisconnectedStatusCompleted(this, new InitiateDisconnectedStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CancelDisconnectedStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelDisconnectedStatus(string[] meterNos) {
            object[] results = this.Invoke("CancelDisconnectedStatus", new object[] {
                        meterNos});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelDisconnectedStatusAsync(string[] meterNos) {
            this.CancelDisconnectedStatusAsync(meterNos, null);
        }
        
        /// <remarks/>
        public void CancelDisconnectedStatusAsync(string[] meterNos, object userState) {
            if ((this.CancelDisconnectedStatusOperationCompleted == null)) {
                this.CancelDisconnectedStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDisconnectedStatusOperationCompleted);
            }
            this.InvokeAsync("CancelDisconnectedStatus", new object[] {
                        meterNos}, this.CancelDisconnectedStatusOperationCompleted, userState);
        }
        
        private void OnCancelDisconnectedStatusOperationCompleted(object arg) {
            if ((this.CancelDisconnectedStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDisconnectedStatusCompleted(this, new CancelDisconnectedStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateMeterReadByMeterNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadByMeterNumber(string[] meterNos, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateMeterReadByMeterNumber", new object[] {
                        meterNos,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadByMeterNumberAsync(string[] meterNos, string responseURL, string transactionID, float expirationTime) {
            this.InitiateMeterReadByMeterNumberAsync(meterNos, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadByMeterNumberAsync(string[] meterNos, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateMeterReadByMeterNumberOperationCompleted == null)) {
                this.InitiateMeterReadByMeterNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadByMeterNumberOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadByMeterNumber", new object[] {
                        meterNos,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateMeterReadByMeterNumberOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadByMeterNumberOperationCompleted(object arg) {
            if ((this.InitiateMeterReadByMeterNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadByMeterNumberCompleted(this, new InitiateMeterReadByMeterNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/EstablishMeterGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishMeterGroup(meterGroup meterGroup) {
            object[] results = this.Invoke("EstablishMeterGroup", new object[] {
                        meterGroup});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishMeterGroupAsync(meterGroup meterGroup) {
            this.EstablishMeterGroupAsync(meterGroup, null);
        }
        
        /// <remarks/>
        public void EstablishMeterGroupAsync(meterGroup meterGroup, object userState) {
            if ((this.EstablishMeterGroupOperationCompleted == null)) {
                this.EstablishMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishMeterGroupOperationCompleted);
            }
            this.InvokeAsync("EstablishMeterGroup", new object[] {
                        meterGroup}, this.EstablishMeterGroupOperationCompleted, userState);
        }
        
        private void OnEstablishMeterGroupOperationCompleted(object arg) {
            if ((this.EstablishMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishMeterGroupCompleted(this, new EstablishMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DeleteMeterGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject DeleteMeterGroup(string meterGroupID) {
            object[] results = this.Invoke("DeleteMeterGroup", new object[] {
                        meterGroupID});
            return ((errorObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMeterGroupAsync(string meterGroupID) {
            this.DeleteMeterGroupAsync(meterGroupID, null);
        }
        
        /// <remarks/>
        public void DeleteMeterGroupAsync(string meterGroupID, object userState) {
            if ((this.DeleteMeterGroupOperationCompleted == null)) {
                this.DeleteMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMeterGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteMeterGroup", new object[] {
                        meterGroupID}, this.DeleteMeterGroupOperationCompleted, userState);
        }
        
        private void OnDeleteMeterGroupOperationCompleted(object arg) {
            if ((this.DeleteMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMeterGroupCompleted(this, new DeleteMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InsertMeterInMeterGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InsertMeterInMeterGroup(string[] meterNumbers, string meterGroupID) {
            object[] results = this.Invoke("InsertMeterInMeterGroup", new object[] {
                        meterNumbers,
                        meterGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertMeterInMeterGroupAsync(string[] meterNumbers, string meterGroupID) {
            this.InsertMeterInMeterGroupAsync(meterNumbers, meterGroupID, null);
        }
        
        /// <remarks/>
        public void InsertMeterInMeterGroupAsync(string[] meterNumbers, string meterGroupID, object userState) {
            if ((this.InsertMeterInMeterGroupOperationCompleted == null)) {
                this.InsertMeterInMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMeterInMeterGroupOperationCompleted);
            }
            this.InvokeAsync("InsertMeterInMeterGroup", new object[] {
                        meterNumbers,
                        meterGroupID}, this.InsertMeterInMeterGroupOperationCompleted, userState);
        }
        
        private void OnInsertMeterInMeterGroupOperationCompleted(object arg) {
            if ((this.InsertMeterInMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMeterInMeterGroupCompleted(this, new InsertMeterInMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/RemoveMetersFromMeterGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RemoveMetersFromMeterGroup(string[] meterNumbers, string meterGroupID) {
            object[] results = this.Invoke("RemoveMetersFromMeterGroup", new object[] {
                        meterNumbers,
                        meterGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMetersFromMeterGroupAsync(string[] meterNumbers, string meterGroupID) {
            this.RemoveMetersFromMeterGroupAsync(meterNumbers, meterGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveMetersFromMeterGroupAsync(string[] meterNumbers, string meterGroupID, object userState) {
            if ((this.RemoveMetersFromMeterGroupOperationCompleted == null)) {
                this.RemoveMetersFromMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMetersFromMeterGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveMetersFromMeterGroup", new object[] {
                        meterNumbers,
                        meterGroupID}, this.RemoveMetersFromMeterGroupOperationCompleted, userState);
        }
        
        private void OnRemoveMetersFromMeterGroupOperationCompleted(object arg) {
            if ((this.RemoveMetersFromMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMetersFromMeterGroupCompleted(this, new RemoveMetersFromMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateGroupMeterRead", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateGroupMeterRead(string meterGroupName, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateGroupMeterRead", new object[] {
                        meterGroupName,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateGroupMeterReadAsync(string meterGroupName, string responseURL, string transactionID, float expirationTime) {
            this.InitiateGroupMeterReadAsync(meterGroupName, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateGroupMeterReadAsync(string meterGroupName, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateGroupMeterReadOperationCompleted == null)) {
                this.InitiateGroupMeterReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateGroupMeterReadOperationCompleted);
            }
            this.InvokeAsync("InitiateGroupMeterRead", new object[] {
                        meterGroupName,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateGroupMeterReadOperationCompleted, userState);
        }
        
        private void OnInitiateGroupMeterReadOperationCompleted(object arg) {
            if ((this.InitiateGroupMeterReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateGroupMeterReadCompleted(this, new InitiateGroupMeterReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ScheduleGroupMeterRead", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ScheduleGroupMeterRead(string meterGroupName, System.DateTime timeToRead, string responseURL, string transactionID) {
            object[] results = this.Invoke("ScheduleGroupMeterRead", new object[] {
                        meterGroupName,
                        timeToRead,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ScheduleGroupMeterReadAsync(string meterGroupName, System.DateTime timeToRead, string responseURL, string transactionID) {
            this.ScheduleGroupMeterReadAsync(meterGroupName, timeToRead, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void ScheduleGroupMeterReadAsync(string meterGroupName, System.DateTime timeToRead, string responseURL, string transactionID, object userState) {
            if ((this.ScheduleGroupMeterReadOperationCompleted == null)) {
                this.ScheduleGroupMeterReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduleGroupMeterReadOperationCompleted);
            }
            this.InvokeAsync("ScheduleGroupMeterRead", new object[] {
                        meterGroupName,
                        timeToRead,
                        responseURL,
                        transactionID}, this.ScheduleGroupMeterReadOperationCompleted, userState);
        }
        
        private void OnScheduleGroupMeterReadOperationCompleted(object arg) {
            if ((this.ScheduleGroupMeterReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduleGroupMeterReadCompleted(this, new ScheduleGroupMeterReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateMeterReadByMeterNoAndType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadByMeterNoAndType(string meterNo, string responseURL, string readingType, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateMeterReadByMeterNoAndType", new object[] {
                        meterNo,
                        responseURL,
                        readingType,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadByMeterNoAndTypeAsync(string meterNo, string responseURL, string readingType, string transactionID, float expirationTime) {
            this.InitiateMeterReadByMeterNoAndTypeAsync(meterNo, responseURL, readingType, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadByMeterNoAndTypeAsync(string meterNo, string responseURL, string readingType, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateMeterReadByMeterNoAndTypeOperationCompleted == null)) {
                this.InitiateMeterReadByMeterNoAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadByMeterNoAndTypeOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadByMeterNoAndType", new object[] {
                        meterNo,
                        responseURL,
                        readingType,
                        transactionID,
                        expirationTime}, this.InitiateMeterReadByMeterNoAndTypeOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadByMeterNoAndTypeOperationCompleted(object arg) {
            if ((this.InitiateMeterReadByMeterNoAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadByMeterNoAndTypeCompleted(this, new InitiateMeterReadByMeterNoAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateMeterReadByObject", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadByObject(string objectName, string nounType, phaseCd PhaseCode, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateMeterReadByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadByObjectAsync(string objectName, string nounType, phaseCd PhaseCode, string responseURL, string transactionID, float expirationTime) {
            this.InitiateMeterReadByObjectAsync(objectName, nounType, PhaseCode, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadByObjectAsync(string objectName, string nounType, phaseCd PhaseCode, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateMeterReadByObjectOperationCompleted == null)) {
                this.InitiateMeterReadByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadByObjectOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateMeterReadByObjectOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadByObjectOperationCompleted(object arg) {
            if ((this.InitiateMeterReadByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadByObjectCompleted(this, new InitiateMeterReadByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateOutageDetectionEventRequest", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateOutageDetectionEventRequest(string[] meterNos, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateOutageDetectionEventRequest", new object[] {
                        meterNos,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateOutageDetectionEventRequestAsync(string[] meterNos, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            this.InitiateOutageDetectionEventRequestAsync(meterNos, requestDate, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateOutageDetectionEventRequestAsync(string[] meterNos, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateOutageDetectionEventRequestOperationCompleted == null)) {
                this.InitiateOutageDetectionEventRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateOutageDetectionEventRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateOutageDetectionEventRequest", new object[] {
                        meterNos,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateOutageDetectionEventRequestOperationCompleted, userState);
        }
        
        private void OnInitiateOutageDetectionEventRequestOperationCompleted(object arg) {
            if ((this.InitiateOutageDetectionEventRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateOutageDetectionEventRequestCompleted(this, new InitiateOutageDetectionEventRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateODEventRequestByObject", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateODEventRequestByObject(string objectName, string nounType, phaseCd PhaseCode, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateODEventRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByObjectAsync(string objectName, string nounType, phaseCd PhaseCode, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            this.InitiateODEventRequestByObjectAsync(objectName, nounType, PhaseCode, requestDate, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByObjectAsync(string objectName, string nounType, phaseCd PhaseCode, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateODEventRequestByObjectOperationCompleted == null)) {
                this.InitiateODEventRequestByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateODEventRequestByObjectOperationCompleted);
            }
            this.InvokeAsync("InitiateODEventRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateODEventRequestByObjectOperationCompleted, userState);
        }
        
        private void OnInitiateODEventRequestByObjectOperationCompleted(object arg) {
            if ((this.InitiateODEventRequestByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateODEventRequestByObjectCompleted(this, new InitiateODEventRequestByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateODMonitoringRequestByObject", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateODMonitoringRequestByObject(string objectName, string nounType, phaseCd PhaseCode, int periodicity, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateODMonitoringRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        periodicity,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateODMonitoringRequestByObjectAsync(string objectName, string nounType, phaseCd PhaseCode, int periodicity, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            this.InitiateODMonitoringRequestByObjectAsync(objectName, nounType, PhaseCode, periodicity, requestDate, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateODMonitoringRequestByObjectAsync(string objectName, string nounType, phaseCd PhaseCode, int periodicity, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateODMonitoringRequestByObjectOperationCompleted == null)) {
                this.InitiateODMonitoringRequestByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateODMonitoringRequestByObjectOperationCompleted);
            }
            this.InvokeAsync("InitiateODMonitoringRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        periodicity,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateODMonitoringRequestByObjectOperationCompleted, userState);
        }
        
        private void OnInitiateODMonitoringRequestByObjectOperationCompleted(object arg) {
            if ((this.InitiateODMonitoringRequestByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateODMonitoringRequestByObjectCompleted(this, new InitiateODMonitoringRequestByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DisplayODMonitoringRequests", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objectRef[] DisplayODMonitoringRequests() {
            object[] results = this.Invoke("DisplayODMonitoringRequests", new object[0]);
            return ((objectRef[])(results[0]));
        }
        
        /// <remarks/>
        public void DisplayODMonitoringRequestsAsync() {
            this.DisplayODMonitoringRequestsAsync(null);
        }
        
        /// <remarks/>
        public void DisplayODMonitoringRequestsAsync(object userState) {
            if ((this.DisplayODMonitoringRequestsOperationCompleted == null)) {
                this.DisplayODMonitoringRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisplayODMonitoringRequestsOperationCompleted);
            }
            this.InvokeAsync("DisplayODMonitoringRequests", new object[0], this.DisplayODMonitoringRequestsOperationCompleted, userState);
        }
        
        private void OnDisplayODMonitoringRequestsOperationCompleted(object arg) {
            if ((this.DisplayODMonitoringRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisplayODMonitoringRequestsCompleted(this, new DisplayODMonitoringRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CancelODMonitoringRequestByObject", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelODMonitoringRequestByObject(objectRef[] ObjectRef, System.DateTime requestDate) {
            object[] results = this.Invoke("CancelODMonitoringRequestByObject", new object[] {
                        ObjectRef,
                        requestDate});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelODMonitoringRequestByObjectAsync(objectRef[] ObjectRef, System.DateTime requestDate) {
            this.CancelODMonitoringRequestByObjectAsync(ObjectRef, requestDate, null);
        }
        
        /// <remarks/>
        public void CancelODMonitoringRequestByObjectAsync(objectRef[] ObjectRef, System.DateTime requestDate, object userState) {
            if ((this.CancelODMonitoringRequestByObjectOperationCompleted == null)) {
                this.CancelODMonitoringRequestByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelODMonitoringRequestByObjectOperationCompleted);
            }
            this.InvokeAsync("CancelODMonitoringRequestByObject", new object[] {
                        ObjectRef,
                        requestDate}, this.CancelODMonitoringRequestByObjectOperationCompleted, userState);
        }
        
        private void OnCancelODMonitoringRequestByObjectOperationCompleted(object arg) {
            if ((this.CancelODMonitoringRequestByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelODMonitoringRequestByObjectCompleted(this, new CancelODMonitoringRequestByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateConnectDisconnect", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateConnectDisconnect(connectDisconnectEvent[] cdEvents, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateConnectDisconnect", new object[] {
                        cdEvents,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateConnectDisconnectAsync(connectDisconnectEvent[] cdEvents, string responseURL, string transactionID, float expirationTime) {
            this.InitiateConnectDisconnectAsync(cdEvents, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateConnectDisconnectAsync(connectDisconnectEvent[] cdEvents, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateConnectDisconnectOperationCompleted == null)) {
                this.InitiateConnectDisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateConnectDisconnectOperationCompleted);
            }
            this.InvokeAsync("InitiateConnectDisconnect", new object[] {
                        cdEvents,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateConnectDisconnectOperationCompleted, userState);
        }
        
        private void OnInitiateConnectDisconnectOperationCompleted(object arg) {
            if ((this.InitiateConnectDisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateConnectDisconnectCompleted(this, new InitiateConnectDisconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDStateChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CDStateChangedNotification(string meterNo, loadActionCode stateChange, string transactionID, string errorString) {
            this.Invoke("CDStateChangedNotification", new object[] {
                        meterNo,
                        stateChange,
                        transactionID,
                        errorString});
        }
        
        /// <remarks/>
        public void CDStateChangedNotificationAsync(string meterNo, loadActionCode stateChange, string transactionID, string errorString) {
            this.CDStateChangedNotificationAsync(meterNo, stateChange, transactionID, errorString, null);
        }
        
        /// <remarks/>
        public void CDStateChangedNotificationAsync(string meterNo, loadActionCode stateChange, string transactionID, string errorString, object userState) {
            if ((this.CDStateChangedNotificationOperationCompleted == null)) {
                this.CDStateChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStateChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStateChangedNotification", new object[] {
                        meterNo,
                        stateChange,
                        transactionID,
                        errorString}, this.CDStateChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCDStateChangedNotificationOperationCompleted(object arg) {
            if ((this.CDStateChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStateChangedNotificationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CDStatesChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDStatesChangedNotification(CDStateChange[] stateChanges, string transactionID) {
            object[] results = this.Invoke("CDStatesChangedNotification", new object[] {
                        stateChanges,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDStatesChangedNotificationAsync(CDStateChange[] stateChanges, string transactionID) {
            this.CDStatesChangedNotificationAsync(stateChanges, transactionID, null);
        }
        
        /// <remarks/>
        public void CDStatesChangedNotificationAsync(CDStateChange[] stateChanges, string transactionID, object userState) {
            if ((this.CDStatesChangedNotificationOperationCompleted == null)) {
                this.CDStatesChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStatesChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStatesChangedNotification", new object[] {
                        stateChanges,
                        transactionID}, this.CDStatesChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCDStatesChangedNotificationOperationCompleted(object arg) {
            if ((this.CDStatesChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStatesChangedNotificationCompleted(this, new CDStatesChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/UpdateServiceLocationDisplays", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UpdateServiceLocationDisplays(string servLocID) {
            object[] results = this.Invoke("UpdateServiceLocationDisplays", new object[] {
                        servLocID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateServiceLocationDisplaysAsync(string servLocID) {
            this.UpdateServiceLocationDisplaysAsync(servLocID, null);
        }
        
        /// <remarks/>
        public void UpdateServiceLocationDisplaysAsync(string servLocID, object userState) {
            if ((this.UpdateServiceLocationDisplaysOperationCompleted == null)) {
                this.UpdateServiceLocationDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateServiceLocationDisplaysOperationCompleted);
            }
            this.InvokeAsync("UpdateServiceLocationDisplays", new object[] {
                        servLocID}, this.UpdateServiceLocationDisplaysOperationCompleted, userState);
        }
        
        private void OnUpdateServiceLocationDisplaysOperationCompleted(object arg) {
            if ((this.UpdateServiceLocationDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateServiceLocationDisplaysCompleted(this, new UpdateServiceLocationDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/WriteAccountHistoryComments", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] WriteAccountHistoryComments(historyComment[] comments) {
            object[] results = this.Invoke("WriteAccountHistoryComments", new object[] {
                        comments});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void WriteAccountHistoryCommentsAsync(historyComment[] comments) {
            this.WriteAccountHistoryCommentsAsync(comments, null);
        }
        
        /// <remarks/>
        public void WriteAccountHistoryCommentsAsync(historyComment[] comments, object userState) {
            if ((this.WriteAccountHistoryCommentsOperationCompleted == null)) {
                this.WriteAccountHistoryCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteAccountHistoryCommentsOperationCompleted);
            }
            this.InvokeAsync("WriteAccountHistoryComments", new object[] {
                        comments}, this.WriteAccountHistoryCommentsOperationCompleted, userState);
        }
        
        private void OnWriteAccountHistoryCommentsOperationCompleted(object arg) {
            if ((this.WriteAccountHistoryCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteAccountHistoryCommentsCompleted(this, new WriteAccountHistoryCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateCDStateRequest", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateCDStateRequest(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateCDStateRequest", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateCDStateRequestAsync(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            this.InitiateCDStateRequestAsync(states, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateCDStateRequestAsync(CDState[] states, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateCDStateRequestOperationCompleted == null)) {
                this.InitiateCDStateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateCDStateRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateCDStateRequest", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateCDStateRequestOperationCompleted, userState);
        }
        
        private void OnInitiateCDStateRequestOperationCompleted(object arg) {
            if ((this.InitiateCDStateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateCDStateRequestCompleted(this, new InitiateCDStateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/OutageEventChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] OutageEventChangedNotification(outageEvent[] oEvents) {
            object[] results = this.Invoke("OutageEventChangedNotification", new object[] {
                        oEvents});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void OutageEventChangedNotificationAsync(outageEvent[] oEvents) {
            this.OutageEventChangedNotificationAsync(oEvents, null);
        }
        
        /// <remarks/>
        public void OutageEventChangedNotificationAsync(outageEvent[] oEvents, object userState) {
            if ((this.OutageEventChangedNotificationOperationCompleted == null)) {
                this.OutageEventChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutageEventChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("OutageEventChangedNotification", new object[] {
                        oEvents}, this.OutageEventChangedNotificationOperationCompleted, userState);
        }
        
        private void OnOutageEventChangedNotificationOperationCompleted(object arg) {
            if ((this.OutageEventChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutageEventChangedNotificationCompleted(this, new OutageEventChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateArmCDDevice", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateArmCDDevice(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateArmCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateArmCDDeviceAsync(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            this.InitiateArmCDDeviceAsync(states, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateArmCDDeviceAsync(CDState[] states, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateArmCDDeviceOperationCompleted == null)) {
                this.InitiateArmCDDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateArmCDDeviceOperationCompleted);
            }
            this.InvokeAsync("InitiateArmCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateArmCDDeviceOperationCompleted, userState);
        }
        
        private void OnInitiateArmCDDeviceOperationCompleted(object arg) {
            if ((this.InitiateArmCDDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateArmCDDeviceCompleted(this, new InitiateArmCDDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateEnableCDDevice", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateEnableCDDevice(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateEnableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateEnableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            this.InitiateEnableCDDeviceAsync(states, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateEnableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateEnableCDDeviceOperationCompleted == null)) {
                this.InitiateEnableCDDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateEnableCDDeviceOperationCompleted);
            }
            this.InvokeAsync("InitiateEnableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateEnableCDDeviceOperationCompleted, userState);
        }
        
        private void OnInitiateEnableCDDeviceOperationCompleted(object arg) {
            if ((this.InitiateEnableCDDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateEnableCDDeviceCompleted(this, new InitiateEnableCDDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateDisableCDDevice", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDisableCDDevice(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateDisableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDisableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, float expirationTime) {
            this.InitiateDisableCDDeviceAsync(states, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateDisableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateDisableCDDeviceOperationCompleted == null)) {
                this.InitiateDisableCDDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDisableCDDeviceOperationCompleted);
            }
            this.InvokeAsync("InitiateDisableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateDisableCDDeviceOperationCompleted, userState);
        }
        
        private void OnInitiateDisableCDDeviceOperationCompleted(object arg) {
            if ((this.InitiateDisableCDDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDisableCDDeviceCompleted(this, new InitiateDisableCDDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateDemandReset", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDemandReset(meterIdentifier[] meterIDs, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateDemandReset", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDemandResetAsync(meterIdentifier[] meterIDs, string responseURL, string transactionID, float expirationTime) {
            this.InitiateDemandResetAsync(meterIDs, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateDemandResetAsync(meterIdentifier[] meterIDs, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateDemandResetOperationCompleted == null)) {
                this.InitiateDemandResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDemandResetOperationCompleted);
            }
            this.InvokeAsync("InitiateDemandReset", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateDemandResetOperationCompleted, userState);
        }
        
        private void OnInitiateDemandResetOperationCompleted(object arg) {
            if ((this.InitiateDemandResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDemandResetCompleted(this, new InitiateDemandResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InsertMetersInConfigurationGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InsertMetersInConfigurationGroup(string[] meterNumbers, string meterGroupID, serviceType serviceType) {
            object[] results = this.Invoke("InsertMetersInConfigurationGroup", new object[] {
                        meterNumbers,
                        meterGroupID,
                        serviceType});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertMetersInConfigurationGroupAsync(string[] meterNumbers, string meterGroupID, serviceType serviceType) {
            this.InsertMetersInConfigurationGroupAsync(meterNumbers, meterGroupID, serviceType, null);
        }
        
        /// <remarks/>
        public void InsertMetersInConfigurationGroupAsync(string[] meterNumbers, string meterGroupID, serviceType serviceType, object userState) {
            if ((this.InsertMetersInConfigurationGroupOperationCompleted == null)) {
                this.InsertMetersInConfigurationGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMetersInConfigurationGroupOperationCompleted);
            }
            this.InvokeAsync("InsertMetersInConfigurationGroup", new object[] {
                        meterNumbers,
                        meterGroupID,
                        serviceType}, this.InsertMetersInConfigurationGroupOperationCompleted, userState);
        }
        
        private void OnInsertMetersInConfigurationGroupOperationCompleted(object arg) {
            if ((this.InsertMetersInConfigurationGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMetersInConfigurationGroupCompleted(this, new InsertMetersInConfigurationGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/RemoveMetersFromConfigurationGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RemoveMetersFromConfigurationGroup(string[] meterNumbers, string meterGroupID, serviceType serviceType) {
            object[] results = this.Invoke("RemoveMetersFromConfigurationGroup", new object[] {
                        meterNumbers,
                        meterGroupID,
                        serviceType});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMetersFromConfigurationGroupAsync(string[] meterNumbers, string meterGroupID, serviceType serviceType) {
            this.RemoveMetersFromConfigurationGroupAsync(meterNumbers, meterGroupID, serviceType, null);
        }
        
        /// <remarks/>
        public void RemoveMetersFromConfigurationGroupAsync(string[] meterNumbers, string meterGroupID, serviceType serviceType, object userState) {
            if ((this.RemoveMetersFromConfigurationGroupOperationCompleted == null)) {
                this.RemoveMetersFromConfigurationGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMetersFromConfigurationGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveMetersFromConfigurationGroup", new object[] {
                        meterNumbers,
                        meterGroupID,
                        serviceType}, this.RemoveMetersFromConfigurationGroupOperationCompleted, userState);
        }
        
        private void OnRemoveMetersFromConfigurationGroupOperationCompleted(object arg) {
            if ((this.RemoveMetersFromConfigurationGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMetersFromConfigurationGroupCompleted(this, new RemoveMetersFromConfigurationGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/EstablishSchedules", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishSchedules(schedule[] schedules) {
            object[] results = this.Invoke("EstablishSchedules", new object[] {
                        schedules});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishSchedulesAsync(schedule[] schedules) {
            this.EstablishSchedulesAsync(schedules, null);
        }
        
        /// <remarks/>
        public void EstablishSchedulesAsync(schedule[] schedules, object userState) {
            if ((this.EstablishSchedulesOperationCompleted == null)) {
                this.EstablishSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishSchedulesOperationCompleted);
            }
            this.InvokeAsync("EstablishSchedules", new object[] {
                        schedules}, this.EstablishSchedulesOperationCompleted, userState);
        }
        
        private void OnEstablishSchedulesOperationCompleted(object arg) {
            if ((this.EstablishSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishSchedulesCompleted(this, new EstablishSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DeleteSchedule", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteSchedule(string scheduleID) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        scheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(string scheduleID) {
            this.DeleteScheduleAsync(scheduleID, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(string scheduleID, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        scheduleID}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/EstablishReadingSchedules", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishReadingSchedules(readingSchedule[] readingSchedules) {
            object[] results = this.Invoke("EstablishReadingSchedules", new object[] {
                        readingSchedules});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishReadingSchedulesAsync(readingSchedule[] readingSchedules) {
            this.EstablishReadingSchedulesAsync(readingSchedules, null);
        }
        
        /// <remarks/>
        public void EstablishReadingSchedulesAsync(readingSchedule[] readingSchedules, object userState) {
            if ((this.EstablishReadingSchedulesOperationCompleted == null)) {
                this.EstablishReadingSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishReadingSchedulesOperationCompleted);
            }
            this.InvokeAsync("EstablishReadingSchedules", new object[] {
                        readingSchedules}, this.EstablishReadingSchedulesOperationCompleted, userState);
        }
        
        private void OnEstablishReadingSchedulesOperationCompleted(object arg) {
            if ((this.EstablishReadingSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishReadingSchedulesCompleted(this, new EstablishReadingSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/EnableReadingSchedule", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EnableReadingSchedule(string readingScheduleID) {
            object[] results = this.Invoke("EnableReadingSchedule", new object[] {
                        readingScheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EnableReadingScheduleAsync(string readingScheduleID) {
            this.EnableReadingScheduleAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void EnableReadingScheduleAsync(string readingScheduleID, object userState) {
            if ((this.EnableReadingScheduleOperationCompleted == null)) {
                this.EnableReadingScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableReadingScheduleOperationCompleted);
            }
            this.InvokeAsync("EnableReadingSchedule", new object[] {
                        readingScheduleID}, this.EnableReadingScheduleOperationCompleted, userState);
        }
        
        private void OnEnableReadingScheduleOperationCompleted(object arg) {
            if ((this.EnableReadingScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableReadingScheduleCompleted(this, new EnableReadingScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DisableReadingSchedule", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DisableReadingSchedule(string readingScheduleID) {
            object[] results = this.Invoke("DisableReadingSchedule", new object[] {
                        readingScheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DisableReadingScheduleAsync(string readingScheduleID) {
            this.DisableReadingScheduleAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void DisableReadingScheduleAsync(string readingScheduleID, object userState) {
            if ((this.DisableReadingScheduleOperationCompleted == null)) {
                this.DisableReadingScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableReadingScheduleOperationCompleted);
            }
            this.InvokeAsync("DisableReadingSchedule", new object[] {
                        readingScheduleID}, this.DisableReadingScheduleOperationCompleted, userState);
        }
        
        private void OnDisableReadingScheduleOperationCompleted(object arg) {
            if ((this.DisableReadingScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableReadingScheduleCompleted(this, new DisableReadingScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DeleteReadingSchedule", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteReadingSchedule(string readingScheduleID) {
            object[] results = this.Invoke("DeleteReadingSchedule", new object[] {
                        readingScheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReadingScheduleAsync(string readingScheduleID) {
            this.DeleteReadingScheduleAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void DeleteReadingScheduleAsync(string readingScheduleID, object userState) {
            if ((this.DeleteReadingScheduleOperationCompleted == null)) {
                this.DeleteReadingScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReadingScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteReadingSchedule", new object[] {
                        readingScheduleID}, this.DeleteReadingScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteReadingScheduleOperationCompleted(object arg) {
            if ((this.DeleteReadingScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReadingScheduleCompleted(this, new DeleteReadingScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateMeterReadsByFieldName", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadsByFieldName(string[] meterNumbers, string[] fieldNames, string responseURL, string transactionID, float expirationTime, string formattedBlockTemplateName) {
            object[] results = this.Invoke("InitiateMeterReadsByFieldName", new object[] {
                        meterNumbers,
                        fieldNames,
                        responseURL,
                        transactionID,
                        expirationTime,
                        formattedBlockTemplateName});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadsByFieldNameAsync(string[] meterNumbers, string[] fieldNames, string responseURL, string transactionID, float expirationTime, string formattedBlockTemplateName) {
            this.InitiateMeterReadsByFieldNameAsync(meterNumbers, fieldNames, responseURL, transactionID, expirationTime, formattedBlockTemplateName, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadsByFieldNameAsync(string[] meterNumbers, string[] fieldNames, string responseURL, string transactionID, float expirationTime, string formattedBlockTemplateName, object userState) {
            if ((this.InitiateMeterReadsByFieldNameOperationCompleted == null)) {
                this.InitiateMeterReadsByFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadsByFieldNameOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadsByFieldName", new object[] {
                        meterNumbers,
                        fieldNames,
                        responseURL,
                        transactionID,
                        expirationTime,
                        formattedBlockTemplateName}, this.InitiateMeterReadsByFieldNameOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadsByFieldNameOperationCompleted(object arg) {
            if ((this.InitiateMeterReadsByFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadsByFieldNameCompleted(this, new InitiateMeterReadsByFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InitiateODEventRequestByServiceLocation", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateODEventRequestByServiceLocation(string[] servLoc, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            object[] results = this.Invoke("InitiateODEventRequestByServiceLocation", new object[] {
                        servLoc,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByServiceLocationAsync(string[] servLoc, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime) {
            this.InitiateODEventRequestByServiceLocationAsync(servLoc, requestDate, responseURL, transactionID, expirationTime, null);
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByServiceLocationAsync(string[] servLoc, System.DateTime requestDate, string responseURL, string transactionID, float expirationTime, object userState) {
            if ((this.InitiateODEventRequestByServiceLocationOperationCompleted == null)) {
                this.InitiateODEventRequestByServiceLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateODEventRequestByServiceLocationOperationCompleted);
            }
            this.InvokeAsync("InitiateODEventRequestByServiceLocation", new object[] {
                        servLoc,
                        requestDate,
                        responseURL,
                        transactionID,
                        expirationTime}, this.InitiateODEventRequestByServiceLocationOperationCompleted, userState);
        }
        
        private void OnInitiateODEventRequestByServiceLocationOperationCompleted(object arg) {
            if ((this.InitiateODEventRequestByServiceLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateODEventRequestByServiceLocationCompleted(this, new InitiateODEventRequestByServiceLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/ModifyODDataForOutageDetectionDevice", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ModifyODDataForOutageDetectionDevice(outageDetectionDevice oDDevice) {
            this.Invoke("ModifyODDataForOutageDetectionDevice", new object[] {
                        oDDevice});
        }
        
        /// <remarks/>
        public void ModifyODDataForOutageDetectionDeviceAsync(outageDetectionDevice oDDevice) {
            this.ModifyODDataForOutageDetectionDeviceAsync(oDDevice, null);
        }
        
        /// <remarks/>
        public void ModifyODDataForOutageDetectionDeviceAsync(outageDetectionDevice oDDevice, object userState) {
            if ((this.ModifyODDataForOutageDetectionDeviceOperationCompleted == null)) {
                this.ModifyODDataForOutageDetectionDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyODDataForOutageDetectionDeviceOperationCompleted);
            }
            this.InvokeAsync("ModifyODDataForOutageDetectionDevice", new object[] {
                        oDDevice}, this.ModifyODDataForOutageDetectionDeviceOperationCompleted, userState);
        }
        
        private void OnModifyODDataForOutageDetectionDeviceOperationCompleted(object arg) {
            if ((this.ModifyODDataForOutageDetectionDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyODDataForOutageDetectionDeviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/CustomerChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CustomerChangedNotification(customer[] changedCustomers) {
            object[] results = this.Invoke("CustomerChangedNotification", new object[] {
                        changedCustomers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerChangedNotificationAsync(customer[] changedCustomers) {
            this.CustomerChangedNotificationAsync(changedCustomers, null);
        }
        
        /// <remarks/>
        public void CustomerChangedNotificationAsync(customer[] changedCustomers, object userState) {
            if ((this.CustomerChangedNotificationOperationCompleted == null)) {
                this.CustomerChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CustomerChangedNotification", new object[] {
                        changedCustomers}, this.CustomerChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCustomerChangedNotificationOperationCompleted(object arg) {
            if ((this.CustomerChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerChangedNotificationCompleted(this, new CustomerChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/PPMMeterExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] PPMMeterExchangeNotification(meterExchange[] changeouts) {
            object[] results = this.Invoke("PPMMeterExchangeNotification", new object[] {
                        changeouts});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void PPMMeterExchangeNotificationAsync(meterExchange[] changeouts) {
            this.PPMMeterExchangeNotificationAsync(changeouts, null);
        }
        
        /// <remarks/>
        public void PPMMeterExchangeNotificationAsync(meterExchange[] changeouts, object userState) {
            if ((this.PPMMeterExchangeNotificationOperationCompleted == null)) {
                this.PPMMeterExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPPMMeterExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("PPMMeterExchangeNotification", new object[] {
                        changeouts}, this.PPMMeterExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnPPMMeterExchangeNotificationOperationCompleted(object arg) {
            if ((this.PPMMeterExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PPMMeterExchangeNotificationCompleted(this, new PPMMeterExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayMessageNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayMessageNotification(inHomeDisplayMessage message) {
            object[] results = this.Invoke("InHomeDisplayMessageNotification", new object[] {
                        message});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayMessageNotificationAsync(inHomeDisplayMessage message) {
            this.InHomeDisplayMessageNotificationAsync(message, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayMessageNotificationAsync(inHomeDisplayMessage message, object userState) {
            if ((this.InHomeDisplayMessageNotificationOperationCompleted == null)) {
                this.InHomeDisplayMessageNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayMessageNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayMessageNotification", new object[] {
                        message}, this.InHomeDisplayMessageNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayMessageNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayMessageNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayMessageNotificationCompleted(this, new InHomeDisplayMessageNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/InHomeDisplayBillingMessageNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayBillingMessageNotification(inHomeDisplayBillingMessage message) {
            object[] results = this.Invoke("InHomeDisplayBillingMessageNotification", new object[] {
                        message});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayBillingMessageNotificationAsync(inHomeDisplayBillingMessage message) {
            this.InHomeDisplayBillingMessageNotificationAsync(message, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayBillingMessageNotificationAsync(inHomeDisplayBillingMessage message, object userState) {
            if ((this.InHomeDisplayBillingMessageNotificationOperationCompleted == null)) {
                this.InHomeDisplayBillingMessageNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayBillingMessageNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayBillingMessageNotification", new object[] {
                        message}, this.InHomeDisplayBillingMessageNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayBillingMessageNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayBillingMessageNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayBillingMessageNotificationCompleted(this, new InHomeDisplayBillingMessageNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/EnrollPPMCustomer", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EnrollPPMCustomer(ppmLocation[] newPPMCustomers) {
            object[] results = this.Invoke("EnrollPPMCustomer", new object[] {
                        newPPMCustomers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EnrollPPMCustomerAsync(ppmLocation[] newPPMCustomers) {
            this.EnrollPPMCustomerAsync(newPPMCustomers, null);
        }
        
        /// <remarks/>
        public void EnrollPPMCustomerAsync(ppmLocation[] newPPMCustomers, object userState) {
            if ((this.EnrollPPMCustomerOperationCompleted == null)) {
                this.EnrollPPMCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnrollPPMCustomerOperationCompleted);
            }
            this.InvokeAsync("EnrollPPMCustomer", new object[] {
                        newPPMCustomers}, this.EnrollPPMCustomerOperationCompleted, userState);
        }
        
        private void OnEnrollPPMCustomerOperationCompleted(object arg) {
            if ((this.EnrollPPMCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnrollPPMCustomerCompleted(this, new EnrollPPMCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllPropaneMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public propaneMeter[] GetAllPropaneMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllPropaneMeters", new object[] {
                        lastReceived});
            return ((propaneMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPropaneMetersAsync(string lastReceived) {
            this.GetAllPropaneMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllPropaneMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllPropaneMetersOperationCompleted == null)) {
                this.GetAllPropaneMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropaneMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllPropaneMeters", new object[] {
                        lastReceived}, this.GetAllPropaneMetersOperationCompleted, userState);
        }
        
        private void OnGetAllPropaneMetersOperationCompleted(object arg) {
            if ((this.GetAllPropaneMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPropaneMetersCompleted(this, new GetAllPropaneMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllElectricServiceLocations", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public electricServiceLocation[] GetAllElectricServiceLocations(string lastReceived) {
            object[] results = this.Invoke("GetAllElectricServiceLocations", new object[] {
                        lastReceived});
            return ((electricServiceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllElectricServiceLocationsAsync(string lastReceived) {
            this.GetAllElectricServiceLocationsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllElectricServiceLocationsAsync(string lastReceived, object userState) {
            if ((this.GetAllElectricServiceLocationsOperationCompleted == null)) {
                this.GetAllElectricServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllElectricServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetAllElectricServiceLocations", new object[] {
                        lastReceived}, this.GetAllElectricServiceLocationsOperationCompleted, userState);
        }
        
        private void OnGetAllElectricServiceLocationsOperationCompleted(object arg) {
            if ((this.GetAllElectricServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllElectricServiceLocationsCompleted(this, new GetAllElectricServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllGasServiceLocations", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public gasServiceLocation[] GetAllGasServiceLocations(string lastReceived) {
            object[] results = this.Invoke("GetAllGasServiceLocations", new object[] {
                        lastReceived});
            return ((gasServiceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGasServiceLocationsAsync(string lastReceived) {
            this.GetAllGasServiceLocationsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllGasServiceLocationsAsync(string lastReceived, object userState) {
            if ((this.GetAllGasServiceLocationsOperationCompleted == null)) {
                this.GetAllGasServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGasServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetAllGasServiceLocations", new object[] {
                        lastReceived}, this.GetAllGasServiceLocationsOperationCompleted, userState);
        }
        
        private void OnGetAllGasServiceLocationsOperationCompleted(object arg) {
            if ((this.GetAllGasServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGasServiceLocationsCompleted(this, new GetAllGasServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllWaterServiceLocations", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public waterServiceLocation[] GetAllWaterServiceLocations(string lastReceived) {
            object[] results = this.Invoke("GetAllWaterServiceLocations", new object[] {
                        lastReceived});
            return ((waterServiceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllWaterServiceLocationsAsync(string lastReceived) {
            this.GetAllWaterServiceLocationsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllWaterServiceLocationsAsync(string lastReceived, object userState) {
            if ((this.GetAllWaterServiceLocationsOperationCompleted == null)) {
                this.GetAllWaterServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllWaterServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetAllWaterServiceLocations", new object[] {
                        lastReceived}, this.GetAllWaterServiceLocationsOperationCompleted, userState);
        }
        
        private void OnGetAllWaterServiceLocationsOperationCompleted(object arg) {
            if ((this.GetAllWaterServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllWaterServiceLocationsCompleted(this, new GetAllWaterServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllPropaneServiceLocations", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public propaneServiceLocation[] GetAllPropaneServiceLocations(string lastReceived) {
            object[] results = this.Invoke("GetAllPropaneServiceLocations", new object[] {
                        lastReceived});
            return ((propaneServiceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPropaneServiceLocationsAsync(string lastReceived) {
            this.GetAllPropaneServiceLocationsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllPropaneServiceLocationsAsync(string lastReceived, object userState) {
            if ((this.GetAllPropaneServiceLocationsOperationCompleted == null)) {
                this.GetAllPropaneServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropaneServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetAllPropaneServiceLocations", new object[] {
                        lastReceived}, this.GetAllPropaneServiceLocationsOperationCompleted, userState);
        }
        
        private void OnGetAllPropaneServiceLocationsOperationCompleted(object arg) {
            if ((this.GetAllPropaneServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPropaneServiceLocationsCompleted(this, new GetAllPropaneServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetElectricMeterByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetElectricMeterByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetElectricMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetElectricMeterByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetElectricMeterByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetElectricMeterByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetElectricMeterByAccountNumberOperationCompleted == null)) {
                this.GetElectricMeterByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetElectricMeterByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetElectricMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetElectricMeterByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetElectricMeterByAccountNumberOperationCompleted(object arg) {
            if ((this.GetElectricMeterByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetElectricMeterByAccountNumberCompleted(this, new GetElectricMeterByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetGasMeterByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetGasMeterByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetGasMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetGasMeterByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetGasMeterByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetGasMeterByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetGasMeterByAccountNumberOperationCompleted == null)) {
                this.GetGasMeterByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGasMeterByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetGasMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetGasMeterByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetGasMeterByAccountNumberOperationCompleted(object arg) {
            if ((this.GetGasMeterByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGasMeterByAccountNumberCompleted(this, new GetGasMeterByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetWaterMeterByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetWaterMeterByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetWaterMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaterMeterByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetWaterMeterByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetWaterMeterByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetWaterMeterByAccountNumberOperationCompleted == null)) {
                this.GetWaterMeterByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaterMeterByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetWaterMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetWaterMeterByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetWaterMeterByAccountNumberOperationCompleted(object arg) {
            if ((this.GetWaterMeterByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaterMeterByAccountNumberCompleted(this, new GetWaterMeterByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetPropaneMeterByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetPropaneMeterByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetPropaneMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropaneMeterByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetPropaneMeterByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetPropaneMeterByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetPropaneMeterByAccountNumberOperationCompleted == null)) {
                this.GetPropaneMeterByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropaneMeterByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetPropaneMeterByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetPropaneMeterByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetPropaneMeterByAccountNumberOperationCompleted(object arg) {
            if ((this.GetPropaneMeterByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropaneMeterByAccountNumberCompleted(this, new GetPropaneMeterByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllCustomersByServiceType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetAllCustomersByServiceType(string serviceType, string lastReceived) {
            object[] results = this.Invoke("GetAllCustomersByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomersByServiceTypeAsync(string serviceType, string lastReceived) {
            this.GetAllCustomersByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllCustomersByServiceTypeAsync(string serviceType, string lastReceived, object userState) {
            if ((this.GetAllCustomersByServiceTypeOperationCompleted == null)) {
                this.GetAllCustomersByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomersByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomersByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetAllCustomersByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAllCustomersByServiceTypeOperationCompleted(object arg) {
            if ((this.GetAllCustomersByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomersByServiceTypeCompleted(this, new GetAllCustomersByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetCustomerByMeterNumberAndServiceType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer GetCustomerByMeterNumberAndServiceType(string meterNo, string serviceType) {
            object[] results = this.Invoke("GetCustomerByMeterNumberAndServiceType", new object[] {
                        meterNo,
                        serviceType});
            return ((customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByMeterNumberAndServiceTypeAsync(string meterNo, string serviceType) {
            this.GetCustomerByMeterNumberAndServiceTypeAsync(meterNo, serviceType, null);
        }
        
        /// <remarks/>
        public void GetCustomerByMeterNumberAndServiceTypeAsync(string meterNo, string serviceType, object userState) {
            if ((this.GetCustomerByMeterNumberAndServiceTypeOperationCompleted == null)) {
                this.GetCustomerByMeterNumberAndServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByMeterNumberAndServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByMeterNumberAndServiceType", new object[] {
                        meterNo,
                        serviceType}, this.GetCustomerByMeterNumberAndServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetCustomerByMeterNumberAndServiceTypeOperationCompleted(object arg) {
            if ((this.GetCustomerByMeterNumberAndServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByMeterNumberAndServiceTypeCompleted(this, new GetCustomerByMeterNumberAndServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllMetersByServiceType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetAllMetersByServiceType(string serviceType, string lastReceived) {
            object[] results = this.Invoke("GetAllMetersByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMetersByServiceTypeAsync(string serviceType, string lastReceived) {
            this.GetAllMetersByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllMetersByServiceTypeAsync(string serviceType, string lastReceived, object userState) {
            if ((this.GetAllMetersByServiceTypeOperationCompleted == null)) {
                this.GetAllMetersByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMetersByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllMetersByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetAllMetersByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAllMetersByServiceTypeOperationCompleted(object arg) {
            if ((this.GetAllMetersByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMetersByServiceTypeCompleted(this, new GetAllMetersByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllServiceLocationsByServiceType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocations GetAllServiceLocationsByServiceType(string serviceType, string lastReceived) {
            object[] results = this.Invoke("GetAllServiceLocationsByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((serviceLocations)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllServiceLocationsByServiceTypeAsync(string serviceType, string lastReceived) {
            this.GetAllServiceLocationsByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllServiceLocationsByServiceTypeAsync(string serviceType, string lastReceived, object userState) {
            if ((this.GetAllServiceLocationsByServiceTypeOperationCompleted == null)) {
                this.GetAllServiceLocationsByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllServiceLocationsByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllServiceLocationsByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetAllServiceLocationsByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAllServiceLocationsByServiceTypeOperationCompleted(object arg) {
            if ((this.GetAllServiceLocationsByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllServiceLocationsByServiceTypeCompleted(this, new GetAllServiceLocationsByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterByAccountNumberAndServiceType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMeterByAccountNumberAndServiceType(string accountNumber, string serviceType, string lastReceived) {
            object[] results = this.Invoke("GetMeterByAccountNumberAndServiceType", new object[] {
                        accountNumber,
                        serviceType,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByAccountNumberAndServiceTypeAsync(string accountNumber, string serviceType, string lastReceived) {
            this.GetMeterByAccountNumberAndServiceTypeAsync(accountNumber, serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetMeterByAccountNumberAndServiceTypeAsync(string accountNumber, string serviceType, string lastReceived, object userState) {
            if ((this.GetMeterByAccountNumberAndServiceTypeOperationCompleted == null)) {
                this.GetMeterByAccountNumberAndServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByAccountNumberAndServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetMeterByAccountNumberAndServiceType", new object[] {
                        accountNumber,
                        serviceType,
                        lastReceived}, this.GetMeterByAccountNumberAndServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetMeterByAccountNumberAndServiceTypeOperationCompleted(object arg) {
            if ((this.GetMeterByAccountNumberAndServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByAccountNumberAndServiceTypeCompleted(this, new GetMeterByAccountNumberAndServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllCustomers", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetAllCustomers(string lastReceived) {
            object[] results = this.Invoke("GetAllCustomers", new object[] {
                        lastReceived});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomersAsync(string lastReceived) {
            this.GetAllCustomersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllCustomersAsync(string lastReceived, object userState) {
            if ((this.GetAllCustomersOperationCompleted == null)) {
                this.GetAllCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomersOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomers", new object[] {
                        lastReceived}, this.GetAllCustomersOperationCompleted, userState);
        }
        
        private void OnGetAllCustomersOperationCompleted(object arg) {
            if ((this.GetAllCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomersCompleted(this, new GetAllCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetModifiedCustomers", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetModifiedCustomers(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedCustomers", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedCustomersAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedCustomersAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedCustomersAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedCustomersOperationCompleted == null)) {
                this.GetModifiedCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedCustomersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedCustomers", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedCustomersOperationCompleted, userState);
        }
        
        private void OnGetModifiedCustomersOperationCompleted(object arg) {
            if ((this.GetModifiedCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedCustomersCompleted(this, new GetModifiedCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetModifiedServiceLocations", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetModifiedServiceLocations(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedServiceLocations", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedServiceLocationsAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedServiceLocationsAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedServiceLocationsAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedServiceLocationsOperationCompleted == null)) {
                this.GetModifiedServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetModifiedServiceLocations", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedServiceLocationsOperationCompleted, userState);
        }
        
        private void OnGetModifiedServiceLocationsOperationCompleted(object arg) {
            if ((this.GetModifiedServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedServiceLocationsCompleted(this, new GetModifiedServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetCustomerByCustId", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer GetCustomerByCustId(string custId) {
            object[] results = this.Invoke("GetCustomerByCustId", new object[] {
                        custId});
            return ((customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByCustIdAsync(string custId) {
            this.GetCustomerByCustIdAsync(custId, null);
        }
        
        /// <remarks/>
        public void GetCustomerByCustIdAsync(string custId, object userState) {
            if ((this.GetCustomerByCustIdOperationCompleted == null)) {
                this.GetCustomerByCustIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByCustIdOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByCustId", new object[] {
                        custId}, this.GetCustomerByCustIdOperationCompleted, userState);
        }
        
        private void OnGetCustomerByCustIdOperationCompleted(object arg) {
            if ((this.GetCustomerByCustIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByCustIdCompleted(this, new GetCustomerByCustIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetCustomerByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer GetCustomerByMeterNo(string meterNo) {
            object[] results = this.Invoke("GetCustomerByMeterNo", new object[] {
                        meterNo});
            return ((customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByMeterNoAsync(string meterNo) {
            this.GetCustomerByMeterNoAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetCustomerByMeterNoAsync(string meterNo, object userState) {
            if ((this.GetCustomerByMeterNoOperationCompleted == null)) {
                this.GetCustomerByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByMeterNo", new object[] {
                        meterNo}, this.GetCustomerByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetCustomerByMeterNoOperationCompleted(object arg) {
            if ((this.GetCustomerByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByMeterNoCompleted(this, new GetCustomerByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetCustomerByName", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetCustomerByName(string firstName, string lastName) {
            object[] results = this.Invoke("GetCustomerByName", new object[] {
                        firstName,
                        lastName});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string firstName, string lastName) {
            this.GetCustomerByNameAsync(firstName, lastName, null);
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string firstName, string lastName, object userState) {
            if ((this.GetCustomerByNameOperationCompleted == null)) {
                this.GetCustomerByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByNameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByName", new object[] {
                        firstName,
                        lastName}, this.GetCustomerByNameOperationCompleted, userState);
        }
        
        private void OnGetCustomerByNameOperationCompleted(object arg) {
            if ((this.GetCustomerByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByNameCompleted(this, new GetCustomerByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetCustomerByDBAName", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer GetCustomerByDBAName(string dBAName) {
            object[] results = this.Invoke("GetCustomerByDBAName", new object[] {
                        dBAName});
            return ((customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByDBANameAsync(string dBAName) {
            this.GetCustomerByDBANameAsync(dBAName, null);
        }
        
        /// <remarks/>
        public void GetCustomerByDBANameAsync(string dBAName, object userState) {
            if ((this.GetCustomerByDBANameOperationCompleted == null)) {
                this.GetCustomerByDBANameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByDBANameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByDBAName", new object[] {
                        dBAName}, this.GetCustomerByDBANameOperationCompleted, userState);
        }
        
        private void OnGetCustomerByDBANameOperationCompleted(object arg) {
            if ((this.GetCustomerByDBANameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByDBANameCompleted(this, new GetCustomerByDBANameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetDeviceTreeConnectivity", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetDeviceTreeConnectivity(string name, string noun) {
            object[] results = this.Invoke("GetDeviceTreeConnectivity", new object[] {
                        name,
                        noun});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceTreeConnectivityAsync(string name, string noun) {
            this.GetDeviceTreeConnectivityAsync(name, noun, null);
        }
        
        /// <remarks/>
        public void GetDeviceTreeConnectivityAsync(string name, string noun, object userState) {
            if ((this.GetDeviceTreeConnectivityOperationCompleted == null)) {
                this.GetDeviceTreeConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceTreeConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetDeviceTreeConnectivity", new object[] {
                        name,
                        noun}, this.GetDeviceTreeConnectivityOperationCompleted, userState);
        }
        
        private void OnGetDeviceTreeConnectivityOperationCompleted(object arg) {
            if ((this.GetDeviceTreeConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceTreeConnectivityCompleted(this, new GetDeviceTreeConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterConnectivityBySubstation", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetMeterConnectivityBySubstation(string substationName) {
            object[] results = this.Invoke("GetMeterConnectivityBySubstation", new object[] {
                        substationName});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterConnectivityBySubstationAsync(string substationName) {
            this.GetMeterConnectivityBySubstationAsync(substationName, null);
        }
        
        /// <remarks/>
        public void GetMeterConnectivityBySubstationAsync(string substationName, object userState) {
            if ((this.GetMeterConnectivityBySubstationOperationCompleted == null)) {
                this.GetMeterConnectivityBySubstationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterConnectivityBySubstationOperationCompleted);
            }
            this.InvokeAsync("GetMeterConnectivityBySubstation", new object[] {
                        substationName}, this.GetMeterConnectivityBySubstationOperationCompleted, userState);
        }
        
        private void OnGetMeterConnectivityBySubstationOperationCompleted(object arg) {
            if ((this.GetMeterConnectivityBySubstationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterConnectivityBySubstationCompleted(this, new GetMeterConnectivityBySubstationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetEndDeviceShipmentByShipmentID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment GetEndDeviceShipmentByShipmentID(string shipmentID) {
            object[] results = this.Invoke("GetEndDeviceShipmentByShipmentID", new object[] {
                        shipmentID});
            return ((endDeviceShipment)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByShipmentIDAsync(string shipmentID) {
            this.GetEndDeviceShipmentByShipmentIDAsync(shipmentID, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByShipmentIDAsync(string shipmentID, object userState) {
            if ((this.GetEndDeviceShipmentByShipmentIDOperationCompleted == null)) {
                this.GetEndDeviceShipmentByShipmentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentByShipmentIDOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentByShipmentID", new object[] {
                        shipmentID}, this.GetEndDeviceShipmentByShipmentIDOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentByShipmentIDOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentByShipmentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentByShipmentIDCompleted(this, new GetEndDeviceShipmentByShipmentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetEndDeviceShipmentsByDateRange", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment[] GetEndDeviceShipmentsByDateRange(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetEndDeviceShipmentsByDateRange", new object[] {
                        startDate,
                        endDate});
            return ((endDeviceShipment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetEndDeviceShipmentsByDateRangeAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetEndDeviceShipmentsByDateRangeOperationCompleted == null)) {
                this.GetEndDeviceShipmentsByDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentsByDateRangeOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentsByDateRange", new object[] {
                        startDate,
                        endDate}, this.GetEndDeviceShipmentsByDateRangeOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentsByDateRangeOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentsByDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentsByDateRangeCompleted(this, new GetEndDeviceShipmentsByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetEndDeviceShipmentByMeterID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment GetEndDeviceShipmentByMeterID(string meterID) {
            object[] results = this.Invoke("GetEndDeviceShipmentByMeterID", new object[] {
                        meterID});
            return ((endDeviceShipment)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByMeterIDAsync(string meterID) {
            this.GetEndDeviceShipmentByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByMeterIDAsync(string meterID, object userState) {
            if ((this.GetEndDeviceShipmentByMeterIDOperationCompleted == null)) {
                this.GetEndDeviceShipmentByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentByMeterID", new object[] {
                        meterID}, this.GetEndDeviceShipmentByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentByMeterIDOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentByMeterIDCompleted(this, new GetEndDeviceShipmentByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetEndDeviceShipmentByTransponderID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment GetEndDeviceShipmentByTransponderID(string transponderID) {
            object[] results = this.Invoke("GetEndDeviceShipmentByTransponderID", new object[] {
                        transponderID});
            return ((endDeviceShipment)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByTransponderIDAsync(string transponderID) {
            this.GetEndDeviceShipmentByTransponderIDAsync(transponderID, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByTransponderIDAsync(string transponderID, object userState) {
            if ((this.GetEndDeviceShipmentByTransponderIDOperationCompleted == null)) {
                this.GetEndDeviceShipmentByTransponderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentByTransponderIDOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentByTransponderID", new object[] {
                        transponderID}, this.GetEndDeviceShipmentByTransponderIDOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentByTransponderIDOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentByTransponderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentByTransponderIDCompleted(this, new GetEndDeviceShipmentByTransponderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLPDataByMeterNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public profileObject[] GetLPDataByMeterNumber(string meterNo) {
            object[] results = this.Invoke("GetLPDataByMeterNumber", new object[] {
                        meterNo});
            return ((profileObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPDataByMeterNumberAsync(string meterNo) {
            this.GetLPDataByMeterNumberAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetLPDataByMeterNumberAsync(string meterNo, object userState) {
            if ((this.GetLPDataByMeterNumberOperationCompleted == null)) {
                this.GetLPDataByMeterNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPDataByMeterNumberOperationCompleted);
            }
            this.InvokeAsync("GetLPDataByMeterNumber", new object[] {
                        meterNo}, this.GetLPDataByMeterNumberOperationCompleted, userState);
        }
        
        private void OnGetLPDataByMeterNumberOperationCompleted(object arg) {
            if ((this.GetLPDataByMeterNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPDataByMeterNumberCompleted(this, new GetLPDataByMeterNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterHistoryByMeterID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterHistoryEvent[] GetMeterHistoryByMeterID(string meterID, serviceType serviceType) {
            object[] results = this.Invoke("GetMeterHistoryByMeterID", new object[] {
                        meterID,
                        serviceType});
            return ((meterHistoryEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterHistoryByMeterIDAsync(string meterID, serviceType serviceType) {
            this.GetMeterHistoryByMeterIDAsync(meterID, serviceType, null);
        }
        
        /// <remarks/>
        public void GetMeterHistoryByMeterIDAsync(string meterID, serviceType serviceType, object userState) {
            if ((this.GetMeterHistoryByMeterIDOperationCompleted == null)) {
                this.GetMeterHistoryByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterHistoryByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterHistoryByMeterID", new object[] {
                        meterID,
                        serviceType}, this.GetMeterHistoryByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetMeterHistoryByMeterIDOperationCompleted(object arg) {
            if ((this.GetMeterHistoryByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterHistoryByMeterIDCompleted(this, new GetMeterHistoryByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterByMeterId", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter GetMeterByMeterId(string meterID) {
            object[] results = this.Invoke("GetMeterByMeterId", new object[] {
                        meterID});
            return ((meter)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByMeterIdAsync(string meterID) {
            this.GetMeterByMeterIdAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetMeterByMeterIdAsync(string meterID, object userState) {
            if ((this.GetMeterByMeterIdOperationCompleted == null)) {
                this.GetMeterByMeterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByMeterIdOperationCompleted);
            }
            this.InvokeAsync("GetMeterByMeterId", new object[] {
                        meterID}, this.GetMeterByMeterIdOperationCompleted, userState);
        }
        
        private void OnGetMeterByMeterIdOperationCompleted(object arg) {
            if ((this.GetMeterByMeterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByMeterIdCompleted(this, new GetMeterByMeterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter GetMeterByMeterNo(string meterNo) {
            object[] results = this.Invoke("GetMeterByMeterNo", new object[] {
                        meterNo});
            return ((meter)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByMeterNoAsync(string meterNo) {
            this.GetMeterByMeterNoAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetMeterByMeterNoAsync(string meterNo, object userState) {
            if ((this.GetMeterByMeterNoOperationCompleted == null)) {
                this.GetMeterByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetMeterByMeterNo", new object[] {
                        meterNo}, this.GetMeterByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetMeterByMeterNoOperationCompleted(object arg) {
            if ((this.GetMeterByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByMeterNoCompleted(this, new GetMeterByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterByServLoc", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMeterByServLoc(string servLoc) {
            object[] results = this.Invoke("GetMeterByServLoc", new object[] {
                        servLoc});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByServLocAsync(string servLoc) {
            this.GetMeterByServLocAsync(servLoc, null);
        }
        
        /// <remarks/>
        public void GetMeterByServLocAsync(string servLoc, object userState) {
            if ((this.GetMeterByServLocOperationCompleted == null)) {
                this.GetMeterByServLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByServLocOperationCompleted);
            }
            this.InvokeAsync("GetMeterByServLoc", new object[] {
                        servLoc}, this.GetMeterByServLocOperationCompleted, userState);
        }
        
        private void OnGetMeterByServLocOperationCompleted(object arg) {
            if ((this.GetMeterByServLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByServLocCompleted(this, new GetMeterByServLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMeterByAccountNumber(string accountNumber) {
            object[] results = this.Invoke("GetMeterByAccountNumber", new object[] {
                        accountNumber});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByAccountNumberAsync(string accountNumber) {
            this.GetMeterByAccountNumberAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetMeterByAccountNumberAsync(string accountNumber, object userState) {
            if ((this.GetMeterByAccountNumberOperationCompleted == null)) {
                this.GetMeterByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetMeterByAccountNumber", new object[] {
                        accountNumber}, this.GetMeterByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetMeterByAccountNumberOperationCompleted(object arg) {
            if ((this.GetMeterByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByAccountNumberCompleted(this, new GetMeterByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterByCustID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMeterByCustID(string custID) {
            object[] results = this.Invoke("GetMeterByCustID", new object[] {
                        custID});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByCustIDAsync(string custID) {
            this.GetMeterByCustIDAsync(custID, null);
        }
        
        /// <remarks/>
        public void GetMeterByCustIDAsync(string custID, object userState) {
            if ((this.GetMeterByCustIDOperationCompleted == null)) {
                this.GetMeterByCustIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByCustIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterByCustID", new object[] {
                        custID}, this.GetMeterByCustIDOperationCompleted, userState);
        }
        
        private void OnGetMeterByCustIDOperationCompleted(object arg) {
            if ((this.GetMeterByCustIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByCustIDCompleted(this, new GetMeterByCustIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterByAMRType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMeterByAMRType(string aMRType, string lastReceived) {
            object[] results = this.Invoke("GetMeterByAMRType", new object[] {
                        aMRType,
                        lastReceived});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByAMRTypeAsync(string aMRType, string lastReceived) {
            this.GetMeterByAMRTypeAsync(aMRType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetMeterByAMRTypeAsync(string aMRType, string lastReceived, object userState) {
            if ((this.GetMeterByAMRTypeOperationCompleted == null)) {
                this.GetMeterByAMRTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByAMRTypeOperationCompleted);
            }
            this.InvokeAsync("GetMeterByAMRType", new object[] {
                        aMRType,
                        lastReceived}, this.GetMeterByAMRTypeOperationCompleted, userState);
        }
        
        private void OnGetMeterByAMRTypeOperationCompleted(object arg) {
            if ((this.GetMeterByAMRTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByAMRTypeCompleted(this, new GetMeterByAMRTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterGroupNames", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMeterGroupNames() {
            object[] results = this.Invoke("GetMeterGroupNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesAsync() {
            this.GetMeterGroupNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesAsync(object userState) {
            if ((this.GetMeterGroupNamesOperationCompleted == null)) {
                this.GetMeterGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterGroupNamesOperationCompleted);
            }
            this.InvokeAsync("GetMeterGroupNames", new object[0], this.GetMeterGroupNamesOperationCompleted, userState);
        }
        
        private void OnGetMeterGroupNamesOperationCompleted(object arg) {
            if ((this.GetMeterGroupNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterGroupNamesCompleted(this, new GetMeterGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterGroupNamesByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMeterGroupNamesByMeterNo(string meterNo) {
            object[] results = this.Invoke("GetMeterGroupNamesByMeterNo", new object[] {
                        meterNo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesByMeterNoAsync(string meterNo) {
            this.GetMeterGroupNamesByMeterNoAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesByMeterNoAsync(string meterNo, object userState) {
            if ((this.GetMeterGroupNamesByMeterNoOperationCompleted == null)) {
                this.GetMeterGroupNamesByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterGroupNamesByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetMeterGroupNamesByMeterNo", new object[] {
                        meterNo}, this.GetMeterGroupNamesByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetMeterGroupNamesByMeterNoOperationCompleted(object arg) {
            if ((this.GetMeterGroupNamesByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterGroupNamesByMeterNoCompleted(this, new GetMeterGroupNamesByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterGroupMembers", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMeterGroupMembers(string meterGroupName) {
            object[] results = this.Invoke("GetMeterGroupMembers", new object[] {
                        meterGroupName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterGroupMembersAsync(string meterGroupName) {
            this.GetMeterGroupMembersAsync(meterGroupName, null);
        }
        
        /// <remarks/>
        public void GetMeterGroupMembersAsync(string meterGroupName, object userState) {
            if ((this.GetMeterGroupMembersOperationCompleted == null)) {
                this.GetMeterGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetMeterGroupMembers", new object[] {
                        meterGroupName}, this.GetMeterGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetMeterGroupMembersOperationCompleted(object arg) {
            if ((this.GetMeterGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterGroupMembersCompleted(this, new GetMeterGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetModifiedMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetModifiedMeters(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedMeters", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedMetersAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedMetersAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedMetersAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedMetersOperationCompleted == null)) {
                this.GetModifiedMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedMetersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedMeters", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedMetersOperationCompleted, userState);
        }
        
        private void OnGetModifiedMetersOperationCompleted(object arg) {
            if ((this.GetModifiedMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedMetersCompleted(this, new GetModifiedMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByServiceStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByServiceStatus(string servStatus, string lastReceived) {
            object[] results = this.Invoke("GetServiceLocationByServiceStatus", new object[] {
                        servStatus,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceStatusAsync(string servStatus, string lastReceived) {
            this.GetServiceLocationByServiceStatusAsync(servStatus, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceStatusAsync(string servStatus, string lastReceived, object userState) {
            if ((this.GetServiceLocationByServiceStatusOperationCompleted == null)) {
                this.GetServiceLocationByServiceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByServiceStatusOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByServiceStatus", new object[] {
                        servStatus,
                        lastReceived}, this.GetServiceLocationByServiceStatusOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByServiceStatusOperationCompleted(object arg) {
            if ((this.GetServiceLocationByServiceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByServiceStatusCompleted(this, new GetServiceLocationByServiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByServLoc", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation GetServiceLocationByServLoc(string servLocId) {
            object[] results = this.Invoke("GetServiceLocationByServLoc", new object[] {
                        servLocId});
            return ((serviceLocation)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByServLocAsync(string servLocId) {
            this.GetServiceLocationByServLocAsync(servLocId, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByServLocAsync(string servLocId, object userState) {
            if ((this.GetServiceLocationByServLocOperationCompleted == null)) {
                this.GetServiceLocationByServLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByServLocOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByServLoc", new object[] {
                        servLocId}, this.GetServiceLocationByServLocOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByServLocOperationCompleted(object arg) {
            if ((this.GetServiceLocationByServLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByServLocCompleted(this, new GetServiceLocationByServLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByCustId", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByCustId(string custId) {
            object[] results = this.Invoke("GetServiceLocationByCustId", new object[] {
                        custId});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByCustIdAsync(string custId) {
            this.GetServiceLocationByCustIdAsync(custId, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByCustIdAsync(string custId, object userState) {
            if ((this.GetServiceLocationByCustIdOperationCompleted == null)) {
                this.GetServiceLocationByCustIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByCustIdOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByCustId", new object[] {
                        custId}, this.GetServiceLocationByCustIdOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByCustIdOperationCompleted(object arg) {
            if ((this.GetServiceLocationByCustIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByCustIdCompleted(this, new GetServiceLocationByCustIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation GetServiceLocationByMeterNo(string meterNo) {
            object[] results = this.Invoke("GetServiceLocationByMeterNo", new object[] {
                        meterNo});
            return ((serviceLocation)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByMeterNoAsync(string meterNo) {
            this.GetServiceLocationByMeterNoAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByMeterNoAsync(string meterNo, object userState) {
            if ((this.GetServiceLocationByMeterNoOperationCompleted == null)) {
                this.GetServiceLocationByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByMeterNo", new object[] {
                        meterNo}, this.GetServiceLocationByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByMeterNoOperationCompleted(object arg) {
            if ((this.GetServiceLocationByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByMeterNoCompleted(this, new GetServiceLocationByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByAccountNumber(string accountNumber) {
            object[] results = this.Invoke("GetServiceLocationByAccountNumber", new object[] {
                        accountNumber});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByAccountNumberAsync(string accountNumber) {
            this.GetServiceLocationByAccountNumberAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByAccountNumberAsync(string accountNumber, object userState) {
            if ((this.GetServiceLocationByAccountNumberOperationCompleted == null)) {
                this.GetServiceLocationByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByAccountNumber", new object[] {
                        accountNumber}, this.GetServiceLocationByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByAccountNumberOperationCompleted(object arg) {
            if ((this.GetServiceLocationByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByAccountNumberCompleted(this, new GetServiceLocationByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByGridLocation", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByGridLocation(string gridLocation) {
            object[] results = this.Invoke("GetServiceLocationByGridLocation", new object[] {
                        gridLocation});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByGridLocationAsync(string gridLocation) {
            this.GetServiceLocationByGridLocationAsync(gridLocation, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByGridLocationAsync(string gridLocation, object userState) {
            if ((this.GetServiceLocationByGridLocationOperationCompleted == null)) {
                this.GetServiceLocationByGridLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByGridLocationOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByGridLocation", new object[] {
                        gridLocation}, this.GetServiceLocationByGridLocationOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByGridLocationOperationCompleted(object arg) {
            if ((this.GetServiceLocationByGridLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByGridLocationCompleted(this, new GetServiceLocationByGridLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByPhaseCode", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByPhaseCode(phaseCd phaseCode, string lastReceived) {
            object[] results = this.Invoke("GetServiceLocationByPhaseCode", new object[] {
                        phaseCode,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByPhaseCodeAsync(phaseCd phaseCode, string lastReceived) {
            this.GetServiceLocationByPhaseCodeAsync(phaseCode, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByPhaseCodeAsync(phaseCd phaseCode, string lastReceived, object userState) {
            if ((this.GetServiceLocationByPhaseCodeOperationCompleted == null)) {
                this.GetServiceLocationByPhaseCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByPhaseCodeOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByPhaseCode", new object[] {
                        phaseCode,
                        lastReceived}, this.GetServiceLocationByPhaseCodeOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByPhaseCodeOperationCompleted(object arg) {
            if ((this.GetServiceLocationByPhaseCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByPhaseCodeCompleted(this, new GetServiceLocationByPhaseCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByLoadGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByLoadGroup(string loadGroup, string lastReceived) {
            object[] results = this.Invoke("GetServiceLocationByLoadGroup", new object[] {
                        loadGroup,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByLoadGroupAsync(string loadGroup, string lastReceived) {
            this.GetServiceLocationByLoadGroupAsync(loadGroup, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByLoadGroupAsync(string loadGroup, string lastReceived, object userState) {
            if ((this.GetServiceLocationByLoadGroupOperationCompleted == null)) {
                this.GetServiceLocationByLoadGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByLoadGroupOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByLoadGroup", new object[] {
                        loadGroup,
                        lastReceived}, this.GetServiceLocationByLoadGroupOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByLoadGroupOperationCompleted(object arg) {
            if ((this.GetServiceLocationByLoadGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByLoadGroupCompleted(this, new GetServiceLocationByLoadGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByServiceType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByServiceType(string serviceType, string lastReceived) {
            object[] results = this.Invoke("GetServiceLocationByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceTypeAsync(string serviceType, string lastReceived) {
            this.GetServiceLocationByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceTypeAsync(string serviceType, string lastReceived, object userState) {
            if ((this.GetServiceLocationByServiceTypeOperationCompleted == null)) {
                this.GetServiceLocationByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetServiceLocationByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByServiceTypeOperationCompleted(object arg) {
            if ((this.GetServiceLocationByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByServiceTypeCompleted(this, new GetServiceLocationByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetServiceLocationByShutOffDate", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByShutOffDate(System.DateTime shutOffDate) {
            object[] results = this.Invoke("GetServiceLocationByShutOffDate", new object[] {
                        shutOffDate});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByShutOffDateAsync(System.DateTime shutOffDate) {
            this.GetServiceLocationByShutOffDateAsync(shutOffDate, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByShutOffDateAsync(System.DateTime shutOffDate, object userState) {
            if ((this.GetServiceLocationByShutOffDateOperationCompleted == null)) {
                this.GetServiceLocationByShutOffDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByShutOffDateOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByShutOffDate", new object[] {
                        shutOffDate}, this.GetServiceLocationByShutOffDateOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByShutOffDateOperationCompleted(object arg) {
            if ((this.GetServiceLocationByShutOffDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByShutOffDateCompleted(this, new GetServiceLocationByShutOffDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMetersByEALocation", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMetersByEALocation(string eaLoc) {
            object[] results = this.Invoke("GetMetersByEALocation", new object[] {
                        eaLoc});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByEALocationAsync(string eaLoc) {
            this.GetMetersByEALocationAsync(eaLoc, null);
        }
        
        /// <remarks/>
        public void GetMetersByEALocationAsync(string eaLoc, object userState) {
            if ((this.GetMetersByEALocationOperationCompleted == null)) {
                this.GetMetersByEALocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByEALocationOperationCompleted);
            }
            this.InvokeAsync("GetMetersByEALocation", new object[] {
                        eaLoc}, this.GetMetersByEALocationOperationCompleted, userState);
        }
        
        private void OnGetMetersByEALocationOperationCompleted(object arg) {
            if ((this.GetMetersByEALocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByEALocationCompleted(this, new GetMetersByEALocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMetersByFacilityID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMetersByFacilityID(string facilityID) {
            object[] results = this.Invoke("GetMetersByFacilityID", new object[] {
                        facilityID});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByFacilityIDAsync(string facilityID) {
            this.GetMetersByFacilityIDAsync(facilityID, null);
        }
        
        /// <remarks/>
        public void GetMetersByFacilityIDAsync(string facilityID, object userState) {
            if ((this.GetMetersByFacilityIDOperationCompleted == null)) {
                this.GetMetersByFacilityIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByFacilityIDOperationCompleted);
            }
            this.InvokeAsync("GetMetersByFacilityID", new object[] {
                        facilityID}, this.GetMetersByFacilityIDOperationCompleted, userState);
        }
        
        private void OnGetMetersByFacilityIDOperationCompleted(object arg) {
            if ((this.GetMetersByFacilityIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByFacilityIDCompleted(this, new GetMetersByFacilityIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMetersBySiteID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMetersBySiteID(string siteID) {
            object[] results = this.Invoke("GetMetersBySiteID", new object[] {
                        siteID});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersBySiteIDAsync(string siteID) {
            this.GetMetersBySiteIDAsync(siteID, null);
        }
        
        /// <remarks/>
        public void GetMetersBySiteIDAsync(string siteID, object userState) {
            if ((this.GetMetersBySiteIDOperationCompleted == null)) {
                this.GetMetersBySiteIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersBySiteIDOperationCompleted);
            }
            this.InvokeAsync("GetMetersBySiteID", new object[] {
                        siteID}, this.GetMetersBySiteIDOperationCompleted, userState);
        }
        
        private void OnGetMetersBySiteIDOperationCompleted(object arg) {
            if ((this.GetMetersBySiteIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersBySiteIDCompleted(this, new GetMetersBySiteIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMetersByCustomerName", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMetersByCustomerName(string firstName, string lastName) {
            object[] results = this.Invoke("GetMetersByCustomerName", new object[] {
                        firstName,
                        lastName});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByCustomerNameAsync(string firstName, string lastName) {
            this.GetMetersByCustomerNameAsync(firstName, lastName, null);
        }
        
        /// <remarks/>
        public void GetMetersByCustomerNameAsync(string firstName, string lastName, object userState) {
            if ((this.GetMetersByCustomerNameOperationCompleted == null)) {
                this.GetMetersByCustomerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByCustomerNameOperationCompleted);
            }
            this.InvokeAsync("GetMetersByCustomerName", new object[] {
                        firstName,
                        lastName}, this.GetMetersByCustomerNameOperationCompleted, userState);
        }
        
        private void OnGetMetersByCustomerNameOperationCompleted(object arg) {
            if ((this.GetMetersByCustomerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByCustomerNameCompleted(this, new GetMetersByCustomerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMetersByHomePhone", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMetersByHomePhone(string homeAC, string homePhone) {
            object[] results = this.Invoke("GetMetersByHomePhone", new object[] {
                        homeAC,
                        homePhone});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByHomePhoneAsync(string homeAC, string homePhone) {
            this.GetMetersByHomePhoneAsync(homeAC, homePhone, null);
        }
        
        /// <remarks/>
        public void GetMetersByHomePhoneAsync(string homeAC, string homePhone, object userState) {
            if ((this.GetMetersByHomePhoneOperationCompleted == null)) {
                this.GetMetersByHomePhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByHomePhoneOperationCompleted);
            }
            this.InvokeAsync("GetMetersByHomePhone", new object[] {
                        homeAC,
                        homePhone}, this.GetMetersByHomePhoneOperationCompleted, userState);
        }
        
        private void OnGetMetersByHomePhoneOperationCompleted(object arg) {
            if ((this.GetMetersByHomePhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByHomePhoneCompleted(this, new GetMetersByHomePhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMetersBySearchString", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetMetersBySearchString(string searchString) {
            object[] results = this.Invoke("GetMetersBySearchString", new object[] {
                        searchString});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersBySearchStringAsync(string searchString) {
            this.GetMetersBySearchStringAsync(searchString, null);
        }
        
        /// <remarks/>
        public void GetMetersBySearchStringAsync(string searchString, object userState) {
            if ((this.GetMetersBySearchStringOperationCompleted == null)) {
                this.GetMetersBySearchStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersBySearchStringOperationCompleted);
            }
            this.InvokeAsync("GetMetersBySearchString", new object[] {
                        searchString}, this.GetMetersBySearchStringOperationCompleted, userState);
        }
        
        private void OnGetMetersBySearchStringOperationCompleted(object arg) {
            if ((this.GetMetersBySearchStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersBySearchStringCompleted(this, new GetMetersBySearchStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetSchedules", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public schedule[] GetSchedules(string lastReceived) {
            object[] results = this.Invoke("GetSchedules", new object[] {
                        lastReceived});
            return ((schedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string lastReceived) {
            this.GetSchedulesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string lastReceived, object userState) {
            if ((this.GetSchedulesOperationCompleted == null)) {
                this.GetSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetSchedules", new object[] {
                        lastReceived}, this.GetSchedulesOperationCompleted, userState);
        }
        
        private void OnGetSchedulesOperationCompleted(object arg) {
            if ((this.GetSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesCompleted(this, new GetSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetScheduleByID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public schedule GetScheduleByID(string scheduleID) {
            object[] results = this.Invoke("GetScheduleByID", new object[] {
                        scheduleID});
            return ((schedule)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByIDAsync(string scheduleID) {
            this.GetScheduleByIDAsync(scheduleID, null);
        }
        
        /// <remarks/>
        public void GetScheduleByIDAsync(string scheduleID, object userState) {
            if ((this.GetScheduleByIDOperationCompleted == null)) {
                this.GetScheduleByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByIDOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByID", new object[] {
                        scheduleID}, this.GetScheduleByIDOperationCompleted, userState);
        }
        
        private void OnGetScheduleByIDOperationCompleted(object arg) {
            if ((this.GetScheduleByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByIDCompleted(this, new GetScheduleByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingSchedules", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public readingSchedule[] GetReadingSchedules(string lastReceived) {
            object[] results = this.Invoke("GetReadingSchedules", new object[] {
                        lastReceived});
            return ((readingSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingSchedulesAsync(string lastReceived) {
            this.GetReadingSchedulesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetReadingSchedulesAsync(string lastReceived, object userState) {
            if ((this.GetReadingSchedulesOperationCompleted == null)) {
                this.GetReadingSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetReadingSchedules", new object[] {
                        lastReceived}, this.GetReadingSchedulesOperationCompleted, userState);
        }
        
        private void OnGetReadingSchedulesOperationCompleted(object arg) {
            if ((this.GetReadingSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingSchedulesCompleted(this, new GetReadingSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingScheduleByID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public readingSchedule GetReadingScheduleByID(string readingScheduleID) {
            object[] results = this.Invoke("GetReadingScheduleByID", new object[] {
                        readingScheduleID});
            return ((readingSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingScheduleByIDAsync(string readingScheduleID) {
            this.GetReadingScheduleByIDAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void GetReadingScheduleByIDAsync(string readingScheduleID, object userState) {
            if ((this.GetReadingScheduleByIDOperationCompleted == null)) {
                this.GetReadingScheduleByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingScheduleByIDOperationCompleted);
            }
            this.InvokeAsync("GetReadingScheduleByID", new object[] {
                        readingScheduleID}, this.GetReadingScheduleByIDOperationCompleted, userState);
        }
        
        private void OnGetReadingScheduleByIDOperationCompleted(object arg) {
            if ((this.GetReadingScheduleByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingScheduleByIDCompleted(this, new GetReadingScheduleByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingsByMeterNoList", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLatestReadingsByMeterNoList(string[] meterNo, System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, serviceType serviceType, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetLatestReadingsByMeterNoList", new object[] {
                        meterNo,
                        startDate,
                        endDate,
                        readingType,
                        lastReceived,
                        serviceType,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterNoListAsync(string[] meterNo, System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, serviceType serviceType, string formattedBlockTemplateName, string[] fieldName) {
            this.GetLatestReadingsByMeterNoListAsync(meterNo, startDate, endDate, readingType, lastReceived, serviceType, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterNoListAsync(string[] meterNo, System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, serviceType serviceType, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetLatestReadingsByMeterNoListOperationCompleted == null)) {
                this.GetLatestReadingsByMeterNoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsByMeterNoListOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingsByMeterNoList", new object[] {
                        meterNo,
                        startDate,
                        endDate,
                        readingType,
                        lastReceived,
                        serviceType,
                        formattedBlockTemplateName,
                        fieldName}, this.GetLatestReadingsByMeterNoListOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsByMeterNoListOperationCompleted(object arg) {
            if ((this.GetLatestReadingsByMeterNoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsByMeterNoListCompleted(this, new GetLatestReadingsByMeterNoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetConfigurationGroupNames", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetConfigurationGroupNames() {
            object[] results = this.Invoke("GetConfigurationGroupNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesAsync() {
            this.GetConfigurationGroupNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesAsync(object userState) {
            if ((this.GetConfigurationGroupNamesOperationCompleted == null)) {
                this.GetConfigurationGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationGroupNamesOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationGroupNames", new object[0], this.GetConfigurationGroupNamesOperationCompleted, userState);
        }
        
        private void OnGetConfigurationGroupNamesOperationCompleted(object arg) {
            if ((this.GetConfigurationGroupNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationGroupNamesCompleted(this, new GetConfigurationGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetConfigurationGroupNamesByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetConfigurationGroupNamesByMeterNo(string meterNo, serviceType serviceType) {
            object[] results = this.Invoke("GetConfigurationGroupNamesByMeterNo", new object[] {
                        meterNo,
                        serviceType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesByMeterNoAsync(string meterNo, serviceType serviceType) {
            this.GetConfigurationGroupNamesByMeterNoAsync(meterNo, serviceType, null);
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesByMeterNoAsync(string meterNo, serviceType serviceType, object userState) {
            if ((this.GetConfigurationGroupNamesByMeterNoOperationCompleted == null)) {
                this.GetConfigurationGroupNamesByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationGroupNamesByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationGroupNamesByMeterNo", new object[] {
                        meterNo,
                        serviceType}, this.GetConfigurationGroupNamesByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetConfigurationGroupNamesByMeterNoOperationCompleted(object arg) {
            if ((this.GetConfigurationGroupNamesByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationGroupNamesByMeterNoCompleted(this, new GetConfigurationGroupNamesByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetConfigurationGroupMembers", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterGroups GetConfigurationGroupMembers(string meterGroupName) {
            object[] results = this.Invoke("GetConfigurationGroupMembers", new object[] {
                        meterGroupName});
            return ((meterGroups)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationGroupMembersAsync(string meterGroupName) {
            this.GetConfigurationGroupMembersAsync(meterGroupName, null);
        }
        
        /// <remarks/>
        public void GetConfigurationGroupMembersAsync(string meterGroupName, object userState) {
            if ((this.GetConfigurationGroupMembersOperationCompleted == null)) {
                this.GetConfigurationGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationGroupMembers", new object[] {
                        meterGroupName}, this.GetConfigurationGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetConfigurationGroupMembersOperationCompleted(object arg) {
            if ((this.GetConfigurationGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationGroupMembersCompleted(this, new GetConfigurationGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMeterBaseByObjectId", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterBase GetMeterBaseByObjectId(string meterBaseID) {
            object[] results = this.Invoke("GetMeterBaseByObjectId", new object[] {
                        meterBaseID});
            return ((meterBase)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterBaseByObjectIdAsync(string meterBaseID) {
            this.GetMeterBaseByObjectIdAsync(meterBaseID, null);
        }
        
        /// <remarks/>
        public void GetMeterBaseByObjectIdAsync(string meterBaseID, object userState) {
            if ((this.GetMeterBaseByObjectIdOperationCompleted == null)) {
                this.GetMeterBaseByObjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterBaseByObjectIdOperationCompleted);
            }
            this.InvokeAsync("GetMeterBaseByObjectId", new object[] {
                        meterBaseID}, this.GetMeterBaseByObjectIdOperationCompleted, userState);
        }
        
        private void OnGetMeterBaseByObjectIdOperationCompleted(object arg) {
            if ((this.GetMeterBaseByObjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterBaseByObjectIdCompleted(this, new GetMeterBaseByObjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/PingURL", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] PingURL() {
            object[] results = this.Invoke("PingURL", new object[0]);
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void PingURLAsync() {
            this.PingURLAsync(null);
        }
        
        /// <remarks/>
        public void PingURLAsync(object userState) {
            if ((this.PingURLOperationCompleted == null)) {
                this.PingURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingURLOperationCompleted);
            }
            this.InvokeAsync("PingURL", new object[0], this.PingURLOperationCompleted, userState);
        }
        
        private void OnPingURLOperationCompleted(object arg) {
            if ((this.PingURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingURLCompleted(this, new PingURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetMethods", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMethods() {
            object[] results = this.Invoke("GetMethods", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMethodsAsync() {
            this.GetMethodsAsync(null);
        }
        
        /// <remarks/>
        public void GetMethodsAsync(object userState) {
            if ((this.GetMethodsOperationCompleted == null)) {
                this.GetMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMethodsOperationCompleted);
            }
            this.InvokeAsync("GetMethods", new object[0], this.GetMethodsOperationCompleted, userState);
        }
        
        private void OnGetMethodsOperationCompleted(object arg) {
            if ((this.GetMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMethodsCompleted(this, new GetMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetDomainNames", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDomainNames() {
            object[] results = this.Invoke("GetDomainNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainNamesAsync() {
            this.GetDomainNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetDomainNamesAsync(object userState) {
            if ((this.GetDomainNamesOperationCompleted == null)) {
                this.GetDomainNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainNamesOperationCompleted);
            }
            this.InvokeAsync("GetDomainNames", new object[0], this.GetDomainNamesOperationCompleted, userState);
        }
        
        private void OnGetDomainNamesOperationCompleted(object arg) {
            if ((this.GetDomainNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainNamesCompleted(this, new GetDomainNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetDomainMembers", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public domainMember[] GetDomainMembers(string domainName) {
            object[] results = this.Invoke("GetDomainMembers", new object[] {
                        domainName});
            return ((domainMember[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainMembersAsync(string domainName) {
            this.GetDomainMembersAsync(domainName, null);
        }
        
        /// <remarks/>
        public void GetDomainMembersAsync(string domainName, object userState) {
            if ((this.GetDomainMembersOperationCompleted == null)) {
                this.GetDomainMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainMembersOperationCompleted);
            }
            this.InvokeAsync("GetDomainMembers", new object[] {
                        domainName}, this.GetDomainMembersOperationCompleted, userState);
        }
        
        private void OnGetDomainMembersOperationCompleted(object arg) {
            if ((this.GetDomainMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainMembersCompleted(this, new GetDomainMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/RequestRegistrationID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestRegistrationID() {
            object[] results = this.Invoke("RequestRegistrationID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestRegistrationIDAsync() {
            this.RequestRegistrationIDAsync(null);
        }
        
        /// <remarks/>
        public void RequestRegistrationIDAsync(object userState) {
            if ((this.RequestRegistrationIDOperationCompleted == null)) {
                this.RequestRegistrationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestRegistrationIDOperationCompleted);
            }
            this.InvokeAsync("RequestRegistrationID", new object[0], this.RequestRegistrationIDOperationCompleted, userState);
        }
        
        private void OnRequestRegistrationIDOperationCompleted(object arg) {
            if ((this.RequestRegistrationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestRegistrationIDCompleted(this, new RequestRegistrationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/RegisterForService", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RegisterForService(registrationInfo registrationDetails) {
            object[] results = this.Invoke("RegisterForService", new object[] {
                        registrationDetails});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RegisterForServiceAsync(registrationInfo registrationDetails) {
            this.RegisterForServiceAsync(registrationDetails, null);
        }
        
        /// <remarks/>
        public void RegisterForServiceAsync(registrationInfo registrationDetails, object userState) {
            if ((this.RegisterForServiceOperationCompleted == null)) {
                this.RegisterForServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterForServiceOperationCompleted);
            }
            this.InvokeAsync("RegisterForService", new object[] {
                        registrationDetails}, this.RegisterForServiceOperationCompleted, userState);
        }
        
        private void OnRegisterForServiceOperationCompleted(object arg) {
            if ((this.RegisterForServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterForServiceCompleted(this, new RegisterForServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/UnregisterForService", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UnregisterForService(string registrationID) {
            object[] results = this.Invoke("UnregisterForService", new object[] {
                        registrationID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UnregisterForServiceAsync(string registrationID) {
            this.UnregisterForServiceAsync(registrationID, null);
        }
        
        /// <remarks/>
        public void UnregisterForServiceAsync(string registrationID, object userState) {
            if ((this.UnregisterForServiceOperationCompleted == null)) {
                this.UnregisterForServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnregisterForServiceOperationCompleted);
            }
            this.InvokeAsync("UnregisterForService", new object[] {
                        registrationID}, this.UnregisterForServiceOperationCompleted, userState);
        }
        
        private void OnUnregisterForServiceOperationCompleted(object arg) {
            if ((this.UnregisterForServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnregisterForServiceCompleted(this, new UnregisterForServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetRegistrationInfoByID", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public registrationInfo GetRegistrationInfoByID(string registrationID) {
            object[] results = this.Invoke("GetRegistrationInfoByID", new object[] {
                        registrationID});
            return ((registrationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationInfoByIDAsync(string registrationID) {
            this.GetRegistrationInfoByIDAsync(registrationID, null);
        }
        
        /// <remarks/>
        public void GetRegistrationInfoByIDAsync(string registrationID, object userState) {
            if ((this.GetRegistrationInfoByIDOperationCompleted == null)) {
                this.GetRegistrationInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationInfoByIDOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationInfoByID", new object[] {
                        registrationID}, this.GetRegistrationInfoByIDOperationCompleted, userState);
        }
        
        private void OnGetRegistrationInfoByIDOperationCompleted(object arg) {
            if ((this.GetRegistrationInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationInfoByIDCompleted(this, new GetRegistrationInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetPublishMethods", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPublishMethods() {
            object[] results = this.Invoke("GetPublishMethods", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublishMethodsAsync() {
            this.GetPublishMethodsAsync(null);
        }
        
        /// <remarks/>
        public void GetPublishMethodsAsync(object userState) {
            if ((this.GetPublishMethodsOperationCompleted == null)) {
                this.GetPublishMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublishMethodsOperationCompleted);
            }
            this.InvokeAsync("GetPublishMethods", new object[0], this.GetPublishMethodsOperationCompleted, userState);
        }
        
        private void OnGetPublishMethodsOperationCompleted(object arg) {
            if ((this.GetPublishMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublishMethodsCompleted(this, new GetPublishMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DomainMembersChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DomainMembersChangedNotification(domainMember[] changedDomainMembers) {
            object[] results = this.Invoke("DomainMembersChangedNotification", new object[] {
                        changedDomainMembers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DomainMembersChangedNotificationAsync(domainMember[] changedDomainMembers) {
            this.DomainMembersChangedNotificationAsync(changedDomainMembers, null);
        }
        
        /// <remarks/>
        public void DomainMembersChangedNotificationAsync(domainMember[] changedDomainMembers, object userState) {
            if ((this.DomainMembersChangedNotificationOperationCompleted == null)) {
                this.DomainMembersChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDomainMembersChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("DomainMembersChangedNotification", new object[] {
                        changedDomainMembers}, this.DomainMembersChangedNotificationOperationCompleted, userState);
        }
        
        private void OnDomainMembersChangedNotificationOperationCompleted(object arg) {
            if ((this.DomainMembersChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DomainMembersChangedNotificationCompleted(this, new DomainMembersChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/DomainNamesChangedNotification", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DomainNamesChangedNotification(domainNameChange[] changedDomainNames) {
            object[] results = this.Invoke("DomainNamesChangedNotification", new object[] {
                        changedDomainNames});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DomainNamesChangedNotificationAsync(domainNameChange[] changedDomainNames) {
            this.DomainNamesChangedNotificationAsync(changedDomainNames, null);
        }
        
        /// <remarks/>
        public void DomainNamesChangedNotificationAsync(domainNameChange[] changedDomainNames, object userState) {
            if ((this.DomainNamesChangedNotificationOperationCompleted == null)) {
                this.DomainNamesChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDomainNamesChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("DomainNamesChangedNotification", new object[] {
                        changedDomainNames}, this.DomainNamesChangedNotificationOperationCompleted, userState);
        }
        
        private void OnDomainNamesChangedNotificationOperationCompleted(object arg) {
            if ((this.DomainNamesChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DomainNamesChangedNotificationCompleted(this, new DomainNamesChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetAllMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllMeters", new object[] {
                        lastReceived});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMetersAsync(string lastReceived) {
            this.GetAllMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllMetersOperationCompleted == null)) {
                this.GetAllMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllMeters", new object[] {
                        lastReceived}, this.GetAllMetersOperationCompleted, userState);
        }
        
        private void OnGetAllMetersOperationCompleted(object arg) {
            if ((this.GetAllMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMetersCompleted(this, new GetAllMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetPPMPayments", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("paymentTransactionList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false, NestingLevel=1)]
        public paymentTransaction[][] GetPPMPayments(System.DateTime startTime, System.DateTime stopTime) {
            object[] results = this.Invoke("GetPPMPayments", new object[] {
                        startTime,
                        stopTime});
            return ((paymentTransaction[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPMPaymentsAsync(System.DateTime startTime, System.DateTime stopTime) {
            this.GetPPMPaymentsAsync(startTime, stopTime, null);
        }
        
        /// <remarks/>
        public void GetPPMPaymentsAsync(System.DateTime startTime, System.DateTime stopTime, object userState) {
            if ((this.GetPPMPaymentsOperationCompleted == null)) {
                this.GetPPMPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPMPaymentsOperationCompleted);
            }
            this.InvokeAsync("GetPPMPayments", new object[] {
                        startTime,
                        stopTime}, this.GetPPMPaymentsOperationCompleted, userState);
        }
        
        private void OnGetPPMPaymentsOperationCompleted(object arg) {
            if ((this.GetPPMPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPMPaymentsCompleted(this, new GetPPMPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetPPMBalanceAdjustments", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ppmBalanceAdjustment[] GetPPMBalanceAdjustments(System.DateTime startTime, System.DateTime stopTime) {
            object[] results = this.Invoke("GetPPMBalanceAdjustments", new object[] {
                        startTime,
                        stopTime});
            return ((ppmBalanceAdjustment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPMBalanceAdjustmentsAsync(System.DateTime startTime, System.DateTime stopTime) {
            this.GetPPMBalanceAdjustmentsAsync(startTime, stopTime, null);
        }
        
        /// <remarks/>
        public void GetPPMBalanceAdjustmentsAsync(System.DateTime startTime, System.DateTime stopTime, object userState) {
            if ((this.GetPPMBalanceAdjustmentsOperationCompleted == null)) {
                this.GetPPMBalanceAdjustmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPMBalanceAdjustmentsOperationCompleted);
            }
            this.InvokeAsync("GetPPMBalanceAdjustments", new object[] {
                        startTime,
                        stopTime}, this.GetPPMBalanceAdjustmentsOperationCompleted, userState);
        }
        
        private void OnGetPPMBalanceAdjustmentsOperationCompleted(object arg) {
            if ((this.GetPPMBalanceAdjustmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPMBalanceAdjustmentsCompleted(this, new GetPPMBalanceAdjustmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetBillingData", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public billingData[] GetBillingData(System.DateTime startBillDate, System.DateTime endBillDate) {
            object[] results = this.Invoke("GetBillingData", new object[] {
                        startBillDate,
                        endBillDate});
            return ((billingData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBillingDataAsync(System.DateTime startBillDate, System.DateTime endBillDate) {
            this.GetBillingDataAsync(startBillDate, endBillDate, null);
        }
        
        /// <remarks/>
        public void GetBillingDataAsync(System.DateTime startBillDate, System.DateTime endBillDate, object userState) {
            if ((this.GetBillingDataOperationCompleted == null)) {
                this.GetBillingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillingDataOperationCompleted);
            }
            this.InvokeAsync("GetBillingData", new object[] {
                        startBillDate,
                        endBillDate}, this.GetBillingDataOperationCompleted, userState);
        }
        
        private void OnGetBillingDataOperationCompleted(object arg) {
            if ((this.GetBillingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillingDataCompleted(this, new GetBillingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetBillingDetail", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public billingDetail[] GetBillingDetail(string accountNumber, System.DateTime cisBillDate) {
            object[] results = this.Invoke("GetBillingDetail", new object[] {
                        accountNumber,
                        cisBillDate});
            return ((billingDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBillingDetailAsync(string accountNumber, System.DateTime cisBillDate) {
            this.GetBillingDetailAsync(accountNumber, cisBillDate, null);
        }
        
        /// <remarks/>
        public void GetBillingDetailAsync(string accountNumber, System.DateTime cisBillDate, object userState) {
            if ((this.GetBillingDetailOperationCompleted == null)) {
                this.GetBillingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillingDetailOperationCompleted);
            }
            this.InvokeAsync("GetBillingDetail", new object[] {
                        accountNumber,
                        cisBillDate}, this.GetBillingDetailOperationCompleted, userState);
        }
        
        private void OnGetBillingDetailOperationCompleted(object arg) {
            if ((this.GetBillingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillingDetailCompleted(this, new GetBillingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetBilledUsage", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public billedUsage GetBilledUsage(string accountNumber, System.DateTime cisBillDate) {
            object[] results = this.Invoke("GetBilledUsage", new object[] {
                        accountNumber,
                        cisBillDate});
            return ((billedUsage)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilledUsageAsync(string accountNumber, System.DateTime cisBillDate) {
            this.GetBilledUsageAsync(accountNumber, cisBillDate, null);
        }
        
        /// <remarks/>
        public void GetBilledUsageAsync(string accountNumber, System.DateTime cisBillDate, object userState) {
            if ((this.GetBilledUsageOperationCompleted == null)) {
                this.GetBilledUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilledUsageOperationCompleted);
            }
            this.InvokeAsync("GetBilledUsage", new object[] {
                        accountNumber,
                        cisBillDate}, this.GetBilledUsageOperationCompleted, userState);
        }
        
        private void OnGetBilledUsageOperationCompleted(object arg) {
            if ((this.GetBilledUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilledUsageCompleted(this, new GetBilledUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllConnectDisconnectEventsByReasonCode", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public connectDisconnectEvent[] GetAllConnectDisconnectEventsByReasonCode(string reasonCode, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetAllConnectDisconnectEventsByReasonCode", new object[] {
                        reasonCode,
                        startDate,
                        endDate});
            return ((connectDisconnectEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllConnectDisconnectEventsByReasonCodeAsync(string reasonCode, System.DateTime startDate, System.DateTime endDate) {
            this.GetAllConnectDisconnectEventsByReasonCodeAsync(reasonCode, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetAllConnectDisconnectEventsByReasonCodeAsync(string reasonCode, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetAllConnectDisconnectEventsByReasonCodeOperationCompleted == null)) {
                this.GetAllConnectDisconnectEventsByReasonCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllConnectDisconnectEventsByReasonCodeOperationCompleted);
            }
            this.InvokeAsync("GetAllConnectDisconnectEventsByReasonCode", new object[] {
                        reasonCode,
                        startDate,
                        endDate}, this.GetAllConnectDisconnectEventsByReasonCodeOperationCompleted, userState);
        }
        
        private void OnGetAllConnectDisconnectEventsByReasonCodeOperationCompleted(object arg) {
            if ((this.GetAllConnectDisconnectEventsByReasonCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllConnectDisconnectEventsByReasonCodeCompleted(this, new GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllInHomeDisplays", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public readingSchedule GetAllInHomeDisplays(string lastReceived) {
            object[] results = this.Invoke("GetAllInHomeDisplays", new object[] {
                        lastReceived});
            return ((readingSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllInHomeDisplaysAsync(string lastReceived) {
            this.GetAllInHomeDisplaysAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllInHomeDisplaysAsync(string lastReceived, object userState) {
            if ((this.GetAllInHomeDisplaysOperationCompleted == null)) {
                this.GetAllInHomeDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllInHomeDisplaysOperationCompleted);
            }
            this.InvokeAsync("GetAllInHomeDisplays", new object[] {
                        lastReceived}, this.GetAllInHomeDisplaysOperationCompleted, userState);
        }
        
        private void OnGetAllInHomeDisplaysOperationCompleted(object arg) {
            if ((this.GetAllInHomeDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllInHomeDisplaysCompleted(this, new GetAllInHomeDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetPrePayStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ppmStatus[] GetPrePayStatus(string[] ppmLocations) {
            object[] results = this.Invoke("GetPrePayStatus", new object[] {
                        ppmLocations});
            return ((ppmStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPrePayStatusAsync(string[] ppmLocations) {
            this.GetPrePayStatusAsync(ppmLocations, null);
        }
        
        /// <remarks/>
        public void GetPrePayStatusAsync(string[] ppmLocations, object userState) {
            if ((this.GetPrePayStatusOperationCompleted == null)) {
                this.GetPrePayStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrePayStatusOperationCompleted);
            }
            this.InvokeAsync("GetPrePayStatus", new object[] {
                        ppmLocations}, this.GetPrePayStatusOperationCompleted, userState);
        }
        
        private void OnGetPrePayStatusOperationCompleted(object arg) {
            if ((this.GetPrePayStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrePayStatusCompleted(this, new GetPrePayStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetChargeableDevicesByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public chargeableDevice[] GetChargeableDevicesByAccountNumber(string accountNumber) {
            object[] results = this.Invoke("GetChargeableDevicesByAccountNumber", new object[] {
                        accountNumber});
            return ((chargeableDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChargeableDevicesByAccountNumberAsync(string accountNumber) {
            this.GetChargeableDevicesByAccountNumberAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetChargeableDevicesByAccountNumberAsync(string accountNumber, object userState) {
            if ((this.GetChargeableDevicesByAccountNumberOperationCompleted == null)) {
                this.GetChargeableDevicesByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeableDevicesByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetChargeableDevicesByAccountNumber", new object[] {
                        accountNumber}, this.GetChargeableDevicesByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetChargeableDevicesByAccountNumberOperationCompleted(object arg) {
            if ((this.GetChargeableDevicesByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeableDevicesByAccountNumberCompleted(this, new GetChargeableDevicesByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAMRSupportedMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetAMRSupportedMeters(string lastReceived) {
            object[] results = this.Invoke("GetAMRSupportedMeters", new object[] {
                        lastReceived});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAMRSupportedMetersAsync(string lastReceived) {
            this.GetAMRSupportedMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAMRSupportedMetersAsync(string lastReceived, object userState) {
            if ((this.GetAMRSupportedMetersOperationCompleted == null)) {
                this.GetAMRSupportedMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAMRSupportedMetersOperationCompleted);
            }
            this.InvokeAsync("GetAMRSupportedMeters", new object[] {
                        lastReceived}, this.GetAMRSupportedMetersOperationCompleted, userState);
        }
        
        private void OnGetAMRSupportedMetersOperationCompleted(object arg) {
            if ((this.GetAMRSupportedMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAMRSupportedMetersCompleted(this, new GetAMRSupportedMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetModifiedAMRMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetModifiedAMRMeters(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedAMRMeters", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedAMRMetersAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedAMRMetersAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedAMRMetersAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedAMRMetersOperationCompleted == null)) {
                this.GetModifiedAMRMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedAMRMetersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedAMRMeters", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedAMRMetersOperationCompleted, userState);
        }
        
        private void OnGetModifiedAMRMetersOperationCompleted(object arg) {
            if ((this.GetModifiedAMRMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedAMRMetersCompleted(this, new GetModifiedAMRMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/IsAMRMeter", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAMRMeter(string meterNo) {
            object[] results = this.Invoke("IsAMRMeter", new object[] {
                        meterNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAMRMeterAsync(string meterNo) {
            this.IsAMRMeterAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void IsAMRMeterAsync(string meterNo, object userState) {
            if ((this.IsAMRMeterOperationCompleted == null)) {
                this.IsAMRMeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAMRMeterOperationCompleted);
            }
            this.InvokeAsync("IsAMRMeter", new object[] {
                        meterNo}, this.IsAMRMeterOperationCompleted, userState);
        }
        
        private void OnIsAMRMeterOperationCompleted(object arg) {
            if ((this.IsAMRMeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAMRMeterCompleted(this, new IsAMRMeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAmountOfControllableLoad", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float GetAmountOfControllableLoad() {
            object[] results = this.Invoke("GetAmountOfControllableLoad", new object[0]);
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountOfControllableLoadAsync() {
            this.GetAmountOfControllableLoadAsync(null);
        }
        
        /// <remarks/>
        public void GetAmountOfControllableLoadAsync(object userState) {
            if ((this.GetAmountOfControllableLoadOperationCompleted == null)) {
                this.GetAmountOfControllableLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountOfControllableLoadOperationCompleted);
            }
            this.InvokeAsync("GetAmountOfControllableLoad", new object[0], this.GetAmountOfControllableLoadOperationCompleted, userState);
        }
        
        private void OnGetAmountOfControllableLoadOperationCompleted(object arg) {
            if ((this.GetAmountOfControllableLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountOfControllableLoadCompleted(this, new GetAmountOfControllableLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllLoadManagementDevices", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public loadManagementDevice[] GetAllLoadManagementDevices(string lastReceived) {
            object[] results = this.Invoke("GetAllLoadManagementDevices", new object[] {
                        lastReceived});
            return ((loadManagementDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLoadManagementDevicesAsync(string lastReceived) {
            this.GetAllLoadManagementDevicesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllLoadManagementDevicesAsync(string lastReceived, object userState) {
            if ((this.GetAllLoadManagementDevicesOperationCompleted == null)) {
                this.GetAllLoadManagementDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLoadManagementDevicesOperationCompleted);
            }
            this.InvokeAsync("GetAllLoadManagementDevices", new object[] {
                        lastReceived}, this.GetAllLoadManagementDevicesOperationCompleted, userState);
        }
        
        private void OnGetAllLoadManagementDevicesOperationCompleted(object arg) {
            if ((this.GetAllLoadManagementDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLoadManagementDevicesCompleted(this, new GetAllLoadManagementDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLoadManagementDeviceByMeterNumber", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public loadManagementDevice[] GetLoadManagementDeviceByMeterNumber(string meterNo) {
            object[] results = this.Invoke("GetLoadManagementDeviceByMeterNumber", new object[] {
                        meterNo});
            return ((loadManagementDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByMeterNumberAsync(string meterNo) {
            this.GetLoadManagementDeviceByMeterNumberAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByMeterNumberAsync(string meterNo, object userState) {
            if ((this.GetLoadManagementDeviceByMeterNumberOperationCompleted == null)) {
                this.GetLoadManagementDeviceByMeterNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoadManagementDeviceByMeterNumberOperationCompleted);
            }
            this.InvokeAsync("GetLoadManagementDeviceByMeterNumber", new object[] {
                        meterNo}, this.GetLoadManagementDeviceByMeterNumberOperationCompleted, userState);
        }
        
        private void OnGetLoadManagementDeviceByMeterNumberOperationCompleted(object arg) {
            if ((this.GetLoadManagementDeviceByMeterNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoadManagementDeviceByMeterNumberCompleted(this, new GetLoadManagementDeviceByMeterNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLoadManagementDeviceByServLoc", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public loadManagementDevice[] GetLoadManagementDeviceByServLoc(string servLoc) {
            object[] results = this.Invoke("GetLoadManagementDeviceByServLoc", new object[] {
                        servLoc});
            return ((loadManagementDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByServLocAsync(string servLoc) {
            this.GetLoadManagementDeviceByServLocAsync(servLoc, null);
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByServLocAsync(string servLoc, object userState) {
            if ((this.GetLoadManagementDeviceByServLocOperationCompleted == null)) {
                this.GetLoadManagementDeviceByServLocOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoadManagementDeviceByServLocOperationCompleted);
            }
            this.InvokeAsync("GetLoadManagementDeviceByServLoc", new object[] {
                        servLoc}, this.GetLoadManagementDeviceByServLocOperationCompleted, userState);
        }
        
        private void OnGetLoadManagementDeviceByServLocOperationCompleted(object arg) {
            if ((this.GetLoadManagementDeviceByServLocCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoadManagementDeviceByServLocCompleted(this, new GetLoadManagementDeviceByServLocCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/IsLoadManagementActive", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLoadManagementActive(string servLoc) {
            object[] results = this.Invoke("IsLoadManagementActive", new object[] {
                        servLoc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLoadManagementActiveAsync(string servLoc) {
            this.IsLoadManagementActiveAsync(servLoc, null);
        }
        
        /// <remarks/>
        public void IsLoadManagementActiveAsync(string servLoc, object userState) {
            if ((this.IsLoadManagementActiveOperationCompleted == null)) {
                this.IsLoadManagementActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLoadManagementActiveOperationCompleted);
            }
            this.InvokeAsync("IsLoadManagementActive", new object[] {
                        servLoc}, this.IsLoadManagementActiveOperationCompleted, userState);
        }
        
        private void OnIsLoadManagementActiveOperationCompleted(object arg) {
            if ((this.IsLoadManagementActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLoadManagementActiveCompleted(this, new IsLoadManagementActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAmountOfControlledLoad", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float GetAmountOfControlledLoad() {
            object[] results = this.Invoke("GetAmountOfControlledLoad", new object[0]);
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountOfControlledLoadAsync() {
            this.GetAmountOfControlledLoadAsync(null);
        }
        
        /// <remarks/>
        public void GetAmountOfControlledLoadAsync(object userState) {
            if ((this.GetAmountOfControlledLoadOperationCompleted == null)) {
                this.GetAmountOfControlledLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountOfControlledLoadOperationCompleted);
            }
            this.InvokeAsync("GetAmountOfControlledLoad", new object[0], this.GetAmountOfControlledLoadOperationCompleted, userState);
        }
        
        private void OnGetAmountOfControlledLoadOperationCompleted(object arg) {
            if ((this.GetAmountOfControlledLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountOfControlledLoadCompleted(this, new GetAmountOfControlledLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllSubstationLoadControlStatuses", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public substationLoadControlStatus[] GetAllSubstationLoadControlStatuses() {
            object[] results = this.Invoke("GetAllSubstationLoadControlStatuses", new object[0]);
            return ((substationLoadControlStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSubstationLoadControlStatusesAsync() {
            this.GetAllSubstationLoadControlStatusesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSubstationLoadControlStatusesAsync(object userState) {
            if ((this.GetAllSubstationLoadControlStatusesOperationCompleted == null)) {
                this.GetAllSubstationLoadControlStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSubstationLoadControlStatusesOperationCompleted);
            }
            this.InvokeAsync("GetAllSubstationLoadControlStatuses", new object[0], this.GetAllSubstationLoadControlStatusesOperationCompleted, userState);
        }
        
        private void OnGetAllSubstationLoadControlStatusesOperationCompleted(object arg) {
            if ((this.GetAllSubstationLoadControlStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSubstationLoadControlStatusesCompleted(this, new GetAllSubstationLoadControlStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByDate", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterRead[] GetReadingsByDate(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetReadingsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived});
            return ((meterRead[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetReadingsByDateAsync(startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetReadingsByDateOperationCompleted == null)) {
                this.GetReadingsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived}, this.GetReadingsByDateOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateOperationCompleted(object arg) {
            if ((this.GetReadingsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateCompleted(this, new GetReadingsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterRead[] GetReadingsByMeterNo(string meterNo, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetReadingsByMeterNo", new object[] {
                        meterNo,
                        startDate,
                        endDate});
            return ((meterRead[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByMeterNoAsync(string meterNo, System.DateTime startDate, System.DateTime endDate) {
            this.GetReadingsByMeterNoAsync(meterNo, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetReadingsByMeterNoAsync(string meterNo, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetReadingsByMeterNoOperationCompleted == null)) {
                this.GetReadingsByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByMeterNo", new object[] {
                        meterNo,
                        startDate,
                        endDate}, this.GetReadingsByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetReadingsByMeterNoOperationCompleted(object arg) {
            if ((this.GetReadingsByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByMeterNoCompleted(this, new GetReadingsByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterRead GetLatestReadingByMeterNo(string meterNo) {
            object[] results = this.Invoke("GetLatestReadingByMeterNo", new object[] {
                        meterNo});
            return ((meterRead)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterNoAsync(string meterNo) {
            this.GetLatestReadingByMeterNoAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterNoAsync(string meterNo, object userState) {
            if ((this.GetLatestReadingByMeterNoOperationCompleted == null)) {
                this.GetLatestReadingByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByMeterNo", new object[] {
                        meterNo}, this.GetLatestReadingByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByMeterNoOperationCompleted(object arg) {
            if ((this.GetLatestReadingByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByMeterNoCompleted(this, new GetLatestReadingByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByBillingCycle", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByBillingCycle(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByBillingCycle", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByBillingCycleAsync(billingCycle, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByBillingCycleOperationCompleted == null)) {
                this.GetReadingsByBillingCycleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByBillingCycleOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByBillingCycle", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByBillingCycleOperationCompleted, userState);
        }
        
        private void OnGetReadingsByBillingCycleOperationCompleted(object arg) {
            if ((this.GetReadingsByBillingCycleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByBillingCycleCompleted(this, new GetReadingsByBillingCycleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingByMeterNumberFormattedBlock", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingByMeterNumberFormattedBlock(string meterNumber, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingByMeterNumberFormattedBlock", new object[] {
                        meterNumber,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingByMeterNumberFormattedBlockAsync(string meterNumber, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingByMeterNumberFormattedBlockAsync(meterNumber, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingByMeterNumberFormattedBlockAsync(string meterNumber, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingByMeterNumberFormattedBlockOperationCompleted == null)) {
                this.GetReadingByMeterNumberFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingByMeterNumberFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetReadingByMeterNumberFormattedBlock", new object[] {
                        meterNumber,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingByMeterNumberFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetReadingByMeterNumberFormattedBlockOperationCompleted(object arg) {
            if ((this.GetReadingByMeterNumberFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingByMeterNumberFormattedBlockCompleted(this, new GetReadingByMeterNumberFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByDateFormattedBlock", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByDateFormattedBlock(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateFormattedBlock", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateFormattedBlockAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByDateFormattedBlockAsync(billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateFormattedBlockAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateFormattedBlockOperationCompleted == null)) {
                this.GetReadingsByDateFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateFormattedBlock", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByDateFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateFormattedBlockOperationCompleted(object arg) {
            if ((this.GetReadingsByDateFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateFormattedBlockCompleted(this, new GetReadingsByDateFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetHistoryLogByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogByMeterNo(string meterNo, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetHistoryLogByMeterNo", new object[] {
                        meterNo,
                        startDate,
                        endDate});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogByMeterNoAsync(string meterNo, System.DateTime startDate, System.DateTime endDate) {
            this.GetHistoryLogByMeterNoAsync(meterNo, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogByMeterNoAsync(string meterNo, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetHistoryLogByMeterNoOperationCompleted == null)) {
                this.GetHistoryLogByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogByMeterNo", new object[] {
                        meterNo,
                        startDate,
                        endDate}, this.GetHistoryLogByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogByMeterNoOperationCompleted(object arg) {
            if ((this.GetHistoryLogByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogByMeterNoCompleted(this, new GetHistoryLogByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetHistoryLogsByDate", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogsByDate(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetHistoryLogsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetHistoryLogsByDateAsync(startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetHistoryLogsByDateOperationCompleted == null)) {
                this.GetHistoryLogsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogsByDateOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived}, this.GetHistoryLogsByDateOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogsByDateOperationCompleted(object arg) {
            if ((this.GetHistoryLogsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogsByDateCompleted(this, new GetHistoryLogsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetHistoryLogsByMeterNoAndEventCode", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogsByMeterNoAndEventCode(string meterNo, eventCode eventCode, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetHistoryLogsByMeterNoAndEventCode", new object[] {
                        meterNo,
                        eventCode,
                        startDate,
                        endDate});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogsByMeterNoAndEventCodeAsync(string meterNo, eventCode eventCode, System.DateTime startDate, System.DateTime endDate) {
            this.GetHistoryLogsByMeterNoAndEventCodeAsync(meterNo, eventCode, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogsByMeterNoAndEventCodeAsync(string meterNo, eventCode eventCode, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetHistoryLogsByMeterNoAndEventCodeOperationCompleted == null)) {
                this.GetHistoryLogsByMeterNoAndEventCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogsByMeterNoAndEventCodeOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogsByMeterNoAndEventCode", new object[] {
                        meterNo,
                        eventCode,
                        startDate,
                        endDate}, this.GetHistoryLogsByMeterNoAndEventCodeOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogsByMeterNoAndEventCodeOperationCompleted(object arg) {
            if ((this.GetHistoryLogsByMeterNoAndEventCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogsByMeterNoAndEventCodeCompleted(this, new GetHistoryLogsByMeterNoAndEventCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetHistoryLogsByDateAndEventCode", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogsByDateAndEventCode(eventCode eventCode, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetHistoryLogsByDateAndEventCode", new object[] {
                        eventCode,
                        startDate,
                        endDate,
                        lastReceived});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAndEventCodeAsync(eventCode eventCode, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetHistoryLogsByDateAndEventCodeAsync(eventCode, startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAndEventCodeAsync(eventCode eventCode, System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetHistoryLogsByDateAndEventCodeOperationCompleted == null)) {
                this.GetHistoryLogsByDateAndEventCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogsByDateAndEventCodeOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogsByDateAndEventCode", new object[] {
                        eventCode,
                        startDate,
                        endDate,
                        lastReceived}, this.GetHistoryLogsByDateAndEventCodeOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogsByDateAndEventCodeOperationCompleted(object arg) {
            if ((this.GetHistoryLogsByDateAndEventCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogsByDateAndEventCodeCompleted(this, new GetHistoryLogsByDateAndEventCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestMeterReadingsByMeterGroup", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock GetLatestMeterReadingsByMeterGroup(string meterGroupID, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetLatestMeterReadingsByMeterGroup", new object[] {
                        meterGroupID,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupAsync(string meterGroupID, string formattedBlockTemplateName, string[] fieldName) {
            this.GetLatestMeterReadingsByMeterGroupAsync(meterGroupID, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupAsync(string meterGroupID, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetLatestMeterReadingsByMeterGroupOperationCompleted == null)) {
                this.GetLatestMeterReadingsByMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestMeterReadingsByMeterGroupOperationCompleted);
            }
            this.InvokeAsync("GetLatestMeterReadingsByMeterGroup", new object[] {
                        meterGroupID,
                        formattedBlockTemplateName,
                        fieldName}, this.GetLatestMeterReadingsByMeterGroupOperationCompleted, userState);
        }
        
        private void OnGetLatestMeterReadingsByMeterGroupOperationCompleted(object arg) {
            if ((this.GetLatestMeterReadingsByMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestMeterReadingsByMeterGroupCompleted(this, new GetLatestMeterReadingsByMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingByMeterNoAndType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock GetLatestReadingByMeterNoAndType(string meterNo, string readingType, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetLatestReadingByMeterNoAndType", new object[] {
                        meterNo,
                        readingType,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterNoAndTypeAsync(string meterNo, string readingType, string formattedBlockTemplateName, string[] fieldName) {
            this.GetLatestReadingByMeterNoAndTypeAsync(meterNo, readingType, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterNoAndTypeAsync(string meterNo, string readingType, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetLatestReadingByMeterNoAndTypeOperationCompleted == null)) {
                this.GetLatestReadingByMeterNoAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByMeterNoAndTypeOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByMeterNoAndType", new object[] {
                        meterNo,
                        readingType,
                        formattedBlockTemplateName,
                        fieldName}, this.GetLatestReadingByMeterNoAndTypeOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByMeterNoAndTypeOperationCompleted(object arg) {
            if ((this.GetLatestReadingByMeterNoAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByMeterNoAndTypeCompleted(this, new GetLatestReadingByMeterNoAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadingByType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLatestReadingByType(string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetLatestReadingByType", new object[] {
                        readingType,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByTypeAsync(string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetLatestReadingByTypeAsync(readingType, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByTypeAsync(string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetLatestReadingByTypeOperationCompleted == null)) {
                this.GetLatestReadingByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByTypeOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByType", new object[] {
                        readingType,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetLatestReadingByTypeOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByTypeOperationCompleted(object arg) {
            if ((this.GetLatestReadingByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByTypeCompleted(this, new GetLatestReadingByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByDateAndType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByDateAndType(System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateAndType", new object[] {
                        startDate,
                        endDate,
                        readingType,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndTypeAsync(System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByDateAndTypeAsync(startDate, endDate, readingType, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndTypeAsync(System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateAndTypeOperationCompleted == null)) {
                this.GetReadingsByDateAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateAndTypeOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateAndType", new object[] {
                        startDate,
                        endDate,
                        readingType,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByDateAndTypeOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateAndTypeOperationCompleted(object arg) {
            if ((this.GetReadingsByDateAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateAndTypeCompleted(this, new GetReadingsByDateAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetSupportedReadingTypes", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSupportedReadingTypes() {
            object[] results = this.Invoke("GetSupportedReadingTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportedReadingTypesAsync() {
            this.GetSupportedReadingTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportedReadingTypesAsync(object userState) {
            if ((this.GetSupportedReadingTypesOperationCompleted == null)) {
                this.GetSupportedReadingTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportedReadingTypesOperationCompleted);
            }
            this.InvokeAsync("GetSupportedReadingTypes", new object[0], this.GetSupportedReadingTypesOperationCompleted, userState);
        }
        
        private void OnGetSupportedReadingTypesOperationCompleted(object arg) {
            if ((this.GetSupportedReadingTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportedReadingTypesCompleted(this, new GetSupportedReadingTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByMeterNoAndType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByMeterNoAndType(string meterNo, System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByMeterNoAndType", new object[] {
                        meterNo,
                        startDate,
                        endDate,
                        readingType,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByMeterNoAndTypeAsync(string meterNo, System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByMeterNoAndTypeAsync(meterNo, startDate, endDate, readingType, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByMeterNoAndTypeAsync(string meterNo, System.DateTime startDate, System.DateTime endDate, string readingType, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByMeterNoAndTypeOperationCompleted == null)) {
                this.GetReadingsByMeterNoAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByMeterNoAndTypeOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByMeterNoAndType", new object[] {
                        meterNo,
                        startDate,
                        endDate,
                        readingType,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByMeterNoAndTypeOperationCompleted, userState);
        }
        
        private void OnGetReadingsByMeterNoAndTypeOperationCompleted(object arg) {
            if ((this.GetReadingsByMeterNoAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByMeterNoAndTypeCompleted(this, new GetReadingsByMeterNoAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetLatestReadings", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterRead[] GetLatestReadings(string lastReceived) {
            object[] results = this.Invoke("GetLatestReadings", new object[] {
                        lastReceived});
            return ((meterRead[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsAsync(string lastReceived) {
            this.GetLatestReadingsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsAsync(string lastReceived, object userState) {
            if ((this.GetLatestReadingsOperationCompleted == null)) {
                this.GetLatestReadingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadings", new object[] {
                        lastReceived}, this.GetLatestReadingsOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsOperationCompleted(object arg) {
            if ((this.GetLatestReadingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsCompleted(this, new GetLatestReadingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetReadingsByUOMAndDate", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterRead[] GetReadingsByUOMAndDate(string uomData, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetReadingsByUOMAndDate", new object[] {
                        uomData,
                        startDate,
                        endDate,
                        lastReceived});
            return ((meterRead[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByUOMAndDateAsync(string uomData, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetReadingsByUOMAndDateAsync(uomData, startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetReadingsByUOMAndDateAsync(string uomData, System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetReadingsByUOMAndDateOperationCompleted == null)) {
                this.GetReadingsByUOMAndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByUOMAndDateOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByUOMAndDate", new object[] {
                        uomData,
                        startDate,
                        endDate,
                        lastReceived}, this.GetReadingsByUOMAndDateOperationCompleted, userState);
        }
        
        private void OnGetReadingsByUOMAndDateOperationCompleted(object arg) {
            if ((this.GetReadingsByUOMAndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByUOMAndDateCompleted(this, new GetReadingsByUOMAndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllOutageDetectionDevices", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetAllOutageDetectionDevices(string lastReceived) {
            object[] results = this.Invoke("GetAllOutageDetectionDevices", new object[] {
                        lastReceived});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOutageDetectionDevicesAsync(string lastReceived) {
            this.GetAllOutageDetectionDevicesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllOutageDetectionDevicesAsync(string lastReceived, object userState) {
            if ((this.GetAllOutageDetectionDevicesOperationCompleted == null)) {
                this.GetAllOutageDetectionDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOutageDetectionDevicesOperationCompleted);
            }
            this.InvokeAsync("GetAllOutageDetectionDevices", new object[] {
                        lastReceived}, this.GetAllOutageDetectionDevicesOperationCompleted, userState);
        }
        
        private void OnGetAllOutageDetectionDevicesOperationCompleted(object arg) {
            if ((this.GetAllOutageDetectionDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOutageDetectionDevicesCompleted(this, new GetAllOutageDetectionDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetOutageDetectionDevicesByMeterNo", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutageDetectionDevicesByMeterNo(string meterNo) {
            object[] results = this.Invoke("GetOutageDetectionDevicesByMeterNo", new object[] {
                        meterNo});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByMeterNoAsync(string meterNo) {
            this.GetOutageDetectionDevicesByMeterNoAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByMeterNoAsync(string meterNo, object userState) {
            if ((this.GetOutageDetectionDevicesByMeterNoOperationCompleted == null)) {
                this.GetOutageDetectionDevicesByMeterNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageDetectionDevicesByMeterNoOperationCompleted);
            }
            this.InvokeAsync("GetOutageDetectionDevicesByMeterNo", new object[] {
                        meterNo}, this.GetOutageDetectionDevicesByMeterNoOperationCompleted, userState);
        }
        
        private void OnGetOutageDetectionDevicesByMeterNoOperationCompleted(object arg) {
            if ((this.GetOutageDetectionDevicesByMeterNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageDetectionDevicesByMeterNoCompleted(this, new GetOutageDetectionDevicesByMeterNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetOutageDetectionDevicesByStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutageDetectionDevicesByStatus(outageDetectDeviceStatus oDDStatus, string lastReceived) {
            object[] results = this.Invoke("GetOutageDetectionDevicesByStatus", new object[] {
                        oDDStatus,
                        lastReceived});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByStatusAsync(outageDetectDeviceStatus oDDStatus, string lastReceived) {
            this.GetOutageDetectionDevicesByStatusAsync(oDDStatus, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByStatusAsync(outageDetectDeviceStatus oDDStatus, string lastReceived, object userState) {
            if ((this.GetOutageDetectionDevicesByStatusOperationCompleted == null)) {
                this.GetOutageDetectionDevicesByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageDetectionDevicesByStatusOperationCompleted);
            }
            this.InvokeAsync("GetOutageDetectionDevicesByStatus", new object[] {
                        oDDStatus,
                        lastReceived}, this.GetOutageDetectionDevicesByStatusOperationCompleted, userState);
        }
        
        private void OnGetOutageDetectionDevicesByStatusOperationCompleted(object arg) {
            if ((this.GetOutageDetectionDevicesByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageDetectionDevicesByStatusCompleted(this, new GetOutageDetectionDevicesByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetOutageDetectionDevicesByType", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutageDetectionDevicesByType(outageDetectDeviceType oDDType, string lastReceived) {
            object[] results = this.Invoke("GetOutageDetectionDevicesByType", new object[] {
                        oDDType,
                        lastReceived});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByTypeAsync(outageDetectDeviceType oDDType, string lastReceived) {
            this.GetOutageDetectionDevicesByTypeAsync(oDDType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByTypeAsync(outageDetectDeviceType oDDType, string lastReceived, object userState) {
            if ((this.GetOutageDetectionDevicesByTypeOperationCompleted == null)) {
                this.GetOutageDetectionDevicesByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageDetectionDevicesByTypeOperationCompleted);
            }
            this.InvokeAsync("GetOutageDetectionDevicesByType", new object[] {
                        oDDType,
                        lastReceived}, this.GetOutageDetectionDevicesByTypeOperationCompleted, userState);
        }
        
        private void OnGetOutageDetectionDevicesByTypeOperationCompleted(object arg) {
            if ((this.GetOutageDetectionDevicesByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageDetectionDevicesByTypeCompleted(this, new GetOutageDetectionDevicesByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetOutagedODDevices", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutagedODDevices() {
            object[] results = this.Invoke("GetOutagedODDevices", new object[0]);
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutagedODDevicesAsync() {
            this.GetOutagedODDevicesAsync(null);
        }
        
        /// <remarks/>
        public void GetOutagedODDevicesAsync(object userState) {
            if ((this.GetOutagedODDevicesOperationCompleted == null)) {
                this.GetOutagedODDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutagedODDevicesOperationCompleted);
            }
            this.InvokeAsync("GetOutagedODDevices", new object[0], this.GetOutagedODDevicesOperationCompleted, userState);
        }
        
        private void OnGetOutagedODDevicesOperationCompleted(object arg) {
            if ((this.GetOutagedODDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutagedODDevicesCompleted(this, new GetOutagedODDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetCDSupportedMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetCDSupportedMeters(string lastReceived) {
            object[] results = this.Invoke("GetCDSupportedMeters", new object[] {
                        lastReceived});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCDSupportedMetersAsync(string lastReceived) {
            this.GetCDSupportedMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetCDSupportedMetersAsync(string lastReceived, object userState) {
            if ((this.GetCDSupportedMetersOperationCompleted == null)) {
                this.GetCDSupportedMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCDSupportedMetersOperationCompleted);
            }
            this.InvokeAsync("GetCDSupportedMeters", new object[] {
                        lastReceived}, this.GetCDSupportedMetersOperationCompleted, userState);
        }
        
        private void OnGetCDSupportedMetersOperationCompleted(object arg) {
            if ((this.GetCDSupportedMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCDSupportedMetersCompleted(this, new GetCDSupportedMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetModifiedCDMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meter[] GetModifiedCDMeters(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedCDMeters", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((meter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedCDMetersAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedCDMetersAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedCDMetersAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedCDMetersOperationCompleted == null)) {
                this.GetModifiedCDMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedCDMetersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedCDMeters", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedCDMetersOperationCompleted, userState);
        }
        
        private void OnGetModifiedCDMetersOperationCompleted(object arg) {
            if ((this.GetModifiedCDMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedCDMetersCompleted(this, new GetModifiedCDMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetCDMeterState", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public loadActionCode GetCDMeterState(string meterNo) {
            object[] results = this.Invoke("GetCDMeterState", new object[] {
                        meterNo});
            return ((loadActionCode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCDMeterStateAsync(string meterNo) {
            this.GetCDMeterStateAsync(meterNo, null);
        }
        
        /// <remarks/>
        public void GetCDMeterStateAsync(string meterNo, object userState) {
            if ((this.GetCDMeterStateOperationCompleted == null)) {
                this.GetCDMeterStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCDMeterStateOperationCompleted);
            }
            this.InvokeAsync("GetCDMeterState", new object[] {
                        meterNo}, this.GetCDMeterStateOperationCompleted, userState);
        }
        
        private void OnGetCDMeterStateOperationCompleted(object arg) {
            if ((this.GetCDMeterStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCDMeterStateCompleted(this, new GetCDMeterStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetOutageEventStatus", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageEventStatus GetOutageEventStatus(string outageEventID) {
            object[] results = this.Invoke("GetOutageEventStatus", new object[] {
                        outageEventID});
            return ((outageEventStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageEventStatusAsync(string outageEventID) {
            this.GetOutageEventStatusAsync(outageEventID, null);
        }
        
        /// <remarks/>
        public void GetOutageEventStatusAsync(string outageEventID, object userState) {
            if ((this.GetOutageEventStatusOperationCompleted == null)) {
                this.GetOutageEventStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageEventStatusOperationCompleted);
            }
            this.InvokeAsync("GetOutageEventStatus", new object[] {
                        outageEventID}, this.GetOutageEventStatusOperationCompleted, userState);
        }
        
        private void OnGetOutageEventStatusOperationCompleted(object arg) {
            if ((this.GetOutageEventStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageEventStatusCompleted(this, new GetOutageEventStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetActiveOutages", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetActiveOutages() {
            object[] results = this.Invoke("GetActiveOutages", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveOutagesAsync() {
            this.GetActiveOutagesAsync(null);
        }
        
        /// <remarks/>
        public void GetActiveOutagesAsync(object userState) {
            if ((this.GetActiveOutagesOperationCompleted == null)) {
                this.GetActiveOutagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveOutagesOperationCompleted);
            }
            this.InvokeAsync("GetActiveOutages", new object[0], this.GetActiveOutagesOperationCompleted, userState);
        }
        
        private void OnGetActiveOutagesOperationCompleted(object arg) {
            if ((this.GetActiveOutagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveOutagesCompleted(this, new GetActiveOutagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetOutageEventStatusByOutageLocation", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageEventStatus GetOutageEventStatusByOutageLocation(outageLocation location) {
            object[] results = this.Invoke("GetOutageEventStatusByOutageLocation", new object[] {
                        location});
            return ((outageEventStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageEventStatusByOutageLocationAsync(outageLocation location) {
            this.GetOutageEventStatusByOutageLocationAsync(location, null);
        }
        
        /// <remarks/>
        public void GetOutageEventStatusByOutageLocationAsync(outageLocation location, object userState) {
            if ((this.GetOutageEventStatusByOutageLocationOperationCompleted == null)) {
                this.GetOutageEventStatusByOutageLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageEventStatusByOutageLocationOperationCompleted);
            }
            this.InvokeAsync("GetOutageEventStatusByOutageLocation", new object[] {
                        location}, this.GetOutageEventStatusByOutageLocationOperationCompleted, userState);
        }
        
        private void OnGetOutageEventStatusByOutageLocationOperationCompleted(object arg) {
            if ((this.GetOutageEventStatusByOutageLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageEventStatusByOutageLocationCompleted(this, new GetOutageEventStatusByOutageLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllElectricMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public electricMeter[] GetAllElectricMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllElectricMeters", new object[] {
                        lastReceived});
            return ((electricMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllElectricMetersAsync(string lastReceived) {
            this.GetAllElectricMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllElectricMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllElectricMetersOperationCompleted == null)) {
                this.GetAllElectricMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllElectricMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllElectricMeters", new object[] {
                        lastReceived}, this.GetAllElectricMetersOperationCompleted, userState);
        }
        
        private void OnGetAllElectricMetersOperationCompleted(object arg) {
            if ((this.GetAllElectricMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllElectricMetersCompleted(this, new GetAllElectricMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllGasMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public gasMeter[] GetAllGasMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllGasMeters", new object[] {
                        lastReceived});
            return ((gasMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGasMetersAsync(string lastReceived) {
            this.GetAllGasMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllGasMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllGasMetersOperationCompleted == null)) {
                this.GetAllGasMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGasMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllGasMeters", new object[] {
                        lastReceived}, this.GetAllGasMetersOperationCompleted, userState);
        }
        
        private void OnGetAllGasMetersOperationCompleted(object arg) {
            if ((this.GetAllGasMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGasMetersCompleted(this, new GetAllGasMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_3.0/GetAllWaterMeters", RequestNamespace="http://www.multispeak.org/Version_3.0", ResponseNamespace="http://www.multispeak.org/Version_3.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public waterMeter[] GetAllWaterMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllWaterMeters", new object[] {
                        lastReceived});
            return ((waterMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllWaterMetersAsync(string lastReceived) {
            this.GetAllWaterMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllWaterMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllWaterMetersOperationCompleted == null)) {
                this.GetAllWaterMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllWaterMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllWaterMeters", new object[] {
                        lastReceived}, this.GetAllWaterMetersOperationCompleted, userState);
        }
        
        private void OnGetAllWaterMetersOperationCompleted(object arg) {
            if ((this.GetAllWaterMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllWaterMetersCompleted(this, new GetAllWaterMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.multispeak.org/Version_3.0", IsNullable=false)]
    public partial class MultiSpeakMsgHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string versionField;
        
        private string userIDField;
        
        private string pwdField;
        
        private string appNameField;
        
        private string appVersionField;
        
        private string companyField;
        
        private MessageHeaderCSUnits cSUnitsField;
        
        private string coordinateSystemField;
        
        private string datumField;
        
        private string sessionIDField;
        
        private string previousSessionIDField;
        
        private string objectsRemainingField;
        
        private string lastSentField;
        
        private string registrationIDField;
        
        private string auditIDField;
        
        private string messageIDField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private string buildStringField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        public MultiSpeakMsgHeader() {
            this.cSUnitsField = MessageHeaderCSUnits.feet;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AppName {
            get {
                return this.appNameField;
            }
            set {
                this.appNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AppVersion {
            get {
                return this.appVersionField;
            }
            set {
                this.appVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(MessageHeaderCSUnits.feet)]
        public MessageHeaderCSUnits CSUnits {
            get {
                return this.cSUnitsField;
            }
            set {
                this.cSUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CoordinateSystem {
            get {
                return this.coordinateSystemField;
            }
            set {
                this.coordinateSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PreviousSessionID {
            get {
                return this.previousSessionIDField;
            }
            set {
                this.previousSessionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string ObjectsRemaining {
            get {
                return this.objectsRemainingField;
            }
            set {
                this.objectsRemainingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LastSent {
            get {
                return this.lastSentField;
            }
            set {
                this.lastSentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RegistrationID {
            get {
                return this.registrationIDField;
            }
            set {
                this.registrationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AuditID {
            get {
                return this.auditIDField;
            }
            set {
                this.auditIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BuildString {
            get {
                return this.buildStringField;
            }
            set {
                this.buildStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum MessageHeaderCSUnits {
        
        /// <remarks/>
        feet,
        
        /// <remarks/>
        meters,
        
        /// <remarks/>
        USSurveyFeet,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class remainingBalance {
        
        private float priorityBalanceField;
        
        private float sharedArrearsField;
        
        private float balanceField;
        
        private meterRead finalReadField;
        
        /// <remarks/>
        public float priorityBalance {
            get {
                return this.priorityBalanceField;
            }
            set {
                this.priorityBalanceField = value;
            }
        }
        
        /// <remarks/>
        public float sharedArrears {
            get {
                return this.sharedArrearsField;
            }
            set {
                this.sharedArrearsField = value;
            }
        }
        
        /// <remarks/>
        public float balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public meterRead finalRead {
            get {
                return this.finalReadField;
            }
            set {
                this.finalReadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterRead : mspObject {
        
        private string meterNoField;
        
        private string deviceIDField;
        
        private System.DateTime readingDateField;
        
        private bool readingDateFieldSpecified;
        
        private string posKWhField;
        
        private string negKWhField;
        
        private float kwField;
        
        private bool kwFieldSpecified;
        
        private float kVArField;
        
        private bool kVArFieldSpecified;
        
        private System.DateTime kWDateTimeField;
        
        private bool kWDateTimeFieldSpecified;
        
        private phaseCd phaseField;
        
        private bool phaseFieldSpecified;
        
        private string momentaryOutagesField;
        
        private string momentaryEventsField;
        
        private string sustainedOutagesField;
        
        private TOUReading[] tOUReadingsField;
        
        private readingValue[] readingValuesField;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime readingDate {
            get {
                return this.readingDateField;
            }
            set {
                this.readingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readingDateSpecified {
            get {
                return this.readingDateFieldSpecified;
            }
            set {
                this.readingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string posKWh {
            get {
                return this.posKWhField;
            }
            set {
                this.posKWhField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string negKWh {
            get {
                return this.negKWhField;
            }
            set {
                this.negKWhField = value;
            }
        }
        
        /// <remarks/>
        public float kW {
            get {
                return this.kwField;
            }
            set {
                this.kwField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWSpecified {
            get {
                return this.kwFieldSpecified;
            }
            set {
                this.kwFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kVAr {
            get {
                return this.kVArField;
            }
            set {
                this.kVArField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kVArSpecified {
            get {
                return this.kVArFieldSpecified;
            }
            set {
                this.kVArFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime kWDateTime {
            get {
                return this.kWDateTimeField;
            }
            set {
                this.kWDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWDateTimeSpecified {
            get {
                return this.kWDateTimeFieldSpecified;
            }
            set {
                this.kWDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string momentaryOutages {
            get {
                return this.momentaryOutagesField;
            }
            set {
                this.momentaryOutagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string momentaryEvents {
            get {
                return this.momentaryEventsField;
            }
            set {
                this.momentaryEventsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sustainedOutages {
            get {
                return this.sustainedOutagesField;
            }
            set {
                this.sustainedOutagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TOUReading[] TOUReadings {
            get {
                return this.tOUReadingsField;
            }
            set {
                this.tOUReadingsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public readingValue[] readingValues {
            get {
                return this.readingValuesField;
            }
            set {
                this.readingValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum phaseCd {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        AB,
        
        /// <remarks/>
        AC,
        
        /// <remarks/>
        BC,
        
        /// <remarks/>
        ABC,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class TOUReading {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string ratePeriodField;
        
        private string kWhField;
        
        private float kwField;
        
        private bool kwFieldSpecified;
        
        private System.DateTime kWDateTimeField;
        
        private bool kWDateTimeFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string ratePeriod {
            get {
                return this.ratePeriodField;
            }
            set {
                this.ratePeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string kWh {
            get {
                return this.kWhField;
            }
            set {
                this.kWhField = value;
            }
        }
        
        /// <remarks/>
        public float kW {
            get {
                return this.kwField;
            }
            set {
                this.kwField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWSpecified {
            get {
                return this.kwFieldSpecified;
            }
            set {
                this.kwFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime kWDateTime {
            get {
                return this.kWDateTimeField;
            }
            set {
                this.kWDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWDateTimeSpecified {
            get {
                return this.kWDateTimeFieldSpecified;
            }
            set {
                this.kWDateTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class extensions {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class extensionsItem {
        
        private string extNameField;
        
        private string extValueField;
        
        private extensionsItemExtType extTypeField;
        
        private bool extTypeFieldSpecified;
        
        /// <remarks/>
        public string extName {
            get {
                return this.extNameField;
            }
            set {
                this.extNameField = value;
            }
        }
        
        /// <remarks/>
        public string extValue {
            get {
                return this.extValueField;
            }
            set {
                this.extValueField = value;
            }
        }
        
        /// <remarks/>
        public extensionsItemExtType extType {
            get {
                return this.extTypeField;
            }
            set {
                this.extTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool extTypeSpecified {
            get {
                return this.extTypeFieldSpecified;
            }
            set {
                this.extTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum extensionsItemExtType {
        
        /// <remarks/>
        anySimpleType,
        
        /// <remarks/>
        anyType,
        
        /// <remarks/>
        anyURI,
        
        /// <remarks/>
        base64Binary,
        
        /// <remarks/>
        boolean,
        
        /// <remarks/>
        @byte,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        dateTime,
        
        /// <remarks/>
        @decimal,
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        duration,
        
        /// <remarks/>
        ENTITIES,
        
        /// <remarks/>
        ENTITY,
        
        /// <remarks/>
        @float,
        
        /// <remarks/>
        gDay,
        
        /// <remarks/>
        gMonth,
        
        /// <remarks/>
        gMonthDay,
        
        /// <remarks/>
        gYear,
        
        /// <remarks/>
        gYearMonth,
        
        /// <remarks/>
        hexBinary,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        IDREF,
        
        /// <remarks/>
        IDREFS,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        integer,
        
        /// <remarks/>
        language,
        
        /// <remarks/>
        @long,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        NCName,
        
        /// <remarks/>
        negativeInteger,
        
        /// <remarks/>
        NMTOKEN,
        
        /// <remarks/>
        NMTOKENS,
        
        /// <remarks/>
        nonNegativeInteger,
        
        /// <remarks/>
        nonPositiveInteger,
        
        /// <remarks/>
        normalizedString,
        
        /// <remarks/>
        NOTATION,
        
        /// <remarks/>
        positiveInteger,
        
        /// <remarks/>
        QName,
        
        /// <remarks/>
        @short,
        
        /// <remarks/>
        @string,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        token,
        
        /// <remarks/>
        unsignedByte,
        
        /// <remarks/>
        unsignedInt,
        
        /// <remarks/>
        unsignedLong,
        
        /// <remarks/>
        unsignedShort,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class readingValue {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string unitsField;
        
        private string valueField;
        
        private string readingTypeField;
        
        private readingValueReadingValueType readingValueTypeField;
        
        private bool readingValueTypeFieldSpecified;
        
        private string nameField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private string fieldNameField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string readingType {
            get {
                return this.readingTypeField;
            }
            set {
                this.readingTypeField = value;
            }
        }
        
        /// <remarks/>
        public readingValueReadingValueType readingValueType {
            get {
                return this.readingValueTypeField;
            }
            set {
                this.readingValueTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readingValueTypeSpecified {
            get {
                return this.readingValueTypeFieldSpecified;
            }
            set {
                this.readingValueTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum readingValueReadingValueType {
        
        /// <remarks/>
        Energy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Negative Energy")]
        NegativeEnergy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current demand")]
        Currentdemand,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max demand")]
        Maxdemand,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min demand")]
        Mindemand,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current Voltage")]
        CurrentVoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max Voltage")]
        MaxVoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min Voltage")]
        MinVoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current Voltage Phase A")]
        CurrentVoltagePhaseA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current Voltage Phase B")]
        CurrentVoltagePhaseB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current Voltage Phase C")]
        CurrentVoltagePhaseC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max Voltage Phase A")]
        MaxVoltagePhaseA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max Voltage Phase B")]
        MaxVoltagePhaseB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max Voltage Phase C")]
        MaxVoltagePhaseC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min Voltage Phase A")]
        MinVoltagePhaseA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min Voltage Phase B")]
        MinVoltagePhaseB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min Voltage Phase C")]
        MinVoltagePhaseC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current kVAr")]
        CurrentkVAr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max kVar")]
        MaxkVar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min kVar")]
        MinkVar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kVar at demand peak")]
        kVaratdemandpeak,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current power factor")]
        Currentpowerfactor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max power factor")]
        Maxpowerfactor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min power factor")]
        Minpowerfactor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current frequency")]
        Currentfrequency,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Max frequency")]
        Maxfrequency,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Min frequency")]
        Minfrequency,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Momentary interruptions count")]
        Momentaryinterruptionscount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sustained interruptions count")]
        Sustainedinterruptionscount,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sustained interruptions duration")]
        Sustainedinterruptionsduration,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageReasonContainer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayBillingMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(voltageAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(blinkAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(configurationGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDurationEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AVLEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceLocations))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(substationLoadControlStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(endDeviceShipment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(schedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDStateChange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDState))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaAnalog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LMDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBaseExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loggedOutageDetectionEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(testedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meters))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clearance))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingStep))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billedUsage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billingDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billingData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(formattedBlockTemplate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(chargeableDeviceList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(chargeableDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterGroups))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterEventList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmMeterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmBalanceAdjustment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmTransaction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(payableItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(tender))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterConnectivity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageEventStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(circuitElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workOrderSelection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(profileObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(historyLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workTicket))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(backgroundGraphics))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(usage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(timesheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(employeeTimeRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assessment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspPolygonObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPolygonFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(parcel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(surgeArrestor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspLineObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spanGuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericLineFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gpsLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(feederObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(jumper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(elbow))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cut))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspOverCurrentDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breaker))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(module))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(anchor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspPointObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspAssetHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assessmentLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(premise))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spatialFeatureGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(station))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(substation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(motor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadManagementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measurementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(pole))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerSystemDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(riser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(streetLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(primaryCabinet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(secondaryJunctionBox))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(guy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPointFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(trafficLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(securityLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericAnnotationFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaPoints))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(accumulatedValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspResultsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(shortCircuitAnalysisResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadFlowResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerFactorManagementEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageReasonCodeList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measurement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(materialManagementAssembly))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(materialItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadManagementEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(laborCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customersAttachedToDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customersAffectedByOutage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customerCall))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(crewActionEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(equipment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(employee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(vehicle))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(truck))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(crew))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(connectDisconnectList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(connectDisconnectEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(message))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(callBackList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billingAccountLoad))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterRead))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspObject {
        
        private extensions extensionsField;
        
        private string commentsField;
        
        private extensionsItem[] extensionsListField;
        
        private string objectIDField;
        
        private action verbField;
        
        private string errorStringField;
        
        private string replaceIDField;
        
        private string utilityField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        public mspObject() {
            this.verbField = action.Change;
        }
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(action.Change)]
        public action verb {
            get {
                return this.verbField;
            }
            set {
                this.verbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorString {
            get {
                return this.errorStringField;
            }
            set {
                this.errorStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string replaceID {
            get {
                return this.replaceIDField;
            }
            set {
                this.replaceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum action {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Change,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Replace,
        
        /// <remarks/>
        Link,
        
        /// <remarks/>
        Unlink,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageReasonContainer : mspObject {
        
        private outageReasonItem[] outageReasonListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageReasonItem[] outageReasonList {
            get {
                return this.outageReasonListField;
            }
            set {
                this.outageReasonListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageReasonItem {
        
        private string categoryField;
        
        private string categoryGroupField;
        
        private outageReason outageReasonField;
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string categoryGroup {
            get {
                return this.categoryGroupField;
            }
            set {
                this.categoryGroupField = value;
            }
        }
        
        /// <remarks/>
        public outageReason outageReason {
            get {
                return this.outageReasonField;
            }
            set {
                this.outageReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageReason {
        
        private string descriptionField;
        
        private outageReportingCode[] outageReportingCodeListField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageReportingCode[] outageReportingCodeList {
            get {
                return this.outageReportingCodeListField;
            }
            set {
                this.outageReportingCodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageReportingCode {
        
        private string reportingBodyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string reportingBody {
            get {
                return this.reportingBodyField;
            }
            set {
                this.reportingBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class inHomeDisplayGroup : mspObject {
        
        private string groupNameField;
        
        private string[] inHomeDisplayListField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("inHomeDisplayID", IsNullable=false)]
        public string[] inHomeDisplayList {
            get {
                return this.inHomeDisplayListField;
            }
            set {
                this.inHomeDisplayListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class inHomeDisplayMessage : mspObject {
        
        private string inHomeDisplayIDField;
        
        private msgLine[] msgLineListField;
        
        private float durationField;
        
        private bool durationFieldSpecified;
        
        private string priorityOrderField;
        
        private bool isAlertField;
        
        private bool isAlertFieldSpecified;
        
        private string alertLevelField;
        
        private string reasonField;
        
        /// <remarks/>
        public string inHomeDisplayID {
            get {
                return this.inHomeDisplayIDField;
            }
            set {
                this.inHomeDisplayIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public msgLine[] msgLineList {
            get {
                return this.msgLineListField;
            }
            set {
                this.msgLineListField = value;
            }
        }
        
        /// <remarks/>
        public float duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool isAlert {
            get {
                return this.isAlertField;
            }
            set {
                this.isAlertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isAlertSpecified {
            get {
                return this.isAlertFieldSpecified;
            }
            set {
                this.isAlertFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string alertLevel {
            get {
                return this.alertLevelField;
            }
            set {
                this.alertLevelField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class msgLine {
        
        private string sequenceNumberField;
        
        private string textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class inHomeDisplayBillingMessage : mspObject {
        
        private string inHomeDisplayIDField;
        
        private float currentBalanceField;
        
        private bool currentBalanceFieldSpecified;
        
        private float currentRateField;
        
        private bool currentRateFieldSpecified;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private string priorityOrderField;
        
        private float averageDailyUsageField;
        
        private bool averageDailyUsageFieldSpecified;
        
        private float usedYesterdayField;
        
        private bool usedYesterdayFieldSpecified;
        
        private float usedThisMonthField;
        
        private bool usedThisMonthFieldSpecified;
        
        private float usedLastMonthField;
        
        private bool usedLastMonthFieldSpecified;
        
        private float usedFourWeeksAgoField;
        
        private bool usedFourWeeksAgoFieldSpecified;
        
        private float usedThisMonthLastYearField;
        
        private bool usedThisMonthLastYearFieldSpecified;
        
        private usageOtherPeriod[] usageOtherPeriodListField;
        
        private string daysRemainingField;
        
        /// <remarks/>
        public string inHomeDisplayID {
            get {
                return this.inHomeDisplayIDField;
            }
            set {
                this.inHomeDisplayIDField = value;
            }
        }
        
        /// <remarks/>
        public float currentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                this.currentBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentBalanceSpecified {
            get {
                return this.currentBalanceFieldSpecified;
            }
            set {
                this.currentBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float currentRate {
            get {
                return this.currentRateField;
            }
            set {
                this.currentRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentRateSpecified {
            get {
                return this.currentRateFieldSpecified;
            }
            set {
                this.currentRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
        
        /// <remarks/>
        public float averageDailyUsage {
            get {
                return this.averageDailyUsageField;
            }
            set {
                this.averageDailyUsageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool averageDailyUsageSpecified {
            get {
                return this.averageDailyUsageFieldSpecified;
            }
            set {
                this.averageDailyUsageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float usedYesterday {
            get {
                return this.usedYesterdayField;
            }
            set {
                this.usedYesterdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedYesterdaySpecified {
            get {
                return this.usedYesterdayFieldSpecified;
            }
            set {
                this.usedYesterdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float usedThisMonth {
            get {
                return this.usedThisMonthField;
            }
            set {
                this.usedThisMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedThisMonthSpecified {
            get {
                return this.usedThisMonthFieldSpecified;
            }
            set {
                this.usedThisMonthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float usedLastMonth {
            get {
                return this.usedLastMonthField;
            }
            set {
                this.usedLastMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedLastMonthSpecified {
            get {
                return this.usedLastMonthFieldSpecified;
            }
            set {
                this.usedLastMonthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float usedFourWeeksAgo {
            get {
                return this.usedFourWeeksAgoField;
            }
            set {
                this.usedFourWeeksAgoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedFourWeeksAgoSpecified {
            get {
                return this.usedFourWeeksAgoFieldSpecified;
            }
            set {
                this.usedFourWeeksAgoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float usedThisMonthLastYear {
            get {
                return this.usedThisMonthLastYearField;
            }
            set {
                this.usedThisMonthLastYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usedThisMonthLastYearSpecified {
            get {
                return this.usedThisMonthLastYearFieldSpecified;
            }
            set {
                this.usedThisMonthLastYearFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public usageOtherPeriod[] usageOtherPeriodList {
            get {
                return this.usageOtherPeriodListField;
            }
            set {
                this.usageOtherPeriodListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string daysRemaining {
            get {
                return this.daysRemainingField;
            }
            set {
                this.daysRemainingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class usageOtherPeriod {
        
        private float usageThisPeriodField;
        
        private bool usageThisPeriodFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private string periodDescriptionField;
        
        /// <remarks/>
        public float usageThisPeriod {
            get {
                return this.usageThisPeriodField;
            }
            set {
                this.usageThisPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usageThisPeriodSpecified {
            get {
                return this.usageThisPeriodFieldSpecified;
            }
            set {
                this.usageThisPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string periodDescription {
            get {
                return this.periodDescriptionField;
            }
            set {
                this.periodDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(voltageAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(blinkAlarm))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspAlarm : mspObject {
        
        private objectRef sourceIdentifierField;
        
        private System.DateTime eventTimeField;
        
        private meterEvent eventCodeField;
        
        /// <remarks/>
        public objectRef sourceIdentifier {
            get {
                return this.sourceIdentifierField;
            }
            set {
                this.sourceIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        public meterEvent eventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(eaLoc))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class objectRef {
        
        private string nameField;
        
        private System.Xml.XmlQualifiedName nounField;
        
        private string objectIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName noun {
            get {
                return this.nounField;
            }
            set {
                this.nounField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class eaLoc : objectRef {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterEvent {
        
        private string domainField;
        
        private string domainPartField;
        
        private string typeField;
        
        private string indexField;
        
        private string valueField;
        
        private string codeStringField;
        
        private string valueField1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domainPart {
            get {
                return this.domainPartField;
            }
            set {
                this.domainPartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string codeString {
            get {
                return this.codeStringField;
            }
            set {
                this.codeStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField1;
            }
            set {
                this.valueField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class voltageAlarm : mspAlarm {
        
        private voltageAlarmItem[] voltageAlarmListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public voltageAlarmItem[] voltageAlarmList {
            get {
                return this.voltageAlarmListField;
            }
            set {
                this.voltageAlarmListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class voltageAlarmItem {
        
        private float voltageValueField;
        
        private bool voltageValueFieldSpecified;
        
        private unitPrefix unitPrefixField;
        
        private bool unitPrefixFieldSpecified;
        
        private qualityDescription qualityField;
        
        private bool qualityFieldSpecified;
        
        private analogCondition analogConditionField;
        
        private bool analogConditionFieldSpecified;
        
        private phaseCd phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        /// <remarks/>
        public float voltageValue {
            get {
                return this.voltageValueField;
            }
            set {
                this.voltageValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool voltageValueSpecified {
            get {
                return this.voltageValueFieldSpecified;
            }
            set {
                this.voltageValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitPrefix unitPrefix {
            get {
                return this.unitPrefixField;
            }
            set {
                this.unitPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitPrefixSpecified {
            get {
                return this.unitPrefixFieldSpecified;
            }
            set {
                this.unitPrefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public analogCondition analogCondition {
            get {
                return this.analogConditionField;
            }
            set {
                this.analogConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool analogConditionSpecified {
            get {
                return this.analogConditionFieldSpecified;
            }
            set {
                this.analogConditionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum unitPrefix {
        
        /// <remarks/>
        Maximum,
        
        /// <remarks/>
        Minimum,
        
        /// <remarks/>
        Average,
        
        /// <remarks/>
        Instantaneous,
        
        /// <remarks/>
        Cumulative,
        
        /// <remarks/>
        Quantity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum qualityDescription {
        
        /// <remarks/>
        Measured,
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Estimated,
        
        /// <remarks/>
        Calculated,
        
        /// <remarks/>
        Initial,
        
        /// <remarks/>
        Last,
        
        /// <remarks/>
        Failed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum analogCondition {
        
        /// <remarks/>
        L4,
        
        /// <remarks/>
        L3,
        
        /// <remarks/>
        L2,
        
        /// <remarks/>
        L1,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        H1,
        
        /// <remarks/>
        H2,
        
        /// <remarks/>
        H3,
        
        /// <remarks/>
        H4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class blinkAlarm : mspAlarm {
        
        private string countedValueField;
        
        private string ceilingValueField;
        
        private bool latchesAtMaximumField;
        
        private bool latchesAtMaximumFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string countedValue {
            get {
                return this.countedValueField;
            }
            set {
                this.countedValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string ceilingValue {
            get {
                return this.ceilingValueField;
            }
            set {
                this.ceilingValueField = value;
            }
        }
        
        /// <remarks/>
        public bool latchesAtMaximum {
            get {
                return this.latchesAtMaximumField;
            }
            set {
                this.latchesAtMaximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latchesAtMaximumSpecified {
            get {
                return this.latchesAtMaximumFieldSpecified;
            }
            set {
                this.latchesAtMaximumFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class configurationGroup : mspObject {
        
        private string groupNameField;
        
        private meterRef[] meterRefListField;
        
        private configuredReadingType[] configuredReadingTypesField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterRef[] meterRefList {
            get {
                return this.meterRefListField;
            }
            set {
                this.meterRefListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configuredReadingType[] configuredReadingTypes {
            get {
                return this.configuredReadingTypesField;
            }
            set {
                this.configuredReadingTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterRef {
        
        private string meterNoField;
        
        private string meterIDField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum serviceType {
        
        /// <remarks/>
        Electric,
        
        /// <remarks/>
        Gas,
        
        /// <remarks/>
        Water,
        
        /// <remarks/>
        Propane,
        
        /// <remarks/>
        Refuse,
        
        /// <remarks/>
        Sewer,
        
        /// <remarks/>
        Telecom,
        
        /// <remarks/>
        Cable,
        
        /// <remarks/>
        Heating,
        
        /// <remarks/>
        Steam,
        
        /// <remarks/>
        Transportation,
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class configuredReadingType {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private string readingTypeField;
        
        private string fieldNameField;
        
        private string nameField;
        
        private readingTypeCode readingTypeCodeField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string readingType {
            get {
                return this.readingTypeField;
            }
            set {
                this.readingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public readingTypeCode readingTypeCode {
            get {
                return this.readingTypeCodeField;
            }
            set {
                this.readingTypeCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum uom {
        
        /// <remarks/>
        Wh,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        kWh,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        MWh,
        
        /// <remarks/>
        MW,
        
        /// <remarks/>
        GWh,
        
        /// <remarks/>
        GW,
        
        /// <remarks/>
        mWh,
        
        /// <remarks/>
        mW,
        
        /// <remarks/>
        microWh,
        
        /// <remarks/>
        microW,
        
        /// <remarks/>
        VARh,
        
        /// <remarks/>
        VAR,
        
        /// <remarks/>
        kVARh,
        
        /// <remarks/>
        kVAR,
        
        /// <remarks/>
        MVARh,
        
        /// <remarks/>
        MVAR,
        
        /// <remarks/>
        GVARh,
        
        /// <remarks/>
        GVAR,
        
        /// <remarks/>
        mVARh,
        
        /// <remarks/>
        mVAR,
        
        /// <remarks/>
        microVARh,
        
        /// <remarks/>
        microVAR,
        
        /// <remarks/>
        VAh,
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        kVAh,
        
        /// <remarks/>
        kVA,
        
        /// <remarks/>
        MVAh,
        
        /// <remarks/>
        MVA,
        
        /// <remarks/>
        GVAh,
        
        /// <remarks/>
        GVA,
        
        /// <remarks/>
        mVAh,
        
        /// <remarks/>
        mVA,
        
        /// <remarks/>
        microVAh,
        
        /// <remarks/>
        microVA,
        
        /// <remarks/>
        Qh,
        
        /// <remarks/>
        Q,
        
        /// <remarks/>
        kQh,
        
        /// <remarks/>
        kQ,
        
        /// <remarks/>
        MQh,
        
        /// <remarks/>
        MQ,
        
        /// <remarks/>
        GQh,
        
        /// <remarks/>
        GQ,
        
        /// <remarks/>
        mQh,
        
        /// <remarks/>
        mQ,
        
        /// <remarks/>
        microQh,
        
        /// <remarks/>
        microQ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("V RMS")]
        VRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kV RMS")]
        kVRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MV RMS")]
        MVRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mV RMS")]
        mVRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microV RMS")]
        microVRMS,
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        kV,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        mV,
        
        /// <remarks/>
        microV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Vsquared RMS")]
        VsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kVsquared RMS")]
        kVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MVsquared RMS")]
        MVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mVsquared RMS")]
        mVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microVsquared RMS")]
        microVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Amps RMS")]
        AmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kAmps RMS")]
        kAmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mamps RMS")]
        MampsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mAmps RMS")]
        mAmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microAmps RMS")]
        microAmpsRMS,
        
        /// <remarks/>
        Amps,
        
        /// <remarks/>
        kAmps,
        
        /// <remarks/>
        Mamps,
        
        /// <remarks/>
        mAmps,
        
        /// <remarks/>
        microAmps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Amps squared RMS")]
        AmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kAmps squared RMS")]
        kAmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mamps squared RMS")]
        MampssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mAmps squared RMS")]
        mAmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microAmps squared RMS")]
        microAmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("T.H.D. Voltage")]
        THDVoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("T.H.D. Current")]
        THDCurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Voltage phase angle")]
        Voltagephaseangle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current phase angle")]
        Currentphaseangle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Power factor")]
        Powerfactor,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Date time")]
        Datetime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Interval timer")]
        Intervaltimer,
        
        /// <remarks/>
        Frequency,
        
        /// <remarks/>
        Counter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sense input")]
        Senseinput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of pulse")]
        Nbrofpulse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of sag")]
        Nbrofsag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of swells")]
        Nbrofswells,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of power outage")]
        Nbrofpoweroutage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of excursion low")]
        Nbrofexcursionlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of excursion high")]
        Nbrofexcursionhigh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Normal voltage period")]
        Normalvoltageperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of voltage unbalance")]
        Nbrofvoltageunbalance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of V T.H.D. excess")]
        NbrofVTHDexcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of amps T.H.D. excess")]
        NbrofampsTHDexcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of demand resets")]
        Nbrofdemandresets,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of times programmed")]
        Nbroftimesprogrammed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Minutes on battery")]
        Minutesonbattery,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of inversion")]
        Nbrofinversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of removal")]
        Nbrofremoval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of reprogramming")]
        Nbrofreprogramming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of power loss")]
        Nbrofpowerloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of reverse rotation")]
        Nbrofreverserotation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of physical tamper")]
        Nbrofphysicaltamper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of encoder tamper")]
        Nbrofencodertamper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of watchdog")]
        Nbrofwatchdog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters uncorrected")]
        cubicmetersuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters per Hr uncorrected")]
        cubicmetersperHruncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters corrected")]
        cubicmeterscorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters per Hr corrected")]
        cubicmetersperHrcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet uncorrected")]
        cubicfeetuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr uncorrected")]
        cubicfeetperHruncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet corrected")]
        cubicfeetcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr corrected")]
        cubicfeetperHrcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg C")]
        degC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg F")]
        degF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg K")]
        degK,
        
        /// <remarks/>
        Joules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Joules per Hr")]
        JoulesperHr,
        
        /// <remarks/>
        kJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kJoules per Hr")]
        kJoulesperHr,
        
        /// <remarks/>
        MJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MJoules per Hr")]
        MJoulesperHr,
        
        /// <remarks/>
        mJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mJoules per Hr")]
        mJoulesperHr,
        
        /// <remarks/>
        microJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microJoules per Hr")]
        microJoulesperHr,
        
        /// <remarks/>
        Therm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Therm per Hr")]
        ThermperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Static pascal")]
        Staticpascal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Differential pascal")]
        Differentialpascal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Static pound per square inch")]
        Staticpoundpersquareinch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Differential pound per square inch")]
        Differentialpoundpersquareinch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Gram square cm")]
        Gramsquarecm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter HG column")]
        MeterHGcolumn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inches HG column")]
        InchesHGcolumn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inches H2O column")]
        InchesH2Ocolumn,
        
        /// <remarks/>
        Bar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("percent relative humidity")]
        percentrelativehumidity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM odorant")]
        PPModorant,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meter")]
        cubicmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meter per Hr")]
        cubicmeterperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet")]
        cubicfeet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr")]
        cubicfeetperHr,
        
        /// <remarks/>
        ccf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ccf per Hr")]
        ccfperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US gl")]
        USgl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US gl per Hr")]
        USglperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IMP gl")]
        IMPgl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IMP gl per Hr")]
        IMPglperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Acre ft")]
        Acreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM lead")]
        PPMlead,
        
        /// <remarks/>
        turbidity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM chlorine")]
        PPMchlorine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PH factor")]
        PHfactor,
        
        /// <remarks/>
        Corrosion,
        
        /// <remarks/>
        Ionization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM SO2")]
        PPMSO2,
        
        /// <remarks/>
        liters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pounds per square foot")]
        poundspersquarefoot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inches of water")]
        inchesofwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft of water")]
        ftofwater,
        
        /// <remarks/>
        atmospheres,
        
        /// <remarks/>
        Dollar,
        
        /// <remarks/>
        inches,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        dm,
        
        /// <remarks/>
        km,
        
        /// <remarks/>
        cm,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro m")]
        microm,
        
        /// <remarks/>
        percent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class readingTypeCode {
        
        private string nameField;
        
        private string timeAttributeField;
        
        private string dataQualifierField;
        
        private string accumulationBehaviorField;
        
        private string flowDirectionField;
        
        private string uOMCategoryField;
        
        private string measurementCategoryField;
        
        private string phaseIndexField;
        
        private string unitsMultiplierField;
        
        private string displayableUOMField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string timeAttribute {
            get {
                return this.timeAttributeField;
            }
            set {
                this.timeAttributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dataQualifier {
            get {
                return this.dataQualifierField;
            }
            set {
                this.dataQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string accumulationBehavior {
            get {
                return this.accumulationBehaviorField;
            }
            set {
                this.accumulationBehaviorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string flowDirection {
            get {
                return this.flowDirectionField;
            }
            set {
                this.flowDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UOMCategory {
            get {
                return this.uOMCategoryField;
            }
            set {
                this.uOMCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string measurementCategory {
            get {
                return this.measurementCategoryField;
            }
            set {
                this.measurementCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string phaseIndex {
            get {
                return this.phaseIndexField;
            }
            set {
                this.phaseIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string unitsMultiplier {
            get {
                return this.unitsMultiplierField;
            }
            set {
                this.unitsMultiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string displayableUOM {
            get {
                return this.displayableUOMField;
            }
            set {
                this.displayableUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageDurationEvent : mspObject {
        
        private string outageEventIDField;
        
        private string outageDescriptionField;
        
        private string meterNoField;
        
        private string servLocField;
        
        private string accountNumberField;
        
        private System.DateTime timeOfInterruptionField;
        
        private bool timeOfInterruptionFieldSpecified;
        
        private System.DateTime timeRestoredField;
        
        private bool timeRestoredFieldSpecified;
        
        private string interruptionDurationField;
        
        private bool customerResponsibleField;
        
        private bool customerResponsibleFieldSpecified;
        
        private string durationDisplayField;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public string outageDescription {
            get {
                return this.outageDescriptionField;
            }
            set {
                this.outageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfInterruption {
            get {
                return this.timeOfInterruptionField;
            }
            set {
                this.timeOfInterruptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfInterruptionSpecified {
            get {
                return this.timeOfInterruptionFieldSpecified;
            }
            set {
                this.timeOfInterruptionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeRestored {
            get {
                return this.timeRestoredField;
            }
            set {
                this.timeRestoredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeRestoredSpecified {
            get {
                return this.timeRestoredFieldSpecified;
            }
            set {
                this.timeRestoredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string interruptionDuration {
            get {
                return this.interruptionDurationField;
            }
            set {
                this.interruptionDurationField = value;
            }
        }
        
        /// <remarks/>
        public bool customerResponsible {
            get {
                return this.customerResponsibleField;
            }
            set {
                this.customerResponsibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool customerResponsibleSpecified {
            get {
                return this.customerResponsibleFieldSpecified;
            }
            set {
                this.customerResponsibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string durationDisplay {
            get {
                return this.durationDisplayField;
            }
            set {
                this.durationDisplayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageDetectionLog : mspObject {
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private loggedOutageDetectionEvent[] loggedODEventListField;
        
        private outageLocation outageLocationField;
        
        private message[] messageListField;
        
        private outageCustomer outageCustomerField;
        
        private priorityType priorityField;
        
        private bool priorityFieldSpecified;
        
        private resolvedLevel resolvedLevelField;
        
        private bool resolvedLevelFieldSpecified;
        
        private System.DateTime timeTroubleBeganField;
        
        private bool timeTroubleBeganFieldSpecified;
        
        private System.DateTime timeOfInitialEventField;
        
        private bool timeOfInitialEventFieldSpecified;
        
        private System.DateTime timeOfLastEventField;
        
        private bool timeOfLastEventFieldSpecified;
        
        private long eventsLoggedField;
        
        private bool eventsLoggedFieldSpecified;
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public loggedOutageDetectionEvent[] loggedODEventList {
            get {
                return this.loggedODEventListField;
            }
            set {
                this.loggedODEventListField = value;
            }
        }
        
        /// <remarks/>
        public outageLocation outageLocation {
            get {
                return this.outageLocationField;
            }
            set {
                this.outageLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public message[] messageList {
            get {
                return this.messageListField;
            }
            set {
                this.messageListField = value;
            }
        }
        
        /// <remarks/>
        public outageCustomer outageCustomer {
            get {
                return this.outageCustomerField;
            }
            set {
                this.outageCustomerField = value;
            }
        }
        
        /// <remarks/>
        public priorityType priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public resolvedLevel resolvedLevel {
            get {
                return this.resolvedLevelField;
            }
            set {
                this.resolvedLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolvedLevelSpecified {
            get {
                return this.resolvedLevelFieldSpecified;
            }
            set {
                this.resolvedLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeTroubleBegan {
            get {
                return this.timeTroubleBeganField;
            }
            set {
                this.timeTroubleBeganField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeTroubleBeganSpecified {
            get {
                return this.timeTroubleBeganFieldSpecified;
            }
            set {
                this.timeTroubleBeganFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfInitialEvent {
            get {
                return this.timeOfInitialEventField;
            }
            set {
                this.timeOfInitialEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfInitialEventSpecified {
            get {
                return this.timeOfInitialEventFieldSpecified;
            }
            set {
                this.timeOfInitialEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfLastEvent {
            get {
                return this.timeOfLastEventField;
            }
            set {
                this.timeOfLastEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfLastEventSpecified {
            get {
                return this.timeOfLastEventFieldSpecified;
            }
            set {
                this.timeOfLastEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long eventsLogged {
            get {
                return this.eventsLoggedField;
            }
            set {
                this.eventsLoggedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventsLoggedSpecified {
            get {
                return this.eventsLoggedFieldSpecified;
            }
            set {
                this.eventsLoggedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class loggedOutageDetectionEvent : mspObject {
        
        private string outageDetectionRecordIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string outageDetectDeviceIDField;
        
        private outageDetectDeviceType outageDetectDeviceTypeField;
        
        private bool outageDetectDeviceTypeFieldSpecified;
        
        private string problemCodeField;
        
        private outageEventType outageEventTypeField;
        
        private bool outageEventTypeFieldSpecified;
        
        private string takenByField;
        
        private callType callTypeField;
        
        private bool callTypeFieldSpecified;
        
        private string descriptionField;
        
        /// <remarks/>
        public string outageDetectionRecordID {
            get {
                return this.outageDetectionRecordIDField;
            }
            set {
                this.outageDetectionRecordIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string outageDetectDeviceID {
            get {
                return this.outageDetectDeviceIDField;
            }
            set {
                this.outageDetectDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceType outageDetectDeviceType {
            get {
                return this.outageDetectDeviceTypeField;
            }
            set {
                this.outageDetectDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectDeviceTypeSpecified {
            get {
                return this.outageDetectDeviceTypeFieldSpecified;
            }
            set {
                this.outageDetectDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string problemCode {
            get {
                return this.problemCodeField;
            }
            set {
                this.problemCodeField = value;
            }
        }
        
        /// <remarks/>
        public outageEventType outageEventType {
            get {
                return this.outageEventTypeField;
            }
            set {
                this.outageEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageEventTypeSpecified {
            get {
                return this.outageEventTypeFieldSpecified;
            }
            set {
                this.outageEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string takenBy {
            get {
                return this.takenByField;
            }
            set {
                this.takenByField = value;
            }
        }
        
        /// <remarks/>
        public callType callType {
            get {
                return this.callTypeField;
            }
            set {
                this.callTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callTypeSpecified {
            get {
                return this.callTypeFieldSpecified;
            }
            set {
                this.callTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum outageDetectDeviceType {
        
        /// <remarks/>
        Call,
        
        /// <remarks/>
        CustomerServiceRep,
        
        /// <remarks/>
        InboundTelephoneDevice,
        
        /// <remarks/>
        Meter,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum outageEventType {
        
        /// <remarks/>
        Instantaneous,
        
        /// <remarks/>
        Outage,
        
        /// <remarks/>
        Restoration,
        
        /// <remarks/>
        NoResponse,
        
        /// <remarks/>
        Inferred,
        
        /// <remarks/>
        PowerOn,
        
        /// <remarks/>
        PowerOff,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum callType {
        
        /// <remarks/>
        Call,
        
        /// <remarks/>
        CustomerServiceRep,
        
        /// <remarks/>
        InboundTelephoneDevice,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        manual,
        
        /// <remarks/>
        IVR,
        
        /// <remarks/>
        sensor,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageLocation : mspObject {
        
        private string servLocField;
        
        private string meterNoField;
        
        private string areaCodeField;
        
        private string phoneField;
        
        private string accountNumberField;
        
        private string gridLocationField;
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string areaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class message : mspObject {
        
        private string recordIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string wavPointerField;
        
        private System.DateTime listenedOnField;
        
        private bool listenedOnFieldSpecified;
        
        private string listenedByField;
        
        /// <remarks/>
        public string recordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string wavPointer {
            get {
                return this.wavPointerField;
            }
            set {
                this.wavPointerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime listenedOn {
            get {
                return this.listenedOnField;
            }
            set {
                this.listenedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool listenedOnSpecified {
            get {
                return this.listenedOnFieldSpecified;
            }
            set {
                this.listenedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string listenedBy {
            get {
                return this.listenedByField;
            }
            set {
                this.listenedByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageCustomer {
        
        private string custIDField;
        
        private string callBackACField;
        
        private string callBackPhoneField;
        
        private timePeriod timeToCallField;
        
        private bool callBackFlagField;
        
        private bool callBackFlagFieldSpecified;
        
        private string callBackContactFirstNameField;
        
        private string callBackContactLastNameField;
        
        private string callBackContactMNameField;
        
        private callBackStatus callBackStatusField;
        
        private bool callBackStatusFieldSpecified;
        
        private System.DateTime callBackCompletedTimeField;
        
        private bool callBackCompletedTimeFieldSpecified;
        
        private callBackType callBackTypeField;
        
        private bool callBackTypeFieldSpecified;
        
        private string callRecordIDField;
        
        private string outageEventIDField;
        
        private string callerIDACField;
        
        private string callerIDPhoneField;
        
        private string servLocField;
        
        private string meterNoField;
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string callBackAC {
            get {
                return this.callBackACField;
            }
            set {
                this.callBackACField = value;
            }
        }
        
        /// <remarks/>
        public string callBackPhone {
            get {
                return this.callBackPhoneField;
            }
            set {
                this.callBackPhoneField = value;
            }
        }
        
        /// <remarks/>
        public timePeriod timeToCall {
            get {
                return this.timeToCallField;
            }
            set {
                this.timeToCallField = value;
            }
        }
        
        /// <remarks/>
        public bool callBackFlag {
            get {
                return this.callBackFlagField;
            }
            set {
                this.callBackFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackFlagSpecified {
            get {
                return this.callBackFlagFieldSpecified;
            }
            set {
                this.callBackFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string callBackContactFirstName {
            get {
                return this.callBackContactFirstNameField;
            }
            set {
                this.callBackContactFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string callBackContactLastName {
            get {
                return this.callBackContactLastNameField;
            }
            set {
                this.callBackContactLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string callBackContactMName {
            get {
                return this.callBackContactMNameField;
            }
            set {
                this.callBackContactMNameField = value;
            }
        }
        
        /// <remarks/>
        public callBackStatus callBackStatus {
            get {
                return this.callBackStatusField;
            }
            set {
                this.callBackStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackStatusSpecified {
            get {
                return this.callBackStatusFieldSpecified;
            }
            set {
                this.callBackStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime callBackCompletedTime {
            get {
                return this.callBackCompletedTimeField;
            }
            set {
                this.callBackCompletedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackCompletedTimeSpecified {
            get {
                return this.callBackCompletedTimeFieldSpecified;
            }
            set {
                this.callBackCompletedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public callBackType callBackType {
            get {
                return this.callBackTypeField;
            }
            set {
                this.callBackTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackTypeSpecified {
            get {
                return this.callBackTypeFieldSpecified;
            }
            set {
                this.callBackTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string callRecordID {
            get {
                return this.callRecordIDField;
            }
            set {
                this.callRecordIDField = value;
            }
        }
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public string callerIDAC {
            get {
                return this.callerIDACField;
            }
            set {
                this.callerIDACField = value;
            }
        }
        
        /// <remarks/>
        public string callerIDPhone {
            get {
                return this.callerIDPhoneField;
            }
            set {
                this.callerIDPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class timePeriod {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum callBackStatus {
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        StillOff,
        
        /// <remarks/>
        Undialable,
        
        /// <remarks/>
        MaxDial,
        
        /// <remarks/>
        NoResponse,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum callBackType {
        
        /// <remarks/>
        IVR,
        
        /// <remarks/>
        Manual,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum priorityType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        NeedsAttention,
        
        /// <remarks/>
        Urgent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum resolvedLevel {
        
        /// <remarks/>
        Meter,
        
        /// <remarks/>
        Address,
        
        /// <remarks/>
        Unresolved,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class AVLEvent : mspObject {
        
        private System.DateTime gMTTimeField;
        
        private bool gMTTimeFieldSpecified;
        
        private string eventTypeField;
        
        private GPS gPSField;
        
        private AVLAddress aVLAddressField;
        
        private telemetry telemetryField;
        
        /// <remarks/>
        public System.DateTime GMTTime {
            get {
                return this.gMTTimeField;
            }
            set {
                this.gMTTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GMTTimeSpecified {
            get {
                return this.gMTTimeFieldSpecified;
            }
            set {
                this.gMTTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string eventType {
            get {
                return this.eventTypeField;
            }
            set {
                this.eventTypeField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
        
        /// <remarks/>
        public AVLAddress AVLAddress {
            get {
                return this.aVLAddressField;
            }
            set {
                this.aVLAddressField = value;
            }
        }
        
        /// <remarks/>
        public telemetry telemetry {
            get {
                return this.telemetryField;
            }
            set {
                this.telemetryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class GPS {
        
        private bool gPSValidityField;
        
        private bool gPSValidityFieldSpecified;
        
        private double latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private double longitudeField;
        
        private bool longitudeFieldSpecified;
        
        /// <remarks/>
        public bool GPSValidity {
            get {
                return this.gPSValidityField;
            }
            set {
                this.gPSValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GPSValiditySpecified {
            get {
                return this.gPSValidityFieldSpecified;
            }
            set {
                this.gPSValidityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class AVLAddress {
        
        private string streetField;
        
        private string crossStreetField;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        private string pOINameField;
        
        private string pOITypeField;
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string POIName {
            get {
                return this.pOINameField;
            }
            set {
                this.pOINameField = value;
            }
        }
        
        /// <remarks/>
        public string POIType {
            get {
                return this.pOITypeField;
            }
            set {
                this.pOITypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class telemetry {
        
        private float speedField;
        
        private bool speedFieldSpecified;
        
        private float headingField;
        
        private bool headingFieldSpecified;
        
        private string cardinalHeadingField;
        
        private float odometerField;
        
        private bool odometerFieldSpecified;
        
        private float maxVehSpeedLastReadingField;
        
        private bool maxVehSpeedLastReadingFieldSpecified;
        
        private string maxEngineSpeedLastReadingField;
        
        private string engineRunningStateField;
        
        private string gearShiftPositionField;
        
        private string vTCUEventField;
        
        /// <remarks/>
        public float speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool speedSpecified {
            get {
                return this.speedFieldSpecified;
            }
            set {
                this.speedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float heading {
            get {
                return this.headingField;
            }
            set {
                this.headingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool headingSpecified {
            get {
                return this.headingFieldSpecified;
            }
            set {
                this.headingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string cardinalHeading {
            get {
                return this.cardinalHeadingField;
            }
            set {
                this.cardinalHeadingField = value;
            }
        }
        
        /// <remarks/>
        public float odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool odometerSpecified {
            get {
                return this.odometerFieldSpecified;
            }
            set {
                this.odometerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float maxVehSpeedLastReading {
            get {
                return this.maxVehSpeedLastReadingField;
            }
            set {
                this.maxVehSpeedLastReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxVehSpeedLastReadingSpecified {
            get {
                return this.maxVehSpeedLastReadingFieldSpecified;
            }
            set {
                this.maxVehSpeedLastReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string maxEngineSpeedLastReading {
            get {
                return this.maxEngineSpeedLastReadingField;
            }
            set {
                this.maxEngineSpeedLastReadingField = value;
            }
        }
        
        /// <remarks/>
        public string engineRunningState {
            get {
                return this.engineRunningStateField;
            }
            set {
                this.engineRunningStateField = value;
            }
        }
        
        /// <remarks/>
        public string gearShiftPosition {
            get {
                return this.gearShiftPositionField;
            }
            set {
                this.gearShiftPositionField = value;
            }
        }
        
        /// <remarks/>
        public string VTCUEvent {
            get {
                return this.vTCUEventField;
            }
            set {
                this.vTCUEventField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class serviceLocations : mspObject {
        
        private electricServiceLocation[] electricServiceLocationsField;
        
        private waterServiceLocation[] waterServiceLocationsField;
        
        private gasServiceLocation[] gasServiceLocationsField;
        
        private propaneServiceLocation[] propaneServiceLocationsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public electricServiceLocation[] electricServiceLocations {
            get {
                return this.electricServiceLocationsField;
            }
            set {
                this.electricServiceLocationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public waterServiceLocation[] waterServiceLocations {
            get {
                return this.waterServiceLocationsField;
            }
            set {
                this.waterServiceLocationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public gasServiceLocation[] gasServiceLocations {
            get {
                return this.gasServiceLocationsField;
            }
            set {
                this.gasServiceLocationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public propaneServiceLocation[] propaneServiceLocations {
            get {
                return this.propaneServiceLocationsField;
            }
            set {
                this.propaneServiceLocationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class electricServiceLocation : mspServiceLocation {
        
        private object[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private powerStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private string specialNeedsField;
        
        private string loadMgmtField;
        
        private bool isCogenerationSiteField;
        
        private bool isCogenerationSiteFieldSpecified;
        
        private phaseCd phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private mspLoadGroup loadField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fromNodeID", typeof(nodeIdentifier))]
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID", typeof(objectRef))]
        [System.Xml.Serialization.XmlElementAttribute("sectionID", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("toNodeID", typeof(nodeIdentifier))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        public powerStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string specialNeeds {
            get {
                return this.specialNeedsField;
            }
            set {
                this.specialNeedsField = value;
            }
        }
        
        /// <remarks/>
        public string loadMgmt {
            get {
                return this.loadMgmtField;
            }
            set {
                this.loadMgmtField = value;
            }
        }
        
        /// <remarks/>
        public bool isCogenerationSite {
            get {
                return this.isCogenerationSiteField;
            }
            set {
                this.isCogenerationSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCogenerationSiteSpecified {
            get {
                return this.isCogenerationSiteFieldSpecified;
            }
            set {
                this.isCogenerationSiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspLoadGroup load {
            get {
                return this.loadField;
            }
            set {
                this.loadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class nodeIdentifier {
        
        private string nameField;
        
        private string objectIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        fromNodeID,
        
        /// <remarks/>
        parentSectionID,
        
        /// <remarks/>
        sectionID,
        
        /// <remarks/>
        toNodeID,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum powerStatus {
        
        /// <remarks/>
        PowerOn,
        
        /// <remarks/>
        PowerOff,
        
        /// <remarks/>
        StatusUnknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class mspLoadGroup {
        
        private long billRefField;
        
        private bool billRefFieldSpecified;
        
        private loadSection[] loadSectionField;
        
        /// <remarks/>
        public long billRef {
            get {
                return this.billRefField;
            }
            set {
                this.billRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billRefSpecified {
            get {
                return this.billRefFieldSpecified;
            }
            set {
                this.billRefFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("loadSection")]
        public loadSection[] loadSection {
            get {
                return this.loadSectionField;
            }
            set {
                this.loadSectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class loadSection {
        
        private string loadGroupField;
        
        private string loadDescField;
        
        private string loadZoneField;
        
        private loadDistr loadDistrField;
        
        private bool loadDistrFieldSpecified;
        
        private float loadGrowthField;
        
        private bool loadGrowthFieldSpecified;
        
        private loadInterruptibleType interruptibleTypeField;
        
        private bool interruptibleTypeFieldSpecified;
        
        private allocatedLoad[] allocatedField;
        
        /// <remarks/>
        public string loadGroup {
            get {
                return this.loadGroupField;
            }
            set {
                this.loadGroupField = value;
            }
        }
        
        /// <remarks/>
        public string loadDesc {
            get {
                return this.loadDescField;
            }
            set {
                this.loadDescField = value;
            }
        }
        
        /// <remarks/>
        public string loadZone {
            get {
                return this.loadZoneField;
            }
            set {
                this.loadZoneField = value;
            }
        }
        
        /// <remarks/>
        public loadDistr loadDistr {
            get {
                return this.loadDistrField;
            }
            set {
                this.loadDistrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadDistrSpecified {
            get {
                return this.loadDistrFieldSpecified;
            }
            set {
                this.loadDistrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float loadGrowth {
            get {
                return this.loadGrowthField;
            }
            set {
                this.loadGrowthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadGrowthSpecified {
            get {
                return this.loadGrowthFieldSpecified;
            }
            set {
                this.loadGrowthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public loadInterruptibleType interruptibleType {
            get {
                return this.interruptibleTypeField;
            }
            set {
                this.interruptibleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool interruptibleTypeSpecified {
            get {
                return this.interruptibleTypeFieldSpecified;
            }
            set {
                this.interruptibleTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public allocatedLoad[] allocated {
            get {
                return this.allocatedField;
            }
            set {
                this.allocatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum loadDistr {
        
        /// <remarks/>
        Uniform,
        
        /// <remarks/>
        LoadEnd,
        
        /// <remarks/>
        SourceEnd,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum loadInterruptibleType {
        
        /// <remarks/>
        General,
        
        /// <remarks/>
        Interruptible,
        
        /// <remarks/>
        NonInterruptible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class allocatedLoad {
        
        private phaseCd phaseField;
        
        private bool phaseFieldSpecified;
        
        private float kwField;
        
        private bool kwFieldSpecified;
        
        private float kvarField;
        
        private bool kvarFieldSpecified;
        
        private float noOfCustomersField;
        
        private bool noOfCustomersFieldSpecified;
        
        /// <remarks/>
        public phaseCd phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kw {
            get {
                return this.kwField;
            }
            set {
                this.kwField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwSpecified {
            get {
                return this.kwFieldSpecified;
            }
            set {
                this.kwFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kvar {
            get {
                return this.kvarField;
            }
            set {
                this.kvarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvarSpecified {
            get {
                return this.kvarFieldSpecified;
            }
            set {
                this.kvarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float noOfCustomers {
            get {
                return this.noOfCustomersField;
            }
            set {
                this.noOfCustomersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool noOfCustomersSpecified {
            get {
                return this.noOfCustomersFieldSpecified;
            }
            set {
                this.noOfCustomersFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricServiceLocation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspServiceLocation : mspPointObject {
        
        private graphicSymbol[] graphicSymbolField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private string custIDField;
        
        private string accountNumberField;
        
        private string facilityNameField;
        
        private string siteIDField;
        
        private address serviceAddressField;
        
        private string revenueClassField;
        
        private string servStatusField;
        
        private string billingCycleField;
        
        private string routeField;
        
        private string budgBillField;
        
        private float acRecvBalField;
        
        private bool acRecvBalFieldSpecified;
        
        private float acRecvCurField;
        
        private bool acRecvCurFieldSpecified;
        
        private float acRecv30Field;
        
        private bool acRecv30FieldSpecified;
        
        private float acRecv60Field;
        
        private bool acRecv60FieldSpecified;
        
        private float acRecv90Field;
        
        private bool acRecv90FieldSpecified;
        
        private System.DateTime paymentDueDateField;
        
        private bool paymentDueDateFieldSpecified;
        
        private System.DateTime lastPaymentDateField;
        
        private bool lastPaymentDateFieldSpecified;
        
        private float lastPaymentAmountField;
        
        private bool lastPaymentAmountFieldSpecified;
        
        private System.DateTime billDateField;
        
        private bool billDateFieldSpecified;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private mspNetwork networkField;
        
        private string sICField;
        
        private string woNumberField;
        
        private string soNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphicSymbol")]
        public graphicSymbol[] graphicSymbol {
            get {
                return this.graphicSymbolField;
            }
            set {
                this.graphicSymbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("annotationList")]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string facilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
            }
        }
        
        /// <remarks/>
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public address serviceAddress {
            get {
                return this.serviceAddressField;
            }
            set {
                this.serviceAddressField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public string servStatus {
            get {
                return this.servStatusField;
            }
            set {
                this.servStatusField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string budgBill {
            get {
                return this.budgBillField;
            }
            set {
                this.budgBillField = value;
            }
        }
        
        /// <remarks/>
        public float acRecvBal {
            get {
                return this.acRecvBalField;
            }
            set {
                this.acRecvBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecvBalSpecified {
            get {
                return this.acRecvBalFieldSpecified;
            }
            set {
                this.acRecvBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecvCur {
            get {
                return this.acRecvCurField;
            }
            set {
                this.acRecvCurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecvCurSpecified {
            get {
                return this.acRecvCurFieldSpecified;
            }
            set {
                this.acRecvCurFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecv30 {
            get {
                return this.acRecv30Field;
            }
            set {
                this.acRecv30Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecv30Specified {
            get {
                return this.acRecv30FieldSpecified;
            }
            set {
                this.acRecv30FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecv60 {
            get {
                return this.acRecv60Field;
            }
            set {
                this.acRecv60Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecv60Specified {
            get {
                return this.acRecv60FieldSpecified;
            }
            set {
                this.acRecv60FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecv90 {
            get {
                return this.acRecv90Field;
            }
            set {
                this.acRecv90Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecv90Specified {
            get {
                return this.acRecv90FieldSpecified;
            }
            set {
                this.acRecv90FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime paymentDueDate {
            get {
                return this.paymentDueDateField;
            }
            set {
                this.paymentDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool paymentDueDateSpecified {
            get {
                return this.paymentDueDateFieldSpecified;
            }
            set {
                this.paymentDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastPaymentDate {
            get {
                return this.lastPaymentDateField;
            }
            set {
                this.lastPaymentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentDateSpecified {
            get {
                return this.lastPaymentDateFieldSpecified;
            }
            set {
                this.lastPaymentDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lastPaymentAmount {
            get {
                return this.lastPaymentAmountField;
            }
            set {
                this.lastPaymentAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentAmountSpecified {
            get {
                return this.lastPaymentAmountFieldSpecified;
            }
            set {
                this.lastPaymentAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billDate {
            get {
                return this.billDateField;
            }
            set {
                this.billDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billDateSpecified {
            get {
                return this.billDateFieldSpecified;
            }
            set {
                this.billDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspNetwork network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public string SIC {
            get {
                return this.sICField;
            }
            set {
                this.sICField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class graphicSymbol {
        
        private float rotationField;
        
        private bool rotationFieldSpecified;
        
        private float scaleField;
        
        private bool scaleFieldSpecified;
        
        private PointType mapLocationField;
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        /// <remarks/>
        public float rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotationSpecified {
            get {
                return this.rotationFieldSpecified;
            }
            set {
                this.rotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scaleSpecified {
            get {
                return this.scaleFieldSpecified;
            }
            set {
                this.scaleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PointType mapLocation {
            get {
                return this.mapLocationField;
            }
            set {
                this.mapLocationField = value;
            }
        }
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class PointType : AbstractGeometryType {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CoordType {
        
        private decimal xField;
        
        private decimal yField;
        
        private bool yFieldSpecified;
        
        private decimal zField;
        
        private bool zFieldSpecified;
        
        private float bulgeField;
        
        private bool bulgeFieldSpecified;
        
        /// <remarks/>
        public decimal X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public decimal Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YSpecified {
            get {
                return this.yFieldSpecified;
            }
            set {
                this.yFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZSpecified {
            get {
                return this.zFieldSpecified;
            }
            set {
                this.zFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Bulge {
            get {
                return this.bulgeField;
            }
            set {
                this.bulgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BulgeSpecified {
            get {
                return this.bulgeFieldSpecified;
            }
            set {
                this.bulgeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CoordinatesType {
        
        private string decimalField;
        
        private string csField;
        
        private string tsField;
        
        private string valueField;
        
        public CoordinatesType() {
            this.decimalField = ".";
            this.csField = ",";
            this.tsField = " ";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(".")]
        public string @decimal {
            get {
                return this.decimalField;
            }
            set {
                this.decimalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(",")]
        public string cs {
            get {
                return this.csField;
            }
            set {
                this.csField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(" ")]
        public string ts {
            get {
                return this.tsField;
            }
            set {
                this.tsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinearRingType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BoxType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineStringType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class AbstractGeometryType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class PolygonType : AbstractGeometryType {
        
        private outerBoundaryIs outerBoundaryIsField;
        
        private innerBoundaryIs[] innerBoundaryIsField;
        
        /// <remarks/>
        public outerBoundaryIs outerBoundaryIs {
            get {
                return this.outerBoundaryIsField;
            }
            set {
                this.outerBoundaryIsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innerBoundaryIs")]
        public innerBoundaryIs[] innerBoundaryIs {
            get {
                return this.innerBoundaryIsField;
            }
            set {
                this.innerBoundaryIsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outerBoundaryIs {
        
        private LinearRingType linearRingField;
        
        /// <remarks/>
        public LinearRingType LinearRing {
            get {
                return this.linearRingField;
            }
            set {
                this.linearRingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class LinearRingType : AbstractGeometryType {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class innerBoundaryIs {
        
        private LinearRingType linearRingField;
        
        /// <remarks/>
        public LinearRingType LinearRing {
            get {
                return this.linearRingField;
            }
            set {
                this.linearRingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class BoxType : AbstractGeometryType {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class LineStringType : AbstractGeometryType {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class genericAnnotationFeature : mspPointObject {
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        private float scaleField;
        
        private bool scaleFieldSpecified;
        
        private string annotationField;
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
        
        /// <remarks/>
        public float scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scaleSpecified {
            get {
                return this.scaleFieldSpecified;
            }
            set {
                this.scaleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string annotation {
            get {
                return this.annotationField;
            }
            set {
                this.annotationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspAssetHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assessmentLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(premise))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spatialFeatureGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(station))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(substation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(motor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadManagementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measurementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(pole))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerSystemDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(riser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(streetLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(primaryCabinet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(secondaryJunctionBox))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(guy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPointFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(trafficLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(securityLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericAnnotationFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricServiceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaPoint))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspPointObject : mspObject {
        
        private PointType mapLocationField;
        
        private string gridLocationField;
        
        private float rotationField;
        
        private bool rotationFieldSpecified;
        
        private string facilityIDField;
        
        /// <remarks/>
        public PointType mapLocation {
            get {
                return this.mapLocationField;
            }
            set {
                this.mapLocationField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public float rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotationSpecified {
            get {
                return this.rotationFieldSpecified;
            }
            set {
                this.rotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterHistoryEvent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class mspAssetHistoryEvent : mspPointObject {
        
        private gpsPoint gpsPointField;
        
        private gpsLocation gpsLocationField;
        
        private timeZone timeZoneField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private actionTaken actionTakenField;
        
        private string[] informationListField;
        
        /// <remarks/>
        public gpsPoint gpsPoint {
            get {
                return this.gpsPointField;
            }
            set {
                this.gpsPointField = value;
            }
        }
        
        /// <remarks/>
        public gpsLocation gpsLocation {
            get {
                return this.gpsLocationField;
            }
            set {
                this.gpsLocationField = value;
            }
        }
        
        /// <remarks/>
        public timeZone timeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public actionTaken actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("informationItem", IsNullable=false)]
        public string[] informationList {
            get {
                return this.informationListField;
            }
            set {
                this.informationListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gpsPoint {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private float altitudeField;
        
        private bool altitudeFieldSpecified;
        
        /// <remarks/>
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public float altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool altitudeSpecified {
            get {
                return this.altitudeFieldSpecified;
            }
            set {
                this.altitudeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gpsLocation : mspObject {
        
        private float altitudeField;
        
        private bool altitudeFieldSpecified;
        
        private double latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private double longitudeField;
        
        private bool longitudeFieldSpecified;
        
        private float eastingField;
        
        private bool eastingFieldSpecified;
        
        private float northingField;
        
        private bool northingFieldSpecified;
        
        private string sourceField;
        
        private long numberField;
        
        private bool numberFieldSpecified;
        
        private bool isRealTimeDiffCorrectionField;
        
        private bool isRealTimeDiffCorrectionFieldSpecified;
        
        private float hdopField;
        
        private bool hdopFieldSpecified;
        
        private float vdopField;
        
        private bool vdopFieldSpecified;
        
        private string diffIDField;
        
        private System.DateTime collectedField;
        
        private bool collectedFieldSpecified;
        
        private long numSatField;
        
        private bool numSatFieldSpecified;
        
        /// <remarks/>
        public float altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool altitudeSpecified {
            get {
                return this.altitudeFieldSpecified;
            }
            set {
                this.altitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float easting {
            get {
                return this.eastingField;
            }
            set {
                this.eastingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eastingSpecified {
            get {
                return this.eastingFieldSpecified;
            }
            set {
                this.eastingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float northing {
            get {
                return this.northingField;
            }
            set {
                this.northingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool northingSpecified {
            get {
                return this.northingFieldSpecified;
            }
            set {
                this.northingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public long number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberSpecified {
            get {
                return this.numberFieldSpecified;
            }
            set {
                this.numberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRealTimeDiffCorrection {
            get {
                return this.isRealTimeDiffCorrectionField;
            }
            set {
                this.isRealTimeDiffCorrectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRealTimeDiffCorrectionSpecified {
            get {
                return this.isRealTimeDiffCorrectionFieldSpecified;
            }
            set {
                this.isRealTimeDiffCorrectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hdop {
            get {
                return this.hdopField;
            }
            set {
                this.hdopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hdopSpecified {
            get {
                return this.hdopFieldSpecified;
            }
            set {
                this.hdopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float vdop {
            get {
                return this.vdopField;
            }
            set {
                this.vdopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vdopSpecified {
            get {
                return this.vdopFieldSpecified;
            }
            set {
                this.vdopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string diffID {
            get {
                return this.diffIDField;
            }
            set {
                this.diffIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime collected {
            get {
                return this.collectedField;
            }
            set {
                this.collectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool collectedSpecified {
            get {
                return this.collectedFieldSpecified;
            }
            set {
                this.collectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long numSat {
            get {
                return this.numSatField;
            }
            set {
                this.numSatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSatSpecified {
            get {
                return this.numSatFieldSpecified;
            }
            set {
                this.numSatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class timeZone {
        
        private bool dSTEnabledField;
        
        private bool dSTEnabledFieldSpecified;
        
        private decimal uTCOffsetField;
        
        private string nameField;
        
        private string commentField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DSTEnabled {
            get {
                return this.dSTEnabledField;
            }
            set {
                this.dSTEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DSTEnabledSpecified {
            get {
                return this.dSTEnabledFieldSpecified;
            }
            set {
                this.dSTEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal UTCOffset {
            get {
                return this.uTCOffsetField;
            }
            set {
                this.uTCOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum actionTaken {
        
        /// <remarks/>
        Installed,
        
        /// <remarks/>
        PlacedIntoService,
        
        /// <remarks/>
        Connected,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        Removed,
        
        /// <remarks/>
        Inspected,
        
        /// <remarks/>
        Tested,
        
        /// <remarks/>
        Repaired,
        
        /// <remarks/>
        Calibrated,
        
        /// <remarks/>
        Checked,
        
        /// <remarks/>
        ReturnedToInventory,
        
        /// <remarks/>
        Retired,
        
        /// <remarks/>
        Destroyed,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterHistoryEvent : mspAssetHistoryEvent {
        
        private string meterIDField;
        
        private string meterNoField;
        
        private string custIDField;
        
        private string servLocField;
        
        private string[] meterStatusListField;
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class inHomeDisplay : mspPointObject {
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private string deviceTypeField;
        
        private string meterIDField;
        
        private string meterNoField;
        
        private module[] moduleListField;
        
        private string meterBaseIDField;
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class module : mspDevice {
        
        private string descriptionField;
        
        private string moduleTypeField;
        
        private string firmwareVersionField;
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string moduleType {
            get {
                return this.moduleTypeField;
            }
            set {
                this.moduleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string firmwareVersion {
            get {
                return this.firmwareVersionField;
            }
            set {
                this.firmwareVersionField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(module))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspDevice : mspObject {
        
        private string deviceClassField;
        
        private System.DateTime inServiceDateField;
        
        private bool inServiceDateFieldSpecified;
        
        private System.DateTime outServiceDateField;
        
        private bool outServiceDateFieldSpecified;
        
        private string facilityIDField;
        
        /// <remarks/>
        public string deviceClass {
            get {
                return this.deviceClassField;
            }
            set {
                this.deviceClassField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime inServiceDate {
            get {
                return this.inServiceDateField;
            }
            set {
                this.inServiceDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inServiceDateSpecified {
            get {
                return this.inServiceDateFieldSpecified;
            }
            set {
                this.inServiceDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime outServiceDate {
            get {
                return this.outServiceDateField;
            }
            set {
                this.outServiceDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outServiceDateSpecified {
            get {
                return this.outServiceDateFieldSpecified;
            }
            set {
                this.outServiceDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CDDevice : mspDevice {
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private string meterBaseIDField;
        
        private float ratedVoltageField;
        
        private bool ratedVoltageFieldSpecified;
        
        private float ratedCurrentField;
        
        private bool ratedCurrentFieldSpecified;
        
        private module[] moduleListField;
        
        private string aMRDeviceTypeField;
        
        private string aMRVendorField;
        
        private meterIdentifier meterIdentifierField;
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public float ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ratedVoltageSpecified {
            get {
                return this.ratedVoltageFieldSpecified;
            }
            set {
                this.ratedVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ratedCurrentSpecified {
            get {
                return this.ratedCurrentFieldSpecified;
            }
            set {
                this.ratedCurrentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        public string AMRDeviceType {
            get {
                return this.aMRDeviceTypeField;
            }
            set {
                this.aMRDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRVendor {
            get {
                return this.aMRVendorField;
            }
            set {
                this.aMRVendorField = value;
            }
        }
        
        /// <remarks/>
        public meterIdentifier meterIdentifier {
            get {
                return this.meterIdentifierField;
            }
            set {
                this.meterIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterIdentifier {
        
        private string meterNoField;
        
        private string meterIDField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meter : mspDevice {
        
        private string meterNoField;
        
        private string serialNumberField;
        
        private string meterTypeField;
        
        private string manufacturerField;
        
        private string[] sealNumberListField;
        
        private string aMRTypeField;
        
        private string aMRDeviceTypeField;
        
        private string aMRVendorField;
        
        private nameplate nameplateField;
        
        private utilityInfo utilityInfoField;
        
        private module[] moduleListField;
        
        private string[] subMeterListField;
        
        private string[] parentMeterListField;
        
        private string[] meterStatusListField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private string meterCommAddressField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string meterType {
            get {
                return this.meterTypeField;
            }
            set {
                this.meterTypeField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("sealNumber", IsNullable=false)]
        public string[] sealNumberList {
            get {
                return this.sealNumberListField;
            }
            set {
                this.sealNumberListField = value;
            }
        }
        
        /// <remarks/>
        public string AMRType {
            get {
                return this.aMRTypeField;
            }
            set {
                this.aMRTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRDeviceType {
            get {
                return this.aMRDeviceTypeField;
            }
            set {
                this.aMRDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRVendor {
            get {
                return this.aMRVendorField;
            }
            set {
                this.aMRVendorField = value;
            }
        }
        
        /// <remarks/>
        public nameplate nameplate {
            get {
                return this.nameplateField;
            }
            set {
                this.nameplateField = value;
            }
        }
        
        /// <remarks/>
        public utilityInfo utilityInfo {
            get {
                return this.utilityInfoField;
            }
            set {
                this.utilityInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("subMeterID", IsNullable=false)]
        public string[] subMeterList {
            get {
                return this.subMeterListField;
            }
            set {
                this.subMeterListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("parentMeterID", IsNullable=false)]
        public string[] parentMeterList {
            get {
                return this.parentMeterListField;
            }
            set {
                this.parentMeterListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class nameplate {
        
        private float khField;
        
        private bool khFieldSpecified;
        
        private float krField;
        
        private bool krFieldSpecified;
        
        private frequency frequencyField;
        
        private bool frequencyFieldSpecified;
        
        private numberOfElement numberOfElementsField;
        
        private bool numberOfElementsFieldSpecified;
        
        private baseType baseTypeField;
        
        private bool baseTypeFieldSpecified;
        
        private string accuracyClassField;
        
        private elementsVoltage elementsVoltageField;
        
        private bool elementsVoltageFieldSpecified;
        
        private supplyVoltage supplyVoltageField;
        
        private bool supplyVoltageFieldSpecified;
        
        private float maxAmperageField;
        
        private bool maxAmperageFieldSpecified;
        
        private float testAmperageField;
        
        private bool testAmperageFieldSpecified;
        
        private float regRatioField;
        
        private bool regRatioFieldSpecified;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private long wiresField;
        
        private bool wiresFieldSpecified;
        
        private long dialsField;
        
        private bool dialsFieldSpecified;
        
        private string formField;
        
        private long multiplierField;
        
        private bool multiplierFieldSpecified;
        
        private float demandMultField;
        
        private bool demandMultFieldSpecified;
        
        private string transponderIDField;
        
        /// <remarks/>
        public float kh {
            get {
                return this.khField;
            }
            set {
                this.khField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool khSpecified {
            get {
                return this.khFieldSpecified;
            }
            set {
                this.khFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kr {
            get {
                return this.krField;
            }
            set {
                this.krField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool krSpecified {
            get {
                return this.krFieldSpecified;
            }
            set {
                this.krFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool frequencySpecified {
            get {
                return this.frequencyFieldSpecified;
            }
            set {
                this.frequencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public numberOfElement numberOfElements {
            get {
                return this.numberOfElementsField;
            }
            set {
                this.numberOfElementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberOfElementsSpecified {
            get {
                return this.numberOfElementsFieldSpecified;
            }
            set {
                this.numberOfElementsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public baseType baseType {
            get {
                return this.baseTypeField;
            }
            set {
                this.baseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseTypeSpecified {
            get {
                return this.baseTypeFieldSpecified;
            }
            set {
                this.baseTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string accuracyClass {
            get {
                return this.accuracyClassField;
            }
            set {
                this.accuracyClassField = value;
            }
        }
        
        /// <remarks/>
        public elementsVoltage elementsVoltage {
            get {
                return this.elementsVoltageField;
            }
            set {
                this.elementsVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool elementsVoltageSpecified {
            get {
                return this.elementsVoltageFieldSpecified;
            }
            set {
                this.elementsVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public supplyVoltage supplyVoltage {
            get {
                return this.supplyVoltageField;
            }
            set {
                this.supplyVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supplyVoltageSpecified {
            get {
                return this.supplyVoltageFieldSpecified;
            }
            set {
                this.supplyVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float maxAmperage {
            get {
                return this.maxAmperageField;
            }
            set {
                this.maxAmperageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxAmperageSpecified {
            get {
                return this.maxAmperageFieldSpecified;
            }
            set {
                this.maxAmperageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float testAmperage {
            get {
                return this.testAmperageField;
            }
            set {
                this.testAmperageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testAmperageSpecified {
            get {
                return this.testAmperageFieldSpecified;
            }
            set {
                this.testAmperageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float regRatio {
            get {
                return this.regRatioField;
            }
            set {
                this.regRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool regRatioSpecified {
            get {
                return this.regRatioFieldSpecified;
            }
            set {
                this.regRatioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long wires {
            get {
                return this.wiresField;
            }
            set {
                this.wiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wiresSpecified {
            get {
                return this.wiresFieldSpecified;
            }
            set {
                this.wiresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long dials {
            get {
                return this.dialsField;
            }
            set {
                this.dialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dialsSpecified {
            get {
                return this.dialsFieldSpecified;
            }
            set {
                this.dialsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        public long multiplier {
            get {
                return this.multiplierField;
            }
            set {
                this.multiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierSpecified {
            get {
                return this.multiplierFieldSpecified;
            }
            set {
                this.multiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float demandMult {
            get {
                return this.demandMultField;
            }
            set {
                this.demandMultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool demandMultSpecified {
            get {
                return this.demandMultFieldSpecified;
            }
            set {
                this.demandMultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transponderID {
            get {
                return this.transponderIDField;
            }
            set {
                this.transponderIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum frequency {
        
        /// <remarks/>
        DC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AC 25Hz")]
        AC25Hz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AC 50Hz")]
        AC50Hz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AC 50-60Hz")]
        AC5060Hz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("AC 60Hz")]
        AC60Hz,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum numberOfElement {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("numberOfElements 1")]
        numberOfElements1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("numberOfElements 1.5")]
        numberOfElements15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("numberOfElements 2")]
        numberOfElements2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("numberOfElements 2.5")]
        numberOfElements25,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("numberOfElements 3")]
        numberOfElements3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("numberOfElements 6")]
        numberOfElements6,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum baseType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Base Type 1")]
        BaseType1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S-base")]
        Sbase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A-Base")]
        ABase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("B-Base")]
        BBase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("K-Base")]
        KBase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("P-Base")]
        PBase,
        
        /// <remarks/>
        IECBottomConnected,
        
        /// <remarks/>
        switchboard,
        
        /// <remarks/>
        rackmount,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum elementsVoltage {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 69.3")]
        ElementVoltage693,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 72")]
        ElementVoltage72,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 120")]
        ElementVoltage120,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 208")]
        ElementVoltage208,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 240")]
        ElementVoltage240,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 277")]
        ElementVoltage277,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 347")]
        ElementVoltage347,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 480")]
        ElementVoltage480,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage 600")]
        ElementVoltage600,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltge120-277")]
        ElementVoltge120277,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ElementVoltage120-240")]
        ElementVoltage120240,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum supplyVoltage {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 69.3")]
        SupplyVoltage693,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 72")]
        SupplyVoltage72,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 120")]
        SupplyVoltage120,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 208")]
        SupplyVoltage208,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 240")]
        SupplyVoltage240,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 277")]
        SupplyVoltage277,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 347")]
        SupplyVoltage347,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 480")]
        SupplyVoltage480,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage 600")]
        SupplyVoltage600,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage120 through 277")]
        SupplyVoltage120through277,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage120 through 480")]
        SupplyVoltage120through480,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage48 DC")]
        SupplyVoltage48DC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage125 DC")]
        SupplyVoltage125DC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SupplyVoltage250 DC")]
        SupplyVoltage250DC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class utilityInfo {
        
        private string ownerField;
        
        private string districtField;
        
        private string servLocField;
        
        private string accountNumberField;
        
        private string custIDField;
        
        private string substationCodeField;
        
        private string substationNameField;
        
        private string feederField;
        
        private string busField;
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private eaLoc eaLocField;
        
        private string transformerBankIDField;
        
        private string meterBaseIDField;
        
        private PointType mapLocationField;
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string substationCode {
            get {
                return this.substationCodeField;
            }
            set {
                this.substationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public string bus {
            get {
                return this.busField;
            }
            set {
                this.busField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public PointType mapLocation {
            get {
                return this.mapLocationField;
            }
            set {
                this.mapLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum meterConnectionStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Connected,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        DisconnectedNonPay,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum remoteReconnectSetting {
        
        /// <remarks/>
        Connect,
        
        /// <remarks/>
        Arm,
        
        /// <remarks/>
        PowerLimitation,
        
        /// <remarks/>
        CISAuthRequired,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class assessmentLocation : mspPointObject {
        
        private address addressField;
        
        private string locationOffsetField;
        
        private assessment[] assessmentListField;
        
        private gpsLocation gpsLocationField;
        
        private base64Image photoField;
        
        public assessmentLocation() {
            this.locationOffsetField = "";
        }
        
        /// <remarks/>
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string locationOffset {
            get {
                return this.locationOffsetField;
            }
            set {
                this.locationOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public assessment[] assessmentList {
            get {
                return this.assessmentListField;
            }
            set {
                this.assessmentListField = value;
            }
        }
        
        /// <remarks/>
        public gpsLocation gpsLocation {
            get {
                return this.gpsLocationField;
            }
            set {
                this.gpsLocationField = value;
            }
        }
        
        /// <remarks/>
        public base64Image photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class address {
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class assessment : mspObject {
        
        private string categoryField;
        
        private System.DateTime createdField;
        
        private bool createdFieldSpecified;
        
        private string createdByField;
        
        private string closedByField;
        
        private System.DateTime closedOnField;
        
        private bool closedOnFieldSpecified;
        
        private string elementNameField;
        
        private string elementTypeField;
        
        private float estimatedField;
        
        private string eventIDField;
        
        private string jobNumberField;
        
        private base64Image photoField;
        
        private string elementIDField;
        
        private System.DateTime expiresOnField;
        
        private bool expiresOnFieldSpecified;
        
        public assessment() {
            this.estimatedField = ((float)(0F));
        }
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdSpecified {
            get {
                return this.createdFieldSpecified;
            }
            set {
                this.createdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string closedBy {
            get {
                return this.closedByField;
            }
            set {
                this.closedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime closedOn {
            get {
                return this.closedOnField;
            }
            set {
                this.closedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closedOnSpecified {
            get {
                return this.closedOnFieldSpecified;
            }
            set {
                this.closedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string elementName {
            get {
                return this.elementNameField;
            }
            set {
                this.elementNameField = value;
            }
        }
        
        /// <remarks/>
        public string elementType {
            get {
                return this.elementTypeField;
            }
            set {
                this.elementTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0")]
        public float estimated {
            get {
                return this.estimatedField;
            }
            set {
                this.estimatedField = value;
            }
        }
        
        /// <remarks/>
        public string eventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public base64Image photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
            }
        }
        
        /// <remarks/>
        public string elementID {
            get {
                return this.elementIDField;
            }
            set {
                this.elementIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiresOn {
            get {
                return this.expiresOnField;
            }
            set {
                this.expiresOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expiresOnSpecified {
            get {
                return this.expiresOnFieldSpecified;
            }
            set {
                this.expiresOnFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class base64Image {
        
        private imageType imageTypeField;
        
        private byte[] valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public imageType imageType {
            get {
                return this.imageTypeField;
            }
            set {
                this.imageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum imageType {
        
        /// <remarks/>
        jpeg,
        
        /// <remarks/>
        png,
        
        /// <remarks/>
        gif,
        
        /// <remarks/>
        tiff,
        
        /// <remarks/>
        bmp,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterBase : mspPointObject {
        
        private string meterIDField;
        
        private string meterNoField;
        
        private string servLocField;
        
        private string premiseIDField;
        
        private string formField;
        
        private string classField;
        
        private baseType baseTypeField;
        
        private bool baseTypeFieldSpecified;
        
        private instrumentTransformers instrumentTransformersField;
        
        private deviceList deviceListField;
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string premiseID {
            get {
                return this.premiseIDField;
            }
            set {
                this.premiseIDField = value;
            }
        }
        
        /// <remarks/>
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public baseType baseType {
            get {
                return this.baseTypeField;
            }
            set {
                this.baseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseTypeSpecified {
            get {
                return this.baseTypeFieldSpecified;
            }
            set {
                this.baseTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public instrumentTransformers instrumentTransformers {
            get {
                return this.instrumentTransformersField;
            }
            set {
                this.instrumentTransformersField = value;
            }
        }
        
        /// <remarks/>
        public deviceList deviceList {
            get {
                return this.deviceListField;
            }
            set {
                this.deviceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class instrumentTransformers {
        
        private double ctField;
        
        private bool ctFieldSpecified;
        
        private double ptField;
        
        private bool ptFieldSpecified;
        
        /// <remarks/>
        public double ct {
            get {
                return this.ctField;
            }
            set {
                this.ctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ctSpecified {
            get {
                return this.ctFieldSpecified;
            }
            set {
                this.ctFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double pt {
            get {
                return this.ptField;
            }
            set {
                this.ptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ptSpecified {
            get {
                return this.ptFieldSpecified;
            }
            set {
                this.ptFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class deviceList {
        
        private string cDDeviceIDField;
        
        private string[] loadManagementDeviceListField;
        
        /// <remarks/>
        public string CDDeviceID {
            get {
                return this.cDDeviceIDField;
            }
            set {
                this.cDDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("loadManagementDeviceID", IsNullable=false)]
        public string[] loadManagementDeviceList {
            get {
                return this.loadManagementDeviceListField;
            }
            set {
                this.loadManagementDeviceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class premise : mspPointObject {
        
        private string descriptionField;
        
        private string[] serviceLocationListField;
        
        private string ownerField;
        
        private string parcelIDField;
        
        private premiseService[] premiseServiceListField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("servLoc", IsNullable=false)]
        public string[] serviceLocationList {
            get {
                return this.serviceLocationListField;
            }
            set {
                this.serviceLocationListField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string parcelID {
            get {
                return this.parcelIDField;
            }
            set {
                this.parcelIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public premiseService[] premiseServiceList {
            get {
                return this.premiseServiceListField;
            }
            set {
                this.premiseServiceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class premiseService {
        
        private string serviceTypeField;
        
        private string serviceLocationIDField;
        
        private string accountNumberField;
        
        private string customerIDField;
        
        /// <remarks/>
        public string ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class spatialFeatureGroup : mspPointObject {
        
        private capacitorBank[] capacitorBankField;
        
        private loadManagementDevice[] loadManagementDeviceField;
        
        private measurementDevice[] measurementDeviceField;
        
        private meter[] meterField;
        
        private outageDetectionDevice[] outageDetectionDeviceField;
        
        private overcurrentDeviceBank[] overcurrentDeviceBankField;
        
        private pole[] poleField;
        
        private powerSystemDevice[] powerSystemDeviceField;
        
        private regulatorBank[] regulatorBankField;
        
        private riser[] riserField;
        
        private serviceLocation[] serviceLocationField;
        
        private streetLight[] streetLightField;
        
        private substation[] substationField;
        
        private primaryCabinet[] primaryCabnetField;
        
        private switchDeviceBank[] switchDeviceBankField;
        
        private transformerBank[] transformerBankField;
        
        private ohPrimaryLine[] ohPrimaryLineField;
        
        private ohSecondaryLine[] ohSecondaryLineField;
        
        private ugPrimaryLine[] ugPrimaryLineField;
        
        private ugSecondaryLine[] ugSecondaryLineField;
        
        private secondaryJunctionBox[] secondaryJunctionBoxField;
        
        private parcel[] parcelField;
        
        private premise[] premiseField;
        
        private anchor[] anchorField;
        
        private guy[] guyField;
        
        private CDDevice[] cDDeviceField;
        
        private spanGuy[] spanGuyField;
        
        private surgeArrestor[] surgeArrestorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("capacitorBank")]
        public capacitorBank[] capacitorBank {
            get {
                return this.capacitorBankField;
            }
            set {
                this.capacitorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("loadManagementDevice")]
        public loadManagementDevice[] loadManagementDevice {
            get {
                return this.loadManagementDeviceField;
            }
            set {
                this.loadManagementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("measurementDevice")]
        public measurementDevice[] measurementDevice {
            get {
                return this.measurementDeviceField;
            }
            set {
                this.measurementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("meter")]
        public meter[] meter {
            get {
                return this.meterField;
            }
            set {
                this.meterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("outageDetectionDevice")]
        public outageDetectionDevice[] outageDetectionDevice {
            get {
                return this.outageDetectionDeviceField;
            }
            set {
                this.outageDetectionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("overcurrentDeviceBank")]
        public overcurrentDeviceBank[] overcurrentDeviceBank {
            get {
                return this.overcurrentDeviceBankField;
            }
            set {
                this.overcurrentDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pole")]
        public pole[] pole {
            get {
                return this.poleField;
            }
            set {
                this.poleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("powerSystemDevice")]
        public powerSystemDevice[] powerSystemDevice {
            get {
                return this.powerSystemDeviceField;
            }
            set {
                this.powerSystemDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("regulatorBank")]
        public regulatorBank[] regulatorBank {
            get {
                return this.regulatorBankField;
            }
            set {
                this.regulatorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("riser")]
        public riser[] riser {
            get {
                return this.riserField;
            }
            set {
                this.riserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceLocation")]
        public serviceLocation[] serviceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("streetLight")]
        public streetLight[] streetLight {
            get {
                return this.streetLightField;
            }
            set {
                this.streetLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("substation")]
        public substation[] substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("primaryCabnet")]
        public primaryCabinet[] primaryCabnet {
            get {
                return this.primaryCabnetField;
            }
            set {
                this.primaryCabnetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("switchDeviceBank")]
        public switchDeviceBank[] switchDeviceBank {
            get {
                return this.switchDeviceBankField;
            }
            set {
                this.switchDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transformerBank")]
        public transformerBank[] transformerBank {
            get {
                return this.transformerBankField;
            }
            set {
                this.transformerBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohPrimaryLine")]
        public ohPrimaryLine[] ohPrimaryLine {
            get {
                return this.ohPrimaryLineField;
            }
            set {
                this.ohPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohSecondaryLine")]
        public ohSecondaryLine[] ohSecondaryLine {
            get {
                return this.ohSecondaryLineField;
            }
            set {
                this.ohSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugPrimaryLine")]
        public ugPrimaryLine[] ugPrimaryLine {
            get {
                return this.ugPrimaryLineField;
            }
            set {
                this.ugPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugSecondaryLine")]
        public ugSecondaryLine[] ugSecondaryLine {
            get {
                return this.ugSecondaryLineField;
            }
            set {
                this.ugSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("secondaryJunctionBox")]
        public secondaryJunctionBox[] secondaryJunctionBox {
            get {
                return this.secondaryJunctionBoxField;
            }
            set {
                this.secondaryJunctionBoxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parcel")]
        public parcel[] parcel {
            get {
                return this.parcelField;
            }
            set {
                this.parcelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("premise")]
        public premise[] premise {
            get {
                return this.premiseField;
            }
            set {
                this.premiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anchor")]
        public anchor[] anchor {
            get {
                return this.anchorField;
            }
            set {
                this.anchorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("guy")]
        public guy[] guy {
            get {
                return this.guyField;
            }
            set {
                this.guyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CDDevice")]
        public CDDevice[] CDDevice {
            get {
                return this.cDDeviceField;
            }
            set {
                this.cDDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("spanGuy")]
        public spanGuy[] spanGuy {
            get {
                return this.spanGuyField;
            }
            set {
                this.spanGuyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("surgeArrestor")]
        public surgeArrestor[] surgeArrestor {
            get {
                return this.surgeArrestorField;
            }
            set {
                this.surgeArrestorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class capacitorBank : mspBankObject {
        
        private connectionCode connectionCdField;
        
        private bool connectionCdFieldSpecified;
        
        private swType swTypeField;
        
        private bool swTypeFieldSpecified;
        
        private swStatus swStatusField;
        
        private bool swStatusFieldSpecified;
        
        private float swOnField;
        
        private bool swOnFieldSpecified;
        
        private float swOffField;
        
        private bool swOffFieldSpecified;
        
        private objectRef cntrCktField;
        
        private float bankKvarField;
        
        private bool bankKvarFieldSpecified;
        
        private float voltsField;
        
        private bool voltsFieldSpecified;
        
        private capacitor[] capacitorListField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public connectionCode connectionCd {
            get {
                return this.connectionCdField;
            }
            set {
                this.connectionCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionCdSpecified {
            get {
                return this.connectionCdFieldSpecified;
            }
            set {
                this.connectionCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public swType swType {
            get {
                return this.swTypeField;
            }
            set {
                this.swTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool swTypeSpecified {
            get {
                return this.swTypeFieldSpecified;
            }
            set {
                this.swTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public swStatus swStatus {
            get {
                return this.swStatusField;
            }
            set {
                this.swStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool swStatusSpecified {
            get {
                return this.swStatusFieldSpecified;
            }
            set {
                this.swStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float swOn {
            get {
                return this.swOnField;
            }
            set {
                this.swOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool swOnSpecified {
            get {
                return this.swOnFieldSpecified;
            }
            set {
                this.swOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float swOff {
            get {
                return this.swOffField;
            }
            set {
                this.swOffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool swOffSpecified {
            get {
                return this.swOffFieldSpecified;
            }
            set {
                this.swOffFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef cntrCkt {
            get {
                return this.cntrCktField;
            }
            set {
                this.cntrCktField = value;
            }
        }
        
        /// <remarks/>
        public float bankKvar {
            get {
                return this.bankKvarField;
            }
            set {
                this.bankKvarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bankKvarSpecified {
            get {
                return this.bankKvarFieldSpecified;
            }
            set {
                this.bankKvarFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float volts {
            get {
                return this.voltsField;
            }
            set {
                this.voltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool voltsSpecified {
            get {
                return this.voltsFieldSpecified;
            }
            set {
                this.voltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public capacitor[] capacitorList {
            get {
                return this.capacitorListField;
            }
            set {
                this.capacitorListField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum connectionCode {
        
        /// <remarks/>
        ShuntWye,
        
        /// <remarks/>
        ShuntDelta,
        
        /// <remarks/>
        ShuntSameAsParent,
        
        /// <remarks/>
        Series,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum swType {
        
        /// <remarks/>
        Manual,
        
        /// <remarks/>
        Voltage,
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        ReactiveAmps,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        Temperature,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum swStatus {
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class capacitor : mspObject {
        
        private mspPhase phaseField;
        
        private bool phaseFieldSpecified;
        
        private float kvarField;
        
        private bool kvarFieldSpecified;
        
        /// <remarks/>
        public mspPhase phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kvar {
            get {
                return this.kvarField;
            }
            set {
                this.kvarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvarSpecified {
            get {
                return this.kvarFieldSpecified;
            }
            set {
                this.kvarFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum mspPhase {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspBankObject : mspElectricPoint {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(substation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(motor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspElectricPoint : mspConnectivityPoint {
        
        private phaseCd phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private mspLoadGroup loadField;
        
        /// <remarks/>
        public phaseCd phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspLoadGroup load {
            get {
                return this.loadField;
            }
            set {
                this.loadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(station))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(substation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(motor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspConnectivityPoint : mspPointObject {
        
        private graphicSymbol[] graphicSymbolField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private object[] itemsField;
        
        private ItemsChoiceType1[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("graphicSymbol")]
        public graphicSymbol[] graphicSymbol {
            get {
                return this.graphicSymbolField;
            }
            set {
                this.graphicSymbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("annotationList")]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fromNodeID", typeof(nodeIdentifier))]
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID", typeof(objectRef))]
        [System.Xml.Serialization.XmlElementAttribute("sectionID", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("toNodeID", typeof(nodeIdentifier))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0", IncludeInSchema=false)]
    public enum ItemsChoiceType1 {
        
        /// <remarks/>
        fromNodeID,
        
        /// <remarks/>
        parentSectionID,
        
        /// <remarks/>
        sectionID,
        
        /// <remarks/>
        toNodeID,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class station : mspConnectivityPoint {
        
        private string substationCodeField;
        
        private string feederField;
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private poleUse poleUseField;
        
        private bool poleUseFieldSpecified;
        
        private backSpan[] backSpanListField;
        
        private string constTypField;
        
        private staStatus staStatusField;
        
        private bool staStatusFieldSpecified;
        
        private constGrade constGradeField;
        
        private bool constGradeFieldSpecified;
        
        private float angleField;
        
        private bool angleFieldSpecified;
        
        private bool isTapField;
        
        private bool isTapFieldSpecified;
        
        private long terrainField;
        
        private bool terrainFieldSpecified;
        
        private gpsLocation gpsLocationField;
        
        private assembly[] assemblyListField;
        
        private CPR[] cPRListField;
        
        private physicalObjectList objectListField;
        
        private pickList pickListField;
        
        /// <remarks/>
        public string substationCode {
            get {
                return this.substationCodeField;
            }
            set {
                this.substationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleUse poleUse {
            get {
                return this.poleUseField;
            }
            set {
                this.poleUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleUseSpecified {
            get {
                return this.poleUseFieldSpecified;
            }
            set {
                this.poleUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public backSpan[] backSpanList {
            get {
                return this.backSpanListField;
            }
            set {
                this.backSpanListField = value;
            }
        }
        
        /// <remarks/>
        public string constTyp {
            get {
                return this.constTypField;
            }
            set {
                this.constTypField = value;
            }
        }
        
        /// <remarks/>
        public staStatus staStatus {
            get {
                return this.staStatusField;
            }
            set {
                this.staStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool staStatusSpecified {
            get {
                return this.staStatusFieldSpecified;
            }
            set {
                this.staStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public constGrade constGrade {
            get {
                return this.constGradeField;
            }
            set {
                this.constGradeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constGradeSpecified {
            get {
                return this.constGradeFieldSpecified;
            }
            set {
                this.constGradeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float angle {
            get {
                return this.angleField;
            }
            set {
                this.angleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool angleSpecified {
            get {
                return this.angleFieldSpecified;
            }
            set {
                this.angleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isTap {
            get {
                return this.isTapField;
            }
            set {
                this.isTapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isTapSpecified {
            get {
                return this.isTapFieldSpecified;
            }
            set {
                this.isTapFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long terrain {
            get {
                return this.terrainField;
            }
            set {
                this.terrainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool terrainSpecified {
            get {
                return this.terrainFieldSpecified;
            }
            set {
                this.terrainFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gpsLocation gpsLocation {
            get {
                return this.gpsLocationField;
            }
            set {
                this.gpsLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public assembly[] assemblyList {
            get {
                return this.assemblyListField;
            }
            set {
                this.assemblyListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CPR[] CPRList {
            get {
                return this.cPRListField;
            }
            set {
                this.cPRListField = value;
            }
        }
        
        /// <remarks/>
        public physicalObjectList objectList {
            get {
                return this.objectListField;
            }
            set {
                this.objectListField = value;
            }
        }
        
        /// <remarks/>
        public pickList pickList {
            get {
                return this.pickListField;
            }
            set {
                this.pickListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum poleUse {
        
        /// <remarks/>
        Distribution,
        
        /// <remarks/>
        Transmission,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Guy Stub")]
        GuyStub,
        
        /// <remarks/>
        Stub,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class backSpan {
        
        private float lengthField;
        
        private bool lengthFieldSpecified;
        
        private lengthUnit lengthUnitField;
        
        private bool lengthUnitFieldSpecified;
        
        private string stationIDField;
        
        private unitActn unitActionField;
        
        private bool unitActionFieldSpecified;
        
        /// <remarks/>
        public float length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lengthSpecified {
            get {
                return this.lengthFieldSpecified;
            }
            set {
                this.lengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public lengthUnit lengthUnit {
            get {
                return this.lengthUnitField;
            }
            set {
                this.lengthUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lengthUnitSpecified {
            get {
                return this.lengthUnitFieldSpecified;
            }
            set {
                this.lengthUnitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string stationID {
            get {
                return this.stationIDField;
            }
            set {
                this.stationIDField = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitAction {
            get {
                return this.unitActionField;
            }
            set {
                this.unitActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActionSpecified {
            get {
                return this.unitActionFieldSpecified;
            }
            set {
                this.unitActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum lengthUnit {
        
        /// <remarks/>
        Feet,
        
        /// <remarks/>
        Meters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Thousand Feet")]
        ThousandFeet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Thousand Meters")]
        ThousandMeters,
        
        /// <remarks/>
        Miles,
        
        /// <remarks/>
        Inches,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum unitActn {
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        E,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum staStatus {
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        E,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum constGrade {
        
        /// <remarks/>
        GradeB,
        
        /// <remarks/>
        GradeC,
        
        /// <remarks/>
        GradeN,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class assembly {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string featureTypeField;
        
        private string featureIDField;
        
        private string unitCodeField;
        
        private unitActn unitActnField;
        
        private bool unitActnFieldSpecified;
        
        private spanTyp spanTypField;
        
        private bool spanTypFieldSpecified;
        
        private float unitLengthField;
        
        private bool unitLengthFieldSpecified;
        
        private string poleVarField;
        
        private string wireVarField;
        
        private string neutVarField;
        
        private string miscVarField;
        
        private float quantityField;
        
        private bool quantityFieldSpecified;
        
        private long poleHeightField;
        
        private bool poleHeightFieldSpecified;
        
        private poleClass poleClassField;
        
        private bool poleClassFieldSpecified;
        
        private poleType poleTypeField;
        
        private bool poleTypeFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureID {
            get {
                return this.featureIDField;
            }
            set {
                this.featureIDField = value;
            }
        }
        
        /// <remarks/>
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitActn {
            get {
                return this.unitActnField;
            }
            set {
                this.unitActnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActnSpecified {
            get {
                return this.unitActnFieldSpecified;
            }
            set {
                this.unitActnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public spanTyp spanTyp {
            get {
                return this.spanTypField;
            }
            set {
                this.spanTypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool spanTypSpecified {
            get {
                return this.spanTypFieldSpecified;
            }
            set {
                this.spanTypFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float unitLength {
            get {
                return this.unitLengthField;
            }
            set {
                this.unitLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitLengthSpecified {
            get {
                return this.unitLengthFieldSpecified;
            }
            set {
                this.unitLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string poleVar {
            get {
                return this.poleVarField;
            }
            set {
                this.poleVarField = value;
            }
        }
        
        /// <remarks/>
        public string wireVar {
            get {
                return this.wireVarField;
            }
            set {
                this.wireVarField = value;
            }
        }
        
        /// <remarks/>
        public string neutVar {
            get {
                return this.neutVarField;
            }
            set {
                this.neutVarField = value;
            }
        }
        
        /// <remarks/>
        public string miscVar {
            get {
                return this.miscVarField;
            }
            set {
                this.miscVarField = value;
            }
        }
        
        /// <remarks/>
        public float quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long poleHeight {
            get {
                return this.poleHeightField;
            }
            set {
                this.poleHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleHeightSpecified {
            get {
                return this.poleHeightFieldSpecified;
            }
            set {
                this.poleHeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleClass poleClass {
            get {
                return this.poleClassField;
            }
            set {
                this.poleClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleClassSpecified {
            get {
                return this.poleClassFieldSpecified;
            }
            set {
                this.poleClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleType poleType {
            get {
                return this.poleTypeField;
            }
            set {
                this.poleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleTypeSpecified {
            get {
                return this.poleTypeFieldSpecified;
            }
            set {
                this.poleTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum spanTyp {
        
        /// <remarks/>
        primary,
        
        /// <remarks/>
        secondary,
        
        /// <remarks/>
        service,
        
        /// <remarks/>
        underbuild,
        
        /// <remarks/>
        none,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum poleClass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 1")]
        Class1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 2")]
        Class2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 3")]
        Class3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 4")]
        Class4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 5")]
        Class5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 6")]
        Class6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 7")]
        Class7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 8")]
        Class8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 9")]
        Class9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 10")]
        Class10,
        
        /// <remarks/>
        H1,
        
        /// <remarks/>
        H2,
        
        /// <remarks/>
        H3,
        
        /// <remarks/>
        H4,
        
        /// <remarks/>
        H5,
        
        /// <remarks/>
        H6,
        
        /// <remarks/>
        H7,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum poleType {
        
        /// <remarks/>
        Aluminum,
        
        /// <remarks/>
        Concrete,
        
        /// <remarks/>
        Fiberglass,
        
        /// <remarks/>
        Galvanized,
        
        /// <remarks/>
        Steel,
        
        /// <remarks/>
        Wood,
        
        /// <remarks/>
        WoodTreated,
        
        /// <remarks/>
        WoodUntreated,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CPR {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string acctCodeField;
        
        private float quantityField;
        
        private bool quantityFieldSpecified;
        
        private unitActn unitActionField;
        
        private bool unitActionFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string acctCode {
            get {
                return this.acctCodeField;
            }
            set {
                this.acctCodeField = value;
            }
        }
        
        /// <remarks/>
        public float quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitAction {
            get {
                return this.unitActionField;
            }
            set {
                this.unitActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActionSpecified {
            get {
                return this.unitActionFieldSpecified;
            }
            set {
                this.unitActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class physicalObjectList {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private capacitorBank[] capacitorBankField;
        
        private loadManagementDevice[] loadManagementDeviceField;
        
        private measurementDevice[] measurementDeviceField;
        
        private meter[] meterField;
        
        private overcurrentDeviceBank[] overcurrentDeviceBankField;
        
        private outageDetectionDevice[] outageDetectionDeviceField;
        
        private pole[] poleField;
        
        private powerSystemDevice[] powerSystemDeviceField;
        
        private riser[] riserField;
        
        private streetLight[] streetLightField;
        
        private primaryCabinet[] primaryCabinetField;
        
        private switchDeviceBank[] switchDeviceBankField;
        
        private transformerBank[] transformerBankField;
        
        private ohPrimaryLine[] ohPrimaryLineField;
        
        private ohSecondaryLine[] ohSecondaryLineField;
        
        private ugPrimaryLine[] ugPrimaryLineField;
        
        private ugSecondaryLine[] ugSecondaryLineField;
        
        private regulatorBank[] regulatorBankField;
        
        private serviceLocation[] serviceLocationField;
        
        private secondaryJunctionBox[] secondaryJunctionBoxField;
        
        private guy[] guyField;
        
        private cut[] cutField;
        
        private jumper[] jumperField;
        
        private elbow[] elbowField;
        
        private surgeArrestor[] surgeArrestorField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("capacitorBank")]
        public capacitorBank[] capacitorBank {
            get {
                return this.capacitorBankField;
            }
            set {
                this.capacitorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("loadManagementDevice")]
        public loadManagementDevice[] loadManagementDevice {
            get {
                return this.loadManagementDeviceField;
            }
            set {
                this.loadManagementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("measurementDevice")]
        public measurementDevice[] measurementDevice {
            get {
                return this.measurementDeviceField;
            }
            set {
                this.measurementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("meter")]
        public meter[] meter {
            get {
                return this.meterField;
            }
            set {
                this.meterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("overcurrentDeviceBank")]
        public overcurrentDeviceBank[] overcurrentDeviceBank {
            get {
                return this.overcurrentDeviceBankField;
            }
            set {
                this.overcurrentDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("outageDetectionDevice")]
        public outageDetectionDevice[] outageDetectionDevice {
            get {
                return this.outageDetectionDeviceField;
            }
            set {
                this.outageDetectionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pole")]
        public pole[] pole {
            get {
                return this.poleField;
            }
            set {
                this.poleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("powerSystemDevice")]
        public powerSystemDevice[] powerSystemDevice {
            get {
                return this.powerSystemDeviceField;
            }
            set {
                this.powerSystemDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("riser")]
        public riser[] riser {
            get {
                return this.riserField;
            }
            set {
                this.riserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("streetLight")]
        public streetLight[] streetLight {
            get {
                return this.streetLightField;
            }
            set {
                this.streetLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("primaryCabinet")]
        public primaryCabinet[] primaryCabinet {
            get {
                return this.primaryCabinetField;
            }
            set {
                this.primaryCabinetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("switchDeviceBank")]
        public switchDeviceBank[] switchDeviceBank {
            get {
                return this.switchDeviceBankField;
            }
            set {
                this.switchDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transformerBank")]
        public transformerBank[] transformerBank {
            get {
                return this.transformerBankField;
            }
            set {
                this.transformerBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohPrimaryLine")]
        public ohPrimaryLine[] ohPrimaryLine {
            get {
                return this.ohPrimaryLineField;
            }
            set {
                this.ohPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohSecondaryLine")]
        public ohSecondaryLine[] ohSecondaryLine {
            get {
                return this.ohSecondaryLineField;
            }
            set {
                this.ohSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugPrimaryLine")]
        public ugPrimaryLine[] ugPrimaryLine {
            get {
                return this.ugPrimaryLineField;
            }
            set {
                this.ugPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugSecondaryLine")]
        public ugSecondaryLine[] ugSecondaryLine {
            get {
                return this.ugSecondaryLineField;
            }
            set {
                this.ugSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("regulatorBank")]
        public regulatorBank[] regulatorBank {
            get {
                return this.regulatorBankField;
            }
            set {
                this.regulatorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceLocation")]
        public serviceLocation[] serviceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("secondaryJunctionBox")]
        public secondaryJunctionBox[] secondaryJunctionBox {
            get {
                return this.secondaryJunctionBoxField;
            }
            set {
                this.secondaryJunctionBoxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("guy")]
        public guy[] guy {
            get {
                return this.guyField;
            }
            set {
                this.guyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cut")]
        public cut[] cut {
            get {
                return this.cutField;
            }
            set {
                this.cutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("jumper")]
        public jumper[] jumper {
            get {
                return this.jumperField;
            }
            set {
                this.jumperField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("elbow")]
        public elbow[] elbow {
            get {
                return this.elbowField;
            }
            set {
                this.elbowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("surgeArrestor")]
        public surgeArrestor[] surgeArrestor {
            get {
                return this.surgeArrestorField;
            }
            set {
                this.surgeArrestorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class loadManagementDevice : mspPointObject {
        
        private string serialNumberField;
        
        private string deviceTypeField;
        
        private string manufacturerField;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private deviceStatus statusField;
        
        private bool statusFieldSpecified;
        
        private float powerLimitField;
        
        private bool powerLimitFieldSpecified;
        
        private string meterIDField;
        
        private string meterNoField;
        
        private module[] moduleListField;
        
        private string numberOfRelaysField;
        
        private float ratedVoltageField;
        
        private bool ratedVoltageFieldSpecified;
        
        private float ratedCurrentField;
        
        private bool ratedCurrentFieldSpecified;
        
        private GPS gPSField;
        
        private loadManagementDeviceRelay[] loadManagementDeviceRelaysField;
        
        private string aMRDeviceTypeField;
        
        private string aMRVendorField;
        
        private utilityInfo utilityInfoField;
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public deviceStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float powerLimit {
            get {
                return this.powerLimitField;
            }
            set {
                this.powerLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerLimitSpecified {
            get {
                return this.powerLimitFieldSpecified;
            }
            set {
                this.powerLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfRelays {
            get {
                return this.numberOfRelaysField;
            }
            set {
                this.numberOfRelaysField = value;
            }
        }
        
        /// <remarks/>
        public float ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ratedVoltageSpecified {
            get {
                return this.ratedVoltageFieldSpecified;
            }
            set {
                this.ratedVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ratedCurrentSpecified {
            get {
                return this.ratedCurrentFieldSpecified;
            }
            set {
                this.ratedCurrentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public loadManagementDeviceRelay[] loadManagementDeviceRelays {
            get {
                return this.loadManagementDeviceRelaysField;
            }
            set {
                this.loadManagementDeviceRelaysField = value;
            }
        }
        
        /// <remarks/>
        public string AMRDeviceType {
            get {
                return this.aMRDeviceTypeField;
            }
            set {
                this.aMRDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRVendor {
            get {
                return this.aMRVendorField;
            }
            set {
                this.aMRVendorField = value;
            }
        }
        
        /// <remarks/>
        public utilityInfo utilityInfo {
            get {
                return this.utilityInfoField;
            }
            set {
                this.utilityInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum deviceStatus {
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        PowerLimitation,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class loadManagementDeviceRelay {
        
        private string relayNumberField;
        
        private connectorStatus connectorStatusField;
        
        private bool connectorStatusFieldSpecified;
        
        private string demandResponseDeviceClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string relayNumber {
            get {
                return this.relayNumberField;
            }
            set {
                this.relayNumberField = value;
            }
        }
        
        /// <remarks/>
        public connectorStatus connectorStatus {
            get {
                return this.connectorStatusField;
            }
            set {
                this.connectorStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectorStatusSpecified {
            get {
                return this.connectorStatusFieldSpecified;
            }
            set {
                this.connectorStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string demandResponseDeviceClass {
            get {
                return this.demandResponseDeviceClassField;
            }
            set {
                this.demandResponseDeviceClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum connectorStatus {
        
        /// <remarks/>
        OutOfService,
        
        /// <remarks/>
        Wired,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class measurementDevice : mspPointObject {
        
        private measurementDeviceType measurementDeviceTypeField;
        
        private bool measurementDeviceTypeFieldSpecified;
        
        private eaLoc eaLocField;
        
        private string substationField;
        
        private string feederField;
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private measurementDeviceStatus measurementDeviceStatusField;
        
        private bool measurementDeviceStatusFieldSpecified;
        
        private string pointIDField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public measurementDeviceType measurementDeviceType {
            get {
                return this.measurementDeviceTypeField;
            }
            set {
                this.measurementDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measurementDeviceTypeSpecified {
            get {
                return this.measurementDeviceTypeFieldSpecified;
            }
            set {
                this.measurementDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public measurementDeviceStatus measurementDeviceStatus {
            get {
                return this.measurementDeviceStatusField;
            }
            set {
                this.measurementDeviceStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measurementDeviceStatusSpecified {
            get {
                return this.measurementDeviceStatusFieldSpecified;
            }
            set {
                this.measurementDeviceStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pointID {
            get {
                return this.pointIDField;
            }
            set {
                this.pointIDField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum measurementDeviceType {
        
        /// <remarks/>
        Emeter,
        
        /// <remarks/>
        Gmeter,
        
        /// <remarks/>
        Wmeter,
        
        /// <remarks/>
        Demand,
        
        /// <remarks/>
        Harmonic,
        
        /// <remarks/>
        Phaseangle,
        
        /// <remarks/>
        BusV,
        
        /// <remarks/>
        BusI,
        
        /// <remarks/>
        BkrV,
        
        /// <remarks/>
        BkrI,
        
        /// <remarks/>
        LineV,
        
        /// <remarks/>
        LineI,
        
        /// <remarks/>
        GPSClock,
        
        /// <remarks/>
        Temp,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum measurementDeviceStatus {
        
        /// <remarks/>
        InService,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class overcurrentDeviceBank : mspSwitchingBank {
        
        private mspOverCurrentDeviceList mspOverCurrentDeviceListField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public mspOverCurrentDeviceList mspOverCurrentDeviceList {
            get {
                return this.mspOverCurrentDeviceListField;
            }
            set {
                this.mspOverCurrentDeviceListField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class mspOverCurrentDeviceList {
        
        private mspOverCurrentDevice[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("breaker", typeof(breaker))]
        [System.Xml.Serialization.XmlElementAttribute("fuse", typeof(fuse))]
        [System.Xml.Serialization.XmlElementAttribute("mspOverCurrentDevice", typeof(mspOverCurrentDevice))]
        [System.Xml.Serialization.XmlElementAttribute("recloser", typeof(recloser))]
        [System.Xml.Serialization.XmlElementAttribute("sectionalizer", typeof(sectionalizer))]
        public mspOverCurrentDevice[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class breaker : mspOverCurrentDevice {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breaker))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspOverCurrentDevice : mspSwitchingDevice {
        
        private bool bypassExistsField;
        
        private bool bypassExistsFieldSpecified;
        
        private System.DateTime lastServiceField;
        
        private bool lastServiceFieldSpecified;
        
        /// <remarks/>
        public bool bypassExists {
            get {
                return this.bypassExistsField;
            }
            set {
                this.bypassExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bypassExistsSpecified {
            get {
                return this.bypassExistsFieldSpecified;
            }
            set {
                this.bypassExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastService {
            get {
                return this.lastServiceField;
            }
            set {
                this.lastServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastServiceSpecified {
            get {
                return this.lastServiceFieldSpecified;
            }
            set {
                this.lastServiceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(jumper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(elbow))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cut))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspOverCurrentDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breaker))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class mspSwitchingDevice : mspObject {
        
        private string eaEquipmentField;
        
        private string facilityIDField;
        
        private phaseCd phaseField;
        
        private bool phaseFieldSpecified;
        
        private position positionField;
        
        private bool positionFieldSpecified;
        
        private float ratedVoltField;
        
        private bool ratedVoltFieldSpecified;
        
        private float operVoltField;
        
        private bool operVoltFieldSpecified;
        
        private float maxContAmpField;
        
        private bool maxContAmpFieldSpecified;
        
        private string manufacturerField;
        
        private mounting mountingField;
        
        private bool mountingFieldSpecified;
        
        /// <remarks/>
        public string eaEquipment {
            get {
                return this.eaEquipmentField;
            }
            set {
                this.eaEquipmentField = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public position position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positionSpecified {
            get {
                return this.positionFieldSpecified;
            }
            set {
                this.positionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ratedVolt {
            get {
                return this.ratedVoltField;
            }
            set {
                this.ratedVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ratedVoltSpecified {
            get {
                return this.ratedVoltFieldSpecified;
            }
            set {
                this.ratedVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float operVolt {
            get {
                return this.operVoltField;
            }
            set {
                this.operVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operVoltSpecified {
            get {
                return this.operVoltFieldSpecified;
            }
            set {
                this.operVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float maxContAmp {
            get {
                return this.maxContAmpField;
            }
            set {
                this.maxContAmpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxContAmpSpecified {
            get {
                return this.maxContAmpFieldSpecified;
            }
            set {
                this.maxContAmpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public mounting mounting {
            get {
                return this.mountingField;
            }
            set {
                this.mountingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mountingSpecified {
            get {
                return this.mountingFieldSpecified;
            }
            set {
                this.mountingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum position {
        
        /// <remarks/>
        NO,
        
        /// <remarks/>
        NC,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum mounting {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Bus-mounted")]
        Busmounted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pole-mounted")]
        Polemounted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pad-mounted")]
        Padmounted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Vault-mounted")]
        Vaultmounted,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class jumper : mspSwitchingDevice {
        
        private System.DateTime dateInstalledField;
        
        private bool dateInstalledFieldSpecified;
        
        /// <remarks/>
        public System.DateTime dateInstalled {
            get {
                return this.dateInstalledField;
            }
            set {
                this.dateInstalledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateInstalledSpecified {
            get {
                return this.dateInstalledFieldSpecified;
            }
            set {
                this.dateInstalledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class elbow : mspSwitchingDevice {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class cut : mspSwitchingDevice {
        
        private eaLoc lineSectionAffectedField;
        
        private cutActionTaken actionTakenField;
        
        private bool actionTakenFieldSpecified;
        
        private System.DateTime timeOfActionField;
        
        private bool timeOfActionFieldSpecified;
        
        /// <remarks/>
        public eaLoc lineSectionAffected {
            get {
                return this.lineSectionAffectedField;
            }
            set {
                this.lineSectionAffectedField = value;
            }
        }
        
        /// <remarks/>
        public cutActionTaken actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionTakenSpecified {
            get {
                return this.actionTakenFieldSpecified;
            }
            set {
                this.actionTakenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfAction {
            get {
                return this.timeOfActionField;
            }
            set {
                this.timeOfActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfActionSpecified {
            get {
                return this.timeOfActionFieldSpecified;
            }
            set {
                this.timeOfActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum cutActionTaken {
        
        /// <remarks/>
        InitiateCut,
        
        /// <remarks/>
        RestoreCut,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class sectionalizer : mspOverCurrentDevice {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class recloser : mspOverCurrentDevice {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class fuse : mspOverCurrentDevice {
        
        private float linkRtgField;
        
        private bool linkRtgFieldSpecified;
        
        /// <remarks/>
        public float linkRtg {
            get {
                return this.linkRtgField;
            }
            set {
                this.linkRtgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool linkRtgSpecified {
            get {
                return this.linkRtgFieldSpecified;
            }
            set {
                this.linkRtgFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspSwitchingBank : mspBankObject {
        
        private bool isGangedField;
        
        private bool isGangedFieldSpecified;
        
        private objectRef partnerField;
        
        private long ldPointField;
        
        private bool ldPointFieldSpecified;
        
        /// <remarks/>
        public bool isGanged {
            get {
                return this.isGangedField;
            }
            set {
                this.isGangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGangedSpecified {
            get {
                return this.isGangedFieldSpecified;
            }
            set {
                this.isGangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef partner {
            get {
                return this.partnerField;
            }
            set {
                this.partnerField = value;
            }
        }
        
        /// <remarks/>
        public long ldPoint {
            get {
                return this.ldPointField;
            }
            set {
                this.ldPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ldPointSpecified {
            get {
                return this.ldPointFieldSpecified;
            }
            set {
                this.ldPointFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class switchDeviceBank : mspSwitchingBank {
        
        private mspSwitchDeviceList mspSwitchDeviceListField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public mspSwitchDeviceList mspSwitchDeviceList {
            get {
                return this.mspSwitchDeviceListField;
            }
            set {
                this.mspSwitchDeviceListField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class mspSwitchDeviceList {
        
        private mspSwitchingDevice[] itemsField;
        
        private ItemsChoiceType2[] itemsElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cut", typeof(cut))]
        [System.Xml.Serialization.XmlElementAttribute("elbow", typeof(elbow))]
        [System.Xml.Serialization.XmlElementAttribute("jumper", typeof(jumper))]
        [System.Xml.Serialization.XmlElementAttribute("mspOverCurrentDevice", typeof(mspOverCurrentDevice))]
        [System.Xml.Serialization.XmlElementAttribute("mspSwitchingDevice", typeof(mspSwitchingDevice))]
        [System.Xml.Serialization.XmlElementAttribute("switch", typeof(mspSwitchingDevice))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public mspSwitchingDevice[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType2[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0", IncludeInSchema=false)]
    public enum ItemsChoiceType2 {
        
        /// <remarks/>
        cut,
        
        /// <remarks/>
        elbow,
        
        /// <remarks/>
        jumper,
        
        /// <remarks/>
        mspOverCurrentDevice,
        
        /// <remarks/>
        mspSwitchingDevice,
        
        /// <remarks/>
        @switch,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageDetectionDevice : mspPointObject {
        
        private string serialNumberField;
        
        private outageDetectDeviceType outageDetectDeviceTypeField;
        
        private bool outageDetectDeviceTypeFieldSpecified;
        
        private string manufacturerField;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private string meterNoField;
        
        private outageDetectDeviceStatus outageDetectDeviceStatusField;
        
        private bool outageDetectDeviceStatusFieldSpecified;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceType outageDetectDeviceType {
            get {
                return this.outageDetectDeviceTypeField;
            }
            set {
                this.outageDetectDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectDeviceTypeSpecified {
            get {
                return this.outageDetectDeviceTypeFieldSpecified;
            }
            set {
                this.outageDetectDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceStatus outageDetectDeviceStatus {
            get {
                return this.outageDetectDeviceStatusField;
            }
            set {
                this.outageDetectDeviceStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectDeviceStatusSpecified {
            get {
                return this.outageDetectDeviceStatusFieldSpecified;
            }
            set {
                this.outageDetectDeviceStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum outageDetectDeviceStatus {
        
        /// <remarks/>
        InService,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        Defective,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class pole : mspPointObject {
        
        private long poleHeightField;
        
        private bool poleHeightFieldSpecified;
        
        private poleClass poleClassField;
        
        private bool poleClassFieldSpecified;
        
        private poleType poleTypeField;
        
        private bool poleTypeFieldSpecified;
        
        private string poleNumberField;
        
        private string manufacturerField;
        
        private System.DateTime mfgDateField;
        
        private bool mfgDateFieldSpecified;
        
        private string ownerField;
        
        private treatment treatmentField;
        
        private bool treatmentFieldSpecified;
        
        private System.DateTime inspDateField;
        
        private bool inspDateFieldSpecified;
        
        private poleUseCode poleUseField;
        
        private bool poleUseFieldSpecified;
        
        private jointUse[] jointUseListField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public long poleHeight {
            get {
                return this.poleHeightField;
            }
            set {
                this.poleHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleHeightSpecified {
            get {
                return this.poleHeightFieldSpecified;
            }
            set {
                this.poleHeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleClass poleClass {
            get {
                return this.poleClassField;
            }
            set {
                this.poleClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleClassSpecified {
            get {
                return this.poleClassFieldSpecified;
            }
            set {
                this.poleClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleType poleType {
            get {
                return this.poleTypeField;
            }
            set {
                this.poleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleTypeSpecified {
            get {
                return this.poleTypeFieldSpecified;
            }
            set {
                this.poleTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string poleNumber {
            get {
                return this.poleNumberField;
            }
            set {
                this.poleNumberField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime mfgDate {
            get {
                return this.mfgDateField;
            }
            set {
                this.mfgDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mfgDateSpecified {
            get {
                return this.mfgDateFieldSpecified;
            }
            set {
                this.mfgDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public treatment treatment {
            get {
                return this.treatmentField;
            }
            set {
                this.treatmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool treatmentSpecified {
            get {
                return this.treatmentFieldSpecified;
            }
            set {
                this.treatmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime inspDate {
            get {
                return this.inspDateField;
            }
            set {
                this.inspDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inspDateSpecified {
            get {
                return this.inspDateFieldSpecified;
            }
            set {
                this.inspDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleUseCode poleUse {
            get {
                return this.poleUseField;
            }
            set {
                this.poleUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleUseSpecified {
            get {
                return this.poleUseFieldSpecified;
            }
            set {
                this.poleUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public jointUse[] jointUseList {
            get {
                return this.jointUseListField;
            }
            set {
                this.jointUseListField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum treatment {
        
        /// <remarks/>
        Butt,
        
        /// <remarks/>
        Natural,
        
        /// <remarks/>
        Penta,
        
        /// <remarks/>
        Creosote,
        
        /// <remarks/>
        CCA,
        
        /// <remarks/>
        Chemonite,
        
        /// <remarks/>
        Napthena,
        
        /// <remarks/>
        Cellon,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum poleUseCode {
        
        /// <remarks/>
        Distribution,
        
        /// <remarks/>
        Transmission,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class jointUse {
        
        private string companyIDField;
        
        private string jUseTypeField;
        
        private float jUseHeightField;
        
        private bool jUseHeightFieldSpecified;
        
        private bool isGuyedField;
        
        private bool isGuyedFieldSpecified;
        
        /// <remarks/>
        public string companyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public string jUseType {
            get {
                return this.jUseTypeField;
            }
            set {
                this.jUseTypeField = value;
            }
        }
        
        /// <remarks/>
        public float jUseHeight {
            get {
                return this.jUseHeightField;
            }
            set {
                this.jUseHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool jUseHeightSpecified {
            get {
                return this.jUseHeightFieldSpecified;
            }
            set {
                this.jUseHeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isGuyed {
            get {
                return this.isGuyedField;
            }
            set {
                this.isGuyedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGuyedSpecified {
            get {
                return this.isGuyedFieldSpecified;
            }
            set {
                this.isGuyedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class powerSystemDevice : mspPointObject {
        
        private string deviceDescriptionField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class riser : mspPointObject {
        
        private string constTypeField;
        
        private long riserHeightField;
        
        private bool riserHeightFieldSpecified;
        
        private string materialField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string constType {
            get {
                return this.constTypeField;
            }
            set {
                this.constTypeField = value;
            }
        }
        
        /// <remarks/>
        public long riserHeight {
            get {
                return this.riserHeightField;
            }
            set {
                this.riserHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool riserHeightSpecified {
            get {
                return this.riserHeightFieldSpecified;
            }
            set {
                this.riserHeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class streetLight : mspPointObject {
        
        private string lightTypeField;
        
        private long wattageField;
        
        private bool wattageFieldSpecified;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private string transformerBankIDField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string lightType {
            get {
                return this.lightTypeField;
            }
            set {
                this.lightTypeField = value;
            }
        }
        
        /// <remarks/>
        public long wattage {
            get {
                return this.wattageField;
            }
            set {
                this.wattageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wattageSpecified {
            get {
                return this.wattageFieldSpecified;
            }
            set {
                this.wattageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool brightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class primaryCabinet : mspPointObject {
        
        private string structTypeField;
        
        private objectRef[] cabinetContentsListField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string structType {
            get {
                return this.structTypeField;
            }
            set {
                this.structTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("cabinetContentsItem", IsNullable=false)]
        public objectRef[] cabinetContentsList {
            get {
                return this.cabinetContentsListField;
            }
            set {
                this.cabinetContentsListField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class transformerBank : mspBankObject {
        
        private wdgCode wdgCodeField;
        
        private bool wdgCodeFieldSpecified;
        
        private string transDescrField;
        
        private mounting mountingField;
        
        private bool mountingFieldSpecified;
        
        private float vInputField;
        
        private bool vInputFieldSpecified;
        
        private float vOutField;
        
        private bool vOutFieldSpecified;
        
        private config sourceSideConfigField;
        
        private bool sourceSideConfigFieldSpecified;
        
        private float tertVoltsField;
        
        private bool tertVoltsFieldSpecified;
        
        private objectRef tertChildField;
        
        private float vOutNomField;
        
        private bool vOutNomFieldSpecified;
        
        private float vOutNomTertiaryField;
        
        private bool vOutNomTertiaryFieldSpecified;
        
        private string secProtField;
        
        private float secVoltField;
        
        private bool secVoltFieldSpecified;
        
        private float ratedVoltField;
        
        private bool ratedVoltFieldSpecified;
        
        private string priProtField;
        
        private transformer[] transformerListField;
        
        private GPS gPSField;
        
        private mspPhase centerTapPhaseField;
        
        private bool centerTapPhaseFieldSpecified;
        
        /// <remarks/>
        public wdgCode wdgCode {
            get {
                return this.wdgCodeField;
            }
            set {
                this.wdgCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wdgCodeSpecified {
            get {
                return this.wdgCodeFieldSpecified;
            }
            set {
                this.wdgCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transDescr {
            get {
                return this.transDescrField;
            }
            set {
                this.transDescrField = value;
            }
        }
        
        /// <remarks/>
        public mounting mounting {
            get {
                return this.mountingField;
            }
            set {
                this.mountingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mountingSpecified {
            get {
                return this.mountingFieldSpecified;
            }
            set {
                this.mountingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float vInput {
            get {
                return this.vInputField;
            }
            set {
                this.vInputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vInputSpecified {
            get {
                return this.vInputFieldSpecified;
            }
            set {
                this.vInputFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float vOut {
            get {
                return this.vOutField;
            }
            set {
                this.vOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vOutSpecified {
            get {
                return this.vOutFieldSpecified;
            }
            set {
                this.vOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public config sourceSideConfig {
            get {
                return this.sourceSideConfigField;
            }
            set {
                this.sourceSideConfigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceSideConfigSpecified {
            get {
                return this.sourceSideConfigFieldSpecified;
            }
            set {
                this.sourceSideConfigFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float tertVolts {
            get {
                return this.tertVoltsField;
            }
            set {
                this.tertVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tertVoltsSpecified {
            get {
                return this.tertVoltsFieldSpecified;
            }
            set {
                this.tertVoltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef tertChild {
            get {
                return this.tertChildField;
            }
            set {
                this.tertChildField = value;
            }
        }
        
        /// <remarks/>
        public float vOutNom {
            get {
                return this.vOutNomField;
            }
            set {
                this.vOutNomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vOutNomSpecified {
            get {
                return this.vOutNomFieldSpecified;
            }
            set {
                this.vOutNomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float vOutNomTertiary {
            get {
                return this.vOutNomTertiaryField;
            }
            set {
                this.vOutNomTertiaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vOutNomTertiarySpecified {
            get {
                return this.vOutNomTertiaryFieldSpecified;
            }
            set {
                this.vOutNomTertiaryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string secProt {
            get {
                return this.secProtField;
            }
            set {
                this.secProtField = value;
            }
        }
        
        /// <remarks/>
        public float secVolt {
            get {
                return this.secVoltField;
            }
            set {
                this.secVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secVoltSpecified {
            get {
                return this.secVoltFieldSpecified;
            }
            set {
                this.secVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ratedVolt {
            get {
                return this.ratedVoltField;
            }
            set {
                this.ratedVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ratedVoltSpecified {
            get {
                return this.ratedVoltFieldSpecified;
            }
            set {
                this.ratedVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string priProt {
            get {
                return this.priProtField;
            }
            set {
                this.priProtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public transformer[] transformerList {
            get {
                return this.transformerListField;
            }
            set {
                this.transformerListField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
        
        /// <remarks/>
        public mspPhase centerTapPhase {
            get {
                return this.centerTapPhaseField;
            }
            set {
                this.centerTapPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centerTapPhaseSpecified {
            get {
                return this.centerTapPhaseFieldSpecified;
            }
            set {
                this.centerTapPhaseFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum wdgCode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y")]
        YY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-Y")]
        DY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Grounded Y-D")]
        GroundedYD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ungrounded Y-D")]
        UngroundedYD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Open Y-D")]
        OpenYD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-D")]
        DD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y Grounded Imp")]
        YYGroundedImp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y 3ph core type")]
        YY3phcoretype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-D one")]
        DDone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-D open")]
        DDopen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y-D Ground")]
        YYDGround,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-D one")]
        YDone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-Y open")]
        DYopen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-D open")]
        YDopen,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum config {
        
        /// <remarks/>
        AB,
        
        /// <remarks/>
        AC,
        
        /// <remarks/>
        BC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class transformer : mspObject {
        
        private string facilityIDField;
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private float kvaField;
        
        private bool kvaFieldSpecified;
        
        private string xfmrTypeField;
        
        private string statusField;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private phaseCd phaseField;
        
        private bool phaseFieldSpecified;
        
        private float impedanceField;
        
        private bool impedanceFieldSpecified;
        
        private float nLLossField;
        
        private bool nLLossFieldSpecified;
        
        private float fLLossField;
        
        private bool fLLossFieldSpecified;
        
        private float priceField;
        
        private bool priceFieldSpecified;
        
        private float priVoltsLoField;
        
        private bool priVoltsLoFieldSpecified;
        
        private float priVoltsHiField;
        
        private bool priVoltsHiFieldSpecified;
        
        private float secVoltsLoField;
        
        private bool secVoltsLoFieldSpecified;
        
        private float secVoltsHiField;
        
        private bool secVoltsHiFieldSpecified;
        
        private System.DateTime mfgDateField;
        
        private bool mfgDateFieldSpecified;
        
        private string pcbField;
        
        private string eaEquipmentField;
        
        private testInstance[] pcbTestListField;
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public float kva {
            get {
                return this.kvaField;
            }
            set {
                this.kvaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvaSpecified {
            get {
                return this.kvaFieldSpecified;
            }
            set {
                this.kvaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string xfmrType {
            get {
                return this.xfmrTypeField;
            }
            set {
                this.xfmrTypeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float impedance {
            get {
                return this.impedanceField;
            }
            set {
                this.impedanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool impedanceSpecified {
            get {
                return this.impedanceFieldSpecified;
            }
            set {
                this.impedanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float nLLoss {
            get {
                return this.nLLossField;
            }
            set {
                this.nLLossField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nLLossSpecified {
            get {
                return this.nLLossFieldSpecified;
            }
            set {
                this.nLLossFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float fLLoss {
            get {
                return this.fLLossField;
            }
            set {
                this.fLLossField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fLLossSpecified {
            get {
                return this.fLLossFieldSpecified;
            }
            set {
                this.fLLossFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float priVoltsLo {
            get {
                return this.priVoltsLoField;
            }
            set {
                this.priVoltsLoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priVoltsLoSpecified {
            get {
                return this.priVoltsLoFieldSpecified;
            }
            set {
                this.priVoltsLoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float priVoltsHi {
            get {
                return this.priVoltsHiField;
            }
            set {
                this.priVoltsHiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priVoltsHiSpecified {
            get {
                return this.priVoltsHiFieldSpecified;
            }
            set {
                this.priVoltsHiFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float secVoltsLo {
            get {
                return this.secVoltsLoField;
            }
            set {
                this.secVoltsLoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secVoltsLoSpecified {
            get {
                return this.secVoltsLoFieldSpecified;
            }
            set {
                this.secVoltsLoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float secVoltsHi {
            get {
                return this.secVoltsHiField;
            }
            set {
                this.secVoltsHiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secVoltsHiSpecified {
            get {
                return this.secVoltsHiFieldSpecified;
            }
            set {
                this.secVoltsHiFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime mfgDate {
            get {
                return this.mfgDateField;
            }
            set {
                this.mfgDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mfgDateSpecified {
            get {
                return this.mfgDateFieldSpecified;
            }
            set {
                this.mfgDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pcb {
            get {
                return this.pcbField;
            }
            set {
                this.pcbField = value;
            }
        }
        
        /// <remarks/>
        public string eaEquipment {
            get {
                return this.eaEquipmentField;
            }
            set {
                this.eaEquipmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public testInstance[] pcbTestList {
            get {
                return this.pcbTestListField;
            }
            set {
                this.pcbTestListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class testInstance {
        
        private System.DateTime testDateField;
        
        private bool testDateFieldSpecified;
        
        private string pcbClassField;
        
        private string sampleNumberField;
        
        private string commentField;
        
        /// <remarks/>
        public System.DateTime testDate {
            get {
                return this.testDateField;
            }
            set {
                this.testDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testDateSpecified {
            get {
                return this.testDateFieldSpecified;
            }
            set {
                this.testDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pcbClass {
            get {
                return this.pcbClassField;
            }
            set {
                this.pcbClassField = value;
            }
        }
        
        /// <remarks/>
        public string sampleNumber {
            get {
                return this.sampleNumberField;
            }
            set {
                this.sampleNumberField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ohPrimaryLine : mspElectricLine {
        
        private float operVoltField;
        
        private bool operVoltFieldSpecified;
        
        private string condPerPhaseField;
        
        private string lengthSrcField;
        
        /// <remarks/>
        public float operVolt {
            get {
                return this.operVoltField;
            }
            set {
                this.operVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operVoltSpecified {
            get {
                return this.operVoltFieldSpecified;
            }
            set {
                this.operVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string condPerPhase {
            get {
                return this.condPerPhaseField;
            }
            set {
                this.condPerPhaseField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspElectricLine : mspConnectivityLine {
        
        private phaseCd phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private conductor[] conductorListField;
        
        private string condNField;
        
        private float condLengthField;
        
        private bool condLengthFieldSpecified;
        
        private string constrField;
        
        private mspLoadGroup loadField;
        
        /// <remarks/>
        public phaseCd phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public conductor[] conductorList {
            get {
                return this.conductorListField;
            }
            set {
                this.conductorListField = value;
            }
        }
        
        /// <remarks/>
        public string condN {
            get {
                return this.condNField;
            }
            set {
                this.condNField = value;
            }
        }
        
        /// <remarks/>
        public float condLength {
            get {
                return this.condLengthField;
            }
            set {
                this.condLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool condLengthSpecified {
            get {
                return this.condLengthFieldSpecified;
            }
            set {
                this.condLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string constr {
            get {
                return this.constrField;
            }
            set {
                this.constrField = value;
            }
        }
        
        /// <remarks/>
        public mspLoadGroup load {
            get {
                return this.loadField;
            }
            set {
                this.loadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class conductor {
        
        private string conductorTypeField;
        
        private mspPhase phaseField;
        
        private bool phaseFieldSpecified;
        
        /// <remarks/>
        public string conductorType {
            get {
                return this.conductorTypeField;
            }
            set {
                this.conductorTypeField = value;
            }
        }
        
        /// <remarks/>
        public mspPhase phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspConnectivityLine : mspLineObject {
        
        private string gridLocationField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private object[] itemsField;
        
        private ItemsChoiceType3[] itemsElementNameField;
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("annotationList")]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fromNodeID", typeof(nodeIdentifier))]
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID", typeof(objectRef))]
        [System.Xml.Serialization.XmlElementAttribute("sectionID", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("toNodeID", typeof(nodeIdentifier))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType3[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0", IncludeInSchema=false)]
    public enum ItemsChoiceType3 {
        
        /// <remarks/>
        fromNodeID,
        
        /// <remarks/>
        parentSectionID,
        
        /// <remarks/>
        sectionID,
        
        /// <remarks/>
        toNodeID,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spanGuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericLineFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspLineObject : mspObject {
        
        private LineStringType complexLineField;
        
        /// <remarks/>
        public LineStringType complexLine {
            get {
                return this.complexLineField;
            }
            set {
                this.complexLineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class spanGuy : mspLineObject {
        
        private float attachmentHeightField;
        
        private bool attachmentHeightFieldSpecified;
        
        /// <remarks/>
        public float attachmentHeight {
            get {
                return this.attachmentHeightField;
            }
            set {
                this.attachmentHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attachmentHeightSpecified {
            get {
                return this.attachmentHeightFieldSpecified;
            }
            set {
                this.attachmentHeightFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class genericLineFeature : mspLineObject {
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ugSecondaryLine : mspElectricLine {
        
        private float operVoltField;
        
        private bool operVoltFieldSpecified;
        
        private ugSecondaryLineUGSecType uGSecTypeField;
        
        private bool uGSecTypeFieldSpecified;
        
        private bool isInConduitField;
        
        private bool isInConduitFieldSpecified;
        
        private string manufacturerField;
        
        private string condPerPhaseField;
        
        private string lengthSrcField;
        
        /// <remarks/>
        public float operVolt {
            get {
                return this.operVoltField;
            }
            set {
                this.operVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operVoltSpecified {
            get {
                return this.operVoltFieldSpecified;
            }
            set {
                this.operVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ugSecondaryLineUGSecType uGSecType {
            get {
                return this.uGSecTypeField;
            }
            set {
                this.uGSecTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uGSecTypeSpecified {
            get {
                return this.uGSecTypeFieldSpecified;
            }
            set {
                this.uGSecTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isInConduit {
            get {
                return this.isInConduitField;
            }
            set {
                this.isInConduitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isInConduitSpecified {
            get {
                return this.isInConduitFieldSpecified;
            }
            set {
                this.isInConduitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string condPerPhase {
            get {
                return this.condPerPhaseField;
            }
            set {
                this.condPerPhaseField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum ugSecondaryLineUGSecType {
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ohSecondaryLine : mspElectricLine {
        
        private ohSecondaryLineSecondaryType secondaryTypeField;
        
        private bool secondaryTypeFieldSpecified;
        
        private float operVoltField;
        
        private bool operVoltFieldSpecified;
        
        private string condPerPhaseField;
        
        private string lengthSrcField;
        
        /// <remarks/>
        public ohSecondaryLineSecondaryType secondaryType {
            get {
                return this.secondaryTypeField;
            }
            set {
                this.secondaryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secondaryTypeSpecified {
            get {
                return this.secondaryTypeFieldSpecified;
            }
            set {
                this.secondaryTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float operVolt {
            get {
                return this.operVoltField;
            }
            set {
                this.operVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operVoltSpecified {
            get {
                return this.operVoltFieldSpecified;
            }
            set {
                this.operVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string condPerPhase {
            get {
                return this.condPerPhaseField;
            }
            set {
                this.condPerPhaseField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum ohSecondaryLineSecondaryType {
        
        /// <remarks/>
        Underbuild,
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ugPrimaryLine : mspElectricLine {
        
        private float operVoltField;
        
        private bool operVoltFieldSpecified;
        
        private bool isInConduitField;
        
        private bool isInConduitFieldSpecified;
        
        private string manufacturerField;
        
        private string condPerPhaseField;
        
        private string lengthSrcField;
        
        /// <remarks/>
        public float operVolt {
            get {
                return this.operVoltField;
            }
            set {
                this.operVoltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operVoltSpecified {
            get {
                return this.operVoltFieldSpecified;
            }
            set {
                this.operVoltFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isInConduit {
            get {
                return this.isInConduitField;
            }
            set {
                this.isInConduitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isInConduitSpecified {
            get {
                return this.isInConduitFieldSpecified;
            }
            set {
                this.isInConduitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string condPerPhase {
            get {
                return this.condPerPhaseField;
            }
            set {
                this.condPerPhaseField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class regulatorBank : mspBankObject {
        
        private string regTypeField;
        
        private mspPhase ctrlPhaseField;
        
        private bool ctrlPhaseFieldSpecified;
        
        private string wdgTypeField;
        
        private regulator[] regulatorListField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string regType {
            get {
                return this.regTypeField;
            }
            set {
                this.regTypeField = value;
            }
        }
        
        /// <remarks/>
        public mspPhase ctrlPhase {
            get {
                return this.ctrlPhaseField;
            }
            set {
                this.ctrlPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ctrlPhaseSpecified {
            get {
                return this.ctrlPhaseFieldSpecified;
            }
            set {
                this.ctrlPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string wdgType {
            get {
                return this.wdgTypeField;
            }
            set {
                this.wdgTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public regulator[] regulatorList {
            get {
                return this.regulatorListField;
            }
            set {
                this.regulatorListField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class regulator : mspObject {
        
        private string eaEquipmentField;
        
        private float vOutField;
        
        private bool vOutFieldSpecified;
        
        private float ldcRField;
        
        private bool ldcRFieldSpecified;
        
        private float ldcXField;
        
        private bool ldcXFieldSpecified;
        
        private float fhHiField;
        
        private bool fhHiFieldSpecified;
        
        private float fhLoField;
        
        private bool fhLoFieldSpecified;
        
        private mspPhase phaseField;
        
        private bool phaseFieldSpecified;
        
        private float kvaField;
        
        private bool kvaFieldSpecified;
        
        /// <remarks/>
        public string eaEquipment {
            get {
                return this.eaEquipmentField;
            }
            set {
                this.eaEquipmentField = value;
            }
        }
        
        /// <remarks/>
        public float vOut {
            get {
                return this.vOutField;
            }
            set {
                this.vOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vOutSpecified {
            get {
                return this.vOutFieldSpecified;
            }
            set {
                this.vOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ldcR {
            get {
                return this.ldcRField;
            }
            set {
                this.ldcRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ldcRSpecified {
            get {
                return this.ldcRFieldSpecified;
            }
            set {
                this.ldcRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ldcX {
            get {
                return this.ldcXField;
            }
            set {
                this.ldcXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ldcXSpecified {
            get {
                return this.ldcXFieldSpecified;
            }
            set {
                this.ldcXFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float fhHi {
            get {
                return this.fhHiField;
            }
            set {
                this.fhHiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fhHiSpecified {
            get {
                return this.fhHiFieldSpecified;
            }
            set {
                this.fhHiFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float fhLo {
            get {
                return this.fhLoField;
            }
            set {
                this.fhLoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fhLoSpecified {
            get {
                return this.fhLoFieldSpecified;
            }
            set {
                this.fhLoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspPhase phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kva {
            get {
                return this.kvaField;
            }
            set {
                this.kvaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvaSpecified {
            get {
                return this.kvaFieldSpecified;
            }
            set {
                this.kvaFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class serviceLocation : mspElectricPoint {
        
        private string custIDField;
        
        private string accountNumberField;
        
        private string facilityNameField;
        
        private string siteIDField;
        
        private string servAddr1Field;
        
        private string servAddr2Field;
        
        private string servCityField;
        
        private string servStateField;
        
        private string servZipField;
        
        private string servTypeField;
        
        private string revenueClassField;
        
        private string servStatusField;
        
        private powerStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private string billingCycleField;
        
        private string routeField;
        
        private string specialNeedsField;
        
        private string loadMgmtField;
        
        private string budgBillField;
        
        private float acRecvBalField;
        
        private bool acRecvBalFieldSpecified;
        
        private float acRecvCurField;
        
        private bool acRecvCurFieldSpecified;
        
        private float acRecv30Field;
        
        private bool acRecv30FieldSpecified;
        
        private float acRecv60Field;
        
        private bool acRecv60FieldSpecified;
        
        private float acRecv90Field;
        
        private bool acRecv90FieldSpecified;
        
        private System.DateTime paymentDueDateField;
        
        private bool paymentDueDateFieldSpecified;
        
        private System.DateTime lastPaymentDateField;
        
        private bool lastPaymentDateFieldSpecified;
        
        private float lastPaymentAmountField;
        
        private bool lastPaymentAmountFieldSpecified;
        
        private System.DateTime billDateField;
        
        private bool billDateFieldSpecified;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private string connectionField;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private network networkField;
        
        private string sICField;
        
        private bool isCogenerationSiteField;
        
        private bool isCogenerationSiteFieldSpecified;
        
        private string woNumberField;
        
        private string soNumberField;
        
        private bool isPrePayField;
        
        private bool isPrePayFieldSpecified;
        
        private string billingTermsField;
        
        private float calculatedCurrentBillAmountField;
        
        private bool calculatedCurrentBillAmountFieldSpecified;
        
        private System.DateTime calculatedCurrentBillDateTimeField;
        
        private bool calculatedCurrentBillDateTimeFieldSpecified;
        
        private meterRead[] calculatedCurrentBillReadingsField;
        
        private float lastBillAmountField;
        
        private bool lastBillAmountFieldSpecified;
        
        private float calculatedUsedYesterdayField;
        
        private bool calculatedUsedYesterdayFieldSpecified;
        
        private phoneNumber[] phoneListField;
        
        private timeZone timezoneField;
        
        private GPS gPSField;
        
        private string descriptionField;
        
        private System.DateTime acReceivable30DueDateField;
        
        private bool acReceivable30DueDateFieldSpecified;
        
        private System.DateTime acReceivable60DueDateField;
        
        private bool acReceivable60DueDateFieldSpecified;
        
        private System.DateTime acReceivable90DueDateField;
        
        private bool acReceivable90DueDateFieldSpecified;
        
        private billingStatusItem[] billingStatusInformationField;
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string facilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
            }
        }
        
        /// <remarks/>
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string servAddr1 {
            get {
                return this.servAddr1Field;
            }
            set {
                this.servAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string servAddr2 {
            get {
                return this.servAddr2Field;
            }
            set {
                this.servAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string servCity {
            get {
                return this.servCityField;
            }
            set {
                this.servCityField = value;
            }
        }
        
        /// <remarks/>
        public string servState {
            get {
                return this.servStateField;
            }
            set {
                this.servStateField = value;
            }
        }
        
        /// <remarks/>
        public string servZip {
            get {
                return this.servZipField;
            }
            set {
                this.servZipField = value;
            }
        }
        
        /// <remarks/>
        public string servType {
            get {
                return this.servTypeField;
            }
            set {
                this.servTypeField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public string servStatus {
            get {
                return this.servStatusField;
            }
            set {
                this.servStatusField = value;
            }
        }
        
        /// <remarks/>
        public powerStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string specialNeeds {
            get {
                return this.specialNeedsField;
            }
            set {
                this.specialNeedsField = value;
            }
        }
        
        /// <remarks/>
        public string loadMgmt {
            get {
                return this.loadMgmtField;
            }
            set {
                this.loadMgmtField = value;
            }
        }
        
        /// <remarks/>
        public string budgBill {
            get {
                return this.budgBillField;
            }
            set {
                this.budgBillField = value;
            }
        }
        
        /// <remarks/>
        public float acRecvBal {
            get {
                return this.acRecvBalField;
            }
            set {
                this.acRecvBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecvBalSpecified {
            get {
                return this.acRecvBalFieldSpecified;
            }
            set {
                this.acRecvBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecvCur {
            get {
                return this.acRecvCurField;
            }
            set {
                this.acRecvCurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecvCurSpecified {
            get {
                return this.acRecvCurFieldSpecified;
            }
            set {
                this.acRecvCurFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecv30 {
            get {
                return this.acRecv30Field;
            }
            set {
                this.acRecv30Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecv30Specified {
            get {
                return this.acRecv30FieldSpecified;
            }
            set {
                this.acRecv30FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecv60 {
            get {
                return this.acRecv60Field;
            }
            set {
                this.acRecv60Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecv60Specified {
            get {
                return this.acRecv60FieldSpecified;
            }
            set {
                this.acRecv60FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float acRecv90 {
            get {
                return this.acRecv90Field;
            }
            set {
                this.acRecv90Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acRecv90Specified {
            get {
                return this.acRecv90FieldSpecified;
            }
            set {
                this.acRecv90FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime paymentDueDate {
            get {
                return this.paymentDueDateField;
            }
            set {
                this.paymentDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool paymentDueDateSpecified {
            get {
                return this.paymentDueDateFieldSpecified;
            }
            set {
                this.paymentDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastPaymentDate {
            get {
                return this.lastPaymentDateField;
            }
            set {
                this.lastPaymentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentDateSpecified {
            get {
                return this.lastPaymentDateFieldSpecified;
            }
            set {
                this.lastPaymentDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lastPaymentAmount {
            get {
                return this.lastPaymentAmountField;
            }
            set {
                this.lastPaymentAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentAmountSpecified {
            get {
                return this.lastPaymentAmountFieldSpecified;
            }
            set {
                this.lastPaymentAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billDate {
            get {
                return this.billDateField;
            }
            set {
                this.billDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billDateSpecified {
            get {
                return this.billDateFieldSpecified;
            }
            set {
                this.billDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public network network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public string SIC {
            get {
                return this.sICField;
            }
            set {
                this.sICField = value;
            }
        }
        
        /// <remarks/>
        public bool isCogenerationSite {
            get {
                return this.isCogenerationSiteField;
            }
            set {
                this.isCogenerationSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCogenerationSiteSpecified {
            get {
                return this.isCogenerationSiteFieldSpecified;
            }
            set {
                this.isCogenerationSiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool isPrePay {
            get {
                return this.isPrePayField;
            }
            set {
                this.isPrePayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isPrePaySpecified {
            get {
                return this.isPrePayFieldSpecified;
            }
            set {
                this.isPrePayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingTerms {
            get {
                return this.billingTermsField;
            }
            set {
                this.billingTermsField = value;
            }
        }
        
        /// <remarks/>
        public float calculatedCurrentBillAmount {
            get {
                return this.calculatedCurrentBillAmountField;
            }
            set {
                this.calculatedCurrentBillAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calculatedCurrentBillAmountSpecified {
            get {
                return this.calculatedCurrentBillAmountFieldSpecified;
            }
            set {
                this.calculatedCurrentBillAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime calculatedCurrentBillDateTime {
            get {
                return this.calculatedCurrentBillDateTimeField;
            }
            set {
                this.calculatedCurrentBillDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calculatedCurrentBillDateTimeSpecified {
            get {
                return this.calculatedCurrentBillDateTimeFieldSpecified;
            }
            set {
                this.calculatedCurrentBillDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterRead[] calculatedCurrentBillReadings {
            get {
                return this.calculatedCurrentBillReadingsField;
            }
            set {
                this.calculatedCurrentBillReadingsField = value;
            }
        }
        
        /// <remarks/>
        public float lastBillAmount {
            get {
                return this.lastBillAmountField;
            }
            set {
                this.lastBillAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastBillAmountSpecified {
            get {
                return this.lastBillAmountFieldSpecified;
            }
            set {
                this.lastBillAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float calculatedUsedYesterday {
            get {
                return this.calculatedUsedYesterdayField;
            }
            set {
                this.calculatedUsedYesterdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calculatedUsedYesterdaySpecified {
            get {
                return this.calculatedUsedYesterdayFieldSpecified;
            }
            set {
                this.calculatedUsedYesterdayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public phoneNumber[] phoneList {
            get {
                return this.phoneListField;
            }
            set {
                this.phoneListField = value;
            }
        }
        
        /// <remarks/>
        public timeZone timezone {
            get {
                return this.timezoneField;
            }
            set {
                this.timezoneField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime acReceivable30DueDate {
            get {
                return this.acReceivable30DueDateField;
            }
            set {
                this.acReceivable30DueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acReceivable30DueDateSpecified {
            get {
                return this.acReceivable30DueDateFieldSpecified;
            }
            set {
                this.acReceivable30DueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime acReceivable60DueDate {
            get {
                return this.acReceivable60DueDateField;
            }
            set {
                this.acReceivable60DueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acReceivable60DueDateSpecified {
            get {
                return this.acReceivable60DueDateFieldSpecified;
            }
            set {
                this.acReceivable60DueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime acReceivable90DueDate {
            get {
                return this.acReceivable90DueDateField;
            }
            set {
                this.acReceivable90DueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acReceivable90DueDateSpecified {
            get {
                return this.acReceivable90DueDateFieldSpecified;
            }
            set {
                this.acReceivable90DueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public billingStatusItem[] billingStatusInformation {
            get {
                return this.billingStatusInformationField;
            }
            set {
                this.billingStatusInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class network {
        
        private string boardDistField;
        
        private string taxDistField;
        
        private string franchiseDistField;
        
        private string schoolDistField;
        
        private string districtField;
        
        private string countyField;
        
        private string cityCodeField;
        
        private string substationCodeField;
        
        private string feederField;
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private eaLoc eaLocField;
        
        private string poleNoField;
        
        private string sectionField;
        
        private string townshipField;
        
        private string rangeField;
        
        private string subdivisionField;
        
        private string blockField;
        
        private string lotField;
        
        private linkedTransformer linkedTransformerField;
        
        private string linemanServiceAreaField;
        
        /// <remarks/>
        public string boardDist {
            get {
                return this.boardDistField;
            }
            set {
                this.boardDistField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string franchiseDist {
            get {
                return this.franchiseDistField;
            }
            set {
                this.franchiseDistField = value;
            }
        }
        
        /// <remarks/>
        public string schoolDist {
            get {
                return this.schoolDistField;
            }
            set {
                this.schoolDistField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string cityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string substationCode {
            get {
                return this.substationCodeField;
            }
            set {
                this.substationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string poleNo {
            get {
                return this.poleNoField;
            }
            set {
                this.poleNoField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public string subdivision {
            get {
                return this.subdivisionField;
            }
            set {
                this.subdivisionField = value;
            }
        }
        
        /// <remarks/>
        public string block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        public string lot {
            get {
                return this.lotField;
            }
            set {
                this.lotField = value;
            }
        }
        
        /// <remarks/>
        public linkedTransformer linkedTransformer {
            get {
                return this.linkedTransformerField;
            }
            set {
                this.linkedTransformerField = value;
            }
        }
        
        /// <remarks/>
        public string linemanServiceArea {
            get {
                return this.linemanServiceAreaField;
            }
            set {
                this.linemanServiceAreaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class linkedTransformer {
        
        private string bankIDField;
        
        private string[] unitListField;
        
        /// <remarks/>
        public string bankID {
            get {
                return this.bankIDField;
            }
            set {
                this.bankIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("unitID", IsNullable=false)]
        public string[] unitList {
            get {
                return this.unitListField;
            }
            set {
                this.unitListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class phoneNumber {
        
        private string phoneField;
        
        private phoneNumberPhoneType phoneTypeField;
        
        private bool phoneTypeFieldSpecified;
        
        private string priorityOrderField;
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public phoneNumberPhoneType phoneType {
            get {
                return this.phoneTypeField;
            }
            set {
                this.phoneTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phoneTypeSpecified {
            get {
                return this.phoneTypeFieldSpecified;
            }
            set {
                this.phoneTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum phoneNumberPhoneType {
        
        /// <remarks/>
        Home,
        
        /// <remarks/>
        Business,
        
        /// <remarks/>
        Mobile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Business mobile")]
        Businessmobile,
        
        /// <remarks/>
        Pager,
        
        /// <remarks/>
        Fax,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class billingStatusItem {
        
        private string billingTermsTypeField;
        
        private float accountsReceivableField;
        
        private bool accountsReceivableFieldSpecified;
        
        private float accountsReceivableThisPeriodField;
        
        private bool accountsReceivableThisPeriodFieldSpecified;
        
        /// <remarks/>
        public string billingTermsType {
            get {
                return this.billingTermsTypeField;
            }
            set {
                this.billingTermsTypeField = value;
            }
        }
        
        /// <remarks/>
        public float accountsReceivable {
            get {
                return this.accountsReceivableField;
            }
            set {
                this.accountsReceivableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountsReceivableSpecified {
            get {
                return this.accountsReceivableFieldSpecified;
            }
            set {
                this.accountsReceivableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float accountsReceivableThisPeriod {
            get {
                return this.accountsReceivableThisPeriodField;
            }
            set {
                this.accountsReceivableThisPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountsReceivableThisPeriodSpecified {
            get {
                return this.accountsReceivableThisPeriodFieldSpecified;
            }
            set {
                this.accountsReceivableThisPeriodFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class secondaryJunctionBox : mspPointObject {
        
        private string junctionBoxTypeField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string junctionBoxType {
            get {
                return this.junctionBoxTypeField;
            }
            set {
                this.junctionBoxTypeField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class guy : mspPointObject {
        
        private guyStatus statusField;
        
        private bool statusFieldSpecified;
        
        private anchor[] anchorListField;
        
        private guyGuyType guyTypeField;
        
        private bool guyTypeFieldSpecified;
        
        private guyGuyAgainst guyAgainstField;
        
        private bool guyAgainstFieldSpecified;
        
        private float attachmentHeightField;
        
        private bool attachmentHeightFieldSpecified;
        
        /// <remarks/>
        public guyStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public anchor[] anchorList {
            get {
                return this.anchorListField;
            }
            set {
                this.anchorListField = value;
            }
        }
        
        /// <remarks/>
        public guyGuyType guyType {
            get {
                return this.guyTypeField;
            }
            set {
                this.guyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guyTypeSpecified {
            get {
                return this.guyTypeFieldSpecified;
            }
            set {
                this.guyTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public guyGuyAgainst guyAgainst {
            get {
                return this.guyAgainstField;
            }
            set {
                this.guyAgainstField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guyAgainstSpecified {
            get {
                return this.guyAgainstFieldSpecified;
            }
            set {
                this.guyAgainstFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float attachmentHeight {
            get {
                return this.attachmentHeightField;
            }
            set {
                this.attachmentHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attachmentHeightSpecified {
            get {
                return this.attachmentHeightFieldSpecified;
            }
            set {
                this.attachmentHeightFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum guyStatus {
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        R,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class anchor : mspObject {
        
        private double leadField;
        
        private bool leadFieldSpecified;
        
        private anchorStatus statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        public double lead {
            get {
                return this.leadField;
            }
            set {
                this.leadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leadSpecified {
            get {
                return this.leadFieldSpecified;
            }
            set {
                this.leadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public anchorStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum anchorStatus {
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        R,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum guyGuyType {
        
        /// <remarks/>
        Down,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Double down")]
        Doubledown,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum guyGuyAgainst {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dead-end")]
        Deadend,
        
        /// <remarks/>
        Angle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Storm-right")]
        Stormright,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Storm-left")]
        Stormleft,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class surgeArrestor : mspObject {
        
        private assetFields assetFieldsField;
        
        private float ratedVoltageField;
        
        private bool ratedVoltageFieldSpecified;
        
        private float continuousOperatingVoltageField;
        
        private bool continuousOperatingVoltageFieldSpecified;
        
        private float nominalDischargeCurrentField;
        
        private bool nominalDischargeCurrentFieldSpecified;
        
        private lineDischargeClass lineDischargeClassField;
        
        private bool lineDischargeClassFieldSpecified;
        
        private float impulseWithstandField;
        
        private bool impulseWithstandFieldSpecified;
        
        private float creepageDistanceField;
        
        private bool creepageDistanceFieldSpecified;
        
        private float flashoverDistanceField;
        
        private bool flashoverDistanceFieldSpecified;
        
        private float leakageCurrentField;
        
        private bool leakageCurrentFieldSpecified;
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
        
        /// <remarks/>
        public float ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ratedVoltageSpecified {
            get {
                return this.ratedVoltageFieldSpecified;
            }
            set {
                this.ratedVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float continuousOperatingVoltage {
            get {
                return this.continuousOperatingVoltageField;
            }
            set {
                this.continuousOperatingVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool continuousOperatingVoltageSpecified {
            get {
                return this.continuousOperatingVoltageFieldSpecified;
            }
            set {
                this.continuousOperatingVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float nominalDischargeCurrent {
            get {
                return this.nominalDischargeCurrentField;
            }
            set {
                this.nominalDischargeCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nominalDischargeCurrentSpecified {
            get {
                return this.nominalDischargeCurrentFieldSpecified;
            }
            set {
                this.nominalDischargeCurrentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public lineDischargeClass lineDischargeClass {
            get {
                return this.lineDischargeClassField;
            }
            set {
                this.lineDischargeClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineDischargeClassSpecified {
            get {
                return this.lineDischargeClassFieldSpecified;
            }
            set {
                this.lineDischargeClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float impulseWithstand {
            get {
                return this.impulseWithstandField;
            }
            set {
                this.impulseWithstandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool impulseWithstandSpecified {
            get {
                return this.impulseWithstandFieldSpecified;
            }
            set {
                this.impulseWithstandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float creepageDistance {
            get {
                return this.creepageDistanceField;
            }
            set {
                this.creepageDistanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creepageDistanceSpecified {
            get {
                return this.creepageDistanceFieldSpecified;
            }
            set {
                this.creepageDistanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float flashoverDistance {
            get {
                return this.flashoverDistanceField;
            }
            set {
                this.flashoverDistanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool flashoverDistanceSpecified {
            get {
                return this.flashoverDistanceFieldSpecified;
            }
            set {
                this.flashoverDistanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float leakageCurrent {
            get {
                return this.leakageCurrentField;
            }
            set {
                this.leakageCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool leakageCurrentSpecified {
            get {
                return this.leakageCurrentFieldSpecified;
            }
            set {
                this.leakageCurrentFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class assetFields {
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private System.DateTime manufacturedDateField;
        
        private bool manufacturedDateFieldSpecified;
        
        private float priceField;
        
        private bool priceFieldSpecified;
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime manufacturedDate {
            get {
                return this.manufacturedDateField;
            }
            set {
                this.manufacturedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool manufacturedDateSpecified {
            get {
                return this.manufacturedDateFieldSpecified;
            }
            set {
                this.manufacturedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum lineDischargeClass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class pickList {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private pickListItem[] pickListItemField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pickListItem")]
        public pickListItem[] pickListItem {
            get {
                return this.pickListItemField;
            }
            set {
                this.pickListItemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class pickListItem {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string stockNumberField;
        
        private float quantityField;
        
        private bool quantityFieldSpecified;
        
        private unitActn unitActionField;
        
        private bool unitActionFieldSpecified;
        
        private objectRef materialItemIDField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string stockNumber {
            get {
                return this.stockNumberField;
            }
            set {
                this.stockNumberField = value;
            }
        }
        
        /// <remarks/>
        public float quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitAction {
            get {
                return this.unitActionField;
            }
            set {
                this.unitActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActionSpecified {
            get {
                return this.unitActionFieldSpecified;
            }
            set {
                this.unitActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef materialItemID {
            get {
                return this.materialItemIDField;
            }
            set {
                this.materialItemIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class substation : mspElectricPoint {
        
        private string zMinField;
        
        private string zMaxField;
        
        private zUnit unitsField;
        
        private bool unitsFieldSpecified;
        
        private complexNum posSeqZField;
        
        private complexNum zeroSeqZField;
        
        private complexNum negSeqZField;
        
        private float busVoltsField;
        
        private bool busVoltsFieldSpecified;
        
        private float ohGndZField;
        
        private bool ohGndZFieldSpecified;
        
        private float ugGndZField;
        
        private bool ugGndZFieldSpecified;
        
        private float nomVoltsField;
        
        private bool nomVoltsFieldSpecified;
        
        private bool ldAollocField;
        
        private bool ldAollocFieldSpecified;
        
        private ldCon ldConField;
        
        private bool ldConFieldSpecified;
        
        private bool isRegulatedField;
        
        private bool isRegulatedFieldSpecified;
        
        private feederObject[] feederListField;
        
        private string nameField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string zMin {
            get {
                return this.zMinField;
            }
            set {
                this.zMinField = value;
            }
        }
        
        /// <remarks/>
        public string zMax {
            get {
                return this.zMaxField;
            }
            set {
                this.zMaxField = value;
            }
        }
        
        /// <remarks/>
        public zUnit units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public complexNum posSeqZ {
            get {
                return this.posSeqZField;
            }
            set {
                this.posSeqZField = value;
            }
        }
        
        /// <remarks/>
        public complexNum zeroSeqZ {
            get {
                return this.zeroSeqZField;
            }
            set {
                this.zeroSeqZField = value;
            }
        }
        
        /// <remarks/>
        public complexNum negSeqZ {
            get {
                return this.negSeqZField;
            }
            set {
                this.negSeqZField = value;
            }
        }
        
        /// <remarks/>
        public float busVolts {
            get {
                return this.busVoltsField;
            }
            set {
                this.busVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool busVoltsSpecified {
            get {
                return this.busVoltsFieldSpecified;
            }
            set {
                this.busVoltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ohGndZ {
            get {
                return this.ohGndZField;
            }
            set {
                this.ohGndZField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ohGndZSpecified {
            get {
                return this.ohGndZFieldSpecified;
            }
            set {
                this.ohGndZFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float ugGndZ {
            get {
                return this.ugGndZField;
            }
            set {
                this.ugGndZField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ugGndZSpecified {
            get {
                return this.ugGndZFieldSpecified;
            }
            set {
                this.ugGndZFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float nomVolts {
            get {
                return this.nomVoltsField;
            }
            set {
                this.nomVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nomVoltsSpecified {
            get {
                return this.nomVoltsFieldSpecified;
            }
            set {
                this.nomVoltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ldAolloc {
            get {
                return this.ldAollocField;
            }
            set {
                this.ldAollocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ldAollocSpecified {
            get {
                return this.ldAollocFieldSpecified;
            }
            set {
                this.ldAollocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ldCon ldCon {
            get {
                return this.ldConField;
            }
            set {
                this.ldConField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ldConSpecified {
            get {
                return this.ldConFieldSpecified;
            }
            set {
                this.ldConFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRegulated {
            get {
                return this.isRegulatedField;
            }
            set {
                this.isRegulatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRegulatedSpecified {
            get {
                return this.isRegulatedFieldSpecified;
            }
            set {
                this.isRegulatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public feederObject[] feederList {
            get {
                return this.feederListField;
            }
            set {
                this.feederListField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum zUnit {
        
        /// <remarks/>
        Ohms,
        
        /// <remarks/>
        Percent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Total,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class complexNum {
        
        private float rField;
        
        private bool rFieldSpecified;
        
        private float xField;
        
        private bool xFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rSpecified {
            get {
                return this.rFieldSpecified;
            }
            set {
                this.rFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public float x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xSpecified {
            get {
                return this.xFieldSpecified;
            }
            set {
                this.xFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum ldCon {
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        D,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class feederObject : mspObject {
        
        private string substationNameField;
        
        private string feederNameField;
        
        private string feederNoField;
        
        private string facilityIDField;
        
        private eaLoc eaLocField;
        
        private string feederColorField;
        
        private string busField;
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederName {
            get {
                return this.feederNameField;
            }
            set {
                this.feederNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederNo {
            get {
                return this.feederNoField;
            }
            set {
                this.feederNoField = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string feederColor {
            get {
                return this.feederColorField;
            }
            set {
                this.feederColorField = value;
            }
        }
        
        /// <remarks/>
        public string bus {
            get {
                return this.busField;
            }
            set {
                this.busField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(motor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(generator))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspMotorGenerator : mspElectricPoint {
        
        private string ssDescField;
        
        private string tranDescField;
        
        private string stDescField;
        
        private float rtdVoltsField;
        
        private bool rtdVoltsFieldSpecified;
        
        /// <remarks/>
        public string ssDesc {
            get {
                return this.ssDescField;
            }
            set {
                this.ssDescField = value;
            }
        }
        
        /// <remarks/>
        public string tranDesc {
            get {
                return this.tranDescField;
            }
            set {
                this.tranDescField = value;
            }
        }
        
        /// <remarks/>
        public string stDesc {
            get {
                return this.stDescField;
            }
            set {
                this.stDescField = value;
            }
        }
        
        /// <remarks/>
        public float rtdVolts {
            get {
                return this.rtdVoltsField;
            }
            set {
                this.rtdVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rtdVoltsSpecified {
            get {
                return this.rtdVoltsFieldSpecified;
            }
            set {
                this.rtdVoltsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class motor : mspMotorGenerator {
        
        private string modelField;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        private float hpField;
        
        private bool hpFieldSpecified;
        
        private float pfField;
        
        private bool pfFieldSpecified;
        
        private float effField;
        
        private bool effFieldSpecified;
        
        private float lgVoltsField;
        
        private bool lgVoltsFieldSpecified;
        
        private float dropoutField;
        
        private bool dropoutFieldSpecified;
        
        private long nemaTypField;
        
        private bool nemaTypFieldSpecified;
        
        private float limitField;
        
        private bool limitFieldSpecified;
        
        private long limitedByField;
        
        private bool limitedByFieldSpecified;
        
        private long sftStTypField;
        
        private bool sftStTypFieldSpecified;
        
        private float sftStRField;
        
        private bool sftStRFieldSpecified;
        
        private float sftStXField;
        
        private bool sftStXFieldSpecified;
        
        private float sftStTapField;
        
        private bool sftStTapFieldSpecified;
        
        private float sftStWdgField;
        
        private bool sftStWdgFieldSpecified;
        
        private float lrPfField;
        
        private bool lrPfFieldSpecified;
        
        private float lrMultField;
        
        private bool lrMultFieldSpecified;
        
        private GPS gPSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hp {
            get {
                return this.hpField;
            }
            set {
                this.hpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hpSpecified {
            get {
                return this.hpFieldSpecified;
            }
            set {
                this.hpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pf {
            get {
                return this.pfField;
            }
            set {
                this.pfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pfSpecified {
            get {
                return this.pfFieldSpecified;
            }
            set {
                this.pfFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float eff {
            get {
                return this.effField;
            }
            set {
                this.effField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool effSpecified {
            get {
                return this.effFieldSpecified;
            }
            set {
                this.effFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lgVolts {
            get {
                return this.lgVoltsField;
            }
            set {
                this.lgVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lgVoltsSpecified {
            get {
                return this.lgVoltsFieldSpecified;
            }
            set {
                this.lgVoltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float dropout {
            get {
                return this.dropoutField;
            }
            set {
                this.dropoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dropoutSpecified {
            get {
                return this.dropoutFieldSpecified;
            }
            set {
                this.dropoutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long nemaTyp {
            get {
                return this.nemaTypField;
            }
            set {
                this.nemaTypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nemaTypSpecified {
            get {
                return this.nemaTypFieldSpecified;
            }
            set {
                this.nemaTypFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool limitSpecified {
            get {
                return this.limitFieldSpecified;
            }
            set {
                this.limitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long limitedBy {
            get {
                return this.limitedByField;
            }
            set {
                this.limitedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool limitedBySpecified {
            get {
                return this.limitedByFieldSpecified;
            }
            set {
                this.limitedByFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long sftStTyp {
            get {
                return this.sftStTypField;
            }
            set {
                this.sftStTypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sftStTypSpecified {
            get {
                return this.sftStTypFieldSpecified;
            }
            set {
                this.sftStTypFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sftStR {
            get {
                return this.sftStRField;
            }
            set {
                this.sftStRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sftStRSpecified {
            get {
                return this.sftStRFieldSpecified;
            }
            set {
                this.sftStRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sftStX {
            get {
                return this.sftStXField;
            }
            set {
                this.sftStXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sftStXSpecified {
            get {
                return this.sftStXFieldSpecified;
            }
            set {
                this.sftStXFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sftStTap {
            get {
                return this.sftStTapField;
            }
            set {
                this.sftStTapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sftStTapSpecified {
            get {
                return this.sftStTapFieldSpecified;
            }
            set {
                this.sftStTapFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sftStWdg {
            get {
                return this.sftStWdgField;
            }
            set {
                this.sftStWdgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sftStWdgSpecified {
            get {
                return this.sftStWdgFieldSpecified;
            }
            set {
                this.sftStWdgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lrPf {
            get {
                return this.lrPfField;
            }
            set {
                this.lrPfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lrPfSpecified {
            get {
                return this.lrPfFieldSpecified;
            }
            set {
                this.lrPfFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lrMult {
            get {
                return this.lrMultField;
            }
            set {
                this.lrMultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lrMultSpecified {
            get {
                return this.lrMultFieldSpecified;
            }
            set {
                this.lrMultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class generator : mspMotorGenerator {
        
        private string modelField;
        
        private complexNum holdVoltsZField;
        
        private string holdIDField;
        
        private float kwOutField;
        
        private bool kwOutFieldSpecified;
        
        private float kwMaxField;
        
        private bool kwMaxFieldSpecified;
        
        private float kvarLeadField;
        
        private bool kvarLeadFieldSpecified;
        
        private float kvarLagField;
        
        private bool kvarLagFieldSpecified;
        
        private float srcVoltsField;
        
        private bool srcVoltsFieldSpecified;
        
        private ldCon connectedField;
        
        private bool connectedFieldSpecified;
        
        private GPS gPSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public complexNum holdVoltsZ {
            get {
                return this.holdVoltsZField;
            }
            set {
                this.holdVoltsZField = value;
            }
        }
        
        /// <remarks/>
        public string holdID {
            get {
                return this.holdIDField;
            }
            set {
                this.holdIDField = value;
            }
        }
        
        /// <remarks/>
        public float kwOut {
            get {
                return this.kwOutField;
            }
            set {
                this.kwOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwOutSpecified {
            get {
                return this.kwOutFieldSpecified;
            }
            set {
                this.kwOutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kwMax {
            get {
                return this.kwMaxField;
            }
            set {
                this.kwMaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwMaxSpecified {
            get {
                return this.kwMaxFieldSpecified;
            }
            set {
                this.kwMaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kvarLead {
            get {
                return this.kvarLeadField;
            }
            set {
                this.kvarLeadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvarLeadSpecified {
            get {
                return this.kvarLeadFieldSpecified;
            }
            set {
                this.kvarLeadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kvarLag {
            get {
                return this.kvarLagField;
            }
            set {
                this.kvarLagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvarLagSpecified {
            get {
                return this.kvarLagFieldSpecified;
            }
            set {
                this.kvarLagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float srcVolts {
            get {
                return this.srcVoltsField;
            }
            set {
                this.srcVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool srcVoltsSpecified {
            get {
                return this.srcVoltsFieldSpecified;
            }
            set {
                this.srcVoltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ldCon connected {
            get {
                return this.connectedField;
            }
            set {
                this.connectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectedSpecified {
            get {
                return this.connectedFieldSpecified;
            }
            set {
                this.connectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class fakeNodeSection : mspElectricPoint {
        
        private bool ldAllocField;
        
        private bool ldAllocFieldSpecified;
        
        private bool isRequiredField;
        
        private bool isRequiredFieldSpecified;
        
        private string cktLvlField;
        
        private bool isMultiparentField;
        
        private bool isMultiparentFieldSpecified;
        
        /// <remarks/>
        public bool ldAlloc {
            get {
                return this.ldAllocField;
            }
            set {
                this.ldAllocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ldAllocSpecified {
            get {
                return this.ldAllocFieldSpecified;
            }
            set {
                this.ldAllocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequiredSpecified {
            get {
                return this.isRequiredFieldSpecified;
            }
            set {
                this.isRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string cktLvl {
            get {
                return this.cktLvlField;
            }
            set {
                this.cktLvlField = value;
            }
        }
        
        /// <remarks/>
        public bool isMultiparent {
            get {
                return this.isMultiparentField;
            }
            set {
                this.isMultiparentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isMultiparentSpecified {
            get {
                return this.isMultiparentFieldSpecified;
            }
            set {
                this.isMultiparentFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class parcel : mspPolygonObject {
        
        private string descriptionField;
        
        private string ownerField;
        
        private string sectionField;
        
        private string townshipField;
        
        private string rangeField;
        
        private string legalDescriptionField;
        
        private string[] premiseListField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public string legalDescription {
            get {
                return this.legalDescriptionField;
            }
            set {
                this.legalDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("premiseID", IsNullable=false)]
        public string[] premiseList {
            get {
                return this.premiseListField;
            }
            set {
                this.premiseListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPolygonFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(parcel))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspPolygonObject : mspObject {
        
        private PolygonType polygonField;
        
        /// <remarks/>
        public PolygonType Polygon {
            get {
                return this.polygonField;
            }
            set {
                this.polygonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class genericPolygonFeature : mspPolygonObject {
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class genericPointFeature : mspPointObject {
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        private graphicSymbol graphicSymbolField;
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
        
        /// <remarks/>
        public graphicSymbol graphicSymbol {
            get {
                return this.graphicSymbolField;
            }
            set {
                this.graphicSymbolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class trafficLight : mspPointObject {
        
        private string transformerBankIDField;
        
        private streetLocation streetLocationField;
        
        private string ownerField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public streetLocation streetLocation {
            get {
                return this.streetLocationField;
            }
            set {
                this.streetLocationField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class streetLocation {
        
        private string streetField;
        
        private string crossStreetField;
        
        private string cityField;
        
        private string countyField;
        
        private string stateField;
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class securityLight : mspPointObject {
        
        private string lightTypeField;
        
        private long wattageField;
        
        private bool wattageFieldSpecified;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private string sequenceField;
        
        private string statusField;
        
        private string actionTakenField;
        
        private string transformerBankIDField;
        
        private string descriptionField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string lightType {
            get {
                return this.lightTypeField;
            }
            set {
                this.lightTypeField = value;
            }
        }
        
        /// <remarks/>
        public long wattage {
            get {
                return this.wattageField;
            }
            set {
                this.wattageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wattageSpecified {
            get {
                return this.wattageFieldSpecified;
            }
            set {
                this.wattageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool brightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class scadaPoint : mspPointObject {
        
        private string descriptionField;
        
        private scadaPointType scadaPointTypeField;
        
        private bool scadaPointTypeFieldSpecified;
        
        private string gISFeatureIDField;
        
        private string gISFeatureTypeField;
        
        private GPS gPSField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public scadaPointType scadaPointType {
            get {
                return this.scadaPointTypeField;
            }
            set {
                this.scadaPointTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scadaPointTypeSpecified {
            get {
                return this.scadaPointTypeFieldSpecified;
            }
            set {
                this.scadaPointTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string GISFeatureID {
            get {
                return this.gISFeatureIDField;
            }
            set {
                this.gISFeatureIDField = value;
            }
        }
        
        /// <remarks/>
        public string GISFeatureType {
            get {
                return this.gISFeatureTypeField;
            }
            set {
                this.gISFeatureTypeField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum scadaPointType {
        
        /// <remarks/>
        status,
        
        /// <remarks/>
        analog,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspNetwork {
        
        private string boardDistField;
        
        private string taxDistField;
        
        private string franchiseDistField;
        
        private string schoolDistField;
        
        private string districtField;
        
        private string countyField;
        
        private string cityCodeField;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        private string sectionField;
        
        private string townshipField;
        
        private string rangeField;
        
        private string subdivisionField;
        
        private string blockField;
        
        private string lotField;
        
        /// <remarks/>
        public string boardDist {
            get {
                return this.boardDistField;
            }
            set {
                this.boardDistField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string franchiseDist {
            get {
                return this.franchiseDistField;
            }
            set {
                this.franchiseDistField = value;
            }
        }
        
        /// <remarks/>
        public string schoolDist {
            get {
                return this.schoolDistField;
            }
            set {
                this.schoolDistField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string cityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public string subdivision {
            get {
                return this.subdivisionField;
            }
            set {
                this.subdivisionField = value;
            }
        }
        
        /// <remarks/>
        public string block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        public string lot {
            get {
                return this.lotField;
            }
            set {
                this.lotField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class waterServiceLocation : mspServiceLocation {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class propaneServiceLocation : mspServiceLocation {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gasServiceLocation : mspServiceLocation {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class substationLoadControlStatus : mspObject {
        
        private string substationNameField;
        
        private string statusField;
        
        private string modeField;
        
        private scadaAnalog scadaAnalogField;
        
        private controlItem[] controlledItemsField;
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public scadaAnalog scadaAnalog {
            get {
                return this.scadaAnalogField;
            }
            set {
                this.scadaAnalogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public controlItem[] controlledItems {
            get {
                return this.controlledItemsField;
            }
            set {
                this.controlledItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class scadaAnalog : mspObject {
        
        private float valueField;
        
        private bool valueFieldSpecified;
        
        private uom unitField;
        
        private bool unitFieldSpecified;
        
        private qualityDescription qualityField;
        
        private bool qualityFieldSpecified;
        
        private analogCondition analogConditionField;
        
        private bool analogConditionFieldSpecified;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public float value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitSpecified {
            get {
                return this.unitFieldSpecified;
            }
            set {
                this.unitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public analogCondition analogCondition {
            get {
                return this.analogConditionField;
            }
            set {
                this.analogConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool analogConditionSpecified {
            get {
                return this.analogConditionFieldSpecified;
            }
            set {
                this.analogConditionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class controlItem {
        
        private string numberOfItemsField;
        
        private string numberOfControlledItemsField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfItems {
            get {
                return this.numberOfItemsField;
            }
            set {
                this.numberOfItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfControlledItems {
            get {
                return this.numberOfControlledItemsField;
            }
            set {
                this.numberOfControlledItemsField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class endDeviceShipment : mspObject {
        
        private string utility1Field;
        
        private string manufacturerField;
        
        private string poReferenceNumberField;
        
        private string shippingTicketNumberField;
        
        private string recipientField;
        
        private address shippedToAddressField;
        
        private System.DateTime shippedDateField;
        
        private bool shippedDateFieldSpecified;
        
        private transponderIDRange transponderIDRangeField;
        
        private receivedElectricMeter[] receivedMetersField;
        
        private module[] receivedModulesField;
        
        private loadManagementDevice[] receivedLoadManagementDevicesField;
        
        private CDDevice[] receivedCDDevicesField;
        
        private System.DateTime receivedDateField;
        
        private bool receivedDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("utility")]
        public string utility1 {
            get {
                return this.utility1Field;
            }
            set {
                this.utility1Field = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string poReferenceNumber {
            get {
                return this.poReferenceNumberField;
            }
            set {
                this.poReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string shippingTicketNumber {
            get {
                return this.shippingTicketNumberField;
            }
            set {
                this.shippingTicketNumberField = value;
            }
        }
        
        /// <remarks/>
        public string recipient {
            get {
                return this.recipientField;
            }
            set {
                this.recipientField = value;
            }
        }
        
        /// <remarks/>
        public address shippedToAddress {
            get {
                return this.shippedToAddressField;
            }
            set {
                this.shippedToAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shippedDate {
            get {
                return this.shippedDateField;
            }
            set {
                this.shippedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shippedDateSpecified {
            get {
                return this.shippedDateFieldSpecified;
            }
            set {
                this.shippedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public transponderIDRange transponderIDRange {
            get {
                return this.transponderIDRangeField;
            }
            set {
                this.transponderIDRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public receivedElectricMeter[] receivedMeters {
            get {
                return this.receivedMetersField;
            }
            set {
                this.receivedMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] receivedModules {
            get {
                return this.receivedModulesField;
            }
            set {
                this.receivedModulesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("loadManagementlDevice", IsNullable=false)]
        public loadManagementDevice[] receivedLoadManagementDevices {
            get {
                return this.receivedLoadManagementDevicesField;
            }
            set {
                this.receivedLoadManagementDevicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CDDevice[] receivedCDDevices {
            get {
                return this.receivedCDDevicesField;
            }
            set {
                this.receivedCDDevicesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime receivedDate {
            get {
                return this.receivedDateField;
            }
            set {
                this.receivedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool receivedDateSpecified {
            get {
                return this.receivedDateFieldSpecified;
            }
            set {
                this.receivedDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class transponderIDRange {
        
        private string startField;
        
        private string endField;
        
        /// <remarks/>
        public string start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public string end {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(testedElectricMeter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class receivedElectricMeter : mspMeter {
        
        private electricNameplate electricNameplateField;
        
        /// <remarks/>
        public electricNameplate electricNameplate {
            get {
                return this.electricNameplateField;
            }
            set {
                this.electricNameplateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class electricNameplate {
        
        private float khField;
        
        private bool khFieldSpecified;
        
        private float krField;
        
        private bool krFieldSpecified;
        
        private frequency frequencyField;
        
        private bool frequencyFieldSpecified;
        
        private numberOfElement numberOfElementsField;
        
        private bool numberOfElementsFieldSpecified;
        
        private baseType baseTypeField;
        
        private bool baseTypeFieldSpecified;
        
        private string accuracyClassField;
        
        private elementsVoltage elementsVoltageField;
        
        private bool elementsVoltageFieldSpecified;
        
        private supplyVoltage supplyVoltageField;
        
        private bool supplyVoltageFieldSpecified;
        
        private float maxAmperageField;
        
        private bool maxAmperageFieldSpecified;
        
        private float testAmperageField;
        
        private bool testAmperageFieldSpecified;
        
        private float regRatioField;
        
        private bool regRatioFieldSpecified;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private long wiresField;
        
        private bool wiresFieldSpecified;
        
        private long dialsField;
        
        private bool dialsFieldSpecified;
        
        private string formField;
        
        private long multiplierField;
        
        private bool multiplierFieldSpecified;
        
        private float demandMultField;
        
        private bool demandMultFieldSpecified;
        
        /// <remarks/>
        public float kh {
            get {
                return this.khField;
            }
            set {
                this.khField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool khSpecified {
            get {
                return this.khFieldSpecified;
            }
            set {
                this.khFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kr {
            get {
                return this.krField;
            }
            set {
                this.krField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool krSpecified {
            get {
                return this.krFieldSpecified;
            }
            set {
                this.krFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool frequencySpecified {
            get {
                return this.frequencyFieldSpecified;
            }
            set {
                this.frequencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public numberOfElement numberOfElements {
            get {
                return this.numberOfElementsField;
            }
            set {
                this.numberOfElementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberOfElementsSpecified {
            get {
                return this.numberOfElementsFieldSpecified;
            }
            set {
                this.numberOfElementsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public baseType baseType {
            get {
                return this.baseTypeField;
            }
            set {
                this.baseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseTypeSpecified {
            get {
                return this.baseTypeFieldSpecified;
            }
            set {
                this.baseTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string accuracyClass {
            get {
                return this.accuracyClassField;
            }
            set {
                this.accuracyClassField = value;
            }
        }
        
        /// <remarks/>
        public elementsVoltage elementsVoltage {
            get {
                return this.elementsVoltageField;
            }
            set {
                this.elementsVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool elementsVoltageSpecified {
            get {
                return this.elementsVoltageFieldSpecified;
            }
            set {
                this.elementsVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public supplyVoltage supplyVoltage {
            get {
                return this.supplyVoltageField;
            }
            set {
                this.supplyVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supplyVoltageSpecified {
            get {
                return this.supplyVoltageFieldSpecified;
            }
            set {
                this.supplyVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float maxAmperage {
            get {
                return this.maxAmperageField;
            }
            set {
                this.maxAmperageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxAmperageSpecified {
            get {
                return this.maxAmperageFieldSpecified;
            }
            set {
                this.maxAmperageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float testAmperage {
            get {
                return this.testAmperageField;
            }
            set {
                this.testAmperageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testAmperageSpecified {
            get {
                return this.testAmperageFieldSpecified;
            }
            set {
                this.testAmperageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float regRatio {
            get {
                return this.regRatioField;
            }
            set {
                this.regRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool regRatioSpecified {
            get {
                return this.regRatioFieldSpecified;
            }
            set {
                this.regRatioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long wires {
            get {
                return this.wiresField;
            }
            set {
                this.wiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wiresSpecified {
            get {
                return this.wiresFieldSpecified;
            }
            set {
                this.wiresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long dials {
            get {
                return this.dialsField;
            }
            set {
                this.dialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dialsSpecified {
            get {
                return this.dialsFieldSpecified;
            }
            set {
                this.dialsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        public long multiplier {
            get {
                return this.multiplierField;
            }
            set {
                this.multiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierSpecified {
            get {
                return this.multiplierFieldSpecified;
            }
            set {
                this.multiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float demandMult {
            get {
                return this.demandMultField;
            }
            set {
                this.demandMultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool demandMultSpecified {
            get {
                return this.demandMultFieldSpecified;
            }
            set {
                this.demandMultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(testedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricMeter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspMeter : mspObject {
        
        private string meterNoField;
        
        private string manufacturerField;
        
        private string catalogNumberField;
        
        private string serialNumberField;
        
        private string metrologyFirmwareVersionField;
        
        private string metrologyFirmwareRevisionField;
        
        private string meterTypeField;
        
        private string aMRDeviceTypeField;
        
        private string aMRVendorField;
        
        private string transponderIDField;
        
        private module[] moduleListField;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string catalogNumber {
            get {
                return this.catalogNumberField;
            }
            set {
                this.catalogNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string metrologyFirmwareVersion {
            get {
                return this.metrologyFirmwareVersionField;
            }
            set {
                this.metrologyFirmwareVersionField = value;
            }
        }
        
        /// <remarks/>
        public string metrologyFirmwareRevision {
            get {
                return this.metrologyFirmwareRevisionField;
            }
            set {
                this.metrologyFirmwareRevisionField = value;
            }
        }
        
        /// <remarks/>
        public string meterType {
            get {
                return this.meterTypeField;
            }
            set {
                this.meterTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRDeviceType {
            get {
                return this.aMRDeviceTypeField;
            }
            set {
                this.aMRDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRVendor {
            get {
                return this.aMRVendorField;
            }
            set {
                this.aMRVendorField = value;
            }
        }
        
        /// <remarks/>
        public string transponderID {
            get {
                return this.transponderIDField;
            }
            set {
                this.transponderIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class propaneMeter : mspMeter {
        
        private propaneNameplate propaneNameplateField;
        
        private propaneUtilityInfo propaneUtilityInfoField;
        
        private string[] meterStatusListField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private string meterCommAddressField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public propaneNameplate propaneNameplate {
            get {
                return this.propaneNameplateField;
            }
            set {
                this.propaneNameplateField = value;
            }
        }
        
        /// <remarks/>
        public propaneUtilityInfo propaneUtilityInfo {
            get {
                return this.propaneUtilityInfoField;
            }
            set {
                this.propaneUtilityInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class propaneNameplate : gasNameplate {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneNameplate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gasNameplate {
        
        private gasNameplateMechanicalForm mechanicalFormField;
        
        private bool mechanicalFormFieldSpecified;
        
        private gasNameplateMeasurementSystem measurementSystemField;
        
        private bool measurementSystemFieldSpecified;
        
        private gasNameplateGasPressure gasPressureField;
        
        private gasNameplateGasFlow gasFlowField;
        
        private gasNameplateGearDriveSize gearDriveSizeField;
        
        private bool gearDriveSizeFieldSpecified;
        
        private gasNameplateInternalPipeDiameter internalPipeDiameterField;
        
        private bool internalPipeDiameterFieldSpecified;
        
        private gasNameplateTemperatureCompensationType temperatureCompensationTypeField;
        
        private bool temperatureCompensationTypeFieldSpecified;
        
        private gasNameplatePressureCompensationType pressureCompensationTypeField;
        
        private bool pressureCompensationTypeFieldSpecified;
        
        /// <remarks/>
        public gasNameplateMechanicalForm mechanicalForm {
            get {
                return this.mechanicalFormField;
            }
            set {
                this.mechanicalFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mechanicalFormSpecified {
            get {
                return this.mechanicalFormFieldSpecified;
            }
            set {
                this.mechanicalFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gasNameplateMeasurementSystem measurementSystem {
            get {
                return this.measurementSystemField;
            }
            set {
                this.measurementSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measurementSystemSpecified {
            get {
                return this.measurementSystemFieldSpecified;
            }
            set {
                this.measurementSystemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gasNameplateGasPressure gasPressure {
            get {
                return this.gasPressureField;
            }
            set {
                this.gasPressureField = value;
            }
        }
        
        /// <remarks/>
        public gasNameplateGasFlow gasFlow {
            get {
                return this.gasFlowField;
            }
            set {
                this.gasFlowField = value;
            }
        }
        
        /// <remarks/>
        public gasNameplateGearDriveSize gearDriveSize {
            get {
                return this.gearDriveSizeField;
            }
            set {
                this.gearDriveSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gearDriveSizeSpecified {
            get {
                return this.gearDriveSizeFieldSpecified;
            }
            set {
                this.gearDriveSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gasNameplateInternalPipeDiameter internalPipeDiameter {
            get {
                return this.internalPipeDiameterField;
            }
            set {
                this.internalPipeDiameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool internalPipeDiameterSpecified {
            get {
                return this.internalPipeDiameterFieldSpecified;
            }
            set {
                this.internalPipeDiameterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gasNameplateTemperatureCompensationType temperatureCompensationType {
            get {
                return this.temperatureCompensationTypeField;
            }
            set {
                this.temperatureCompensationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool temperatureCompensationTypeSpecified {
            get {
                return this.temperatureCompensationTypeFieldSpecified;
            }
            set {
                this.temperatureCompensationTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gasNameplatePressureCompensationType pressureCompensationType {
            get {
                return this.pressureCompensationTypeField;
            }
            set {
                this.pressureCompensationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pressureCompensationTypeSpecified {
            get {
                return this.pressureCompensationTypeFieldSpecified;
            }
            set {
                this.pressureCompensationTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum gasNameplateMechanicalForm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum gasNameplateMeasurementSystem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gasNameplateGasPressure {
        
        private float maxPressureField;
        
        private bool maxPressureFieldSpecified;
        
        private uom maxPressureUOMField;
        
        private bool maxPressureUOMFieldSpecified;
        
        /// <remarks/>
        public float maxPressure {
            get {
                return this.maxPressureField;
            }
            set {
                this.maxPressureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxPressureSpecified {
            get {
                return this.maxPressureFieldSpecified;
            }
            set {
                this.maxPressureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom maxPressureUOM {
            get {
                return this.maxPressureUOMField;
            }
            set {
                this.maxPressureUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxPressureUOMSpecified {
            get {
                return this.maxPressureUOMFieldSpecified;
            }
            set {
                this.maxPressureUOMFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gasNameplateGasFlow {
        
        private object maxFlowRateField;
        
        private uom maxFlowRateUOMField;
        
        private bool maxFlowRateUOMFieldSpecified;
        
        /// <remarks/>
        public object maxFlowRate {
            get {
                return this.maxFlowRateField;
            }
            set {
                this.maxFlowRateField = value;
            }
        }
        
        /// <remarks/>
        public uom maxFlowRateUOM {
            get {
                return this.maxFlowRateUOMField;
            }
            set {
                this.maxFlowRateUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxFlowRateUOMSpecified {
            get {
                return this.maxFlowRateUOMFieldSpecified;
            }
            set {
                this.maxFlowRateUOMFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum gasNameplateGearDriveSize {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum gasNameplateInternalPipeDiameter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21")]
        Item21,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum gasNameplateTemperatureCompensationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum gasNameplatePressureCompensationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class propaneUtilityInfo {
        
        private string ownerField;
        
        private string districtField;
        
        private string serviceLocationIDField;
        
        private string accountNumberField;
        
        private string customerIDField;
        
        private PointType mapLocationField;
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public PointType mapLocation {
            get {
                return this.mapLocationField;
            }
            set {
                this.mapLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class waterMeter : mspMeter {
        
        private waterNameplate waterNameplateField;
        
        private waterUtilityInfo waterUtilityInfoField;
        
        private string[] meterStatusListField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private string meterCommAddressField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public waterNameplate waterNameplate {
            get {
                return this.waterNameplateField;
            }
            set {
                this.waterNameplateField = value;
            }
        }
        
        /// <remarks/>
        public waterUtilityInfo waterUtilityInfo {
            get {
                return this.waterUtilityInfoField;
            }
            set {
                this.waterUtilityInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class waterNameplate {
        
        private waterNameplateInstallType installTypeField;
        
        private bool installTypeFieldSpecified;
        
        private waterNameplateFluidType fluidTypeField;
        
        private bool fluidTypeFieldSpecified;
        
        private waterNameplateDriveType driveTypeField;
        
        private bool driveTypeFieldSpecified;
        
        private waterNameplatePipeSize pipeSizeField;
        
        private bool pipeSizeFieldSpecified;
        
        /// <remarks/>
        public waterNameplateInstallType installType {
            get {
                return this.installTypeField;
            }
            set {
                this.installTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool installTypeSpecified {
            get {
                return this.installTypeFieldSpecified;
            }
            set {
                this.installTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public waterNameplateFluidType fluidType {
            get {
                return this.fluidTypeField;
            }
            set {
                this.fluidTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fluidTypeSpecified {
            get {
                return this.fluidTypeFieldSpecified;
            }
            set {
                this.fluidTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public waterNameplateDriveType driveType {
            get {
                return this.driveTypeField;
            }
            set {
                this.driveTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool driveTypeSpecified {
            get {
                return this.driveTypeFieldSpecified;
            }
            set {
                this.driveTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public waterNameplatePipeSize pipeSize {
            get {
                return this.pipeSizeField;
            }
            set {
                this.pipeSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pipeSizeSpecified {
            get {
                return this.pipeSizeFieldSpecified;
            }
            set {
                this.pipeSizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum waterNameplateInstallType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum waterNameplateFluidType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum waterNameplateDriveType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum waterNameplatePipeSize {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21")]
        Item21,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24")]
        Item24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("25")]
        Item25,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("")]
        Item,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class waterUtilityInfo {
        
        private string ownerField;
        
        private string districtField;
        
        private string serviceLocationIDField;
        
        private string accountNumberField;
        
        private string customerIDField;
        
        private PointType mapLocationField;
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public PointType mapLocation {
            get {
                return this.mapLocationField;
            }
            set {
                this.mapLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gasMeter : mspMeter {
        
        private gasNameplate gasNameplateField;
        
        private gasUtilityInfo gasUtilityInfoField;
        
        private string[] meterStatusListField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private string meterCommAddressField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public gasNameplate gasNameplate {
            get {
                return this.gasNameplateField;
            }
            set {
                this.gasNameplateField = value;
            }
        }
        
        /// <remarks/>
        public gasUtilityInfo gasUtilityInfo {
            get {
                return this.gasUtilityInfoField;
            }
            set {
                this.gasUtilityInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class gasUtilityInfo {
        
        private string ownerField;
        
        private string districtField;
        
        private string serviceLocationIDField;
        
        private string accountNumberField;
        
        private string customerIDField;
        
        private PointType mapLocationField;
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public PointType mapLocation {
            get {
                return this.mapLocationField;
            }
            set {
                this.mapLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class electricMeter : mspMeter {
        
        private electricNameplate electricNameplateField;
        
        private utilityInfo utilityInfoField;
        
        private string[] subMeterListField;
        
        private string[] parentMeterListField;
        
        private string[] meterStatusListField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private string meterCommAddressField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public electricNameplate electricNameplate {
            get {
                return this.electricNameplateField;
            }
            set {
                this.electricNameplateField = value;
            }
        }
        
        /// <remarks/>
        public utilityInfo utilityInfo {
            get {
                return this.utilityInfoField;
            }
            set {
                this.utilityInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("subMeterID", IsNullable=false)]
        public string[] subMeterList {
            get {
                return this.subMeterListField;
            }
            set {
                this.subMeterListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("parentMeterID", IsNullable=false)]
        public string[] parentMeterList {
            get {
                return this.parentMeterListField;
            }
            set {
                this.parentMeterListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class testedElectricMeter : receivedElectricMeter {
        
        private meterTest[] meterTestListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterTest[] meterTestList {
            get {
                return this.meterTestListField;
            }
            set {
                this.meterTestListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterTest {
        
        private System.DateTime testDateField;
        
        private bool testDateFieldSpecified;
        
        private asFound asFoundField;
        
        private asLeft asLeftField;
        
        private string reasonField;
        
        private string testersInitialsField;
        
        private string testCompanyField;
        
        private string commentsField;
        
        private float revolutionsField;
        
        private bool revolutionsFieldSpecified;
        
        /// <remarks/>
        public System.DateTime testDate {
            get {
                return this.testDateField;
            }
            set {
                this.testDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testDateSpecified {
            get {
                return this.testDateFieldSpecified;
            }
            set {
                this.testDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public asFound asFound {
            get {
                return this.asFoundField;
            }
            set {
                this.asFoundField = value;
            }
        }
        
        /// <remarks/>
        public asLeft asLeft {
            get {
                return this.asLeftField;
            }
            set {
                this.asLeftField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string testersInitials {
            get {
                return this.testersInitialsField;
            }
            set {
                this.testersInitialsField = value;
            }
        }
        
        /// <remarks/>
        public string testCompany {
            get {
                return this.testCompanyField;
            }
            set {
                this.testCompanyField = value;
            }
        }
        
        /// <remarks/>
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public float revolutions {
            get {
                return this.revolutionsField;
            }
            set {
                this.revolutionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revolutionsSpecified {
            get {
                return this.revolutionsFieldSpecified;
            }
            set {
                this.revolutionsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class asFound {
        
        private string kWhReadingField;
        
        private float kWReadingField;
        
        private bool kWReadingFieldSpecified;
        
        private float kVArReadingField;
        
        private bool kVArReadingFieldSpecified;
        
        private float powerFactorReadingField;
        
        private bool powerFactorReadingFieldSpecified;
        
        private float resultHighField;
        
        private bool resultHighFieldSpecified;
        
        private float resultLowField;
        
        private bool resultLowFieldSpecified;
        
        private float resultLLField;
        
        private bool resultLLFieldSpecified;
        
        private float kWResultField;
        
        private bool kWResultFieldSpecified;
        
        private float kVArResultField;
        
        private bool kVArResultFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string kWhReading {
            get {
                return this.kWhReadingField;
            }
            set {
                this.kWhReadingField = value;
            }
        }
        
        /// <remarks/>
        public float kWReading {
            get {
                return this.kWReadingField;
            }
            set {
                this.kWReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWReadingSpecified {
            get {
                return this.kWReadingFieldSpecified;
            }
            set {
                this.kWReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kVArReading {
            get {
                return this.kVArReadingField;
            }
            set {
                this.kVArReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kVArReadingSpecified {
            get {
                return this.kVArReadingFieldSpecified;
            }
            set {
                this.kVArReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float powerFactorReading {
            get {
                return this.powerFactorReadingField;
            }
            set {
                this.powerFactorReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerFactorReadingSpecified {
            get {
                return this.powerFactorReadingFieldSpecified;
            }
            set {
                this.powerFactorReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultHigh {
            get {
                return this.resultHighField;
            }
            set {
                this.resultHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultHighSpecified {
            get {
                return this.resultHighFieldSpecified;
            }
            set {
                this.resultHighFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultLow {
            get {
                return this.resultLowField;
            }
            set {
                this.resultLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultLowSpecified {
            get {
                return this.resultLowFieldSpecified;
            }
            set {
                this.resultLowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultLL {
            get {
                return this.resultLLField;
            }
            set {
                this.resultLLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultLLSpecified {
            get {
                return this.resultLLFieldSpecified;
            }
            set {
                this.resultLLFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kWResult {
            get {
                return this.kWResultField;
            }
            set {
                this.kWResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWResultSpecified {
            get {
                return this.kWResultFieldSpecified;
            }
            set {
                this.kWResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kVArResult {
            get {
                return this.kVArResultField;
            }
            set {
                this.kVArResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kVArResultSpecified {
            get {
                return this.kVArResultFieldSpecified;
            }
            set {
                this.kVArResultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class asLeft {
        
        private string kWhReadingField;
        
        private float kWReadingField;
        
        private bool kWReadingFieldSpecified;
        
        private float kVArReadingField;
        
        private bool kVArReadingFieldSpecified;
        
        private float powerFactorReadingField;
        
        private bool powerFactorReadingFieldSpecified;
        
        private float resultHighField;
        
        private bool resultHighFieldSpecified;
        
        private float resultLowField;
        
        private bool resultLowFieldSpecified;
        
        private float resultLLField;
        
        private bool resultLLFieldSpecified;
        
        private float kWResultField;
        
        private bool kWResultFieldSpecified;
        
        private float kVArResultField;
        
        private bool kVArResultFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string kWhReading {
            get {
                return this.kWhReadingField;
            }
            set {
                this.kWhReadingField = value;
            }
        }
        
        /// <remarks/>
        public float kWReading {
            get {
                return this.kWReadingField;
            }
            set {
                this.kWReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWReadingSpecified {
            get {
                return this.kWReadingFieldSpecified;
            }
            set {
                this.kWReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kVArReading {
            get {
                return this.kVArReadingField;
            }
            set {
                this.kVArReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kVArReadingSpecified {
            get {
                return this.kVArReadingFieldSpecified;
            }
            set {
                this.kVArReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float powerFactorReading {
            get {
                return this.powerFactorReadingField;
            }
            set {
                this.powerFactorReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerFactorReadingSpecified {
            get {
                return this.powerFactorReadingFieldSpecified;
            }
            set {
                this.powerFactorReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultHigh {
            get {
                return this.resultHighField;
            }
            set {
                this.resultHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultHighSpecified {
            get {
                return this.resultHighFieldSpecified;
            }
            set {
                this.resultHighFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultLow {
            get {
                return this.resultLowField;
            }
            set {
                this.resultLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultLowSpecified {
            get {
                return this.resultLowFieldSpecified;
            }
            set {
                this.resultLowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultLL {
            get {
                return this.resultLLField;
            }
            set {
                this.resultLLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultLLSpecified {
            get {
                return this.resultLLFieldSpecified;
            }
            set {
                this.resultLLFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kWResult {
            get {
                return this.kWResultField;
            }
            set {
                this.kWResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWResultSpecified {
            get {
                return this.kWResultFieldSpecified;
            }
            set {
                this.kWResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kVArResult {
            get {
                return this.kVArResultField;
            }
            set {
                this.kVArResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kVArResultSpecified {
            get {
                return this.kVArResultFieldSpecified;
            }
            set {
                this.kVArResultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class schedule : mspObject {
        
        private float maximumRuntimeField;
        
        private bool maximumRuntimeFieldSpecified;
        
        private timePeriod effectiveWindowField;
        
        private bool isEnabledField;
        
        private bool isEnabledFieldSpecified;
        
        private float offsetField;
        
        private bool offsetFieldSpecified;
        
        private timePoint[] absoluteTimeScheduleField;
        
        private periodicSchedule periodicScheduleField;
        
        private string purposeField;
        
        /// <remarks/>
        public float maximumRuntime {
            get {
                return this.maximumRuntimeField;
            }
            set {
                this.maximumRuntimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maximumRuntimeSpecified {
            get {
                return this.maximumRuntimeFieldSpecified;
            }
            set {
                this.maximumRuntimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public timePeriod effectiveWindow {
            get {
                return this.effectiveWindowField;
            }
            set {
                this.effectiveWindowField = value;
            }
        }
        
        /// <remarks/>
        public bool isEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isEnabledSpecified {
            get {
                return this.isEnabledFieldSpecified;
            }
            set {
                this.isEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsetSpecified {
            get {
                return this.offsetFieldSpecified;
            }
            set {
                this.offsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public timePoint[] absoluteTimeSchedule {
            get {
                return this.absoluteTimeScheduleField;
            }
            set {
                this.absoluteTimeScheduleField = value;
            }
        }
        
        /// <remarks/>
        public periodicSchedule periodicSchedule {
            get {
                return this.periodicScheduleField;
            }
            set {
                this.periodicScheduleField = value;
            }
        }
        
        /// <remarks/>
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class timePoint {
        
        private System.DateTime absoluteTimeField;
        
        private bool absoluteTimeFieldSpecified;
        
        private string sequenceNumberField;
        
        /// <remarks/>
        public System.DateTime absoluteTime {
            get {
                return this.absoluteTimeField;
            }
            set {
                this.absoluteTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool absoluteTimeSpecified {
            get {
                return this.absoluteTimeFieldSpecified;
            }
            set {
                this.absoluteTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class periodicSchedule {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private string periodField;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class readingSchedule : schedule {
        
        private meterRef[] meterRefListField;
        
        private meterGroup[] meterGroupListField;
        
        private string[] configurationGroupListField;
        
        private readingType[] readingTypeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterRef[] meterRefList {
            get {
                return this.meterRefListField;
            }
            set {
                this.meterRefListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] meterGroupList {
            get {
                return this.meterGroupListField;
            }
            set {
                this.meterGroupListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("configurationGroupID", IsNullable=false)]
        public string[] configurationGroupList {
            get {
                return this.configurationGroupListField;
            }
            set {
                this.configurationGroupListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public readingType[] readingTypeList {
            get {
                return this.readingTypeListField;
            }
            set {
                this.readingTypeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterGroup : mspObject {
        
        private string groupNameField;
        
        private string[] meterListField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterID", IsNullable=false)]
        public string[] meterList {
            get {
                return this.meterListField;
            }
            set {
                this.meterListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class readingType : mspObject {
        
        private readingTypeID readingTypeIDField;
        
        private string measurementTypeField;
        
        private string measTypeCategoryField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private bool forwardChronologyField;
        
        private bool forwardChronologyFieldSpecified;
        
        private string defaultValueDataTypeField;
        
        private string defaultQualityField;
        
        private string dynamicConfigurationField;
        
        private string channelNumberField;
        
        /// <remarks/>
        public readingTypeID readingTypeID {
            get {
                return this.readingTypeIDField;
            }
            set {
                this.readingTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string measurementType {
            get {
                return this.measurementTypeField;
            }
            set {
                this.measurementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string measTypeCategory {
            get {
                return this.measTypeCategoryField;
            }
            set {
                this.measTypeCategoryField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool forwardChronology {
            get {
                return this.forwardChronologyField;
            }
            set {
                this.forwardChronologyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forwardChronologySpecified {
            get {
                return this.forwardChronologyFieldSpecified;
            }
            set {
                this.forwardChronologyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string defaultValueDataType {
            get {
                return this.defaultValueDataTypeField;
            }
            set {
                this.defaultValueDataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string defaultQuality {
            get {
                return this.defaultQualityField;
            }
            set {
                this.defaultQualityField = value;
            }
        }
        
        /// <remarks/>
        public string dynamicConfiguration {
            get {
                return this.dynamicConfigurationField;
            }
            set {
                this.dynamicConfigurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string channelNumber {
            get {
                return this.channelNumberField;
            }
            set {
                this.channelNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class readingTypeID {
        
        private string nameField;
        
        private string timeAttributeField;
        
        private string dataQualifierField;
        
        private string accumulationBehaviorField;
        
        private string flowDirectionField;
        
        private string unitOfMeasureField;
        
        private string measurementCategoryField;
        
        private string phaseIndexField;
        
        private string unitsMultiplierField;
        
        private string displayableUOMField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string timeAttribute {
            get {
                return this.timeAttributeField;
            }
            set {
                this.timeAttributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dataQualifier {
            get {
                return this.dataQualifierField;
            }
            set {
                this.dataQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string accumulationBehavior {
            get {
                return this.accumulationBehaviorField;
            }
            set {
                this.accumulationBehaviorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string flowDirection {
            get {
                return this.flowDirectionField;
            }
            set {
                this.flowDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string unitOfMeasure {
            get {
                return this.unitOfMeasureField;
            }
            set {
                this.unitOfMeasureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string measurementCategory {
            get {
                return this.measurementCategoryField;
            }
            set {
                this.measurementCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string phaseIndex {
            get {
                return this.phaseIndexField;
            }
            set {
                this.phaseIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string unitsMultiplier {
            get {
                return this.unitsMultiplierField;
            }
            set {
                this.unitsMultiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string displayableUOM {
            get {
                return this.displayableUOMField;
            }
            set {
                this.displayableUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CDStateChange : mspObject {
        
        private string meterIDField;
        
        private string meterNoField;
        
        private loadActionCode stateChangeField;
        
        private bool stateChangeFieldSpecified;
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public loadActionCode stateChange {
            get {
                return this.stateChangeField;
            }
            set {
                this.stateChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stateChangeSpecified {
            get {
                return this.stateChangeFieldSpecified;
            }
            set {
                this.stateChangeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum loadActionCode {
        
        /// <remarks/>
        Connect,
        
        /// <remarks/>
        Disconnect,
        
        /// <remarks/>
        InitiatePowerLimitation,
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        Armed,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Arm,
        
        /// <remarks/>
        Enable,
        
        /// <remarks/>
        Disable,
        
        /// <remarks/>
        Enabled,
        
        /// <remarks/>
        Disabled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CDState : mspObject {
        
        private string meterNoField;
        
        private string meterIDField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private RCDState rCDStateField;
        
        private bool rCDStateFieldSpecified;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public RCDState RCDState {
            get {
                return this.rCDStateField;
            }
            set {
                this.rCDStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RCDStateSpecified {
            get {
                return this.rCDStateFieldSpecified;
            }
            set {
                this.rCDStateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum RCDState {
        
        /// <remarks/>
        Opened,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        Armed,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Enabled,
        
        /// <remarks/>
        Disabled,
        
        /// <remarks/>
        InTransition,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LMDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBaseExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDeviceExchange))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class mspDeviceExchange : mspObject {
        
        private string serviceLocationIDField;
        
        private string meterBaseIDField;
        
        private string meterIDField;
        
        private string meterNoField;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class LMDeviceExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class inHomeDisplayExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterBaseExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CDDeviceExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meters : mspObject {
        
        private electricMeter[] electricMetersField;
        
        private waterMeter[] waterMetersField;
        
        private gasMeter[] gasMetersField;
        
        private propaneMeter[] propaneMetersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public electricMeter[] electricMeters {
            get {
                return this.electricMetersField;
            }
            set {
                this.electricMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public waterMeter[] waterMeters {
            get {
                return this.waterMetersField;
            }
            set {
                this.waterMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public gasMeter[] gasMeters {
            get {
                return this.gasMetersField;
            }
            set {
                this.gasMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public propaneMeter[] propaneMeters {
            get {
                return this.propaneMetersField;
            }
            set {
                this.propaneMetersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class clearance : mspObject {
        
        private string purposeField;
        
        private string clearanceGivenToField;
        
        private System.DateTime issuedDateTimeField;
        
        private bool issuedDateTimeFieldSpecified;
        
        private System.DateTime releasedDateTimeField;
        
        private bool releasedDateTimeFieldSpecified;
        
        /// <remarks/>
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        public string clearanceGivenTo {
            get {
                return this.clearanceGivenToField;
            }
            set {
                this.clearanceGivenToField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime issuedDateTime {
            get {
                return this.issuedDateTimeField;
            }
            set {
                this.issuedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool issuedDateTimeSpecified {
            get {
                return this.issuedDateTimeFieldSpecified;
            }
            set {
                this.issuedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime releasedDateTime {
            get {
                return this.releasedDateTimeField;
            }
            set {
                this.releasedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releasedDateTimeSpecified {
            get {
                return this.releasedDateTimeFieldSpecified;
            }
            set {
                this.releasedDateTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class switchingStep : mspObject {
        
        private string stepNumberField;
        
        private string operationField;
        
        private string deviceDescriptionField;
        
        private objectRef deviceIDField;
        
        private workLocation workLocationField;
        
        private string desiredEndStateField;
        
        private string resourceIDField;
        
        private string workIDField;
        
        private string instructedByField;
        
        private System.DateTime instructedDateTimeField;
        
        private bool instructedDateTimeFieldSpecified;
        
        private string completedByField;
        
        private System.DateTime completedDateTimeField;
        
        private bool completedDateTimeFieldSpecified;
        
        private string stepStatusField;
        
        private clearance[] clearanceListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        public string operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public objectRef deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public workLocation workLocation {
            get {
                return this.workLocationField;
            }
            set {
                this.workLocationField = value;
            }
        }
        
        /// <remarks/>
        public string desiredEndState {
            get {
                return this.desiredEndStateField;
            }
            set {
                this.desiredEndStateField = value;
            }
        }
        
        /// <remarks/>
        public string resourceID {
            get {
                return this.resourceIDField;
            }
            set {
                this.resourceIDField = value;
            }
        }
        
        /// <remarks/>
        public string workID {
            get {
                return this.workIDField;
            }
            set {
                this.workIDField = value;
            }
        }
        
        /// <remarks/>
        public string instructedBy {
            get {
                return this.instructedByField;
            }
            set {
                this.instructedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime instructedDateTime {
            get {
                return this.instructedDateTimeField;
            }
            set {
                this.instructedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool instructedDateTimeSpecified {
            get {
                return this.instructedDateTimeFieldSpecified;
            }
            set {
                this.instructedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string completedBy {
            get {
                return this.completedByField;
            }
            set {
                this.completedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime completedDateTime {
            get {
                return this.completedDateTimeField;
            }
            set {
                this.completedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool completedDateTimeSpecified {
            get {
                return this.completedDateTimeFieldSpecified;
            }
            set {
                this.completedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string stepStatus {
            get {
                return this.stepStatusField;
            }
            set {
                this.stepStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public clearance[] clearanceList {
            get {
                return this.clearanceListField;
            }
            set {
                this.clearanceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class workLocation {
        
        private address addressField;
        
        private geometry geometryField;
        
        private string servLocField;
        
        private string gridLocationField;
        
        private string locationCommentField;
        
        private objectRef[] locationReferencesField;
        
        /// <remarks/>
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public geometry geometry {
            get {
                return this.geometryField;
            }
            set {
                this.geometryField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public string locationComment {
            get {
                return this.locationCommentField;
            }
            set {
                this.locationCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("locationReference", IsNullable=false)]
        public objectRef[] locationReferences {
            get {
                return this.locationReferencesField;
            }
            set {
                this.locationReferencesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class geometry {
        
        private LineStringType[] gMLLinesField;
        
        private PolygonType[] gMLPolygonsField;
        
        private PointType gMLLocationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("complexLine", IsNullable=false)]
        public LineStringType[] GMLLines {
            get {
                return this.gMLLinesField;
            }
            set {
                this.gMLLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Polygon", IsNullable=false)]
        public PolygonType[] GMLPolygons {
            get {
                return this.gMLPolygonsField;
            }
            set {
                this.gMLPolygonsField = value;
            }
        }
        
        /// <remarks/>
        public PointType GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class switchingSchedule : mspObject {
        
        private string workIDField;
        
        private string resourceIDField;
        
        private System.DateTime startDateTimeField;
        
        private bool startDateTimeFieldSpecified;
        
        private System.DateTime endDateTimeField;
        
        private bool endDateTimeFieldSpecified;
        
        private switchingStep[] switchingStepsField;
        
        /// <remarks/>
        public string workID {
            get {
                return this.workIDField;
            }
            set {
                this.workIDField = value;
            }
        }
        
        /// <remarks/>
        public string resourceID {
            get {
                return this.resourceIDField;
            }
            set {
                this.resourceIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateTimeSpecified {
            get {
                return this.startDateTimeFieldSpecified;
            }
            set {
                this.startDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateTimeSpecified {
            get {
                return this.endDateTimeFieldSpecified;
            }
            set {
                this.endDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public switchingStep[] switchingSteps {
            get {
                return this.switchingStepsField;
            }
            set {
                this.switchingStepsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class switchingOrder : mspObject {
        
        private string titleField;
        
        private string descriptionField;
        
        private string purposeField;
        
        private string revisionField;
        
        private string requestedByField;
        
        private System.DateTime requestedDateTimeField;
        
        private bool requestedDateTimeFieldSpecified;
        
        private string createdByField;
        
        private System.DateTime createdDateTimeField;
        
        private bool createdDateTimeFieldSpecified;
        
        private string checkedByField;
        
        private System.DateTime checkedDateTimeField;
        
        private bool checkedDateTimeFieldSpecified;
        
        private string releasedByField;
        
        private System.DateTime releasedDateTimeField;
        
        private bool releasedDateTimeFieldSpecified;
        
        private System.DateTime lastModifiedDateTimeField;
        
        private bool lastModifiedDateTimeFieldSpecified;
        
        private string documentStatusField;
        
        private switchingSchedule switchingScheduleField;
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        public string revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
        
        /// <remarks/>
        public string requestedBy {
            get {
                return this.requestedByField;
            }
            set {
                this.requestedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime requestedDateTime {
            get {
                return this.requestedDateTimeField;
            }
            set {
                this.requestedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requestedDateTimeSpecified {
            get {
                return this.requestedDateTimeFieldSpecified;
            }
            set {
                this.requestedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateTimeSpecified {
            get {
                return this.createdDateTimeFieldSpecified;
            }
            set {
                this.createdDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string checkedBy {
            get {
                return this.checkedByField;
            }
            set {
                this.checkedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime checkedDateTime {
            get {
                return this.checkedDateTimeField;
            }
            set {
                this.checkedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool checkedDateTimeSpecified {
            get {
                return this.checkedDateTimeFieldSpecified;
            }
            set {
                this.checkedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string releasedBy {
            get {
                return this.releasedByField;
            }
            set {
                this.releasedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime releasedDateTime {
            get {
                return this.releasedDateTimeField;
            }
            set {
                this.releasedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releasedDateTimeSpecified {
            get {
                return this.releasedDateTimeFieldSpecified;
            }
            set {
                this.releasedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastModifiedDateTime {
            get {
                return this.lastModifiedDateTimeField;
            }
            set {
                this.lastModifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedDateTimeSpecified {
            get {
                return this.lastModifiedDateTimeFieldSpecified;
            }
            set {
                this.lastModifiedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string documentStatus {
            get {
                return this.documentStatusField;
            }
            set {
                this.documentStatusField = value;
            }
        }
        
        /// <remarks/>
        public switchingSchedule switchingSchedule {
            get {
                return this.switchingScheduleField;
            }
            set {
                this.switchingScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class billedUsage : mspObject {
        
        private string accountNumberField;
        
        private string serviceTypeField;
        
        private string servLocField;
        
        private string meterNoField;
        
        private string ppmLocationIDField;
        
        private string meterStatusField;
        
        private usageItem[] usageItemListField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterStatus {
            get {
                return this.meterStatusField;
            }
            set {
                this.meterStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public usageItem[] usageItemList {
            get {
                return this.usageItemListField;
            }
            set {
                this.usageItemListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class usageItem {
        
        private string usageTypeField;
        
        private float multiplierField;
        
        private bool multiplierFieldSpecified;
        
        private float previousReadingField;
        
        private bool previousReadingFieldSpecified;
        
        private System.DateTime previousReadDateField;
        
        private bool previousReadDateFieldSpecified;
        
        private float presentReadingField;
        
        private bool presentReadingFieldSpecified;
        
        private System.DateTime presentReadingDateField;
        
        private bool presentReadingDateFieldSpecified;
        
        /// <remarks/>
        public string usageType {
            get {
                return this.usageTypeField;
            }
            set {
                this.usageTypeField = value;
            }
        }
        
        /// <remarks/>
        public float multiplier {
            get {
                return this.multiplierField;
            }
            set {
                this.multiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierSpecified {
            get {
                return this.multiplierFieldSpecified;
            }
            set {
                this.multiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float previousReading {
            get {
                return this.previousReadingField;
            }
            set {
                this.previousReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousReadingSpecified {
            get {
                return this.previousReadingFieldSpecified;
            }
            set {
                this.previousReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime previousReadDate {
            get {
                return this.previousReadDateField;
            }
            set {
                this.previousReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousReadDateSpecified {
            get {
                return this.previousReadDateFieldSpecified;
            }
            set {
                this.previousReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float presentReading {
            get {
                return this.presentReadingField;
            }
            set {
                this.presentReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presentReadingSpecified {
            get {
                return this.presentReadingFieldSpecified;
            }
            set {
                this.presentReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime presentReadingDate {
            get {
                return this.presentReadingDateField;
            }
            set {
                this.presentReadingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presentReadingDateSpecified {
            get {
                return this.presentReadingDateFieldSpecified;
            }
            set {
                this.presentReadingDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class billingDetail : mspObject {
        
        private string accountNumberField;
        
        private string serviceTypeField;
        
        private string servLocField;
        
        private string meterNoField;
        
        private string ppmLocationIDField;
        
        private string revenueMonthField;
        
        private string revenueYearField;
        
        private System.DateTime cisBillDateField;
        
        private bool cisBillDateFieldSpecified;
        
        private string billingCycleField;
        
        private float priorBalanceField;
        
        private bool priorBalanceFieldSpecified;
        
        private float paymentField;
        
        private bool paymentFieldSpecified;
        
        private float creditChargeField;
        
        private bool creditChargeFieldSpecified;
        
        private float debitChargeField;
        
        private bool debitChargeFieldSpecified;
        
        private chargeItem[] chargeItemListField;
        
        private float cISBalanceAfterBillingField;
        
        private bool cISBalanceAfterBillingFieldSpecified;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string revenueMonth {
            get {
                return this.revenueMonthField;
            }
            set {
                this.revenueMonthField = value;
            }
        }
        
        /// <remarks/>
        public string revenueYear {
            get {
                return this.revenueYearField;
            }
            set {
                this.revenueYearField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime cisBillDate {
            get {
                return this.cisBillDateField;
            }
            set {
                this.cisBillDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cisBillDateSpecified {
            get {
                return this.cisBillDateFieldSpecified;
            }
            set {
                this.cisBillDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public float priorBalance {
            get {
                return this.priorBalanceField;
            }
            set {
                this.priorBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priorBalanceSpecified {
            get {
                return this.priorBalanceFieldSpecified;
            }
            set {
                this.priorBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float payment {
            get {
                return this.paymentField;
            }
            set {
                this.paymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool paymentSpecified {
            get {
                return this.paymentFieldSpecified;
            }
            set {
                this.paymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float creditCharge {
            get {
                return this.creditChargeField;
            }
            set {
                this.creditChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creditChargeSpecified {
            get {
                return this.creditChargeFieldSpecified;
            }
            set {
                this.creditChargeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float debitCharge {
            get {
                return this.debitChargeField;
            }
            set {
                this.debitChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool debitChargeSpecified {
            get {
                return this.debitChargeFieldSpecified;
            }
            set {
                this.debitChargeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public chargeItem[] chargeItemList {
            get {
                return this.chargeItemListField;
            }
            set {
                this.chargeItemListField = value;
            }
        }
        
        /// <remarks/>
        public float CISBalanceAfterBilling {
            get {
                return this.cISBalanceAfterBillingField;
            }
            set {
                this.cISBalanceAfterBillingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CISBalanceAfterBillingSpecified {
            get {
                return this.cISBalanceAfterBillingFieldSpecified;
            }
            set {
                this.cISBalanceAfterBillingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class chargeItem {
        
        private float amountField;
        
        private bool amountFieldSpecified;
        
        private string descriptionField;
        
        /// <remarks/>
        public float amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class billingData : mspObject {
        
        private string accountNumberField;
        
        private string serviceTypeField;
        
        private string servLocField;
        
        private string ppmLocationIDField;
        
        private string meterNoField;
        
        private float cISBalanceAfterBillingField;
        
        private bool cISBalanceAfterBillingFieldSpecified;
        
        private System.DateTime billingDateField;
        
        private bool billingDateFieldSpecified;
        
        private System.DateTime billFromDateField;
        
        private bool billFromDateFieldSpecified;
        
        private System.DateTime billToDateField;
        
        private bool billToDateFieldSpecified;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public float CISBalanceAfterBilling {
            get {
                return this.cISBalanceAfterBillingField;
            }
            set {
                this.cISBalanceAfterBillingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CISBalanceAfterBillingSpecified {
            get {
                return this.cISBalanceAfterBillingFieldSpecified;
            }
            set {
                this.cISBalanceAfterBillingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billingDate {
            get {
                return this.billingDateField;
            }
            set {
                this.billingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billingDateSpecified {
            get {
                return this.billingDateFieldSpecified;
            }
            set {
                this.billingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billFromDate {
            get {
                return this.billFromDateField;
            }
            set {
                this.billFromDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billFromDateSpecified {
            get {
                return this.billFromDateFieldSpecified;
            }
            set {
                this.billFromDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billToDate {
            get {
                return this.billToDateField;
            }
            set {
                this.billToDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billToDateSpecified {
            get {
                return this.billToDateFieldSpecified;
            }
            set {
                this.billToDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class formattedBlockTemplate : mspObject {
        
        private string templateNameField;
        
        private formattedBlock formattedBlockField;
        
        /// <remarks/>
        public string templateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public formattedBlock formattedBlock {
            get {
                return this.formattedBlockField;
            }
            set {
                this.formattedBlockField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class formattedBlock {
        
        private string separatorField;
        
        private string contentNounTypeField;
        
        private string contentIDField;
        
        private string commentField;
        
        private syntaxItem[] valSyntaxField;
        
        private string[] valueListField;
        
        /// <remarks/>
        public string separator {
            get {
                return this.separatorField;
            }
            set {
                this.separatorField = value;
            }
        }
        
        /// <remarks/>
        public string contentNounType {
            get {
                return this.contentNounTypeField;
            }
            set {
                this.contentNounTypeField = value;
            }
        }
        
        /// <remarks/>
        public string contentID {
            get {
                return this.contentIDField;
            }
            set {
                this.contentIDField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public syntaxItem[] valSyntax {
            get {
                return this.valSyntaxField;
            }
            set {
                this.valSyntaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("val", IsNullable=false)]
        public string[] valueList {
            get {
                return this.valueListField;
            }
            set {
                this.valueListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class syntaxItem {
        
        private string fieldNameField;
        
        private string positionField;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class chargeableDeviceList : mspObject {
        
        private string accountNumberField;
        
        private chargeableDevice[] chargeableDeviceField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("chargeableDevice")]
        public chargeableDevice[] chargeableDevice {
            get {
                return this.chargeableDeviceField;
            }
            set {
                this.chargeableDeviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class chargeableDevice : mspObject {
        
        private string chargeableDeviceTypeField;
        
        private string deviceDescriptionField;
        
        private string quantityField;
        
        private chargeableDeviceActionFlag actionFlagField;
        
        private bool actionFlagFieldSpecified;
        
        /// <remarks/>
        public string chargeableDeviceType {
            get {
                return this.chargeableDeviceTypeField;
            }
            set {
                this.chargeableDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public chargeableDeviceActionFlag actionFlag {
            get {
                return this.actionFlagField;
            }
            set {
                this.actionFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionFlagSpecified {
            get {
                return this.actionFlagFieldSpecified;
            }
            set {
                this.actionFlagFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum chargeableDeviceActionFlag {
        
        /// <remarks/>
        Enable,
        
        /// <remarks/>
        Disable,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterGroups : mspObject {
        
        private meterGroup[] electricMeterGroupsField;
        
        private meterGroup[] gasMeterGroupsField;
        
        private meterGroup[] waterMeterGroupsField;
        
        private meterGroup[] propaneMeterGroupsField;
        
        private meterGroups[] mixedMeterGroupsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] electricMeterGroups {
            get {
                return this.electricMeterGroupsField;
            }
            set {
                this.electricMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] gasMeterGroups {
            get {
                return this.gasMeterGroupsField;
            }
            set {
                this.gasMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] waterMeterGroups {
            get {
                return this.waterMeterGroupsField;
            }
            set {
                this.waterMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] propaneMeterGroups {
            get {
                return this.propaneMeterGroupsField;
            }
            set {
                this.propaneMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroups[] mixedMeterGroups {
            get {
                return this.mixedMeterGroupsField;
            }
            set {
                this.mixedMeterGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterEventList : mspObject {
        
        private eventInstance[] eventinstancesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public eventInstance[] eventinstances {
            get {
                return this.eventinstancesField;
            }
            set {
                this.eventinstancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class eventInstance {
        
        private extensions extensionsField;
        
        private string meterNoField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string meterIDField;
        
        private meterEvent meterEventField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public meterEvent meterEvent {
            get {
                return this.meterEventField;
            }
            set {
                this.meterEventField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterExchange : mspObject {
        
        private serviceLocation serviceLocationField;
        
        private meterRead outMeterReadField;
        
        private meterRead inMeterReadField;
        
        private meterRead lastReadField;
        
        private System.DateTime lastReadDateField;
        
        private bool lastReadDateFieldSpecified;
        
        private consumptionItem[] averageConsumptionField;
        
        /// <remarks/>
        public serviceLocation serviceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
            }
        }
        
        /// <remarks/>
        public meterRead outMeterRead {
            get {
                return this.outMeterReadField;
            }
            set {
                this.outMeterReadField = value;
            }
        }
        
        /// <remarks/>
        public meterRead inMeterRead {
            get {
                return this.inMeterReadField;
            }
            set {
                this.inMeterReadField = value;
            }
        }
        
        /// <remarks/>
        public meterRead lastRead {
            get {
                return this.lastReadField;
            }
            set {
                this.lastReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadDate {
            get {
                return this.lastReadDateField;
            }
            set {
                this.lastReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadDateSpecified {
            get {
                return this.lastReadDateFieldSpecified;
            }
            set {
                this.lastReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public consumptionItem[] averageConsumption {
            get {
                return this.averageConsumptionField;
            }
            set {
                this.averageConsumptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class consumptionItem {
        
        private readingValue readingValueField;
        
        private timePeriod periodOfUseField;
        
        /// <remarks/>
        public readingValue readingValue {
            get {
                return this.readingValueField;
            }
            set {
                this.readingValueField = value;
            }
        }
        
        /// <remarks/>
        public timePeriod periodOfUse {
            get {
                return this.periodOfUseField;
            }
            set {
                this.periodOfUseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ppmMeterExchange : mspObject {
        
        private string ppmLocationIDField;
        
        private meterRead outMeterReadField;
        
        private meterRead inMeterReadField;
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterRead outMeterRead {
            get {
                return this.outMeterReadField;
            }
            set {
                this.outMeterReadField = value;
            }
        }
        
        /// <remarks/>
        public meterRead inMeterRead {
            get {
                return this.inMeterReadField;
            }
            set {
                this.inMeterReadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ppmBalanceAdjustment : mspObject {
        
        private string descriptionField;
        
        private string accountNumberField;
        
        private string serviceTypeField;
        
        private string ppmLocationIDField;
        
        private adjustmentItem[] adustmentListField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public adjustmentItem[] adustmentList {
            get {
                return this.adustmentListField;
            }
            set {
                this.adustmentListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class adjustmentItem {
        
        private adjustmentItemBalanceType balanceTypeField;
        
        private float amountField;
        
        private string adjustmentItemIDField;
        
        /// <remarks/>
        public adjustmentItemBalanceType balanceType {
            get {
                return this.balanceTypeField;
            }
            set {
                this.balanceTypeField = value;
            }
        }
        
        /// <remarks/>
        public float amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string adjustmentItemID {
            get {
                return this.adjustmentItemIDField;
            }
            set {
                this.adjustmentItemIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum adjustmentItemBalanceType {
        
        /// <remarks/>
        priorityBalance,
        
        /// <remarks/>
        arrearsBalance,
        
        /// <remarks/>
        prepaidBalance,
        
        /// <remarks/>
        totalBalance,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ppmTransaction : mspObject {
        
        private float priorityBalanceField;
        
        private float sharredArrearsField;
        
        private float amountField;
        
        private string descriptionField;
        
        /// <remarks/>
        public float priorityBalance {
            get {
                return this.priorityBalanceField;
            }
            set {
                this.priorityBalanceField = value;
            }
        }
        
        /// <remarks/>
        public float sharredArrears {
            get {
                return this.sharredArrearsField;
            }
            set {
                this.sharredArrearsField = value;
            }
        }
        
        /// <remarks/>
        public float amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ppmLocation : mspObject {
        
        private string serviceTypeField;
        
        private string rateCodeField;
        
        private string taxDistField;
        
        private string fuelCostAdjCodeField;
        
        private fixedCharge[] fixedChargeCodeListField;
        
        private string servLocField;
        
        private float priorityBalanceField;
        
        private bool priorityBalanceFieldSpecified;
        
        private float sharedArrearsField;
        
        private bool sharedArrearsFieldSpecified;
        
        private meterRead initialReadField;
        
        private customer customerField;
        
        private float totalBalanceField;
        
        private bool totalBalanceFieldSpecified;
        
        private string lastMeterReadField;
        
        private System.DateTime lastReadingDateField;
        
        private bool lastReadingDateFieldSpecified;
        
        private float depositAmountField;
        
        private bool depositAmountFieldSpecified;
        
        private float depositPaidField;
        
        private bool depositPaidFieldSpecified;
        
        private float depositInterestField;
        
        private bool depositInterestFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private string billingCycleField;
        
        private System.DateTime meterSetDateField;
        
        private bool meterSetDateFieldSpecified;
        
        /// <remarks/>
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string fuelCostAdjCode {
            get {
                return this.fuelCostAdjCodeField;
            }
            set {
                this.fuelCostAdjCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("fixedChargeCode", IsNullable=false)]
        public fixedCharge[] fixedChargeCodeList {
            get {
                return this.fixedChargeCodeListField;
            }
            set {
                this.fixedChargeCodeListField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public float priorityBalance {
            get {
                return this.priorityBalanceField;
            }
            set {
                this.priorityBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priorityBalanceSpecified {
            get {
                return this.priorityBalanceFieldSpecified;
            }
            set {
                this.priorityBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sharedArrears {
            get {
                return this.sharedArrearsField;
            }
            set {
                this.sharedArrearsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sharedArrearsSpecified {
            get {
                return this.sharedArrearsFieldSpecified;
            }
            set {
                this.sharedArrearsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterRead initialRead {
            get {
                return this.initialReadField;
            }
            set {
                this.initialReadField = value;
            }
        }
        
        /// <remarks/>
        public customer customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        public float totalBalance {
            get {
                return this.totalBalanceField;
            }
            set {
                this.totalBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalBalanceSpecified {
            get {
                return this.totalBalanceFieldSpecified;
            }
            set {
                this.totalBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string lastMeterRead {
            get {
                return this.lastMeterReadField;
            }
            set {
                this.lastMeterReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadingDate {
            get {
                return this.lastReadingDateField;
            }
            set {
                this.lastReadingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadingDateSpecified {
            get {
                return this.lastReadingDateFieldSpecified;
            }
            set {
                this.lastReadingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float depositAmount {
            get {
                return this.depositAmountField;
            }
            set {
                this.depositAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool depositAmountSpecified {
            get {
                return this.depositAmountFieldSpecified;
            }
            set {
                this.depositAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float depositPaid {
            get {
                return this.depositPaidField;
            }
            set {
                this.depositPaidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool depositPaidSpecified {
            get {
                return this.depositPaidFieldSpecified;
            }
            set {
                this.depositPaidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float depositInterest {
            get {
                return this.depositInterestField;
            }
            set {
                this.depositInterestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool depositInterestSpecified {
            get {
                return this.depositInterestFieldSpecified;
            }
            set {
                this.depositInterestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime meterSetDate {
            get {
                return this.meterSetDateField;
            }
            set {
                this.meterSetDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterSetDateSpecified {
            get {
                return this.meterSetDateFieldSpecified;
            }
            set {
                this.meterSetDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class fixedCharge {
        
        private string fixedChargeCodeField;
        
        /// <remarks/>
        public string fixedChargeCode {
            get {
                return this.fixedChargeCodeField;
            }
            set {
                this.fixedChargeCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class customer : mspObject {
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string mNameField;
        
        private string dBANameField;
        
        private string homeAcField;
        
        private string homePhoneField;
        
        private string dayAcField;
        
        private string dayPhoneField;
        
        private string billAddr1Field;
        
        private string billAddr2Field;
        
        private string billCityField;
        
        private string billStateField;
        
        private string billZipField;
        
        private contactInfo contactInfoField;
        
        private alternateContact[] alternateContactListField;
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string mName {
            get {
                return this.mNameField;
            }
            set {
                this.mNameField = value;
            }
        }
        
        /// <remarks/>
        public string dBAName {
            get {
                return this.dBANameField;
            }
            set {
                this.dBANameField = value;
            }
        }
        
        /// <remarks/>
        public string homeAc {
            get {
                return this.homeAcField;
            }
            set {
                this.homeAcField = value;
            }
        }
        
        /// <remarks/>
        public string homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string dayAc {
            get {
                return this.dayAcField;
            }
            set {
                this.dayAcField = value;
            }
        }
        
        /// <remarks/>
        public string dayPhone {
            get {
                return this.dayPhoneField;
            }
            set {
                this.dayPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string billAddr1 {
            get {
                return this.billAddr1Field;
            }
            set {
                this.billAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string billAddr2 {
            get {
                return this.billAddr2Field;
            }
            set {
                this.billAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string billCity {
            get {
                return this.billCityField;
            }
            set {
                this.billCityField = value;
            }
        }
        
        /// <remarks/>
        public string billState {
            get {
                return this.billStateField;
            }
            set {
                this.billStateField = value;
            }
        }
        
        /// <remarks/>
        public string billZip {
            get {
                return this.billZipField;
            }
            set {
                this.billZipField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public alternateContact[] alternateContactList {
            get {
                return this.alternateContactListField;
            }
            set {
                this.alternateContactListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class contactInfo {
        
        private phoneNumber[] phoneListField;
        
        private eMailAddress[] eMailListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public phoneNumber[] phoneList {
            get {
                return this.phoneListField;
            }
            set {
                this.phoneListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public eMailAddress[] eMailList {
            get {
                return this.eMailListField;
            }
            set {
                this.eMailListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class eMailAddress {
        
        private string eMailField;
        
        private eMailAddressEMailType eMailTypeField;
        
        private bool eMailTypeFieldSpecified;
        
        private string priorityOrderField;
        
        /// <remarks/>
        public string eMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public eMailAddressEMailType eMailType {
            get {
                return this.eMailTypeField;
            }
            set {
                this.eMailTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eMailTypeSpecified {
            get {
                return this.eMailTypeFieldSpecified;
            }
            set {
                this.eMailTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum eMailAddressEMailType {
        
        /// <remarks/>
        Personal,
        
        /// <remarks/>
        Business,
        
        /// <remarks/>
        Alternate,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class alternateContact {
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string mNameField;
        
        private string prefixField;
        
        private string suffixField;
        
        private contactInfo contactInfoField;
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string mName {
            get {
                return this.mNameField;
            }
            set {
                this.mNameField = value;
            }
        }
        
        /// <remarks/>
        public string prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        public string suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class payableItem : mspObject {
        
        private float pastDueAmountField;
        
        private bool pastDueAmountFieldSpecified;
        
        private float currentAmountField;
        
        private bool currentAmountFieldSpecified;
        
        private string descriptionField;
        
        private string chargeCodeField;
        
        private System.DateTime dueDateField;
        
        private bool dueDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private float lastPaymentAmountField;
        
        private bool lastPaymentAmountFieldSpecified;
        
        private System.DateTime lastPaymentDateField;
        
        private bool lastPaymentDateFieldSpecified;
        
        /// <remarks/>
        public float pastDueAmount {
            get {
                return this.pastDueAmountField;
            }
            set {
                this.pastDueAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pastDueAmountSpecified {
            get {
                return this.pastDueAmountFieldSpecified;
            }
            set {
                this.pastDueAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float currentAmount {
            get {
                return this.currentAmountField;
            }
            set {
                this.currentAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentAmountSpecified {
            get {
                return this.currentAmountFieldSpecified;
            }
            set {
                this.currentAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string chargeCode {
            get {
                return this.chargeCodeField;
            }
            set {
                this.chargeCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dueDateSpecified {
            get {
                return this.dueDateFieldSpecified;
            }
            set {
                this.dueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lastPaymentAmount {
            get {
                return this.lastPaymentAmountField;
            }
            set {
                this.lastPaymentAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentAmountSpecified {
            get {
                return this.lastPaymentAmountFieldSpecified;
            }
            set {
                this.lastPaymentAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastPaymentDate {
            get {
                return this.lastPaymentDateField;
            }
            set {
                this.lastPaymentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentDateSpecified {
            get {
                return this.lastPaymentDateFieldSpecified;
            }
            set {
                this.lastPaymentDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class tender : mspObject {
        
        private float amountField;
        
        private float convenienceFeeField;
        
        private bool convenienceFeeFieldSpecified;
        
        private float utilityFeeField;
        
        private bool utilityFeeFieldSpecified;
        
        private float totalField;
        
        private bool totalFieldSpecified;
        
        private string authorizationCodeField;
        
        private payableItemList payableItemListField;
        
        private string paymentModeField;
        
        private responseCode responseCodeField;
        
        private bool responseCodeFieldSpecified;
        
        private string financialTransactionIDField;
        
        /// <remarks/>
        public float amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public float convenienceFee {
            get {
                return this.convenienceFeeField;
            }
            set {
                this.convenienceFeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool convenienceFeeSpecified {
            get {
                return this.convenienceFeeFieldSpecified;
            }
            set {
                this.convenienceFeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float utilityFee {
            get {
                return this.utilityFeeField;
            }
            set {
                this.utilityFeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool utilityFeeSpecified {
            get {
                return this.utilityFeeFieldSpecified;
            }
            set {
                this.utilityFeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string authorizationCode {
            get {
                return this.authorizationCodeField;
            }
            set {
                this.authorizationCodeField = value;
            }
        }
        
        /// <remarks/>
        public payableItemList payableItemList {
            get {
                return this.payableItemListField;
            }
            set {
                this.payableItemListField = value;
            }
        }
        
        /// <remarks/>
        public string paymentMode {
            get {
                return this.paymentModeField;
            }
            set {
                this.paymentModeField = value;
            }
        }
        
        /// <remarks/>
        public responseCode responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseCodeSpecified {
            get {
                return this.responseCodeFieldSpecified;
            }
            set {
                this.responseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string financialTransactionID {
            get {
                return this.financialTransactionIDField;
            }
            set {
                this.financialTransactionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class payableItemList {
        
        private payableItem[] payableItemField;
        
        private string[] allowableTransactionTypesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("payableItem")]
        public payableItem[] payableItem {
            get {
                return this.payableItemField;
            }
            set {
                this.payableItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("transactionType", IsNullable=false)]
        public string[] allowableTransactionTypes {
            get {
                return this.allowableTransactionTypesField;
            }
            set {
                this.allowableTransactionTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum responseCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class powerMonitor : mspObject {
        
        private System.DateTime callTimeField;
        
        private bool callTimeFieldSpecified;
        
        private string recordNumField;
        
        private string areaCodeField;
        
        private string phoneField;
        
        private pmEventCode eventCodeField;
        
        private bool eventCodeFieldSpecified;
        
        private float voltageField;
        
        private bool voltageFieldSpecified;
        
        private bool ackField;
        
        private bool ackFieldSpecified;
        
        private string ackByField;
        
        private System.DateTime ackTimeField;
        
        private bool ackTimeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime callTime {
            get {
                return this.callTimeField;
            }
            set {
                this.callTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callTimeSpecified {
            get {
                return this.callTimeFieldSpecified;
            }
            set {
                this.callTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string recordNum {
            get {
                return this.recordNumField;
            }
            set {
                this.recordNumField = value;
            }
        }
        
        /// <remarks/>
        public string areaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public pmEventCode eventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventCodeSpecified {
            get {
                return this.eventCodeFieldSpecified;
            }
            set {
                this.eventCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float voltage {
            get {
                return this.voltageField;
            }
            set {
                this.voltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool voltageSpecified {
            get {
                return this.voltageFieldSpecified;
            }
            set {
                this.voltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ack {
            get {
                return this.ackField;
            }
            set {
                this.ackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ackSpecified {
            get {
                return this.ackFieldSpecified;
            }
            set {
                this.ackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ackBy {
            get {
                return this.ackByField;
            }
            set {
                this.ackByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ackTime {
            get {
                return this.ackTimeField;
            }
            set {
                this.ackTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ackTimeSpecified {
            get {
                return this.ackTimeFieldSpecified;
            }
            set {
                this.ackTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum pmEventCode {
        
        /// <remarks/>
        LowBattery,
        
        /// <remarks/>
        Event1,
        
        /// <remarks/>
        Event2,
        
        /// <remarks/>
        Event3,
        
        /// <remarks/>
        LockOut,
        
        /// <remarks/>
        PowerRestored,
        
        /// <remarks/>
        UndeterminedOn,
        
        /// <remarks/>
        UndeterminedOff,
        
        /// <remarks/>
        BrownOut,
        
        /// <remarks/>
        HighVoltage,
        
        /// <remarks/>
        NormalVoltage,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterConnectivity : mspObject {
        
        private string outageRecordIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string servLocField;
        
        private string meterNoField;
        
        private string oldSubstationField;
        
        private string oldFeederField;
        
        private phaseCd oldPhaseField;
        
        private bool oldPhaseFieldSpecified;
        
        private string newSubstationField;
        
        private string newFeederField;
        
        private phaseCd newPhaseField;
        
        private bool newPhaseFieldSpecified;
        
        private string oldSubstationCodeField;
        
        private string oldFeederNoField;
        
        private string newSubstationCodeField;
        
        private string newFeederNoField;
        
        /// <remarks/>
        public string outageRecordID {
            get {
                return this.outageRecordIDField;
            }
            set {
                this.outageRecordIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string oldSubstation {
            get {
                return this.oldSubstationField;
            }
            set {
                this.oldSubstationField = value;
            }
        }
        
        /// <remarks/>
        public string oldFeeder {
            get {
                return this.oldFeederField;
            }
            set {
                this.oldFeederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd oldPhase {
            get {
                return this.oldPhaseField;
            }
            set {
                this.oldPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oldPhaseSpecified {
            get {
                return this.oldPhaseFieldSpecified;
            }
            set {
                this.oldPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string newSubstation {
            get {
                return this.newSubstationField;
            }
            set {
                this.newSubstationField = value;
            }
        }
        
        /// <remarks/>
        public string newFeeder {
            get {
                return this.newFeederField;
            }
            set {
                this.newFeederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd newPhase {
            get {
                return this.newPhaseField;
            }
            set {
                this.newPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newPhaseSpecified {
            get {
                return this.newPhaseFieldSpecified;
            }
            set {
                this.newPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string oldSubstationCode {
            get {
                return this.oldSubstationCodeField;
            }
            set {
                this.oldSubstationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string oldFeederNo {
            get {
                return this.oldFeederNoField;
            }
            set {
                this.oldFeederNoField = value;
            }
        }
        
        /// <remarks/>
        public string newSubstationCode {
            get {
                return this.newSubstationCodeField;
            }
            set {
                this.newSubstationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string newFeederNo {
            get {
                return this.newFeederNoField;
            }
            set {
                this.newFeederNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageEventStatus : mspObject {
        
        private outageStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private bool crewDispatchedField;
        
        private bool crewDispatchedFieldSpecified;
        
        private bool crewOnSiteField;
        
        private bool crewOnSiteFieldSpecified;
        
        private System.DateTime eTORField;
        
        private bool eTORFieldSpecified;
        
        private bool customerFoundField;
        
        private bool customerFoundFieldSpecified;
        
        /// <remarks/>
        public outageStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool crewDispatched {
            get {
                return this.crewDispatchedField;
            }
            set {
                this.crewDispatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crewDispatchedSpecified {
            get {
                return this.crewDispatchedFieldSpecified;
            }
            set {
                this.crewDispatchedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool crewOnSite {
            get {
                return this.crewOnSiteField;
            }
            set {
                this.crewOnSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crewOnSiteSpecified {
            get {
                return this.crewOnSiteFieldSpecified;
            }
            set {
                this.crewOnSiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ETOR {
            get {
                return this.eTORField;
            }
            set {
                this.eTORField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ETORSpecified {
            get {
                return this.eTORFieldSpecified;
            }
            set {
                this.eTORFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool customerFound {
            get {
                return this.customerFoundField;
            }
            set {
                this.customerFoundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool customerFoundSpecified {
            get {
                return this.customerFoundFieldSpecified;
            }
            set {
                this.customerFoundFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum outageStatus {
        
        /// <remarks/>
        Assumed,
        
        /// <remarks/>
        Confirmed,
        
        /// <remarks/>
        Restored,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Scheduled,
        
        /// <remarks/>
        StillOut,
        
        /// <remarks/>
        NonPay,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class circuitElement : mspObject {
        
        private string elementNameField;
        
        private string parentNameField;
        
        private circuitElementElementType elementTypeField;
        
        private bool elementTypeFieldSpecified;
        
        private string substationNameField;
        
        private string feederNameField;
        
        private string feederNoField;
        
        private phaseCd phaseField;
        
        private bool phaseFieldSpecified;
        
        /// <remarks/>
        public string elementName {
            get {
                return this.elementNameField;
            }
            set {
                this.elementNameField = value;
            }
        }
        
        /// <remarks/>
        public string parentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
            }
        }
        
        /// <remarks/>
        public circuitElementElementType elementType {
            get {
                return this.elementTypeField;
            }
            set {
                this.elementTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool elementTypeSpecified {
            get {
                return this.elementTypeFieldSpecified;
            }
            set {
                this.elementTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederName {
            get {
                return this.feederNameField;
            }
            set {
                this.feederNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederNo {
            get {
                return this.feederNoField;
            }
            set {
                this.feederNoField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum circuitElementElementType {
        
        /// <remarks/>
        ohPrimaryLine,
        
        /// <remarks/>
        ohSecondaryLine,
        
        /// <remarks/>
        ugPrimaryLine,
        
        /// <remarks/>
        ugSecondaryLine,
        
        /// <remarks/>
        fakeNodeSection,
        
        /// <remarks/>
        capacitorBank,
        
        /// <remarks/>
        overcurrentDeviceBank,
        
        /// <remarks/>
        switchDeviceBank,
        
        /// <remarks/>
        regulatorBank,
        
        /// <remarks/>
        transformerBank,
        
        /// <remarks/>
        serviceLocation,
        
        /// <remarks/>
        substation,
        
        /// <remarks/>
        generator,
        
        /// <remarks/>
        motor,
        
        /// <remarks/>
        root,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class workOrderSelection : mspObject {
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string jobDescrField;
        
        private string statusCodeField;
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobDescr {
            get {
                return this.jobDescrField;
            }
            set {
                this.jobDescrField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class profileObject : mspObject {
        
        private source[] sourceListField;
        
        private profileType[] loadProfileListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public source[] sourceList {
            get {
                return this.sourceListField;
            }
            set {
                this.sourceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("loadProfile", IsNullable=false)]
        public profileType[] loadProfileList {
            get {
                return this.loadProfileListField;
            }
            set {
                this.loadProfileListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class source {
        
        private uint sourceIDField;
        
        private bool sourceIDFieldSpecified;
        
        private quantityType quantityTypeField;
        
        private bool quantityTypeFieldSpecified;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        private accountability accountabilityField;
        
        private bool accountabilityFieldSpecified;
        
        private phaseAssociation phaseField;
        
        private bool phaseFieldSpecified;
        
        private string harmonicField;
        
        private transformerRatio transformerRatioField;
        
        private displayFormat displayFormatField;
        
        private bool multiplierAppliedField;
        
        private bool multiplierAppliedFieldSpecified;
        
        /// <remarks/>
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceIDSpecified {
            get {
                return this.sourceIDFieldSpecified;
            }
            set {
                this.sourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public quantityType quantityType {
            get {
                return this.quantityTypeField;
            }
            set {
                this.quantityTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantityTypeSpecified {
            get {
                return this.quantityTypeFieldSpecified;
            }
            set {
                this.quantityTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public accountability accountability {
            get {
                return this.accountabilityField;
            }
            set {
                this.accountabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountabilitySpecified {
            get {
                return this.accountabilityFieldSpecified;
            }
            set {
                this.accountabilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseAssociation phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string harmonic {
            get {
                return this.harmonicField;
            }
            set {
                this.harmonicField = value;
            }
        }
        
        /// <remarks/>
        public transformerRatio transformerRatio {
            get {
                return this.transformerRatioField;
            }
            set {
                this.transformerRatioField = value;
            }
        }
        
        /// <remarks/>
        public displayFormat displayFormat {
            get {
                return this.displayFormatField;
            }
            set {
                this.displayFormatField = value;
            }
        }
        
        /// <remarks/>
        public bool multiplierApplied {
            get {
                return this.multiplierAppliedField;
            }
            set {
                this.multiplierAppliedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierAppliedSpecified {
            get {
                return this.multiplierAppliedFieldSpecified;
            }
            set {
                this.multiplierAppliedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum quantityType {
        
        /// <remarks/>
        summation,
        
        /// <remarks/>
        demand,
        
        /// <remarks/>
        value,
        
        /// <remarks/>
        consumption,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum accountability {
        
        /// <remarks/>
        Q1,
        
        /// <remarks/>
        Q2,
        
        /// <remarks/>
        Q3,
        
        /// <remarks/>
        Q4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2")]
        Q12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3")]
        Q13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-4")]
        Q14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3")]
        Q23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-4")]
        Q24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q3-4")]
        Q34,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3")]
        Q123,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-4")]
        Q124,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-4")]
        Q134,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-4")]
        Q234,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-4")]
        Q1234,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-netFlow")]
        Q12netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-netFlow")]
        Q13netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-4-netFlow")]
        Q14netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-netFlow")]
        Q23netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-4-netFlow")]
        Q24netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q3-4-netFlow")]
        Q34netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-netFlow")]
        Q123netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-4-netFlow")]
        Q124netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-4-netFlow")]
        Q134netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-4-netFlow")]
        Q234netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-4-netFlow")]
        Q1234netFlow,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum phaseAssociation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A-B")]
        AB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("B-C")]
        BC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C-A")]
        CA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Neutral-Gnd")]
        NeutralGnd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A-Neutral")]
        ANeutral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("B-Neutral")]
        BNeutral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C-Neutral")]
        CNeutral,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class transformerRatio {
        
        private bool appliedField;
        
        private bool appliedFieldSpecified;
        
        private double ctField;
        
        private bool ctFieldSpecified;
        
        private double ptField;
        
        private bool ptFieldSpecified;
        
        /// <remarks/>
        public bool applied {
            get {
                return this.appliedField;
            }
            set {
                this.appliedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool appliedSpecified {
            get {
                return this.appliedFieldSpecified;
            }
            set {
                this.appliedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ct {
            get {
                return this.ctField;
            }
            set {
                this.ctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ctSpecified {
            get {
                return this.ctFieldSpecified;
            }
            set {
                this.ctFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double pt {
            get {
                return this.ptField;
            }
            set {
                this.ptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ptSpecified {
            get {
                return this.ptFieldSpecified;
            }
            set {
                this.ptFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class displayFormat {
        
        private bool supressLeadingZeroField;
        
        private bool supressLeadingZeroFieldSpecified;
        
        private byte numberOfDigitsField;
        
        private bool numberOfDigitsFieldSpecified;
        
        private byte precisionField;
        
        private bool precisionFieldSpecified;
        
        private double displayMultiplierField;
        
        public displayFormat() {
            this.displayMultiplierField = 1D;
        }
        
        /// <remarks/>
        public bool supressLeadingZero {
            get {
                return this.supressLeadingZeroField;
            }
            set {
                this.supressLeadingZeroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supressLeadingZeroSpecified {
            get {
                return this.supressLeadingZeroFieldSpecified;
            }
            set {
                this.supressLeadingZeroFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte numberOfDigits {
            get {
                return this.numberOfDigitsField;
            }
            set {
                this.numberOfDigitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberOfDigitsSpecified {
            get {
                return this.numberOfDigitsFieldSpecified;
            }
            set {
                this.numberOfDigitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte precision {
            get {
                return this.precisionField;
            }
            set {
                this.precisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool precisionSpecified {
            get {
                return this.precisionFieldSpecified;
            }
            set {
                this.precisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(1D)]
        public double displayMultiplier {
            get {
                return this.displayMultiplierField;
            }
            set {
                this.displayMultiplierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class profileType {
        
        private string meterIDField;
        
        private byte dataSetNumberField;
        
        private bool dataSetNumberFieldSpecified;
        
        private channel[] channelListField;
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public byte dataSetNumber {
            get {
                return this.dataSetNumberField;
            }
            set {
                this.dataSetNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataSetNumberSpecified {
            get {
                return this.dataSetNumberFieldSpecified;
            }
            set {
                this.dataSetNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public channel[] channelList {
            get {
                return this.channelListField;
            }
            set {
                this.channelListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class channel {
        
        private channelBlock[] blockListField;
        
        private uint intervalSourceIDField;
        
        private uint endReadingSourceIDField;
        
        private bool endReadingSourceIDFieldSpecified;
        
        private uint channelNumberField;
        
        public channel() {
            this.channelNumberField = ((uint)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("block", IsNullable=false)]
        public channelBlock[] blockList {
            get {
                return this.blockListField;
            }
            set {
                this.blockListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint intervalSourceID {
            get {
                return this.intervalSourceIDField;
            }
            set {
                this.intervalSourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint endReadingSourceID {
            get {
                return this.endReadingSourceIDField;
            }
            set {
                this.endReadingSourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endReadingSourceIDSpecified {
            get {
                return this.endReadingSourceIDFieldSpecified;
            }
            set {
                this.endReadingSourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint channelNumber {
            get {
                return this.channelNumberField;
            }
            set {
                this.channelNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class channelBlock {
        
        private status statusField;
        
        private interval[] intervalField;
        
        private System.DateTime endTimeField;
        
        private uint intervalPeriodField;
        
        private double endReadingField;
        
        private bool endReadingFieldSpecified;
        
        private uint endPulseField;
        
        private bool endPulseFieldSpecified;
        
        private uint sequenceNumberField;
        
        private bool sequenceNumberFieldSpecified;
        
        /// <remarks/>
        public status status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("interval")]
        public interval[] interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint intervalPeriod {
            get {
                return this.intervalPeriodField;
            }
            set {
                this.intervalPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double endReading {
            get {
                return this.endReadingField;
            }
            set {
                this.endReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endReadingSpecified {
            get {
                return this.endReadingFieldSpecified;
            }
            set {
                this.endReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint endPulse {
            get {
                return this.endPulseField;
            }
            set {
                this.endPulseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endPulseSpecified {
            get {
                return this.endPulseFieldSpecified;
            }
            set {
                this.endPulseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceNumberSpecified {
            get {
                return this.sequenceNumberFieldSpecified;
            }
            set {
                this.sequenceNumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class status {
        
        private bool[] itemsField;
        
        private ItemsChoiceType4[] itemsElementNameField;
        
        private uint intervalIndexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DSTinEffect", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("clockBackward", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("clockForward", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("configChanged", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("invalid", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("longInterval", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("manuallyEntered", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("manuallyModified", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("overflow", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("partialInterval", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("recorderStopped", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("testData", typeof(bool))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public bool[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType4[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint intervalIndex {
            get {
                return this.intervalIndexField;
            }
            set {
                this.intervalIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0", IncludeInSchema=false)]
    public enum ItemsChoiceType4 {
        
        /// <remarks/>
        DSTinEffect,
        
        /// <remarks/>
        clockBackward,
        
        /// <remarks/>
        clockForward,
        
        /// <remarks/>
        configChanged,
        
        /// <remarks/>
        invalid,
        
        /// <remarks/>
        longInterval,
        
        /// <remarks/>
        manuallyEntered,
        
        /// <remarks/>
        manuallyModified,
        
        /// <remarks/>
        overflow,
        
        /// <remarks/>
        partialInterval,
        
        /// <remarks/>
        recorderStopped,
        
        /// <remarks/>
        testData,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class interval {
        
        private bool dSTinEffectField;
        
        private bool clockForwardField;
        
        private bool clockBackwardField;
        
        private bool overflowField;
        
        private bool partialIntervalField;
        
        private bool longIntervalField;
        
        private bool testDataField;
        
        private bool invalidField;
        
        private bool manuallyEnteredField;
        
        private bool manuallyModifiedField;
        
        private bool recorderStoppedField;
        
        private bool configChangedField;
        
        private double valueField;
        
        public interval() {
            this.dSTinEffectField = false;
            this.clockForwardField = false;
            this.clockBackwardField = false;
            this.overflowField = false;
            this.partialIntervalField = false;
            this.longIntervalField = false;
            this.testDataField = false;
            this.invalidField = false;
            this.manuallyEnteredField = false;
            this.manuallyModifiedField = false;
            this.recorderStoppedField = false;
            this.configChangedField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DSTinEffect {
            get {
                return this.dSTinEffectField;
            }
            set {
                this.dSTinEffectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool clockForward {
            get {
                return this.clockForwardField;
            }
            set {
                this.clockForwardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool clockBackward {
            get {
                return this.clockBackwardField;
            }
            set {
                this.clockBackwardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool overflow {
            get {
                return this.overflowField;
            }
            set {
                this.overflowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool partialInterval {
            get {
                return this.partialIntervalField;
            }
            set {
                this.partialIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool longInterval {
            get {
                return this.longIntervalField;
            }
            set {
                this.longIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool testData {
            get {
                return this.testDataField;
            }
            set {
                this.testDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool invalid {
            get {
                return this.invalidField;
            }
            set {
                this.invalidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool manuallyEntered {
            get {
                return this.manuallyEnteredField;
            }
            set {
                this.manuallyEnteredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool manuallyModified {
            get {
                return this.manuallyModifiedField;
            }
            set {
                this.manuallyModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool recorderStopped {
            get {
                return this.recorderStoppedField;
            }
            set {
                this.recorderStoppedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool configChanged {
            get {
                return this.configChangedField;
            }
            set {
                this.configChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class historyLog : mspObject {
        
        private string meterIDField;
        
        private @event[] eventListField;
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public @event[] eventList {
            get {
                return this.eventListField;
            }
            set {
                this.eventListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class @event {
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private eventCode eventCodeField;
        
        private bool eventCodeFieldSpecified;
        
        private string userIDField;
        
        private string argumentField;
        
        private uint sequenceNumberField;
        
        private bool sequenceNumberFieldSpecified;
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public eventCode eventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventCodeSpecified {
            get {
                return this.eventCodeFieldSpecified;
            }
            set {
                this.eventCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string argument {
            get {
                return this.argumentField;
            }
            set {
                this.argumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceNumberSpecified {
            get {
                return this.sequenceNumberFieldSpecified;
            }
            set {
                this.sequenceNumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum eventCode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Primary power down")]
        Primarypowerdown,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Primary power up")]
        Primarypowerup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Time changed, old time")]
        Timechangedoldtime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Time changed, new time")]
        Timechangednewtime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Time changed, old time as argument")]
        Timechangedoldtimeasargument,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Time changed, new time as argument")]
        Timechangednewtimeasargument,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter accessed for read")]
        Meteraccessedforread,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter accessed for write")]
        Meteraccessedforwrite,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Procedure invoked")]
        Procedureinvoked,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Written to")]
        Writtento,
        
        /// <remarks/>
        Programmed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Communication terminated normally")]
        Communicationterminatednormally,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Communication terminated abnormally")]
        Communicationterminatedabnormally,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("List cleared")]
        Listcleared,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Last read entry updated")]
        Lastreadentryupdated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("History Log cleared")]
        HistoryLogcleared,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("History Log last read entry updated")]
        HistoryLoglastreadentryupdated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Event Log cleared")]
        EventLogcleared,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Event Log last read entry updated")]
        EventLoglastreadentryupdated,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Demand reset occurred")]
        Demandresetoccurred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Self read occurred")]
        Selfreadoccurred,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Season change")]
        Seasonchange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Rate change")]
        Ratechange,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Special Schedule activation")]
        SpecialScheduleactivation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tier changed")]
        Tierchanged,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pending data stucture activation")]
        Pendingdatastuctureactivation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pending data stucture clear")]
        Pendingdatastuctureclear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Metering mode started")]
        Meteringmodestarted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Metering mode stopped")]
        Meteringmodestopped,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Test mode started")]
        Testmodestarted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Test mode stopped")]
        Testmodestopped,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter shop mode started")]
        Metershopmodestarted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter shop mode stopped")]
        Metershopmodestopped,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter reprogrammed")]
        Meterreprogrammed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Configuration error detected")]
        Configurationerrordetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Self check error detected")]
        Selfcheckerrordetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("RAM failure detected")]
        RAMfailuredetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ROM failure detected")]
        ROMfailuredetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nonvolatile memory failure detected")]
        Nonvolatilememoryfailuredetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clock error detected")]
        Clockerrordetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Measurement error detected")]
        Measurementerrordetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Low battery detected")]
        Lowbatterydetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Low loss potential detected")]
        Lowlosspotentialdetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Demand overload detected")]
        Demandoverloaddetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tamper attempt detected")]
        Tamperattemptdetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Reverse flow detected")]
        Reverseflowdetected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Momentary interruption")]
        Momentaryinterruption,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sustained outage")]
        Sustainedoutage,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class workTicket : mspObject {
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string descriptionField;
        
        private string statusCodeField;
        
        private string locationField;
        
        private string countyField;
        
        private string taxDistField;
        
        private string franchiseDistField;
        
        private string schoolDistField;
        
        private string districtField;
        
        private float systemVoltsField;
        
        private bool systemVoltsFieldSpecified;
        
        private string woTypeField;
        
        private string cd740cField;
        
        private string ext740cField;
        
        private string loanNoField;
        
        private string cwpYrField;
        
        private string cwpCdField;
        
        private long budgetPurField;
        
        private bool budgetPurFieldSpecified;
        
        private long acNoField;
        
        private bool acNoFieldSpecified;
        
        private long budgetCodeField;
        
        private bool budgetCodeFieldSpecified;
        
        private string actCodeField;
        
        private long deptCodeField;
        
        private bool deptCodeFieldSpecified;
        
        private long wrhsCodeField;
        
        private bool wrhsCodeFieldSpecified;
        
        private long grpCodeField;
        
        private bool grpCodeFieldSpecified;
        
        private string crewCodeField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime clsDateField;
        
        private bool clsDateFieldSpecified;
        
        private System.DateTime estDateField;
        
        private bool estDateFieldSpecified;
        
        private string contCodeField;
        
        private long priorityField;
        
        private bool priorityFieldSpecified;
        
        private float durationField;
        
        private bool durationFieldSpecified;
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string franchiseDist {
            get {
                return this.franchiseDistField;
            }
            set {
                this.franchiseDistField = value;
            }
        }
        
        /// <remarks/>
        public string schoolDist {
            get {
                return this.schoolDistField;
            }
            set {
                this.schoolDistField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public float systemVolts {
            get {
                return this.systemVoltsField;
            }
            set {
                this.systemVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool systemVoltsSpecified {
            get {
                return this.systemVoltsFieldSpecified;
            }
            set {
                this.systemVoltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string woType {
            get {
                return this.woTypeField;
            }
            set {
                this.woTypeField = value;
            }
        }
        
        /// <remarks/>
        public string cd740c {
            get {
                return this.cd740cField;
            }
            set {
                this.cd740cField = value;
            }
        }
        
        /// <remarks/>
        public string ext740c {
            get {
                return this.ext740cField;
            }
            set {
                this.ext740cField = value;
            }
        }
        
        /// <remarks/>
        public string loanNo {
            get {
                return this.loanNoField;
            }
            set {
                this.loanNoField = value;
            }
        }
        
        /// <remarks/>
        public string cwpYr {
            get {
                return this.cwpYrField;
            }
            set {
                this.cwpYrField = value;
            }
        }
        
        /// <remarks/>
        public string cwpCd {
            get {
                return this.cwpCdField;
            }
            set {
                this.cwpCdField = value;
            }
        }
        
        /// <remarks/>
        public long budgetPur {
            get {
                return this.budgetPurField;
            }
            set {
                this.budgetPurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetPurSpecified {
            get {
                return this.budgetPurFieldSpecified;
            }
            set {
                this.budgetPurFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long acNo {
            get {
                return this.acNoField;
            }
            set {
                this.acNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acNoSpecified {
            get {
                return this.acNoFieldSpecified;
            }
            set {
                this.acNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long budgetCode {
            get {
                return this.budgetCodeField;
            }
            set {
                this.budgetCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetCodeSpecified {
            get {
                return this.budgetCodeFieldSpecified;
            }
            set {
                this.budgetCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string actCode {
            get {
                return this.actCodeField;
            }
            set {
                this.actCodeField = value;
            }
        }
        
        /// <remarks/>
        public long deptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deptCodeSpecified {
            get {
                return this.deptCodeFieldSpecified;
            }
            set {
                this.deptCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long wrhsCode {
            get {
                return this.wrhsCodeField;
            }
            set {
                this.wrhsCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wrhsCodeSpecified {
            get {
                return this.wrhsCodeFieldSpecified;
            }
            set {
                this.wrhsCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long grpCode {
            get {
                return this.grpCodeField;
            }
            set {
                this.grpCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool grpCodeSpecified {
            get {
                return this.grpCodeFieldSpecified;
            }
            set {
                this.grpCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string crewCode {
            get {
                return this.crewCodeField;
            }
            set {
                this.crewCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime clsDate {
            get {
                return this.clsDateField;
            }
            set {
                this.clsDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clsDateSpecified {
            get {
                return this.clsDateFieldSpecified;
            }
            set {
                this.clsDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime estDate {
            get {
                return this.estDateField;
            }
            set {
                this.estDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estDateSpecified {
            get {
                return this.estDateFieldSpecified;
            }
            set {
                this.estDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string contCode {
            get {
                return this.contCodeField;
            }
            set {
                this.contCodeField = value;
            }
        }
        
        /// <remarks/>
        public long priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class backgroundGraphics : mspObject {
        
        private genericAnnotationFeature[] genericAnnotationFeatureListField;
        
        private genericPointFeature[] genericPointFeatureListField;
        
        private genericLineFeature[] genericLineFeatureListField;
        
        private graphicSymbol[] graphicSymbolListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericAnnotationFeature[] genericAnnotationFeatureList {
            get {
                return this.genericAnnotationFeatureListField;
            }
            set {
                this.genericAnnotationFeatureListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericPointFeature[] genericPointFeatureList {
            get {
                return this.genericPointFeatureListField;
            }
            set {
                this.genericPointFeatureListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericLineFeature[] genericLineFeatureList {
            get {
                return this.genericLineFeatureListField;
            }
            set {
                this.genericLineFeatureListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public graphicSymbol[] graphicSymbolList {
            get {
                return this.graphicSymbolListField;
            }
            set {
                this.graphicSymbolListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class workOrder : mspObject {
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string jobDescrField;
        
        private string statusCodeField;
        
        private string designCodeField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string mNameField;
        
        private string homeAcField;
        
        private string homePhoneField;
        
        private string dayAcField;
        
        private string dayPhoneField;
        
        private string billAddr1Field;
        
        private string billAddr2Field;
        
        private string billCityField;
        
        private string billStateField;
        
        private string billZipField;
        
        private string custIDField;
        
        private string servAddr1Field;
        
        private string servAddr2Field;
        
        private string servCityField;
        
        private string servStateField;
        
        private string servZipField;
        
        private string countyField;
        
        private string sectionField;
        
        private string townshipField;
        
        private string rangeField;
        
        private string townshipNameField;
        
        private string subdivisionField;
        
        private string blockField;
        
        private string lotField;
        
        private string boardDistField;
        
        private string taxDistField;
        
        private string franchiseDistField;
        
        private string schoolDistField;
        
        private string districtField;
        
        private float systemVoltsField;
        
        private bool systemVoltsFieldSpecified;
        
        private string contractorField;
        
        private string contrAcField;
        
        private string contrPhoneField;
        
        private string electricianField;
        
        private string elecAcField;
        
        private string elecPhoneField;
        
        private string woTypeField;
        
        private string cd740cField;
        
        private string ext740cField;
        
        private string loanNoField;
        
        private string cwpYrField;
        
        private string cwpCdField;
        
        private long budgetPurField;
        
        private bool budgetPurFieldSpecified;
        
        private string engrAsndField;
        
        private long cfmsCodeField;
        
        private bool cfmsCodeFieldSpecified;
        
        private long acNoField;
        
        private bool acNoFieldSpecified;
        
        private long budgetCodeField;
        
        private bool budgetCodeFieldSpecified;
        
        private string actCodeField;
        
        private long deptCodeField;
        
        private bool deptCodeFieldSpecified;
        
        private string warehouseIDField;
        
        private long grpCodeField;
        
        private bool grpCodeFieldSpecified;
        
        private string crewCodeField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime clsDateField;
        
        private bool clsDateFieldSpecified;
        
        private System.DateTime estDateField;
        
        private bool estDateFieldSpecified;
        
        private actionCode actionCodeField;
        
        private bool actionCodeFieldSpecified;
        
        private string laborCategoryIDField;
        
        private float atcField;
        
        private bool atcFieldSpecified;
        
        private loadDistrict loadDistrictField;
        
        private bool loadDistrictFieldSpecified;
        
        private constGrade constGradeField;
        
        private bool constGradeFieldSpecified;
        
        private float durationField;
        
        private bool durationFieldSpecified;
        
        private string accountNumberField;
        
        private station[] stationListField;
        
        private backgroundGraphics backgroundGraphicsField;
        
        private summaryItem[] statisticalSummaryField;
        
        private string gridLocationField;
        
        private string[] serviceOrderNumbersField;
        
        private System.DateTime assignedDateField;
        
        private bool assignedDateFieldSpecified;
        
        private System.DateTime releasedDateField;
        
        private bool releasedDateFieldSpecified;
        
        private System.DateTime reviewedDateField;
        
        private bool reviewedDateFieldSpecified;
        
        private System.DateTime locatedDateField;
        
        private bool locatedDateFieldSpecified;
        
        private System.DateTime completedDateField;
        
        private bool completedDateFieldSpecified;
        
        private string ambulanceDistField;
        
        private string fireDistField;
        
        private string hospitalDistField;
        
        private string roadDistField;
        
        private string releasedByField;
        
        private string designReviewedByField;
        
        private string stakingSheetIDField;
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobDescr {
            get {
                return this.jobDescrField;
            }
            set {
                this.jobDescrField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string designCode {
            get {
                return this.designCodeField;
            }
            set {
                this.designCodeField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string mName {
            get {
                return this.mNameField;
            }
            set {
                this.mNameField = value;
            }
        }
        
        /// <remarks/>
        public string homeAc {
            get {
                return this.homeAcField;
            }
            set {
                this.homeAcField = value;
            }
        }
        
        /// <remarks/>
        public string homePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string dayAc {
            get {
                return this.dayAcField;
            }
            set {
                this.dayAcField = value;
            }
        }
        
        /// <remarks/>
        public string dayPhone {
            get {
                return this.dayPhoneField;
            }
            set {
                this.dayPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string billAddr1 {
            get {
                return this.billAddr1Field;
            }
            set {
                this.billAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string billAddr2 {
            get {
                return this.billAddr2Field;
            }
            set {
                this.billAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string billCity {
            get {
                return this.billCityField;
            }
            set {
                this.billCityField = value;
            }
        }
        
        /// <remarks/>
        public string billState {
            get {
                return this.billStateField;
            }
            set {
                this.billStateField = value;
            }
        }
        
        /// <remarks/>
        public string billZip {
            get {
                return this.billZipField;
            }
            set {
                this.billZipField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string servAddr1 {
            get {
                return this.servAddr1Field;
            }
            set {
                this.servAddr1Field = value;
            }
        }
        
        /// <remarks/>
        public string servAddr2 {
            get {
                return this.servAddr2Field;
            }
            set {
                this.servAddr2Field = value;
            }
        }
        
        /// <remarks/>
        public string servCity {
            get {
                return this.servCityField;
            }
            set {
                this.servCityField = value;
            }
        }
        
        /// <remarks/>
        public string servState {
            get {
                return this.servStateField;
            }
            set {
                this.servStateField = value;
            }
        }
        
        /// <remarks/>
        public string servZip {
            get {
                return this.servZipField;
            }
            set {
                this.servZipField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public string townshipName {
            get {
                return this.townshipNameField;
            }
            set {
                this.townshipNameField = value;
            }
        }
        
        /// <remarks/>
        public string subdivision {
            get {
                return this.subdivisionField;
            }
            set {
                this.subdivisionField = value;
            }
        }
        
        /// <remarks/>
        public string block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        public string lot {
            get {
                return this.lotField;
            }
            set {
                this.lotField = value;
            }
        }
        
        /// <remarks/>
        public string boardDist {
            get {
                return this.boardDistField;
            }
            set {
                this.boardDistField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string franchiseDist {
            get {
                return this.franchiseDistField;
            }
            set {
                this.franchiseDistField = value;
            }
        }
        
        /// <remarks/>
        public string schoolDist {
            get {
                return this.schoolDistField;
            }
            set {
                this.schoolDistField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public float systemVolts {
            get {
                return this.systemVoltsField;
            }
            set {
                this.systemVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool systemVoltsSpecified {
            get {
                return this.systemVoltsFieldSpecified;
            }
            set {
                this.systemVoltsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string contractor {
            get {
                return this.contractorField;
            }
            set {
                this.contractorField = value;
            }
        }
        
        /// <remarks/>
        public string contrAc {
            get {
                return this.contrAcField;
            }
            set {
                this.contrAcField = value;
            }
        }
        
        /// <remarks/>
        public string contrPhone {
            get {
                return this.contrPhoneField;
            }
            set {
                this.contrPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string electrician {
            get {
                return this.electricianField;
            }
            set {
                this.electricianField = value;
            }
        }
        
        /// <remarks/>
        public string elecAc {
            get {
                return this.elecAcField;
            }
            set {
                this.elecAcField = value;
            }
        }
        
        /// <remarks/>
        public string elecPhone {
            get {
                return this.elecPhoneField;
            }
            set {
                this.elecPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string woType {
            get {
                return this.woTypeField;
            }
            set {
                this.woTypeField = value;
            }
        }
        
        /// <remarks/>
        public string cd740c {
            get {
                return this.cd740cField;
            }
            set {
                this.cd740cField = value;
            }
        }
        
        /// <remarks/>
        public string ext740c {
            get {
                return this.ext740cField;
            }
            set {
                this.ext740cField = value;
            }
        }
        
        /// <remarks/>
        public string loanNo {
            get {
                return this.loanNoField;
            }
            set {
                this.loanNoField = value;
            }
        }
        
        /// <remarks/>
        public string cwpYr {
            get {
                return this.cwpYrField;
            }
            set {
                this.cwpYrField = value;
            }
        }
        
        /// <remarks/>
        public string cwpCd {
            get {
                return this.cwpCdField;
            }
            set {
                this.cwpCdField = value;
            }
        }
        
        /// <remarks/>
        public long budgetPur {
            get {
                return this.budgetPurField;
            }
            set {
                this.budgetPurField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetPurSpecified {
            get {
                return this.budgetPurFieldSpecified;
            }
            set {
                this.budgetPurFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string engrAsnd {
            get {
                return this.engrAsndField;
            }
            set {
                this.engrAsndField = value;
            }
        }
        
        /// <remarks/>
        public long cfmsCode {
            get {
                return this.cfmsCodeField;
            }
            set {
                this.cfmsCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cfmsCodeSpecified {
            get {
                return this.cfmsCodeFieldSpecified;
            }
            set {
                this.cfmsCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long acNo {
            get {
                return this.acNoField;
            }
            set {
                this.acNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acNoSpecified {
            get {
                return this.acNoFieldSpecified;
            }
            set {
                this.acNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long budgetCode {
            get {
                return this.budgetCodeField;
            }
            set {
                this.budgetCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetCodeSpecified {
            get {
                return this.budgetCodeFieldSpecified;
            }
            set {
                this.budgetCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string actCode {
            get {
                return this.actCodeField;
            }
            set {
                this.actCodeField = value;
            }
        }
        
        /// <remarks/>
        public long deptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deptCodeSpecified {
            get {
                return this.deptCodeFieldSpecified;
            }
            set {
                this.deptCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string warehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public long grpCode {
            get {
                return this.grpCodeField;
            }
            set {
                this.grpCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool grpCodeSpecified {
            get {
                return this.grpCodeFieldSpecified;
            }
            set {
                this.grpCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string crewCode {
            get {
                return this.crewCodeField;
            }
            set {
                this.crewCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime clsDate {
            get {
                return this.clsDateField;
            }
            set {
                this.clsDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clsDateSpecified {
            get {
                return this.clsDateFieldSpecified;
            }
            set {
                this.clsDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime estDate {
            get {
                return this.estDateField;
            }
            set {
                this.estDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estDateSpecified {
            get {
                return this.estDateFieldSpecified;
            }
            set {
                this.estDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public actionCode actionCode {
            get {
                return this.actionCodeField;
            }
            set {
                this.actionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionCodeSpecified {
            get {
                return this.actionCodeFieldSpecified;
            }
            set {
                this.actionCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string laborCategoryID {
            get {
                return this.laborCategoryIDField;
            }
            set {
                this.laborCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public float atc {
            get {
                return this.atcField;
            }
            set {
                this.atcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool atcSpecified {
            get {
                return this.atcFieldSpecified;
            }
            set {
                this.atcFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public loadDistrict loadDistrict {
            get {
                return this.loadDistrictField;
            }
            set {
                this.loadDistrictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadDistrictSpecified {
            get {
                return this.loadDistrictFieldSpecified;
            }
            set {
                this.loadDistrictFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public constGrade constGrade {
            get {
                return this.constGradeField;
            }
            set {
                this.constGradeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constGradeSpecified {
            get {
                return this.constGradeFieldSpecified;
            }
            set {
                this.constGradeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public station[] stationList {
            get {
                return this.stationListField;
            }
            set {
                this.stationListField = value;
            }
        }
        
        /// <remarks/>
        public backgroundGraphics backgroundGraphics {
            get {
                return this.backgroundGraphicsField;
            }
            set {
                this.backgroundGraphicsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public summaryItem[] statisticalSummary {
            get {
                return this.statisticalSummaryField;
            }
            set {
                this.statisticalSummaryField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("serviceOrderNo", IsNullable=false)]
        public string[] serviceOrderNumbers {
            get {
                return this.serviceOrderNumbersField;
            }
            set {
                this.serviceOrderNumbersField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime assignedDate {
            get {
                return this.assignedDateField;
            }
            set {
                this.assignedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool assignedDateSpecified {
            get {
                return this.assignedDateFieldSpecified;
            }
            set {
                this.assignedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime releasedDate {
            get {
                return this.releasedDateField;
            }
            set {
                this.releasedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releasedDateSpecified {
            get {
                return this.releasedDateFieldSpecified;
            }
            set {
                this.releasedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime reviewedDate {
            get {
                return this.reviewedDateField;
            }
            set {
                this.reviewedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reviewedDateSpecified {
            get {
                return this.reviewedDateFieldSpecified;
            }
            set {
                this.reviewedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime locatedDate {
            get {
                return this.locatedDateField;
            }
            set {
                this.locatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool locatedDateSpecified {
            get {
                return this.locatedDateFieldSpecified;
            }
            set {
                this.locatedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime completedDate {
            get {
                return this.completedDateField;
            }
            set {
                this.completedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool completedDateSpecified {
            get {
                return this.completedDateFieldSpecified;
            }
            set {
                this.completedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ambulanceDist {
            get {
                return this.ambulanceDistField;
            }
            set {
                this.ambulanceDistField = value;
            }
        }
        
        /// <remarks/>
        public string fireDist {
            get {
                return this.fireDistField;
            }
            set {
                this.fireDistField = value;
            }
        }
        
        /// <remarks/>
        public string hospitalDist {
            get {
                return this.hospitalDistField;
            }
            set {
                this.hospitalDistField = value;
            }
        }
        
        /// <remarks/>
        public string roadDist {
            get {
                return this.roadDistField;
            }
            set {
                this.roadDistField = value;
            }
        }
        
        /// <remarks/>
        public string releasedBy {
            get {
                return this.releasedByField;
            }
            set {
                this.releasedByField = value;
            }
        }
        
        /// <remarks/>
        public string designReviewedBy {
            get {
                return this.designReviewedByField;
            }
            set {
                this.designReviewedByField = value;
            }
        }
        
        /// <remarks/>
        public string stakingSheetID {
            get {
                return this.stakingSheetIDField;
            }
            set {
                this.stakingSheetIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum actionCode {
        
        /// <remarks/>
        estimate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CPR only")]
        CPRonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("material only")]
        materialonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CPR and material")]
        CPRandmaterial,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum loadDistrict {
        
        /// <remarks/>
        Light,
        
        /// <remarks/>
        Medium,
        
        /// <remarks/>
        Heavy,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class summaryItem {
        
        private string itemCodeField;
        
        private string itemDescriptionField;
        
        private summaryItemItemQuantity itemQuantityField;
        
        private summaryItemItemAmount itemAmountField;
        
        /// <remarks/>
        public string itemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string itemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                this.itemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public summaryItemItemQuantity itemQuantity {
            get {
                return this.itemQuantityField;
            }
            set {
                this.itemQuantityField = value;
            }
        }
        
        /// <remarks/>
        public summaryItemItemAmount itemAmount {
            get {
                return this.itemAmountField;
            }
            set {
                this.itemAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class summaryItemItemQuantity {
        
        private string itemUnitsField;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string itemUnits {
            get {
                return this.itemUnitsField;
            }
            set {
                this.itemUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class summaryItemItemAmount {
        
        private string itemUnitsField;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string itemUnits {
            get {
                return this.itemUnitsField;
            }
            set {
                this.itemUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class usage : mspObject {
        
        private string servLocField;
        
        private string custIDField;
        
        private string gridLocationField;
        
        private string accountNumberField;
        
        private string meterIDField;
        
        private usageInstance[] usageListField;
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public usageInstance[] usageList {
            get {
                return this.usageListField;
            }
            set {
                this.usageListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class usageInstance {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private string monthNumberField;
        
        private float valueField;
        
        private bool valueFieldSpecified;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        private string useDaysField;
        
        private qualityDescription qualityField;
        
        private bool qualityFieldSpecified;
        
        private unitPrefix unitPrefixField;
        
        private bool unitPrefixFieldSpecified;
        
        private string rateField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string monthNumber {
            get {
                return this.monthNumberField;
            }
            set {
                this.monthNumberField = value;
            }
        }
        
        /// <remarks/>
        public float value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string useDays {
            get {
                return this.useDaysField;
            }
            set {
                this.useDaysField = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitPrefix unitPrefix {
            get {
                return this.unitPrefixField;
            }
            set {
                this.unitPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitPrefixSpecified {
            get {
                return this.unitPrefixFieldSpecified;
            }
            set {
                this.unitPrefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class timesheet : mspObject {
        
        private timePeriod timePeriodField;
        
        private employeeTimeRecord[] employeeTimeRecordListField;
        
        private jobWorked[] jobWorkedListField;
        
        /// <remarks/>
        public timePeriod timePeriod {
            get {
                return this.timePeriodField;
            }
            set {
                this.timePeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public employeeTimeRecord[] employeeTimeRecordList {
            get {
                return this.employeeTimeRecordListField;
            }
            set {
                this.employeeTimeRecordListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public jobWorked[] jobWorkedList {
            get {
                return this.jobWorkedListField;
            }
            set {
                this.jobWorkedListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class employeeTimeRecord : mspObject {
        
        private string employeeIDField;
        
        private string employeeNameField;
        
        private string hoursWorkedField;
        
        /// <remarks/>
        public string employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                this.employeeIDField = value;
            }
        }
        
        /// <remarks/>
        public string employeeName {
            get {
                return this.employeeNameField;
            }
            set {
                this.employeeNameField = value;
            }
        }
        
        /// <remarks/>
        public string hoursWorked {
            get {
                return this.hoursWorkedField;
            }
            set {
                this.hoursWorkedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class jobWorked {
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string jobDescrField;
        
        private float jobHoursField;
        
        private bool jobHoursFieldSpecified;
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobDescr {
            get {
                return this.jobDescrField;
            }
            set {
                this.jobDescrField = value;
            }
        }
        
        /// <remarks/>
        public float jobHours {
            get {
                return this.jobHoursField;
            }
            set {
                this.jobHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool jobHoursSpecified {
            get {
                return this.jobHoursFieldSpecified;
            }
            set {
                this.jobHoursFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class scadaStatus : mspObject {
        
        private qualityDescription qualityField;
        
        private bool qualityFieldSpecified;
        
        private statusIdentifier statusField;
        
        private bool statusFieldSpecified;
        
        private long changeCounterField;
        
        private bool changeCounterFieldSpecified;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public qualityDescription quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public statusIdentifier status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long changeCounter {
            get {
                return this.changeCounterField;
            }
            set {
                this.changeCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool changeCounterSpecified {
            get {
                return this.changeCounterFieldSpecified;
            }
            set {
                this.changeCounterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum statusIdentifier {
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        Travel,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class scadaPoints : mspObject {
        
        private scadaPoint[] scadaPointListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public scadaPoint[] scadaPointList {
            get {
                return this.scadaPointListField;
            }
            set {
                this.scadaPointListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class accumulatedValue : mspObject {
        
        private string countedValueField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private string ceilingValueField;
        
        private bool latchesAtMaximumField;
        
        private bool latchesAtMaximumFieldSpecified;
        
        private string measurementTypeIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string countedValue {
            get {
                return this.countedValueField;
            }
            set {
                this.countedValueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string ceilingValue {
            get {
                return this.ceilingValueField;
            }
            set {
                this.ceilingValueField = value;
            }
        }
        
        /// <remarks/>
        public bool latchesAtMaximum {
            get {
                return this.latchesAtMaximumField;
            }
            set {
                this.latchesAtMaximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latchesAtMaximumSpecified {
            get {
                return this.latchesAtMaximumFieldSpecified;
            }
            set {
                this.latchesAtMaximumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string measurementTypeID {
            get {
                return this.measurementTypeIDField;
            }
            set {
                this.measurementTypeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(shortCircuitAnalysisResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadFlowResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public abstract partial class mspResultsBase : mspObject {
        
        private resultsType resultsTypeField;
        
        private bool resultsTypeFieldSpecified;
        
        private string sourceField;
        
        private string feederField;
        
        private eaLoc eaLocField;
        
        private objectRef parentIDField;
        
        private phaseCd phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private ldCon loadConField;
        
        private bool loadConFieldSpecified;
        
        private string equipRefField;
        
        private float milesFromSrcField;
        
        private bool milesFromSrcFieldSpecified;
        
        private float sectionLengthField;
        
        private bool sectionLengthFieldSpecified;
        
        private float baseKvAField;
        
        private bool baseKvAFieldSpecified;
        
        private float baseKvBField;
        
        private bool baseKvBFieldSpecified;
        
        private float baseKvCField;
        
        private bool baseKvCFieldSpecified;
        
        private float baseKvBalField;
        
        private bool baseKvBalFieldSpecified;
        
        private float basePowerField;
        
        private bool basePowerFieldSpecified;
        
        /// <remarks/>
        public resultsType resultsType {
            get {
                return this.resultsTypeField;
            }
            set {
                this.resultsTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultsTypeSpecified {
            get {
                return this.resultsTypeFieldSpecified;
            }
            set {
                this.resultsTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public objectRef parentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ldCon loadCon {
            get {
                return this.loadConField;
            }
            set {
                this.loadConField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadConSpecified {
            get {
                return this.loadConFieldSpecified;
            }
            set {
                this.loadConFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string equipRef {
            get {
                return this.equipRefField;
            }
            set {
                this.equipRefField = value;
            }
        }
        
        /// <remarks/>
        public float milesFromSrc {
            get {
                return this.milesFromSrcField;
            }
            set {
                this.milesFromSrcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool milesFromSrcSpecified {
            get {
                return this.milesFromSrcFieldSpecified;
            }
            set {
                this.milesFromSrcFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sectionLength {
            get {
                return this.sectionLengthField;
            }
            set {
                this.sectionLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectionLengthSpecified {
            get {
                return this.sectionLengthFieldSpecified;
            }
            set {
                this.sectionLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float baseKvA {
            get {
                return this.baseKvAField;
            }
            set {
                this.baseKvAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseKvASpecified {
            get {
                return this.baseKvAFieldSpecified;
            }
            set {
                this.baseKvAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float baseKvB {
            get {
                return this.baseKvBField;
            }
            set {
                this.baseKvBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseKvBSpecified {
            get {
                return this.baseKvBFieldSpecified;
            }
            set {
                this.baseKvBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float baseKvC {
            get {
                return this.baseKvCField;
            }
            set {
                this.baseKvCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseKvCSpecified {
            get {
                return this.baseKvCFieldSpecified;
            }
            set {
                this.baseKvCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float baseKvBal {
            get {
                return this.baseKvBalField;
            }
            set {
                this.baseKvBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseKvBalSpecified {
            get {
                return this.baseKvBalFieldSpecified;
            }
            set {
                this.baseKvBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float basePower {
            get {
                return this.basePowerField;
            }
            set {
                this.basePowerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool basePowerSpecified {
            get {
                return this.basePowerFieldSpecified;
            }
            set {
                this.basePowerFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum resultsType {
        
        /// <remarks/>
        loadFlow,
        
        /// <remarks/>
        shortCircuit,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class shortCircuitAnalysisResult : mspResultsBase {
        
        private long faultZField;
        
        private bool faultZFieldSpecified;
        
        private long minLgField;
        
        private bool minLgFieldSpecified;
        
        private long maxLgField;
        
        private bool maxLgFieldSpecified;
        
        private long maxLlField;
        
        private bool maxLlFieldSpecified;
        
        private long maxLlgField;
        
        private bool maxLlgFieldSpecified;
        
        private long maxLllgField;
        
        private bool maxLllgFieldSpecified;
        
        private float posSeqRField;
        
        private bool posSeqRFieldSpecified;
        
        private float posSeqXField;
        
        private bool posSeqXFieldSpecified;
        
        private float negSeqRField;
        
        private bool negSeqRFieldSpecified;
        
        private float negSeqXField;
        
        private bool negSeqXFieldSpecified;
        
        private float zeroSeqRField;
        
        private bool zeroSeqRFieldSpecified;
        
        private float zeroSeqXField;
        
        private bool zeroSeqXFieldSpecified;
        
        /// <remarks/>
        public long faultZ {
            get {
                return this.faultZField;
            }
            set {
                this.faultZField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool faultZSpecified {
            get {
                return this.faultZFieldSpecified;
            }
            set {
                this.faultZFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long minLg {
            get {
                return this.minLgField;
            }
            set {
                this.minLgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minLgSpecified {
            get {
                return this.minLgFieldSpecified;
            }
            set {
                this.minLgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long maxLg {
            get {
                return this.maxLgField;
            }
            set {
                this.maxLgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxLgSpecified {
            get {
                return this.maxLgFieldSpecified;
            }
            set {
                this.maxLgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long maxLl {
            get {
                return this.maxLlField;
            }
            set {
                this.maxLlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxLlSpecified {
            get {
                return this.maxLlFieldSpecified;
            }
            set {
                this.maxLlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long maxLlg {
            get {
                return this.maxLlgField;
            }
            set {
                this.maxLlgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxLlgSpecified {
            get {
                return this.maxLlgFieldSpecified;
            }
            set {
                this.maxLlgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long maxLllg {
            get {
                return this.maxLllgField;
            }
            set {
                this.maxLllgField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxLllgSpecified {
            get {
                return this.maxLllgFieldSpecified;
            }
            set {
                this.maxLllgFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float posSeqR {
            get {
                return this.posSeqRField;
            }
            set {
                this.posSeqRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool posSeqRSpecified {
            get {
                return this.posSeqRFieldSpecified;
            }
            set {
                this.posSeqRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float posSeqX {
            get {
                return this.posSeqXField;
            }
            set {
                this.posSeqXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool posSeqXSpecified {
            get {
                return this.posSeqXFieldSpecified;
            }
            set {
                this.posSeqXFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float negSeqR {
            get {
                return this.negSeqRField;
            }
            set {
                this.negSeqRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool negSeqRSpecified {
            get {
                return this.negSeqRFieldSpecified;
            }
            set {
                this.negSeqRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float negSeqX {
            get {
                return this.negSeqXField;
            }
            set {
                this.negSeqXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool negSeqXSpecified {
            get {
                return this.negSeqXFieldSpecified;
            }
            set {
                this.negSeqXFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float zeroSeqR {
            get {
                return this.zeroSeqRField;
            }
            set {
                this.zeroSeqRField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zeroSeqRSpecified {
            get {
                return this.zeroSeqRFieldSpecified;
            }
            set {
                this.zeroSeqRFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float zeroSeqX {
            get {
                return this.zeroSeqXField;
            }
            set {
                this.zeroSeqXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zeroSeqXSpecified {
            get {
                return this.zeroSeqXFieldSpecified;
            }
            set {
                this.zeroSeqXFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class loadFlowResult : mspResultsBase {
        
        private float priKvAField;
        
        private bool priKvAFieldSpecified;
        
        private float priKvBField;
        
        private bool priKvBFieldSpecified;
        
        private float priKvCField;
        
        private bool priKvCFieldSpecified;
        
        private float priKvBalField;
        
        private bool priKvBalFieldSpecified;
        
        private float sectionDropAField;
        
        private bool sectionDropAFieldSpecified;
        
        private float sectionDropBField;
        
        private bool sectionDropBFieldSpecified;
        
        private float sectionDropCField;
        
        private bool sectionDropCFieldSpecified;
        
        private float sectionDropBalField;
        
        private bool sectionDropBalFieldSpecified;
        
        private float cumulativeDropAField;
        
        private bool cumulativeDropAFieldSpecified;
        
        private float cumulativeDropBField;
        
        private bool cumulativeDropBFieldSpecified;
        
        private float cumulativeDropCField;
        
        private bool cumulativeDropCFieldSpecified;
        
        private float cumulativeDropBalField;
        
        private bool cumulativeDropBalFieldSpecified;
        
        private float thruCurrentAField;
        
        private bool thruCurrentAFieldSpecified;
        
        private float thruCurrentBField;
        
        private bool thruCurrentBFieldSpecified;
        
        private float thruCurrentCField;
        
        private bool thruCurrentCFieldSpecified;
        
        private float thruCurrentBalField;
        
        private bool thruCurrentBalFieldSpecified;
        
        private float pctCapAField;
        
        private bool pctCapAFieldSpecified;
        
        private float pctCapBField;
        
        private bool pctCapBFieldSpecified;
        
        private float pctCapCField;
        
        private bool pctCapCFieldSpecified;
        
        private float pctCapBalField;
        
        private bool pctCapBalFieldSpecified;
        
        private float thruKwAField;
        
        private bool thruKwAFieldSpecified;
        
        private float thruKwBField;
        
        private bool thruKwBFieldSpecified;
        
        private float thruKwCField;
        
        private bool thruKwCFieldSpecified;
        
        private float thruKwBalField;
        
        private bool thruKwBalFieldSpecified;
        
        private float thruKvarAField;
        
        private bool thruKvarAFieldSpecified;
        
        private float thruKvarBField;
        
        private bool thruKvarBFieldSpecified;
        
        private float thruKvarCField;
        
        private bool thruKvarCFieldSpecified;
        
        private float thruKvarBalField;
        
        private bool thruKvarBalFieldSpecified;
        
        private float pctPfAField;
        
        private bool pctPfAFieldSpecified;
        
        private float pctPfBField;
        
        private bool pctPfBFieldSpecified;
        
        private float pctPfCField;
        
        private bool pctPfCFieldSpecified;
        
        private float pctPfBalField;
        
        private bool pctPfBalFieldSpecified;
        
        private float pctLossField;
        
        private bool pctLossFieldSpecified;
        
        private long sectKwAField;
        
        private bool sectKwAFieldSpecified;
        
        private long sectKwBField;
        
        private bool sectKwBFieldSpecified;
        
        private long sectKwCField;
        
        private bool sectKwCFieldSpecified;
        
        private long sectKwBalField;
        
        private bool sectKwBalFieldSpecified;
        
        private float secKvarAField;
        
        private bool secKvarAFieldSpecified;
        
        private float secKvarBField;
        
        private bool secKvarBFieldSpecified;
        
        private float secKvarCField;
        
        private bool secKvarCFieldSpecified;
        
        private float secKvarBalField;
        
        private bool secKvarBalFieldSpecified;
        
        private long consOnAField;
        
        private bool consOnAFieldSpecified;
        
        private long consOnBField;
        
        private bool consOnBFieldSpecified;
        
        private long consOnCField;
        
        private bool consOnCFieldSpecified;
        
        private long consOnBalField;
        
        private bool consOnBalFieldSpecified;
        
        private long consThruAField;
        
        private bool consThruAFieldSpecified;
        
        private long consThruBField;
        
        private bool consThruBFieldSpecified;
        
        private long consThruCField;
        
        private bool consThruCFieldSpecified;
        
        private long consThruBalField;
        
        private bool consThruBalFieldSpecified;
        
        private float baseKvCalcField;
        
        private bool baseKvCalcFieldSpecified;
        
        /// <remarks/>
        public float priKvA {
            get {
                return this.priKvAField;
            }
            set {
                this.priKvAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priKvASpecified {
            get {
                return this.priKvAFieldSpecified;
            }
            set {
                this.priKvAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float priKvB {
            get {
                return this.priKvBField;
            }
            set {
                this.priKvBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priKvBSpecified {
            get {
                return this.priKvBFieldSpecified;
            }
            set {
                this.priKvBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float priKvC {
            get {
                return this.priKvCField;
            }
            set {
                this.priKvCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priKvCSpecified {
            get {
                return this.priKvCFieldSpecified;
            }
            set {
                this.priKvCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float priKvBal {
            get {
                return this.priKvBalField;
            }
            set {
                this.priKvBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priKvBalSpecified {
            get {
                return this.priKvBalFieldSpecified;
            }
            set {
                this.priKvBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sectionDropA {
            get {
                return this.sectionDropAField;
            }
            set {
                this.sectionDropAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectionDropASpecified {
            get {
                return this.sectionDropAFieldSpecified;
            }
            set {
                this.sectionDropAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sectionDropB {
            get {
                return this.sectionDropBField;
            }
            set {
                this.sectionDropBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectionDropBSpecified {
            get {
                return this.sectionDropBFieldSpecified;
            }
            set {
                this.sectionDropBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sectionDropC {
            get {
                return this.sectionDropCField;
            }
            set {
                this.sectionDropCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectionDropCSpecified {
            get {
                return this.sectionDropCFieldSpecified;
            }
            set {
                this.sectionDropCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float sectionDropBal {
            get {
                return this.sectionDropBalField;
            }
            set {
                this.sectionDropBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectionDropBalSpecified {
            get {
                return this.sectionDropBalFieldSpecified;
            }
            set {
                this.sectionDropBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float cumulativeDropA {
            get {
                return this.cumulativeDropAField;
            }
            set {
                this.cumulativeDropAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cumulativeDropASpecified {
            get {
                return this.cumulativeDropAFieldSpecified;
            }
            set {
                this.cumulativeDropAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float cumulativeDropB {
            get {
                return this.cumulativeDropBField;
            }
            set {
                this.cumulativeDropBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cumulativeDropBSpecified {
            get {
                return this.cumulativeDropBFieldSpecified;
            }
            set {
                this.cumulativeDropBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float cumulativeDropC {
            get {
                return this.cumulativeDropCField;
            }
            set {
                this.cumulativeDropCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cumulativeDropCSpecified {
            get {
                return this.cumulativeDropCFieldSpecified;
            }
            set {
                this.cumulativeDropCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float cumulativeDropBal {
            get {
                return this.cumulativeDropBalField;
            }
            set {
                this.cumulativeDropBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cumulativeDropBalSpecified {
            get {
                return this.cumulativeDropBalFieldSpecified;
            }
            set {
                this.cumulativeDropBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruCurrentA {
            get {
                return this.thruCurrentAField;
            }
            set {
                this.thruCurrentAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruCurrentASpecified {
            get {
                return this.thruCurrentAFieldSpecified;
            }
            set {
                this.thruCurrentAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruCurrentB {
            get {
                return this.thruCurrentBField;
            }
            set {
                this.thruCurrentBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruCurrentBSpecified {
            get {
                return this.thruCurrentBFieldSpecified;
            }
            set {
                this.thruCurrentBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruCurrentC {
            get {
                return this.thruCurrentCField;
            }
            set {
                this.thruCurrentCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruCurrentCSpecified {
            get {
                return this.thruCurrentCFieldSpecified;
            }
            set {
                this.thruCurrentCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruCurrentBal {
            get {
                return this.thruCurrentBalField;
            }
            set {
                this.thruCurrentBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruCurrentBalSpecified {
            get {
                return this.thruCurrentBalFieldSpecified;
            }
            set {
                this.thruCurrentBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctCapA {
            get {
                return this.pctCapAField;
            }
            set {
                this.pctCapAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapASpecified {
            get {
                return this.pctCapAFieldSpecified;
            }
            set {
                this.pctCapAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctCapB {
            get {
                return this.pctCapBField;
            }
            set {
                this.pctCapBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapBSpecified {
            get {
                return this.pctCapBFieldSpecified;
            }
            set {
                this.pctCapBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctCapC {
            get {
                return this.pctCapCField;
            }
            set {
                this.pctCapCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapCSpecified {
            get {
                return this.pctCapCFieldSpecified;
            }
            set {
                this.pctCapCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctCapBal {
            get {
                return this.pctCapBalField;
            }
            set {
                this.pctCapBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapBalSpecified {
            get {
                return this.pctCapBalFieldSpecified;
            }
            set {
                this.pctCapBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKwA {
            get {
                return this.thruKwAField;
            }
            set {
                this.thruKwAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKwASpecified {
            get {
                return this.thruKwAFieldSpecified;
            }
            set {
                this.thruKwAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKwB {
            get {
                return this.thruKwBField;
            }
            set {
                this.thruKwBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKwBSpecified {
            get {
                return this.thruKwBFieldSpecified;
            }
            set {
                this.thruKwBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKwC {
            get {
                return this.thruKwCField;
            }
            set {
                this.thruKwCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKwCSpecified {
            get {
                return this.thruKwCFieldSpecified;
            }
            set {
                this.thruKwCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKwBal {
            get {
                return this.thruKwBalField;
            }
            set {
                this.thruKwBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKwBalSpecified {
            get {
                return this.thruKwBalFieldSpecified;
            }
            set {
                this.thruKwBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKvarA {
            get {
                return this.thruKvarAField;
            }
            set {
                this.thruKvarAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKvarASpecified {
            get {
                return this.thruKvarAFieldSpecified;
            }
            set {
                this.thruKvarAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKvarB {
            get {
                return this.thruKvarBField;
            }
            set {
                this.thruKvarBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKvarBSpecified {
            get {
                return this.thruKvarBFieldSpecified;
            }
            set {
                this.thruKvarBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKvarC {
            get {
                return this.thruKvarCField;
            }
            set {
                this.thruKvarCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKvarCSpecified {
            get {
                return this.thruKvarCFieldSpecified;
            }
            set {
                this.thruKvarCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float thruKvarBal {
            get {
                return this.thruKvarBalField;
            }
            set {
                this.thruKvarBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thruKvarBalSpecified {
            get {
                return this.thruKvarBalFieldSpecified;
            }
            set {
                this.thruKvarBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctPfA {
            get {
                return this.pctPfAField;
            }
            set {
                this.pctPfAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfASpecified {
            get {
                return this.pctPfAFieldSpecified;
            }
            set {
                this.pctPfAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctPfB {
            get {
                return this.pctPfBField;
            }
            set {
                this.pctPfBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfBSpecified {
            get {
                return this.pctPfBFieldSpecified;
            }
            set {
                this.pctPfBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctPfC {
            get {
                return this.pctPfCField;
            }
            set {
                this.pctPfCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfCSpecified {
            get {
                return this.pctPfCFieldSpecified;
            }
            set {
                this.pctPfCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctPfBal {
            get {
                return this.pctPfBalField;
            }
            set {
                this.pctPfBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfBalSpecified {
            get {
                return this.pctPfBalFieldSpecified;
            }
            set {
                this.pctPfBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctLoss {
            get {
                return this.pctLossField;
            }
            set {
                this.pctLossField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctLossSpecified {
            get {
                return this.pctLossFieldSpecified;
            }
            set {
                this.pctLossFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long sectKwA {
            get {
                return this.sectKwAField;
            }
            set {
                this.sectKwAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectKwASpecified {
            get {
                return this.sectKwAFieldSpecified;
            }
            set {
                this.sectKwAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long sectKwB {
            get {
                return this.sectKwBField;
            }
            set {
                this.sectKwBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectKwBSpecified {
            get {
                return this.sectKwBFieldSpecified;
            }
            set {
                this.sectKwBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long sectKwC {
            get {
                return this.sectKwCField;
            }
            set {
                this.sectKwCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectKwCSpecified {
            get {
                return this.sectKwCFieldSpecified;
            }
            set {
                this.sectKwCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long sectKwBal {
            get {
                return this.sectKwBalField;
            }
            set {
                this.sectKwBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sectKwBalSpecified {
            get {
                return this.sectKwBalFieldSpecified;
            }
            set {
                this.sectKwBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float secKvarA {
            get {
                return this.secKvarAField;
            }
            set {
                this.secKvarAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secKvarASpecified {
            get {
                return this.secKvarAFieldSpecified;
            }
            set {
                this.secKvarAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float secKvarB {
            get {
                return this.secKvarBField;
            }
            set {
                this.secKvarBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secKvarBSpecified {
            get {
                return this.secKvarBFieldSpecified;
            }
            set {
                this.secKvarBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float secKvarC {
            get {
                return this.secKvarCField;
            }
            set {
                this.secKvarCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secKvarCSpecified {
            get {
                return this.secKvarCFieldSpecified;
            }
            set {
                this.secKvarCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float secKvarBal {
            get {
                return this.secKvarBalField;
            }
            set {
                this.secKvarBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secKvarBalSpecified {
            get {
                return this.secKvarBalFieldSpecified;
            }
            set {
                this.secKvarBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consOnA {
            get {
                return this.consOnAField;
            }
            set {
                this.consOnAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnASpecified {
            get {
                return this.consOnAFieldSpecified;
            }
            set {
                this.consOnAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consOnB {
            get {
                return this.consOnBField;
            }
            set {
                this.consOnBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnBSpecified {
            get {
                return this.consOnBFieldSpecified;
            }
            set {
                this.consOnBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consOnC {
            get {
                return this.consOnCField;
            }
            set {
                this.consOnCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnCSpecified {
            get {
                return this.consOnCFieldSpecified;
            }
            set {
                this.consOnCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consOnBal {
            get {
                return this.consOnBalField;
            }
            set {
                this.consOnBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnBalSpecified {
            get {
                return this.consOnBalFieldSpecified;
            }
            set {
                this.consOnBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruA {
            get {
                return this.consThruAField;
            }
            set {
                this.consThruAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruASpecified {
            get {
                return this.consThruAFieldSpecified;
            }
            set {
                this.consThruAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruB {
            get {
                return this.consThruBField;
            }
            set {
                this.consThruBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruBSpecified {
            get {
                return this.consThruBFieldSpecified;
            }
            set {
                this.consThruBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruC {
            get {
                return this.consThruCField;
            }
            set {
                this.consThruCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruCSpecified {
            get {
                return this.consThruCFieldSpecified;
            }
            set {
                this.consThruCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruBal {
            get {
                return this.consThruBalField;
            }
            set {
                this.consThruBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruBalSpecified {
            get {
                return this.consThruBalFieldSpecified;
            }
            set {
                this.consThruBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float baseKvCalc {
            get {
                return this.baseKvCalcField;
            }
            set {
                this.baseKvCalcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseKvCalcSpecified {
            get {
                return this.baseKvCalcFieldSpecified;
            }
            set {
                this.baseKvCalcFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class powerFactorManagementEvent : mspObject {
        
        private string switchIDField;
        
        private controlEventType controlEventTypeField;
        
        private bool controlEventTypeFieldSpecified;
        
        private string affectedRelayField;
        
        /// <remarks/>
        public string switchID {
            get {
                return this.switchIDField;
            }
            set {
                this.switchIDField = value;
            }
        }
        
        /// <remarks/>
        public controlEventType controlEventType {
            get {
                return this.controlEventTypeField;
            }
            set {
                this.controlEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlEventTypeSpecified {
            get {
                return this.controlEventTypeFieldSpecified;
            }
            set {
                this.controlEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string affectedRelay {
            get {
                return this.affectedRelayField;
            }
            set {
                this.affectedRelayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum controlEventType {
        
        /// <remarks/>
        Initiate,
        
        /// <remarks/>
        Restore,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageReasonCodeList : mspObject {
        
        private outageReason outageCauseField;
        
        private outageReason equipmentFailureField;
        
        private outageReason voltageLevelField;
        
        private outageReason weatherConditionField;
        
        private outageReason systemCharacterizationField;
        
        private outageReason responsibleSystemField;
        
        private outageReason outageConditionField;
        
        private outageReason interruptingDeviceField;
        
        private outageReason interruptingDeviceInitiationField;
        
        private outageReason customerRestorationField;
        
        /// <remarks/>
        public outageReason OutageCause {
            get {
                return this.outageCauseField;
            }
            set {
                this.outageCauseField = value;
            }
        }
        
        /// <remarks/>
        public outageReason EquipmentFailure {
            get {
                return this.equipmentFailureField;
            }
            set {
                this.equipmentFailureField = value;
            }
        }
        
        /// <remarks/>
        public outageReason VoltageLevel {
            get {
                return this.voltageLevelField;
            }
            set {
                this.voltageLevelField = value;
            }
        }
        
        /// <remarks/>
        public outageReason WeatherCondition {
            get {
                return this.weatherConditionField;
            }
            set {
                this.weatherConditionField = value;
            }
        }
        
        /// <remarks/>
        public outageReason SystemCharacterization {
            get {
                return this.systemCharacterizationField;
            }
            set {
                this.systemCharacterizationField = value;
            }
        }
        
        /// <remarks/>
        public outageReason ResponsibleSystem {
            get {
                return this.responsibleSystemField;
            }
            set {
                this.responsibleSystemField = value;
            }
        }
        
        /// <remarks/>
        public outageReason OutageCondition {
            get {
                return this.outageConditionField;
            }
            set {
                this.outageConditionField = value;
            }
        }
        
        /// <remarks/>
        public outageReason InterruptingDevice {
            get {
                return this.interruptingDeviceField;
            }
            set {
                this.interruptingDeviceField = value;
            }
        }
        
        /// <remarks/>
        public outageReason InterruptingDeviceInitiation {
            get {
                return this.interruptingDeviceInitiationField;
            }
            set {
                this.interruptingDeviceInitiationField = value;
            }
        }
        
        /// <remarks/>
        public outageReason CustomerRestoration {
            get {
                return this.customerRestorationField;
            }
            set {
                this.customerRestorationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageEvent : mspObject {
        
        private string areaField;
        
        private string problemLocationField;
        
        private string deviceIDField;
        
        private string deviceTypeField;
        
        private string substationCodeField;
        
        private string feederField;
        
        private string actualFaultField;
        
        private string faultTypeField;
        
        private string outageDescriptionField;
        
        private outageStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private long priorityField;
        
        private bool priorityFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime outageDefinedField;
        
        private bool outageDefinedFieldSpecified;
        
        private System.DateTime firstDispatchField;
        
        private bool firstDispatchFieldSpecified;
        
        private System.DateTime firstETAField;
        
        private bool firstETAFieldSpecified;
        
        private System.DateTime firstArrivalField;
        
        private bool firstArrivalFieldSpecified;
        
        private System.DateTime eTORField;
        
        private bool eTORFieldSpecified;
        
        private System.DateTime completedField;
        
        private bool completedFieldSpecified;
        
        private message messageField;
        
        private string[] crewsDispatchedField;
        
        private bool isPlannedField;
        
        private bool isPlannedFieldSpecified;
        
        private phaseCd outagedPhaseField;
        
        private bool outagedPhaseFieldSpecified;
        
        private string customersAffectedField;
        
        private string priorityCustomersCountField;
        
        private string oDEventCountField;
        
        private string customersRestoredField;
        
        private bool isCustomerResponsibleField;
        
        private bool isCustomerResponsibleFieldSpecified;
        
        private outageReasonCodeList outageReasonCodeListField;
        
        /// <remarks/>
        public string area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string problemLocation {
            get {
                return this.problemLocationField;
            }
            set {
                this.problemLocationField = value;
            }
        }
        
        /// <remarks/>
        public string deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string substationCode {
            get {
                return this.substationCodeField;
            }
            set {
                this.substationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public string actualFault {
            get {
                return this.actualFaultField;
            }
            set {
                this.actualFaultField = value;
            }
        }
        
        /// <remarks/>
        public string faultType {
            get {
                return this.faultTypeField;
            }
            set {
                this.faultTypeField = value;
            }
        }
        
        /// <remarks/>
        public string outageDescription {
            get {
                return this.outageDescriptionField;
            }
            set {
                this.outageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public outageStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime outageDefined {
            get {
                return this.outageDefinedField;
            }
            set {
                this.outageDefinedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDefinedSpecified {
            get {
                return this.outageDefinedFieldSpecified;
            }
            set {
                this.outageDefinedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstDispatch {
            get {
                return this.firstDispatchField;
            }
            set {
                this.firstDispatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstDispatchSpecified {
            get {
                return this.firstDispatchFieldSpecified;
            }
            set {
                this.firstDispatchFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstETA {
            get {
                return this.firstETAField;
            }
            set {
                this.firstETAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstETASpecified {
            get {
                return this.firstETAFieldSpecified;
            }
            set {
                this.firstETAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstArrival {
            get {
                return this.firstArrivalField;
            }
            set {
                this.firstArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstArrivalSpecified {
            get {
                return this.firstArrivalFieldSpecified;
            }
            set {
                this.firstArrivalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ETOR {
            get {
                return this.eTORField;
            }
            set {
                this.eTORField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ETORSpecified {
            get {
                return this.eTORFieldSpecified;
            }
            set {
                this.eTORFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool completedSpecified {
            get {
                return this.completedFieldSpecified;
            }
            set {
                this.completedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public message message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("crewID", IsNullable=false)]
        public string[] crewsDispatched {
            get {
                return this.crewsDispatchedField;
            }
            set {
                this.crewsDispatchedField = value;
            }
        }
        
        /// <remarks/>
        public bool isPlanned {
            get {
                return this.isPlannedField;
            }
            set {
                this.isPlannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isPlannedSpecified {
            get {
                return this.isPlannedFieldSpecified;
            }
            set {
                this.isPlannedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCd outagedPhase {
            get {
                return this.outagedPhaseField;
            }
            set {
                this.outagedPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outagedPhaseSpecified {
            get {
                return this.outagedPhaseFieldSpecified;
            }
            set {
                this.outagedPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string customersAffected {
            get {
                return this.customersAffectedField;
            }
            set {
                this.customersAffectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityCustomersCount {
            get {
                return this.priorityCustomersCountField;
            }
            set {
                this.priorityCustomersCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string ODEventCount {
            get {
                return this.oDEventCountField;
            }
            set {
                this.oDEventCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string customersRestored {
            get {
                return this.customersRestoredField;
            }
            set {
                this.customersRestoredField = value;
            }
        }
        
        /// <remarks/>
        public bool isCustomerResponsible {
            get {
                return this.isCustomerResponsibleField;
            }
            set {
                this.isCustomerResponsibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCustomerResponsibleSpecified {
            get {
                return this.isCustomerResponsibleFieldSpecified;
            }
            set {
                this.isCustomerResponsibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public outageReasonCodeList outageReasonCodeList {
            get {
                return this.outageReasonCodeListField;
            }
            set {
                this.outageReasonCodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class outageDetectionEvent : mspObject {
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private outageEventType outageEventTypeField;
        
        private bool outageEventTypeFieldSpecified;
        
        private string outageDetectDeviceIDField;
        
        private outageDetectDeviceType outageDetectDeviceTypeField;
        
        private bool outageDetectDeviceTypeFieldSpecified;
        
        private outageLocation outageLocationField;
        
        private message[] messageListField;
        
        private outageCustomer outageCustomerField;
        
        private priorityType priorityField;
        
        private string percentConfidentField;
        
        private string problemCodeField;
        
        private resolvedLevel resolvedLevelField;
        
        private bool resolvedLevelFieldSpecified;
        
        public outageDetectionEvent() {
            this.priorityField = priorityType.Normal;
        }
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public outageEventType outageEventType {
            get {
                return this.outageEventTypeField;
            }
            set {
                this.outageEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageEventTypeSpecified {
            get {
                return this.outageEventTypeFieldSpecified;
            }
            set {
                this.outageEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string outageDetectDeviceID {
            get {
                return this.outageDetectDeviceIDField;
            }
            set {
                this.outageDetectDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceType outageDetectDeviceType {
            get {
                return this.outageDetectDeviceTypeField;
            }
            set {
                this.outageDetectDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectDeviceTypeSpecified {
            get {
                return this.outageDetectDeviceTypeFieldSpecified;
            }
            set {
                this.outageDetectDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public outageLocation outageLocation {
            get {
                return this.outageLocationField;
            }
            set {
                this.outageLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public message[] messageList {
            get {
                return this.messageListField;
            }
            set {
                this.messageListField = value;
            }
        }
        
        /// <remarks/>
        public outageCustomer outageCustomer {
            get {
                return this.outageCustomerField;
            }
            set {
                this.outageCustomerField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(priorityType.Normal)]
        public priorityType priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string percentConfident {
            get {
                return this.percentConfidentField;
            }
            set {
                this.percentConfidentField = value;
            }
        }
        
        /// <remarks/>
        public string problemCode {
            get {
                return this.problemCodeField;
            }
            set {
                this.problemCodeField = value;
            }
        }
        
        /// <remarks/>
        public resolvedLevel resolvedLevel {
            get {
                return this.resolvedLevelField;
            }
            set {
                this.resolvedLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolvedLevelSpecified {
            get {
                return this.resolvedLevelFieldSpecified;
            }
            set {
                this.resolvedLevelFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class readingObject : mspObject {
        
        private source[] sourceListField;
        
        private meterReading[] readingListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public source[] sourceList {
            get {
                return this.sourceListField;
            }
            set {
                this.sourceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterReading[] readingList {
            get {
                return this.readingListField;
            }
            set {
                this.readingListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class meterReading {
        
        private string meterIDField;
        
        private string meterNoField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private System.DateTime acquisitionTimeField;
        
        private bool acquisitionTimeFieldSpecified;
        
        private byte seasonField;
        
        private bool seasonFieldSpecified;
        
        private uint numberOfResetsField;
        
        private bool numberOfResetsFieldSpecified;
        
        private readingStatus[] statusField;
        
        private registers[] registersField;
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime acquisitionTime {
            get {
                return this.acquisitionTimeField;
            }
            set {
                this.acquisitionTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acquisitionTimeSpecified {
            get {
                return this.acquisitionTimeFieldSpecified;
            }
            set {
                this.acquisitionTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte season {
            get {
                return this.seasonField;
            }
            set {
                this.seasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool seasonSpecified {
            get {
                return this.seasonFieldSpecified;
            }
            set {
                this.seasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint numberOfResets {
            get {
                return this.numberOfResetsField;
            }
            set {
                this.numberOfResetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberOfResetsSpecified {
            get {
                return this.numberOfResetsFieldSpecified;
            }
            set {
                this.numberOfResetsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public readingStatus[] status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("registers")]
        public registers[] registers {
            get {
                return this.registersField;
            }
            set {
                this.registersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum readingStatus {
        
        /// <remarks/>
        suspiciousRead,
        
        /// <remarks/>
        DSTinEffect,
        
        /// <remarks/>
        manuallyUpdated,
        
        /// <remarks/>
        manuallyEntered,
        
        /// <remarks/>
        reset,
        
        /// <remarks/>
        seasonChange,
        
        /// <remarks/>
        firstRead,
        
        /// <remarks/>
        billingRead,
        
        /// <remarks/>
        afterCorrection,
        
        /// <remarks/>
        beforeCorrection,
        
        /// <remarks/>
        finalRead,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class registers {
        
        private object[] itemsField;
        
        private uint tierField;
        
        private bool tierFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coincidentalValue", typeof(coincidentalValue))]
        [System.Xml.Serialization.XmlElementAttribute("cumDemand", typeof(cumDemand))]
        [System.Xml.Serialization.XmlElementAttribute("demand", typeof(flowDemand))]
        [System.Xml.Serialization.XmlElementAttribute("summation", typeof(summation))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint tier {
            get {
                return this.tierField;
            }
            set {
                this.tierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tierSpecified {
            get {
                return this.tierFieldSpecified;
            }
            set {
                this.tierFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class coincidentalValue {
        
        private uint sourceIDField;
        
        private uint triggerSourceIDField;
        
        private bool triggerSourceIDFieldSpecified;
        
        private double valueField;
        
        public coincidentalValue() {
            this.sourceIDField = ((uint)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint triggerSourceID {
            get {
                return this.triggerSourceIDField;
            }
            set {
                this.triggerSourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool triggerSourceIDSpecified {
            get {
                return this.triggerSourceIDFieldSpecified;
            }
            set {
                this.triggerSourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class cumDemand {
        
        private uint sourceIDField;
        
        private cumDemandType cumDemandTypeField;
        
        private double valueField;
        
        public cumDemand() {
            this.sourceIDField = ((uint)(0));
            this.cumDemandTypeField = cumDemandType.max;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(cumDemandType.max)]
        public cumDemandType cumDemandType {
            get {
                return this.cumDemandTypeField;
            }
            set {
                this.cumDemandTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum cumDemandType {
        
        /// <remarks/>
        max,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        continousMax,
        
        /// <remarks/>
        continousMin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class flowDemand {
        
        private uint sourceIDField;
        
        private flowDemandType flowDemandTypeField;
        
        private byte occurrenceField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private double valueField;
        
        public flowDemand() {
            this.sourceIDField = ((uint)(0));
            this.flowDemandTypeField = flowDemandType.max;
            this.occurrenceField = ((byte)(1));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(flowDemandType.max)]
        public flowDemandType flowDemandType {
            get {
                return this.flowDemandTypeField;
            }
            set {
                this.flowDemandTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "1")]
        public byte occurrence {
            get {
                return this.occurrenceField;
            }
            set {
                this.occurrenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum flowDemandType {
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        max,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class summation {
        
        private uint sourceIDField;
        
        private double valueField;
        
        public summation() {
            this.sourceIDField = ((uint)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class measurement : mspObject {
        
        private string measurementDeviceIDField;
        
        private measurementType[] measurementTypeListField;
        
        /// <remarks/>
        public string measurementDeviceID {
            get {
                return this.measurementDeviceIDField;
            }
            set {
                this.measurementDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public measurementType[] measurementTypeList {
            get {
                return this.measurementTypeListField;
            }
            set {
                this.measurementTypeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class measurementType {
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private float valueField;
        
        private bool valueFieldSpecified;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        private qualityDescription qualityField;
        
        private bool qualityFieldSpecified;
        
        private timeSpan timeSpanField;
        
        private bool timeSpanFieldSpecified;
        
        private System.DateTime stopTimeField;
        
        private bool stopTimeFieldSpecified;
        
        private durationDescription durationDescriptionField;
        
        private bool durationDescriptionFieldSpecified;
        
        private unitPrefix unitPrefixField;
        
        private bool unitPrefixFieldSpecified;
        
        private accountability quadrantField;
        
        private bool quadrantFieldSpecified;
        
        private phaseCd phaseField;
        
        private bool phaseFieldSpecified;
        
        private long harmonicField;
        
        private bool harmonicFieldSpecified;
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public timeSpan timeSpan {
            get {
                return this.timeSpanField;
            }
            set {
                this.timeSpanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeSpanSpecified {
            get {
                return this.timeSpanFieldSpecified;
            }
            set {
                this.timeSpanFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime stopTime {
            get {
                return this.stopTimeField;
            }
            set {
                this.stopTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stopTimeSpecified {
            get {
                return this.stopTimeFieldSpecified;
            }
            set {
                this.stopTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public durationDescription durationDescription {
            get {
                return this.durationDescriptionField;
            }
            set {
                this.durationDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationDescriptionSpecified {
            get {
                return this.durationDescriptionFieldSpecified;
            }
            set {
                this.durationDescriptionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitPrefix unitPrefix {
            get {
                return this.unitPrefixField;
            }
            set {
                this.unitPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitPrefixSpecified {
            get {
                return this.unitPrefixFieldSpecified;
            }
            set {
                this.unitPrefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public accountability quadrant {
            get {
                return this.quadrantField;
            }
            set {
                this.quadrantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quadrantSpecified {
            get {
                return this.quadrantFieldSpecified;
            }
            set {
                this.quadrantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long harmonic {
            get {
                return this.harmonicField;
            }
            set {
                this.harmonicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool harmonicSpecified {
            get {
                return this.harmonicFieldSpecified;
            }
            set {
                this.harmonicFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum timeSpan {
        
        /// <remarks/>
        specifiedStartStop,
        
        /// <remarks/>
        instantaneous,
        
        /// <remarks/>
        perCycle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum durationDescription {
        
        /// <remarks/>
        cycle,
        
        /// <remarks/>
        minute,
        
        /// <remarks/>
        hour,
        
        /// <remarks/>
        day,
        
        /// <remarks/>
        week,
        
        /// <remarks/>
        month,
        
        /// <remarks/>
        year,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class materialManagementAssembly : mspObject {
        
        private string unitCodeField;
        
        private string unDescrField;
        
        private float unMatCostField;
        
        private bool unMatCostFieldSpecified;
        
        private unType unTypeField;
        
        private bool unTypeFieldSpecified;
        
        private CPR[] cPRListField;
        
        private materialComponent[] materialComponentListField;
        
        private laborComponent[] laborComponentListField;
        
        /// <remarks/>
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string unDescr {
            get {
                return this.unDescrField;
            }
            set {
                this.unDescrField = value;
            }
        }
        
        /// <remarks/>
        public float unMatCost {
            get {
                return this.unMatCostField;
            }
            set {
                this.unMatCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unMatCostSpecified {
            get {
                return this.unMatCostFieldSpecified;
            }
            set {
                this.unMatCostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unType unType {
            get {
                return this.unTypeField;
            }
            set {
                this.unTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unTypeSpecified {
            get {
                return this.unTypeFieldSpecified;
            }
            set {
                this.unTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CPR[] CPRList {
            get {
                return this.cPRListField;
            }
            set {
                this.cPRListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public materialComponent[] materialComponentList {
            get {
                return this.materialComponentListField;
            }
            set {
                this.materialComponentListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public laborComponent[] laborComponentList {
            get {
                return this.laborComponentListField;
            }
            set {
                this.laborComponentListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum unType {
        
        /// <remarks/>
        Anc,
        
        /// <remarks/>
        Cnd,
        
        /// <remarks/>
        Guy,
        
        /// <remarks/>
        OhA,
        
        /// <remarks/>
        OhP,
        
        /// <remarks/>
        OhS,
        
        /// <remarks/>
        OhT,
        
        /// <remarks/>
        OH,
        
        /// <remarks/>
        Pol,
        
        /// <remarks/>
        Sub,
        
        /// <remarks/>
        UgA,
        
        /// <remarks/>
        UgP,
        
        /// <remarks/>
        UgS,
        
        /// <remarks/>
        UgT,
        
        /// <remarks/>
        UG,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class materialComponent {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string stockNumberField;
        
        private float itemCountField;
        
        private bool itemCountFieldSpecified;
        
        private string poleVarField;
        
        private string wireVarField;
        
        private string neutVarField;
        
        private string miscVarField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string stockNumber {
            get {
                return this.stockNumberField;
            }
            set {
                this.stockNumberField = value;
            }
        }
        
        /// <remarks/>
        public float itemCount {
            get {
                return this.itemCountField;
            }
            set {
                this.itemCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemCountSpecified {
            get {
                return this.itemCountFieldSpecified;
            }
            set {
                this.itemCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string poleVar {
            get {
                return this.poleVarField;
            }
            set {
                this.poleVarField = value;
            }
        }
        
        /// <remarks/>
        public string wireVar {
            get {
                return this.wireVarField;
            }
            set {
                this.wireVarField = value;
            }
        }
        
        /// <remarks/>
        public string neutVar {
            get {
                return this.neutVarField;
            }
            set {
                this.neutVarField = value;
            }
        }
        
        /// <remarks/>
        public string miscVar {
            get {
                return this.miscVarField;
            }
            set {
                this.miscVarField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class laborComponent {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string laborCategoryIDField;
        
        private float constMHField;
        
        private bool constMHFieldSpecified;
        
        private float retireMHField;
        
        private bool retireMHFieldSpecified;
        
        private float salvageMHField;
        
        private bool salvageMHFieldSpecified;
        
        private float hotConstMHField;
        
        private bool hotConstMHFieldSpecified;
        
        private float hotRetireMHField;
        
        private bool hotRetireMHFieldSpecified;
        
        private float hotSalvageMHField;
        
        private bool hotSalvageMHFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string laborCategoryID {
            get {
                return this.laborCategoryIDField;
            }
            set {
                this.laborCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public float constMH {
            get {
                return this.constMHField;
            }
            set {
                this.constMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constMHSpecified {
            get {
                return this.constMHFieldSpecified;
            }
            set {
                this.constMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float retireMH {
            get {
                return this.retireMHField;
            }
            set {
                this.retireMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retireMHSpecified {
            get {
                return this.retireMHFieldSpecified;
            }
            set {
                this.retireMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float salvageMH {
            get {
                return this.salvageMHField;
            }
            set {
                this.salvageMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool salvageMHSpecified {
            get {
                return this.salvageMHFieldSpecified;
            }
            set {
                this.salvageMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hotConstMH {
            get {
                return this.hotConstMHField;
            }
            set {
                this.hotConstMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hotConstMHSpecified {
            get {
                return this.hotConstMHFieldSpecified;
            }
            set {
                this.hotConstMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hotRetireMH {
            get {
                return this.hotRetireMHField;
            }
            set {
                this.hotRetireMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hotRetireMHSpecified {
            get {
                return this.hotRetireMHFieldSpecified;
            }
            set {
                this.hotRetireMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hotSalvageMH {
            get {
                return this.hotSalvageMHField;
            }
            set {
                this.hotSalvageMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hotSalvageMHSpecified {
            get {
                return this.hotSalvageMHFieldSpecified;
            }
            set {
                this.hotSalvageMHFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class materialItem : mspObject {
        
        private string stockNumberField;
        
        private string stockDescrField;
        
        private string itemField;
        
        private float avgCostField;
        
        private bool avgCostFieldSpecified;
        
        private float newCostField;
        
        private bool newCostFieldSpecified;
        
        private float laborFactorField;
        
        private bool laborFactorFieldSpecified;
        
        private string materialTypeField;
        
        private materialUnits materialUnitsField;
        
        private bool materialUnitsFieldSpecified;
        
        private warehouseLocation[] warehouseLocationListField;
        
        private System.DateTime effectiveDateField;
        
        private bool effectiveDateFieldSpecified;
        
        private string materialClassField;
        
        /// <remarks/>
        public string stockNumber {
            get {
                return this.stockNumberField;
            }
            set {
                this.stockNumberField = value;
            }
        }
        
        /// <remarks/>
        public string stockDescr {
            get {
                return this.stockDescrField;
            }
            set {
                this.stockDescrField = value;
            }
        }
        
        /// <remarks/>
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public float avgCost {
            get {
                return this.avgCostField;
            }
            set {
                this.avgCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgCostSpecified {
            get {
                return this.avgCostFieldSpecified;
            }
            set {
                this.avgCostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float newCost {
            get {
                return this.newCostField;
            }
            set {
                this.newCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newCostSpecified {
            get {
                return this.newCostFieldSpecified;
            }
            set {
                this.newCostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float laborFactor {
            get {
                return this.laborFactorField;
            }
            set {
                this.laborFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool laborFactorSpecified {
            get {
                return this.laborFactorFieldSpecified;
            }
            set {
                this.laborFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string materialType {
            get {
                return this.materialTypeField;
            }
            set {
                this.materialTypeField = value;
            }
        }
        
        /// <remarks/>
        public materialUnits materialUnits {
            get {
                return this.materialUnitsField;
            }
            set {
                this.materialUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool materialUnitsSpecified {
            get {
                return this.materialUnitsFieldSpecified;
            }
            set {
                this.materialUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public warehouseLocation[] warehouseLocationList {
            get {
                return this.warehouseLocationListField;
            }
            set {
                this.warehouseLocationListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime effectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool effectiveDateSpecified {
            get {
                return this.effectiveDateFieldSpecified;
            }
            set {
                this.effectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string materialClass {
            get {
                return this.materialClassField;
            }
            set {
                this.materialClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum materialUnits {
        
        /// <remarks/>
        Feet,
        
        /// <remarks/>
        Meters,
        
        /// <remarks/>
        Inches,
        
        /// <remarks/>
        Pounds,
        
        /// <remarks/>
        Kilograms,
        
        /// <remarks/>
        Miles,
        
        /// <remarks/>
        ThousandFeet,
        
        /// <remarks/>
        Pair,
        
        /// <remarks/>
        Each,
        
        /// <remarks/>
        Hour,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        DoNotChange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class warehouseLocation {
        
        private string warehouseIDField;
        
        private string aisleField;
        
        private string binField;
        
        /// <remarks/>
        public string warehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public string aisle {
            get {
                return this.aisleField;
            }
            set {
                this.aisleField = value;
            }
        }
        
        /// <remarks/>
        public string bin {
            get {
                return this.binField;
            }
            set {
                this.binField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class loadManagementEvent : mspObject {
        
        private string substationNameField;
        
        private string feederNameField;
        
        private string feederNumberField;
        
        private long groupNameField;
        
        private bool groupNameFieldSpecified;
        
        private controlEventType controlEventTypeField;
        
        private bool controlEventTypeFieldSpecified;
        
        private float applicationRateField;
        
        private bool applicationRateFieldSpecified;
        
        private float durationField;
        
        private bool durationFieldSpecified;
        
        private float cycleTimeField;
        
        private bool cycleTimeFieldSpecified;
        
        private object itemField;
        
        private string pointIDField;
        
        private float targetField;
        
        private bool targetFieldSpecified;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        private strategy strategyField;
        
        private System.DateTime scheduleDateTimeField;
        
        private bool scheduleDateTimeFieldSpecified;
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederName {
            get {
                return this.feederNameField;
            }
            set {
                this.feederNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederNumber {
            get {
                return this.feederNumberField;
            }
            set {
                this.feederNumberField = value;
            }
        }
        
        /// <remarks/>
        public long groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool groupNameSpecified {
            get {
                return this.groupNameFieldSpecified;
            }
            set {
                this.groupNameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public controlEventType controlEventType {
            get {
                return this.controlEventTypeField;
            }
            set {
                this.controlEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlEventTypeSpecified {
            get {
                return this.controlEventTypeFieldSpecified;
            }
            set {
                this.controlEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float applicationRate {
            get {
                return this.applicationRateField;
            }
            set {
                this.applicationRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applicationRateSpecified {
            get {
                return this.applicationRateFieldSpecified;
            }
            set {
                this.applicationRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool durationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float cycleTime {
            get {
                return this.cycleTimeField;
            }
            set {
                this.cycleTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cycleTimeSpecified {
            get {
                return this.cycleTimeFieldSpecified;
            }
            set {
                this.cycleTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("controlLoad", typeof(float))]
        [System.Xml.Serialization.XmlElementAttribute("dutyCycle", typeof(long))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public string pointID {
            get {
                return this.pointIDField;
            }
            set {
                this.pointIDField = value;
            }
        }
        
        /// <remarks/>
        public float target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool targetSpecified {
            get {
                return this.targetFieldSpecified;
            }
            set {
                this.targetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public strategy strategy {
            get {
                return this.strategyField;
            }
            set {
                this.strategyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime scheduleDateTime {
            get {
                return this.scheduleDateTimeField;
            }
            set {
                this.scheduleDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scheduleDateTimeSpecified {
            get {
                return this.scheduleDateTimeFieldSpecified;
            }
            set {
                this.scheduleDateTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class strategy {
        
        private string strategyNameField;
        
        private objectRef[] applicationPointListField;
        
        /// <remarks/>
        public string strategyName {
            get {
                return this.strategyNameField;
            }
            set {
                this.strategyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("applicationPoint", IsNullable=false)]
        public objectRef[] applicationPointList {
            get {
                return this.applicationPointListField;
            }
            set {
                this.applicationPointListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class laborCategory : mspObject {
        
        private string descriptionField;
        
        private float installCostField;
        
        private bool installCostFieldSpecified;
        
        private float retireCostField;
        
        private bool retireCostFieldSpecified;
        
        private float salvageCostField;
        
        private bool salvageCostFieldSpecified;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public float installCost {
            get {
                return this.installCostField;
            }
            set {
                this.installCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool installCostSpecified {
            get {
                return this.installCostFieldSpecified;
            }
            set {
                this.installCostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float retireCost {
            get {
                return this.retireCostField;
            }
            set {
                this.retireCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retireCostSpecified {
            get {
                return this.retireCostFieldSpecified;
            }
            set {
                this.retireCostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float salvageCost {
            get {
                return this.salvageCostField;
            }
            set {
                this.salvageCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool salvageCostSpecified {
            get {
                return this.salvageCostFieldSpecified;
            }
            set {
                this.salvageCostFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class customersAttachedToDevice : mspObject {
        
        private string deviceIDField;
        
        private string deviceDescriptionField;
        
        private affectedMeter[] affectedMetersField;
        
        /// <remarks/>
        public string deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public affectedMeter[] affectedMeters {
            get {
                return this.affectedMetersField;
            }
            set {
                this.affectedMetersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class affectedMeter {
        
        private string meterNoField;
        
        private string servLocField;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class customersAffectedByOutage : mspObject {
        
        private string outageEventIDField;
        
        private affectedMeter[] affectedMetersField;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public affectedMeter[] affectedMeters {
            get {
                return this.affectedMetersField;
            }
            set {
                this.affectedMetersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class customerCall : mspObject {
        
        private string custIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string descriptionField;
        
        private string problemCodeField;
        
        private callType callTypeField;
        
        private bool callTypeFieldSpecified;
        
        private string takenByField;
        
        private priorityType callPriorityField;
        
        private bool callPriorityFieldSpecified;
        
        private outageLocation locationField;
        
        private message[] messageListField;
        
        private resolvedLevel resolvedLevelField;
        
        private bool resolvedLevelFieldSpecified;
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string problemCode {
            get {
                return this.problemCodeField;
            }
            set {
                this.problemCodeField = value;
            }
        }
        
        /// <remarks/>
        public callType callType {
            get {
                return this.callTypeField;
            }
            set {
                this.callTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callTypeSpecified {
            get {
                return this.callTypeFieldSpecified;
            }
            set {
                this.callTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string takenBy {
            get {
                return this.takenByField;
            }
            set {
                this.takenByField = value;
            }
        }
        
        /// <remarks/>
        public priorityType callPriority {
            get {
                return this.callPriorityField;
            }
            set {
                this.callPriorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callPrioritySpecified {
            get {
                return this.callPriorityFieldSpecified;
            }
            set {
                this.callPriorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public outageLocation location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public message[] messageList {
            get {
                return this.messageListField;
            }
            set {
                this.messageListField = value;
            }
        }
        
        /// <remarks/>
        public resolvedLevel resolvedLevel {
            get {
                return this.resolvedLevelField;
            }
            set {
                this.resolvedLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolvedLevelSpecified {
            get {
                return this.resolvedLevelFieldSpecified;
            }
            set {
                this.resolvedLevelFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class crewActionEvent : mspObject {
        
        private string outageEventIDField;
        
        private string requestedCrewIDField;
        
        private string assignedCrewIDField;
        
        private crewAction crewActionField;
        
        private bool crewActionFieldSpecified;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public string requestedCrewID {
            get {
                return this.requestedCrewIDField;
            }
            set {
                this.requestedCrewIDField = value;
            }
        }
        
        /// <remarks/>
        public string assignedCrewID {
            get {
                return this.assignedCrewIDField;
            }
            set {
                this.assignedCrewIDField = value;
            }
        }
        
        /// <remarks/>
        public crewAction crewAction {
            get {
                return this.crewActionField;
            }
            set {
                this.crewActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crewActionSpecified {
            get {
                return this.crewActionFieldSpecified;
            }
            set {
                this.crewActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum crewAction {
        
        /// <remarks/>
        Request,
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Declined,
        
        /// <remarks/>
        Released,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class equipment : mspObject {
        
        private string equipmentTypeField;
        
        /// <remarks/>
        public string equipmentType {
            get {
                return this.equipmentTypeField;
            }
            set {
                this.equipmentTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class employee : mspObject {
        
        private string employeeNameField;
        
        private contactInfo contactInfoField;
        
        private bool isEmployeeField;
        
        private bool isEmployeeFieldSpecified;
        
        private string skillTypeField;
        
        /// <remarks/>
        public string employeeName {
            get {
                return this.employeeNameField;
            }
            set {
                this.employeeNameField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool isEmployee {
            get {
                return this.isEmployeeField;
            }
            set {
                this.isEmployeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isEmployeeSpecified {
            get {
                return this.isEmployeeFieldSpecified;
            }
            set {
                this.isEmployeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string skillType {
            get {
                return this.skillTypeField;
            }
            set {
                this.skillTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(truck))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class vehicle : mspObject {
        
        private string nameField;
        
        private string aVLIDField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string AVLID {
            get {
                return this.aVLIDField;
            }
            set {
                this.aVLIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class truck : vehicle {
        
        private string truckTypeField;
        
        private contactInfo contactInfoField;
        
        private bool isCompanyOwnedField;
        
        private bool isCompanyOwnedFieldSpecified;
        
        /// <remarks/>
        public string truckType {
            get {
                return this.truckTypeField;
            }
            set {
                this.truckTypeField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool isCompanyOwned {
            get {
                return this.isCompanyOwnedField;
            }
            set {
                this.isCompanyOwnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCompanyOwnedSpecified {
            get {
                return this.isCompanyOwnedFieldSpecified;
            }
            set {
                this.isCompanyOwnedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class crew : mspObject {
        
        private string foremanField;
        
        private contactInfo contactInfoField;
        
        private bool isForeignField;
        
        private bool isForeignFieldSpecified;
        
        private string baseLocationField;
        
        private string crewTypeField;
        
        private truck[] truckListField;
        
        private employee[] employeeListField;
        
        private equipment[] equipmentListField;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        /// <remarks/>
        public string foreman {
            get {
                return this.foremanField;
            }
            set {
                this.foremanField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool isForeign {
            get {
                return this.isForeignField;
            }
            set {
                this.isForeignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isForeignSpecified {
            get {
                return this.isForeignFieldSpecified;
            }
            set {
                this.isForeignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string baseLocation {
            get {
                return this.baseLocationField;
            }
            set {
                this.baseLocationField = value;
            }
        }
        
        /// <remarks/>
        public string crewType {
            get {
                return this.crewTypeField;
            }
            set {
                this.crewTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public truck[] truckList {
            get {
                return this.truckListField;
            }
            set {
                this.truckListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public employee[] employeeList {
            get {
                return this.employeeListField;
            }
            set {
                this.employeeListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public equipment[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                this.equipmentListField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class connectDisconnectList : mspObject {
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private CDCustomer[] cDListField;
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CDCustomer[] CDList {
            get {
                return this.cDListField;
            }
            set {
                this.cDListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class CDCustomer {
        
        private string custIDField;
        
        private string servLocField;
        
        private string meterIDField;
        
        private loadActionCode loadActionCodeField;
        
        private bool loadActionCodeFieldSpecified;
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public loadActionCode loadActionCode {
            get {
                return this.loadActionCodeField;
            }
            set {
                this.loadActionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadActionCodeSpecified {
            get {
                return this.loadActionCodeFieldSpecified;
            }
            set {
                this.loadActionCodeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class connectDisconnectEvent : mspObject {
        
        private string servLocField;
        
        private string custIDField;
        
        private string gridLocationField;
        
        private string accountNumberField;
        
        private string meterIDField;
        
        private loadActionCode loadActionCodeField;
        
        private bool loadActionCodeFieldSpecified;
        
        private float powerLimitationValueField;
        
        private bool powerLimitationValueFieldSpecified;
        
        private powerLimitationUnits powerLimitationUnitsField;
        
        private bool powerLimitationUnitsFieldSpecified;
        
        private reasonCode reasonCodeField;
        
        private bool reasonCodeFieldSpecified;
        
        private float amountDueField;
        
        private bool amountDueFieldSpecified;
        
        private string meterNoField;
        
        private string billingTermsField;
        
        /// <remarks/>
        public string servLoc {
            get {
                return this.servLocField;
            }
            set {
                this.servLocField = value;
            }
        }
        
        /// <remarks/>
        public string custID {
            get {
                return this.custIDField;
            }
            set {
                this.custIDField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public loadActionCode loadActionCode {
            get {
                return this.loadActionCodeField;
            }
            set {
                this.loadActionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadActionCodeSpecified {
            get {
                return this.loadActionCodeFieldSpecified;
            }
            set {
                this.loadActionCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float powerLimitationValue {
            get {
                return this.powerLimitationValueField;
            }
            set {
                this.powerLimitationValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerLimitationValueSpecified {
            get {
                return this.powerLimitationValueFieldSpecified;
            }
            set {
                this.powerLimitationValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public powerLimitationUnits powerLimitationUnits {
            get {
                return this.powerLimitationUnitsField;
            }
            set {
                this.powerLimitationUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerLimitationUnitsSpecified {
            get {
                return this.powerLimitationUnitsFieldSpecified;
            }
            set {
                this.powerLimitationUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public reasonCode reasonCode {
            get {
                return this.reasonCodeField;
            }
            set {
                this.reasonCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool reasonCodeSpecified {
            get {
                return this.reasonCodeFieldSpecified;
            }
            set {
                this.reasonCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float amountDue {
            get {
                return this.amountDueField;
            }
            set {
                this.amountDueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool amountDueSpecified {
            get {
                return this.amountDueFieldSpecified;
            }
            set {
                this.amountDueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string billingTerms {
            get {
                return this.billingTermsField;
            }
            set {
                this.billingTermsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum powerLimitationUnits {
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        kWh,
        
        /// <remarks/>
        A,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum reasonCode {
        
        /// <remarks/>
        NonPayment,
        
        /// <remarks/>
        ServiceInactive,
        
        /// <remarks/>
        PaymentAgreement,
        
        /// <remarks/>
        PaymentReceived,
        
        /// <remarks/>
        NewCustomer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class callBackList : mspObject {
        
        private string outageEventIDField;
        
        private outageStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private string outageDescriptionField;
        
        private outageCustomer[] outageCustomerListField;
        
        private message messageField;
        
        private string callBackListTypeField;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public outageStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string outageDescription {
            get {
                return this.outageDescriptionField;
            }
            set {
                this.outageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageCustomer[] outageCustomerList {
            get {
                return this.outageCustomerListField;
            }
            set {
                this.outageCustomerListField = value;
            }
        }
        
        /// <remarks/>
        public message message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string callBackListType {
            get {
                return this.callBackListTypeField;
            }
            set {
                this.callBackListTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class billingAccountLoad : mspObject {
        
        private string accountNumberField;
        
        private eaLoc eaLocField;
        
        private string substationField;
        
        private string feederField;
        
        private phaseCd phaseCdField;
        
        private bool phaseCdFieldSpecified;
        
        private float kwhUseField;
        
        private bool kwhUseFieldSpecified;
        
        private long demandField;
        
        private bool demandFieldSpecified;
        
        private float hpField;
        
        private bool hpFieldSpecified;
        
        private long kvarDemandField;
        
        private bool kvarDemandFieldSpecified;
        
        private long stLiteKwhField;
        
        private bool stLiteKwhFieldSpecified;
        
        private string meterNoField;
        
        private string servTypeField;
        
        private string revenueClassField;
        
        private float kwhAdjField;
        
        private bool kwhAdjFieldSpecified;
        
        private long kwAdjField;
        
        private bool kwAdjFieldSpecified;
        
        private long xfmrKvaField;
        
        private bool xfmrKvaFieldSpecified;
        
        private string gLCodeField;
        
        private string zoneField;
        
        private PointType mapLocationField;
        
        private string gridLocationField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCd phaseCd {
            get {
                return this.phaseCdField;
            }
            set {
                this.phaseCdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCdSpecified {
            get {
                return this.phaseCdFieldSpecified;
            }
            set {
                this.phaseCdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kwhUse {
            get {
                return this.kwhUseField;
            }
            set {
                this.kwhUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwhUseSpecified {
            get {
                return this.kwhUseFieldSpecified;
            }
            set {
                this.kwhUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long demand {
            get {
                return this.demandField;
            }
            set {
                this.demandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool demandSpecified {
            get {
                return this.demandFieldSpecified;
            }
            set {
                this.demandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hp {
            get {
                return this.hpField;
            }
            set {
                this.hpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hpSpecified {
            get {
                return this.hpFieldSpecified;
            }
            set {
                this.hpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long kvarDemand {
            get {
                return this.kvarDemandField;
            }
            set {
                this.kvarDemandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvarDemandSpecified {
            get {
                return this.kvarDemandFieldSpecified;
            }
            set {
                this.kvarDemandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long stLiteKwh {
            get {
                return this.stLiteKwhField;
            }
            set {
                this.stLiteKwhField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stLiteKwhSpecified {
            get {
                return this.stLiteKwhFieldSpecified;
            }
            set {
                this.stLiteKwhFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string servType {
            get {
                return this.servTypeField;
            }
            set {
                this.servTypeField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public float kwhAdj {
            get {
                return this.kwhAdjField;
            }
            set {
                this.kwhAdjField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwhAdjSpecified {
            get {
                return this.kwhAdjFieldSpecified;
            }
            set {
                this.kwhAdjFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long kwAdj {
            get {
                return this.kwAdjField;
            }
            set {
                this.kwAdjField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwAdjSpecified {
            get {
                return this.kwAdjFieldSpecified;
            }
            set {
                this.kwAdjFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long xfmrKva {
            get {
                return this.xfmrKvaField;
            }
            set {
                this.xfmrKvaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xfmrKvaSpecified {
            get {
                return this.xfmrKvaFieldSpecified;
            }
            set {
                this.xfmrKvaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string gLCode {
            get {
                return this.gLCodeField;
            }
            set {
                this.gLCodeField = value;
            }
        }
        
        /// <remarks/>
        public string zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
        
        /// <remarks/>
        public PointType mapLocation {
            get {
                return this.mapLocationField;
            }
            set {
                this.mapLocationField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ppmStatus {
        
        private meterStatus meterStatusField;
        
        private bool meterStatusFieldSpecified;
        
        private errorObject errorObjectField;
        
        private remainingBalance remainingBalanceField;
        
        /// <remarks/>
        public meterStatus meterStatus {
            get {
                return this.meterStatusField;
            }
            set {
                this.meterStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterStatusSpecified {
            get {
                return this.meterStatusFieldSpecified;
            }
            set {
                this.meterStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public errorObject errorObject {
            get {
                return this.errorObjectField;
            }
            set {
                this.errorObjectField = value;
            }
        }
        
        /// <remarks/>
        public remainingBalance remainingBalance {
            get {
                return this.remainingBalanceField;
            }
            set {
                this.remainingBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum meterStatus {
        
        /// <remarks/>
        connected,
        
        /// <remarks/>
        disconnected,
        
        /// <remarks/>
        connectedOverride,
        
        /// <remarks/>
        disconnectedOverride,
        
        /// <remarks/>
        onHold,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class errorObject {
        
        private string objectIDField;
        
        private string errorStringField;
        
        private string nounTypeField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorString {
            get {
                return this.errorStringField;
            }
            set {
                this.errorStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nounType {
            get {
                return this.nounTypeField;
            }
            set {
                this.nounTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class domainNameChange {
        
        private string domainNameField;
        
        private string oldDomainNameField;
        
        private domainNameAction actionField;
        
        /// <remarks/>
        public string domainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public string oldDomainName {
            get {
                return this.oldDomainNameField;
            }
            set {
                this.oldDomainNameField = value;
            }
        }
        
        /// <remarks/>
        public domainNameAction action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum domainNameAction {
        
        /// <remarks/>
        Add,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Modify,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class registrationInfo {
        
        private string registrationIDField;
        
        private string responseURLField;
        
        private string responseUserIDField;
        
        private string responsePwdField;
        
        private string mSFunctionField;
        
        private string[] methodsListField;
        
        /// <remarks/>
        public string registrationID {
            get {
                return this.registrationIDField;
            }
            set {
                this.registrationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string responseURL {
            get {
                return this.responseURLField;
            }
            set {
                this.responseURLField = value;
            }
        }
        
        /// <remarks/>
        public string responseUserID {
            get {
                return this.responseUserIDField;
            }
            set {
                this.responseUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string responsePwd {
            get {
                return this.responsePwdField;
            }
            set {
                this.responsePwdField = value;
            }
        }
        
        /// <remarks/>
        public string MSFunction {
            get {
                return this.mSFunctionField;
            }
            set {
                this.mSFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("methodName", IsNullable=false)]
        public string[] methodsList {
            get {
                return this.methodsListField;
            }
            set {
                this.methodsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class domainMember {
        
        private string codeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class historyComment {
        
        private string customerIDField;
        
        private string serviceLocationIDField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private System.DateTime logTimeField;
        
        private bool logTimeFieldSpecified;
        
        private string commentField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime logTime {
            get {
                return this.logTimeField;
            }
            set {
                this.logTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool logTimeSpecified {
            get {
                return this.logTimeFieldSpecified;
            }
            set {
                this.logTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class readingScheduleResult {
        
        private string readingScheduleIDField;
        
        private readingScheduleResultResult resultField;
        
        private string reasonField;
        
        /// <remarks/>
        public string readingScheduleID {
            get {
                return this.readingScheduleIDField;
            }
            set {
                this.readingScheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public readingScheduleResultResult result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.multispeak.org/Version_3.0")]
    public enum readingScheduleResultResult {
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Rejected,
        
        /// <remarks/>
        RejectedInPart,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class cashPayment {
        
        private tender tenderField;
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class achPayment {
        
        private checkInfo checkInfoField;
        
        private tender tenderField;
        
        /// <remarks/>
        public checkInfo checkInfo {
            get {
                return this.checkInfoField;
            }
            set {
                this.checkInfoField = value;
            }
        }
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class checkInfo {
        
        private string checkingAccountNumberField;
        
        private string bankRoutingNumberField;
        
        private string nameOnCheckField;
        
        private string checkNumberField;
        
        /// <remarks/>
        public string checkingAccountNumber {
            get {
                return this.checkingAccountNumberField;
            }
            set {
                this.checkingAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string bankRoutingNumber {
            get {
                return this.bankRoutingNumberField;
            }
            set {
                this.bankRoutingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string nameOnCheck {
            get {
                return this.nameOnCheckField;
            }
            set {
                this.nameOnCheckField = value;
            }
        }
        
        /// <remarks/>
        public string checkNumber {
            get {
                return this.checkNumberField;
            }
            set {
                this.checkNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class eCheckPayment {
        
        private checkInfo checkInfoField;
        
        private tender tenderField;
        
        /// <remarks/>
        public checkInfo checkInfo {
            get {
                return this.checkInfoField;
            }
            set {
                this.checkInfoField = value;
            }
        }
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class creditCardInfo {
        
        private string typeField;
        
        private string creditCardNumberField;
        
        private string creditCardExpDateField;
        
        private string cardVerificationValueField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string streetField;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string countryField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string creditCardNumber {
            get {
                return this.creditCardNumberField;
            }
            set {
                this.creditCardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string creditCardExpDate {
            get {
                return this.creditCardExpDateField;
            }
            set {
                this.creditCardExpDateField = value;
            }
        }
        
        /// <remarks/>
        public string cardVerificationValue {
            get {
                return this.cardVerificationValueField;
            }
            set {
                this.cardVerificationValueField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class creditCardPayment {
        
        private creditCardInfo creditCardInfoField;
        
        private tender tenderField;
        
        /// <remarks/>
        public creditCardInfo creditCardInfo {
            get {
                return this.creditCardInfoField;
            }
            set {
                this.creditCardInfoField = value;
            }
        }
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class paymentTransaction {
        
        private string accountNumberField;
        
        private string typeServiceField;
        
        private creditCardPayment[] creditCardPaymentField;
        
        private eCheckPayment[] eCheckPaymentField;
        
        private achPayment[] achPaymentField;
        
        private cashPayment[] cashPaymentField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string typeService {
            get {
                return this.typeServiceField;
            }
            set {
                this.typeServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("creditCardPayment")]
        public creditCardPayment[] creditCardPayment {
            get {
                return this.creditCardPaymentField;
            }
            set {
                this.creditCardPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("eCheckPayment")]
        public eCheckPayment[] eCheckPayment {
            get {
                return this.eCheckPaymentField;
            }
            set {
                this.eCheckPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("achPayment")]
        public achPayment[] achPayment {
            get {
                return this.achPaymentField;
            }
            set {
                this.achPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cashPayment")]
        public cashPayment[] cashPayment {
            get {
                return this.cashPaymentField;
            }
            set {
                this.cashPaymentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class ch {
        
        private int idxField;
        
        private string dField;
        
        /// <remarks/>
        public int idx {
            get {
                return this.idxField;
            }
            set {
                this.idxField = value;
            }
        }
        
        /// <remarks/>
        public string d {
            get {
                return this.dField;
            }
            set {
                this.dField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class dB {
        
        private ch[] chsField;
        
        private string csField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ch[] chs {
            get {
                return this.chsField;
            }
            set {
                this.chsField = value;
            }
        }
        
        /// <remarks/>
        public string cS {
            get {
                return this.csField;
            }
            set {
                this.csField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class endReading {
        
        private string channelIndexField;
        
        private float readingField;
        
        private bool readingFieldSpecified;
        
        private System.DateTime readingDateField;
        
        private bool readingDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string channelIndex {
            get {
                return this.channelIndexField;
            }
            set {
                this.channelIndexField = value;
            }
        }
        
        /// <remarks/>
        public float reading {
            get {
                return this.readingField;
            }
            set {
                this.readingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readingSpecified {
            get {
                return this.readingFieldSpecified;
            }
            set {
                this.readingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime readingDate {
            get {
                return this.readingDateField;
            }
            set {
                this.readingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readingDateSpecified {
            get {
                return this.readingDateFieldSpecified;
            }
            set {
                this.readingDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class intervalBlock {
        
        private string profileIDField;
        
        private string meterIDField;
        
        private string meterNoField;
        
        private string serviceTypeField;
        
        private string utilityField;
        
        private endReading[] endReadingListField;
        
        private System.DateTime logTimeField;
        
        private bool logTimeFieldSpecified;
        
        private System.DateTime intervalStartField;
        
        private bool intervalStartFieldSpecified;
        
        private dB dbField;
        
        /// <remarks/>
        public string profileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public string serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public endReading[] endReadingList {
            get {
                return this.endReadingListField;
            }
            set {
                this.endReadingListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime logTime {
            get {
                return this.logTimeField;
            }
            set {
                this.logTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool logTimeSpecified {
            get {
                return this.logTimeFieldSpecified;
            }
            set {
                this.logTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime intervalStart {
            get {
                return this.intervalStartField;
            }
            set {
                this.intervalStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intervalStartSpecified {
            get {
                return this.intervalStartFieldSpecified;
            }
            set {
                this.intervalStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public dB dB {
            get {
                return this.dbField;
            }
            set {
                this.dbField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class intervalChannel {
        
        private string indexField;
        
        private string fieldNameField;
        
        private string fieldDescriptionField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fieldDescription {
            get {
                return this.fieldDescriptionField;
            }
            set {
                this.fieldDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class intervalProfile {
        
        private string nameField;
        
        private float intervalLengthField;
        
        private bool intervalLengthFieldSpecified;
        
        private intervalChannel[] channelsField;
        
        private string profileIDField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public float intervalLength {
            get {
                return this.intervalLengthField;
            }
            set {
                this.intervalLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intervalLengthSpecified {
            get {
                return this.intervalLengthFieldSpecified;
            }
            set {
                this.intervalLengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("channel", IsNullable=false)]
        public intervalChannel[] channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string profileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public partial class intervalData {
        
        private string statusDelimiterField;
        
        private string intervalDelimiterField;
        
        private string commentField;
        
        private intervalProfile[] profilesField;
        
        private intervalBlock[] blocksField;
        
        /// <remarks/>
        public string statusDelimiter {
            get {
                return this.statusDelimiterField;
            }
            set {
                this.statusDelimiterField = value;
            }
        }
        
        /// <remarks/>
        public string intervalDelimiter {
            get {
                return this.intervalDelimiterField;
            }
            set {
                this.intervalDelimiterField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("profile", IsNullable=false)]
        public intervalProfile[] profiles {
            get {
                return this.profilesField;
            }
            set {
                this.profilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("block", IsNullable=false)]
        public intervalBlock[] blocks {
            get {
                return this.blocksField;
            }
            set {
                this.blocksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2552.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_3.0")]
    public enum capacitorSwitchStatus {
        
        /// <remarks/>
        Connected,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        InTransition,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void IntervalDataNotificationCompletedEventHandler(object sender, IntervalDataNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntervalDataNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IntervalDataNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void UsageMonitoringNotificationCompletedEventHandler(object sender, UsageMonitoringNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsageMonitoringNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsageMonitoringNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void PowerFactorManagementEventNotificationCompletedEventHandler(object sender, PowerFactorManagementEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PowerFactorManagementEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PowerFactorManagementEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetSubstationNamesCompletedEventHandler(object sender, GetSubstationNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubstationNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubstationNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetDownlineCircuitElementsCompletedEventHandler(object sender, GetDownlineCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownlineCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownlineCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetUplineCircuitElementsCompletedEventHandler(object sender, GetUplineCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUplineCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUplineCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetChildCircuitElementsCompletedEventHandler(object sender, GetChildCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetParentCircuitElementsCompletedEventHandler(object sender, GetParentCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllCircuitElementsCompletedEventHandler(object sender, GetAllCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetModifiedCircuitElementsCompletedEventHandler(object sender, GetModifiedCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetDownlineMeterConnectivityCompletedEventHandler(object sender, GetDownlineMeterConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownlineMeterConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownlineMeterConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetUplineMeterConnectivityCompletedEventHandler(object sender, GetUplineMeterConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUplineMeterConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUplineMeterConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetSiblingMeterConnectivityCompletedEventHandler(object sender, GetSiblingMeterConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiblingMeterConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiblingMeterConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void UnenrollPPMCustomerCompletedEventHandler(object sender, UnenrollPPMCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnenrollPPMCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnenrollPPMCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void EstablishIHDGroupCompletedEventHandler(object sender, EstablishIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DeleteIHDGroupCompletedEventHandler(object sender, DeleteIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CommitPaymentTransactionCompletedEventHandler(object sender, CommitPaymentTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitPaymentTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitPaymentTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public paymentTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((paymentTransaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ChargeableDeviceChangedNotificationCompletedEventHandler(object sender, ChargeableDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeableDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeableDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void LMDeviceAddNotificationCompletedEventHandler(object sender, LMDeviceAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void LMDeviceChangedNotificationCompletedEventHandler(object sender, LMDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void LMDeviceExchangeNotificationCompletedEventHandler(object sender, LMDeviceExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void LMDeviceInstalledNotificationCompletedEventHandler(object sender, LMDeviceInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void LMDeviceRemoveNotificationCompletedEventHandler(object sender, LMDeviceRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void LMDeviceRetireNotificationCompletedEventHandler(object sender, LMDeviceRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void AdjustPPMBalanceCompletedEventHandler(object sender, AdjustPPMBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustPPMBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustPPMBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ServiceLocationChangedNotificationCompletedEventHandler(object sender, ServiceLocationChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceLocationChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceLocationChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterChangedNotificationCompletedEventHandler(object sender, MeterChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterRemoveNotificationCompletedEventHandler(object sender, MeterRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAAnalogChangedNotificationCompletedEventHandler(object sender, SCADAAnalogChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAAnalogChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAAnalogChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAStatusChangedNotificationCompletedEventHandler(object sender, SCADAStatusChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAStatusChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAStatusChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAPointChangedNotificationCompletedEventHandler(object sender, SCADAPointChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAPointChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAPointChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAPointChangedNotificationForAnalogCompletedEventHandler(object sender, SCADAPointChangedNotificationForAnalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAPointChangedNotificationForAnalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAPointChangedNotificationForAnalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAPointChangedNotificationForStatusCompletedEventHandler(object sender, SCADAPointChangedNotificationForStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAPointChangedNotificationForStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAPointChangedNotificationForStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAAnalogChangedNotificationByPointIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAAnalogChangedNotificationForPowerCompletedEventHandler(object sender, SCADAAnalogChangedNotificationForPowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAAnalogChangedNotificationForPowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAAnalogChangedNotificationForPowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAAnalogChangedNotificationForVoltageCompletedEventHandler(object sender, SCADAAnalogChangedNotificationForVoltageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAAnalogChangedNotificationForVoltageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAAnalogChangedNotificationForVoltageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void SCADAStatusChangedNotificationByPointIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterRetireNotificationCompletedEventHandler(object sender, MeterRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterAddNotificationCompletedEventHandler(object sender, MeterAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterExchangeNotificationCompletedEventHandler(object sender, MeterExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CustomersAffectedByOutageNotificationCompletedEventHandler(object sender, CustomersAffectedByOutageNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomersAffectedByOutageNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomersAffectedByOutageNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterConnectivityNotificationCompletedEventHandler(object sender, MeterConnectivityNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterConnectivityNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterConnectivityNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void EndDeviceShipmentNotificationCompletedEventHandler(object sender, EndDeviceShipmentNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndDeviceShipmentNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndDeviceShipmentNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void FormattedBlockNotificationCompletedEventHandler(object sender, FormattedBlockNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormattedBlockNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormattedBlockNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ODEventNotificationCompletedEventHandler(object sender, ODEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ODEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ODEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ODDeviceChangedNotificationCompletedEventHandler(object sender, ODDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ODDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ODDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDDeviceAddNotificationCompletedEventHandler(object sender, CDDeviceAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDDeviceChangedNotificationCompletedEventHandler(object sender, CDDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDDeviceExchangeNotificationCompletedEventHandler(object sender, CDDeviceExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDDeviceRemoveNotificationCompletedEventHandler(object sender, CDDeviceRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDDeviceInstalledNotificationCompletedEventHandler(object sender, CDDeviceInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDDeviceRetireNotificationCompletedEventHandler(object sender, CDDeviceRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void HistoryLogChangedNotificationCompletedEventHandler(object sender, HistoryLogChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HistoryLogChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HistoryLogChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void LoadProfileChangedNotificationCompletedEventHandler(object sender, LoadProfileChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProfileChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProfileChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterTestTransactionCompletedEventHandler(object sender, MeterTestTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterTestTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterTestTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterInstalledNotificationCompletedEventHandler(object sender, MeterInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ModifyCBDataForCustomerCompletedEventHandler(object sender, ModifyCBDataForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCBDataForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCBDataForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ModifyCBDataForServiceLocationCompletedEventHandler(object sender, ModifyCBDataForServiceLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCBDataForServiceLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCBDataForServiceLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ModifyCBDataForMeterCompletedEventHandler(object sender, ModifyCBDataForMeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCBDataForMeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCBDataForMeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ReadingChangedNotificationCompletedEventHandler(object sender, ReadingChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadingChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadingChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayAddNotificationCompletedEventHandler(object sender, InHomeDisplayAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayChangedNotificationCompletedEventHandler(object sender, InHomeDisplayChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayExchangeNotificationCompletedEventHandler(object sender, InHomeDisplayExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayInstalledNotificationCompletedEventHandler(object sender, InHomeDisplayInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayRemoveNotificationCompletedEventHandler(object sender, InHomeDisplayRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayRetireNotificationCompletedEventHandler(object sender, InHomeDisplayRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDStateNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDStatesNotificationCompletedEventHandler(object sender, CDStatesNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDStatesNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDStatesNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ReadingScheduleResultNotificationCompletedEventHandler(object sender, ReadingScheduleResultNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadingScheduleResultNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadingScheduleResultNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterEventNotificationCompletedEventHandler(object sender, MeterEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterBaseExchangeNotificationCompletedEventHandler(object sender, MeterBaseExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterBaseInstalledNotificationCompletedEventHandler(object sender, MeterBaseInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterBaseChangedNotificationCompletedEventHandler(object sender, MeterBaseChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterBaseRemoveNotificationCompletedEventHandler(object sender, MeterBaseRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterBaseRetireNotificationCompletedEventHandler(object sender, MeterBaseRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void MeterBaseAddNotificationCompletedEventHandler(object sender, MeterBaseAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ConnectDisconnectChangedNotificationCompletedEventHandler(object sender, ConnectDisconnectChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectDisconnectChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectDisconnectChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetFormattedBlockTemplatesCompletedEventHandler(object sender, GetFormattedBlockTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormattedBlockTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormattedBlockTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlockTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlockTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingsByMeterNoListFormattedBlockCompletedEventHandler(object sender, GetLatestReadingsByMeterNoListFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsByMeterNoListFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsByMeterNoListFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingByMeterIDAndFieldNameIntervalDataCompletedEventHandler(object sender, GetReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByDateIntervalDataCompletedEventHandler(object sender, GetReadingsByDateIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByDateAndFieldNameIntervalDataCompletedEventHandler(object sender, GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByBillingCycleIntervalDataCompletedEventHandler(object sender, GetReadingsByBillingCycleIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByBillingCycleIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByBillingCycleIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingByMeterIDIntervalDataCompletedEventHandler(object sender, GetReadingByMeterIDIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingByMeterIDIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingByMeterIDIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingByMeterListAndFieldNameIntervalDataCompletedEventHandler(object sender, GetLatestReadingByMeterListAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByMeterListAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByMeterListAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventHandler(object sender, GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingByFieldNameIntervalDataCompletedEventHandler(object sender, GetLatestReadingByFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventHandler(object sender, GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMetersByMeterConnectionStatusCompletedEventHandler(object sender, GetMetersByMeterConnectionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByMeterConnectionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByMeterConnectionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InsertInHomeDisplayInIHDGroupCompletedEventHandler(object sender, InsertInHomeDisplayInIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInHomeDisplayInIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInHomeDisplayInIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void RemoveInHomeDisplayFromIHDGroupCompletedEventHandler(object sender, RemoveInHomeDisplayFromIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveInHomeDisplayFromIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveInHomeDisplayFromIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateLoadManagementEventCompletedEventHandler(object sender, InitiateLoadManagementEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateLoadManagementEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateLoadManagementEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateLoadManagementEventsCompletedEventHandler(object sender, InitiateLoadManagementEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateLoadManagementEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateLoadManagementEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiatePowerFactorManagementEventCompletedEventHandler(object sender, InitiatePowerFactorManagementEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiatePowerFactorManagementEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiatePowerFactorManagementEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiatePlannedOutageCompletedEventHandler(object sender, InitiatePlannedOutageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiatePlannedOutageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiatePlannedOutageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CancelPlannedOutageCompletedEventHandler(object sender, CancelPlannedOutageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPlannedOutageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPlannedOutageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateUsageMonitoringCompletedEventHandler(object sender, InitiateUsageMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateUsageMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateUsageMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CancelUsageMonitoringCompletedEventHandler(object sender, CancelUsageMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelUsageMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelUsageMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateDisconnectedStatusCompletedEventHandler(object sender, InitiateDisconnectedStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDisconnectedStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDisconnectedStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CancelDisconnectedStatusCompletedEventHandler(object sender, CancelDisconnectedStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDisconnectedStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDisconnectedStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateMeterReadByMeterNumberCompletedEventHandler(object sender, InitiateMeterReadByMeterNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadByMeterNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadByMeterNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void EstablishMeterGroupCompletedEventHandler(object sender, EstablishMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DeleteMeterGroupCompletedEventHandler(object sender, DeleteMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InsertMeterInMeterGroupCompletedEventHandler(object sender, InsertMeterInMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMeterInMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMeterInMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void RemoveMetersFromMeterGroupCompletedEventHandler(object sender, RemoveMetersFromMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMetersFromMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMetersFromMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateGroupMeterReadCompletedEventHandler(object sender, InitiateGroupMeterReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateGroupMeterReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateGroupMeterReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ScheduleGroupMeterReadCompletedEventHandler(object sender, ScheduleGroupMeterReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScheduleGroupMeterReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScheduleGroupMeterReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateMeterReadByMeterNoAndTypeCompletedEventHandler(object sender, InitiateMeterReadByMeterNoAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadByMeterNoAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadByMeterNoAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateMeterReadByObjectCompletedEventHandler(object sender, InitiateMeterReadByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateOutageDetectionEventRequestCompletedEventHandler(object sender, InitiateOutageDetectionEventRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateOutageDetectionEventRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateOutageDetectionEventRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateODEventRequestByObjectCompletedEventHandler(object sender, InitiateODEventRequestByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateODEventRequestByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateODEventRequestByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateODMonitoringRequestByObjectCompletedEventHandler(object sender, InitiateODMonitoringRequestByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateODMonitoringRequestByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateODMonitoringRequestByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DisplayODMonitoringRequestsCompletedEventHandler(object sender, DisplayODMonitoringRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisplayODMonitoringRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisplayODMonitoringRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectRef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectRef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CancelODMonitoringRequestByObjectCompletedEventHandler(object sender, CancelODMonitoringRequestByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelODMonitoringRequestByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelODMonitoringRequestByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateConnectDisconnectCompletedEventHandler(object sender, InitiateConnectDisconnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateConnectDisconnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateConnectDisconnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDStateChangedNotificationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CDStatesChangedNotificationCompletedEventHandler(object sender, CDStatesChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDStatesChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDStatesChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void UpdateServiceLocationDisplaysCompletedEventHandler(object sender, UpdateServiceLocationDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateServiceLocationDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateServiceLocationDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void WriteAccountHistoryCommentsCompletedEventHandler(object sender, WriteAccountHistoryCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteAccountHistoryCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteAccountHistoryCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateCDStateRequestCompletedEventHandler(object sender, InitiateCDStateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateCDStateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateCDStateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void OutageEventChangedNotificationCompletedEventHandler(object sender, OutageEventChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutageEventChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutageEventChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateArmCDDeviceCompletedEventHandler(object sender, InitiateArmCDDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateArmCDDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateArmCDDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateEnableCDDeviceCompletedEventHandler(object sender, InitiateEnableCDDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateEnableCDDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateEnableCDDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateDisableCDDeviceCompletedEventHandler(object sender, InitiateDisableCDDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDisableCDDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDisableCDDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateDemandResetCompletedEventHandler(object sender, InitiateDemandResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDemandResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDemandResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InsertMetersInConfigurationGroupCompletedEventHandler(object sender, InsertMetersInConfigurationGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMetersInConfigurationGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMetersInConfigurationGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void RemoveMetersFromConfigurationGroupCompletedEventHandler(object sender, RemoveMetersFromConfigurationGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMetersFromConfigurationGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMetersFromConfigurationGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void EstablishSchedulesCompletedEventHandler(object sender, EstablishSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void EstablishReadingSchedulesCompletedEventHandler(object sender, EstablishReadingSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishReadingSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishReadingSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void EnableReadingScheduleCompletedEventHandler(object sender, EnableReadingScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableReadingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableReadingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DisableReadingScheduleCompletedEventHandler(object sender, DisableReadingScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableReadingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableReadingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DeleteReadingScheduleCompletedEventHandler(object sender, DeleteReadingScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReadingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReadingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateMeterReadsByFieldNameCompletedEventHandler(object sender, InitiateMeterReadsByFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadsByFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadsByFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InitiateODEventRequestByServiceLocationCompletedEventHandler(object sender, InitiateODEventRequestByServiceLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateODEventRequestByServiceLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateODEventRequestByServiceLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void ModifyODDataForOutageDetectionDeviceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void CustomerChangedNotificationCompletedEventHandler(object sender, CustomerChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void PPMMeterExchangeNotificationCompletedEventHandler(object sender, PPMMeterExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PPMMeterExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PPMMeterExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayMessageNotificationCompletedEventHandler(object sender, InHomeDisplayMessageNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayMessageNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayMessageNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void InHomeDisplayBillingMessageNotificationCompletedEventHandler(object sender, InHomeDisplayBillingMessageNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayBillingMessageNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayBillingMessageNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void EnrollPPMCustomerCompletedEventHandler(object sender, EnrollPPMCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnrollPPMCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnrollPPMCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllPropaneMetersCompletedEventHandler(object sender, GetAllPropaneMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPropaneMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPropaneMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public propaneMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((propaneMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllElectricServiceLocationsCompletedEventHandler(object sender, GetAllElectricServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllElectricServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllElectricServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public electricServiceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((electricServiceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllGasServiceLocationsCompletedEventHandler(object sender, GetAllGasServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGasServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGasServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gasServiceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gasServiceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllWaterServiceLocationsCompletedEventHandler(object sender, GetAllWaterServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllWaterServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllWaterServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public waterServiceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((waterServiceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllPropaneServiceLocationsCompletedEventHandler(object sender, GetAllPropaneServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPropaneServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPropaneServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public propaneServiceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((propaneServiceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetElectricMeterByAccountNumberCompletedEventHandler(object sender, GetElectricMeterByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetElectricMeterByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetElectricMeterByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetGasMeterByAccountNumberCompletedEventHandler(object sender, GetGasMeterByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGasMeterByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGasMeterByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetWaterMeterByAccountNumberCompletedEventHandler(object sender, GetWaterMeterByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaterMeterByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaterMeterByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetPropaneMeterByAccountNumberCompletedEventHandler(object sender, GetPropaneMeterByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropaneMeterByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropaneMeterByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllCustomersByServiceTypeCompletedEventHandler(object sender, GetAllCustomersByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomersByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomersByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetCustomerByMeterNumberAndServiceTypeCompletedEventHandler(object sender, GetCustomerByMeterNumberAndServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByMeterNumberAndServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByMeterNumberAndServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllMetersByServiceTypeCompletedEventHandler(object sender, GetAllMetersByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMetersByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMetersByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllServiceLocationsByServiceTypeCompletedEventHandler(object sender, GetAllServiceLocationsByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllServiceLocationsByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllServiceLocationsByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocations Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocations)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterByAccountNumberAndServiceTypeCompletedEventHandler(object sender, GetMeterByAccountNumberAndServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByAccountNumberAndServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByAccountNumberAndServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllCustomersCompletedEventHandler(object sender, GetAllCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetModifiedCustomersCompletedEventHandler(object sender, GetModifiedCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetModifiedServiceLocationsCompletedEventHandler(object sender, GetModifiedServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetCustomerByCustIdCompletedEventHandler(object sender, GetCustomerByCustIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByCustIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByCustIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetCustomerByMeterNoCompletedEventHandler(object sender, GetCustomerByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetCustomerByNameCompletedEventHandler(object sender, GetCustomerByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetCustomerByDBANameCompletedEventHandler(object sender, GetCustomerByDBANameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByDBANameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByDBANameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetDeviceTreeConnectivityCompletedEventHandler(object sender, GetDeviceTreeConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceTreeConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceTreeConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterConnectivityBySubstationCompletedEventHandler(object sender, GetMeterConnectivityBySubstationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterConnectivityBySubstationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterConnectivityBySubstationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetEndDeviceShipmentByShipmentIDCompletedEventHandler(object sender, GetEndDeviceShipmentByShipmentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentByShipmentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentByShipmentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetEndDeviceShipmentsByDateRangeCompletedEventHandler(object sender, GetEndDeviceShipmentsByDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentsByDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentsByDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetEndDeviceShipmentByMeterIDCompletedEventHandler(object sender, GetEndDeviceShipmentByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetEndDeviceShipmentByTransponderIDCompletedEventHandler(object sender, GetEndDeviceShipmentByTransponderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentByTransponderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentByTransponderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLPDataByMeterNumberCompletedEventHandler(object sender, GetLPDataByMeterNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPDataByMeterNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPDataByMeterNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public profileObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((profileObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterHistoryByMeterIDCompletedEventHandler(object sender, GetMeterHistoryByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterHistoryByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterHistoryByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterHistoryEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterHistoryEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterByMeterIdCompletedEventHandler(object sender, GetMeterByMeterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByMeterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByMeterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterByMeterNoCompletedEventHandler(object sender, GetMeterByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterByServLocCompletedEventHandler(object sender, GetMeterByServLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByServLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByServLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterByAccountNumberCompletedEventHandler(object sender, GetMeterByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterByCustIDCompletedEventHandler(object sender, GetMeterByCustIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByCustIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByCustIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterByAMRTypeCompletedEventHandler(object sender, GetMeterByAMRTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByAMRTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByAMRTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterGroupNamesCompletedEventHandler(object sender, GetMeterGroupNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterGroupNamesByMeterNoCompletedEventHandler(object sender, GetMeterGroupNamesByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterGroupNamesByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterGroupNamesByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterGroupMembersCompletedEventHandler(object sender, GetMeterGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetModifiedMetersCompletedEventHandler(object sender, GetModifiedMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByServiceStatusCompletedEventHandler(object sender, GetServiceLocationByServiceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByServiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByServiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByServLocCompletedEventHandler(object sender, GetServiceLocationByServLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByServLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByServLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByCustIdCompletedEventHandler(object sender, GetServiceLocationByCustIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByCustIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByCustIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByMeterNoCompletedEventHandler(object sender, GetServiceLocationByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByAccountNumberCompletedEventHandler(object sender, GetServiceLocationByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByGridLocationCompletedEventHandler(object sender, GetServiceLocationByGridLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByGridLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByGridLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByPhaseCodeCompletedEventHandler(object sender, GetServiceLocationByPhaseCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByPhaseCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByPhaseCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByLoadGroupCompletedEventHandler(object sender, GetServiceLocationByLoadGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByLoadGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByLoadGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByServiceTypeCompletedEventHandler(object sender, GetServiceLocationByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetServiceLocationByShutOffDateCompletedEventHandler(object sender, GetServiceLocationByShutOffDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByShutOffDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByShutOffDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMetersByEALocationCompletedEventHandler(object sender, GetMetersByEALocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByEALocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByEALocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMetersByFacilityIDCompletedEventHandler(object sender, GetMetersByFacilityIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByFacilityIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByFacilityIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMetersBySiteIDCompletedEventHandler(object sender, GetMetersBySiteIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersBySiteIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersBySiteIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMetersByCustomerNameCompletedEventHandler(object sender, GetMetersByCustomerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByCustomerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByCustomerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMetersByHomePhoneCompletedEventHandler(object sender, GetMetersByHomePhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByHomePhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByHomePhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMetersBySearchStringCompletedEventHandler(object sender, GetMetersBySearchStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersBySearchStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersBySearchStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetSchedulesCompletedEventHandler(object sender, GetSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public schedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((schedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetScheduleByIDCompletedEventHandler(object sender, GetScheduleByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public schedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((schedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingSchedulesCompletedEventHandler(object sender, GetReadingSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public readingSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((readingSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingScheduleByIDCompletedEventHandler(object sender, GetReadingScheduleByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingScheduleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingScheduleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public readingSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((readingSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingsByMeterNoListCompletedEventHandler(object sender, GetLatestReadingsByMeterNoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsByMeterNoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsByMeterNoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetConfigurationGroupNamesCompletedEventHandler(object sender, GetConfigurationGroupNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetConfigurationGroupNamesByMeterNoCompletedEventHandler(object sender, GetConfigurationGroupNamesByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationGroupNamesByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationGroupNamesByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetConfigurationGroupMembersCompletedEventHandler(object sender, GetConfigurationGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterGroups Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterGroups)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMeterBaseByObjectIdCompletedEventHandler(object sender, GetMeterBaseByObjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterBaseByObjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterBaseByObjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void PingURLCompletedEventHandler(object sender, PingURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetMethodsCompletedEventHandler(object sender, GetMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetDomainNamesCompletedEventHandler(object sender, GetDomainNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetDomainMembersCompletedEventHandler(object sender, GetDomainMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public domainMember[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((domainMember[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void RequestRegistrationIDCompletedEventHandler(object sender, RequestRegistrationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestRegistrationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestRegistrationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void RegisterForServiceCompletedEventHandler(object sender, RegisterForServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterForServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterForServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void UnregisterForServiceCompletedEventHandler(object sender, UnregisterForServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnregisterForServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnregisterForServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetRegistrationInfoByIDCompletedEventHandler(object sender, GetRegistrationInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public registrationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((registrationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetPublishMethodsCompletedEventHandler(object sender, GetPublishMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublishMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublishMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DomainMembersChangedNotificationCompletedEventHandler(object sender, DomainMembersChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DomainMembersChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DomainMembersChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void DomainNamesChangedNotificationCompletedEventHandler(object sender, DomainNamesChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DomainNamesChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DomainNamesChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllMetersCompletedEventHandler(object sender, GetAllMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetPPMPaymentsCompletedEventHandler(object sender, GetPPMPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPMPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPMPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public paymentTransaction[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((paymentTransaction[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetPPMBalanceAdjustmentsCompletedEventHandler(object sender, GetPPMBalanceAdjustmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPMBalanceAdjustmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPMBalanceAdjustmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ppmBalanceAdjustment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ppmBalanceAdjustment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetBillingDataCompletedEventHandler(object sender, GetBillingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public billingData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetBillingDetailCompletedEventHandler(object sender, GetBillingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public billingDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetBilledUsageCompletedEventHandler(object sender, GetBilledUsageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilledUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilledUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public billedUsage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billedUsage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllConnectDisconnectEventsByReasonCodeCompletedEventHandler(object sender, GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public connectDisconnectEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((connectDisconnectEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllInHomeDisplaysCompletedEventHandler(object sender, GetAllInHomeDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllInHomeDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllInHomeDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public readingSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((readingSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetPrePayStatusCompletedEventHandler(object sender, GetPrePayStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrePayStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrePayStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ppmStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ppmStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetChargeableDevicesByAccountNumberCompletedEventHandler(object sender, GetChargeableDevicesByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargeableDevicesByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeableDevicesByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public chargeableDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((chargeableDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAMRSupportedMetersCompletedEventHandler(object sender, GetAMRSupportedMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAMRSupportedMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAMRSupportedMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetModifiedAMRMetersCompletedEventHandler(object sender, GetModifiedAMRMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedAMRMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedAMRMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void IsAMRMeterCompletedEventHandler(object sender, IsAMRMeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAMRMeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAMRMeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAmountOfControllableLoadCompletedEventHandler(object sender, GetAmountOfControllableLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountOfControllableLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountOfControllableLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllLoadManagementDevicesCompletedEventHandler(object sender, GetAllLoadManagementDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLoadManagementDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLoadManagementDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public loadManagementDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loadManagementDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLoadManagementDeviceByMeterNumberCompletedEventHandler(object sender, GetLoadManagementDeviceByMeterNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoadManagementDeviceByMeterNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoadManagementDeviceByMeterNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public loadManagementDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loadManagementDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLoadManagementDeviceByServLocCompletedEventHandler(object sender, GetLoadManagementDeviceByServLocCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoadManagementDeviceByServLocCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoadManagementDeviceByServLocCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public loadManagementDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loadManagementDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void IsLoadManagementActiveCompletedEventHandler(object sender, IsLoadManagementActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLoadManagementActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLoadManagementActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAmountOfControlledLoadCompletedEventHandler(object sender, GetAmountOfControlledLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountOfControlledLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountOfControlledLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllSubstationLoadControlStatusesCompletedEventHandler(object sender, GetAllSubstationLoadControlStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSubstationLoadControlStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSubstationLoadControlStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public substationLoadControlStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((substationLoadControlStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByDateCompletedEventHandler(object sender, GetReadingsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterRead[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByMeterNoCompletedEventHandler(object sender, GetReadingsByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterRead[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingByMeterNoCompletedEventHandler(object sender, GetLatestReadingByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterRead Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterRead)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByBillingCycleCompletedEventHandler(object sender, GetReadingsByBillingCycleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByBillingCycleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByBillingCycleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingByMeterNumberFormattedBlockCompletedEventHandler(object sender, GetReadingByMeterNumberFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingByMeterNumberFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingByMeterNumberFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByDateFormattedBlockCompletedEventHandler(object sender, GetReadingsByDateFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetHistoryLogByMeterNoCompletedEventHandler(object sender, GetHistoryLogByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetHistoryLogsByDateCompletedEventHandler(object sender, GetHistoryLogsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetHistoryLogsByMeterNoAndEventCodeCompletedEventHandler(object sender, GetHistoryLogsByMeterNoAndEventCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogsByMeterNoAndEventCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogsByMeterNoAndEventCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetHistoryLogsByDateAndEventCodeCompletedEventHandler(object sender, GetHistoryLogsByDateAndEventCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogsByDateAndEventCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogsByDateAndEventCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestMeterReadingsByMeterGroupCompletedEventHandler(object sender, GetLatestMeterReadingsByMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestMeterReadingsByMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestMeterReadingsByMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingByMeterNoAndTypeCompletedEventHandler(object sender, GetLatestReadingByMeterNoAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByMeterNoAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByMeterNoAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingByTypeCompletedEventHandler(object sender, GetLatestReadingByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByDateAndTypeCompletedEventHandler(object sender, GetReadingsByDateAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetSupportedReadingTypesCompletedEventHandler(object sender, GetSupportedReadingTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportedReadingTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportedReadingTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByMeterNoAndTypeCompletedEventHandler(object sender, GetReadingsByMeterNoAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByMeterNoAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByMeterNoAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetLatestReadingsCompletedEventHandler(object sender, GetLatestReadingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterRead[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetReadingsByUOMAndDateCompletedEventHandler(object sender, GetReadingsByUOMAndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByUOMAndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByUOMAndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterRead[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterRead[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllOutageDetectionDevicesCompletedEventHandler(object sender, GetAllOutageDetectionDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOutageDetectionDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOutageDetectionDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetOutageDetectionDevicesByMeterNoCompletedEventHandler(object sender, GetOutageDetectionDevicesByMeterNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageDetectionDevicesByMeterNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageDetectionDevicesByMeterNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetOutageDetectionDevicesByStatusCompletedEventHandler(object sender, GetOutageDetectionDevicesByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageDetectionDevicesByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageDetectionDevicesByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetOutageDetectionDevicesByTypeCompletedEventHandler(object sender, GetOutageDetectionDevicesByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageDetectionDevicesByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageDetectionDevicesByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetOutagedODDevicesCompletedEventHandler(object sender, GetOutagedODDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutagedODDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutagedODDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetCDSupportedMetersCompletedEventHandler(object sender, GetCDSupportedMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCDSupportedMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCDSupportedMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetModifiedCDMetersCompletedEventHandler(object sender, GetModifiedCDMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedCDMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedCDMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetCDMeterStateCompletedEventHandler(object sender, GetCDMeterStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCDMeterStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCDMeterStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public loadActionCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loadActionCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetOutageEventStatusCompletedEventHandler(object sender, GetOutageEventStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageEventStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageEventStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageEventStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageEventStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetActiveOutagesCompletedEventHandler(object sender, GetActiveOutagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveOutagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveOutagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetOutageEventStatusByOutageLocationCompletedEventHandler(object sender, GetOutageEventStatusByOutageLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageEventStatusByOutageLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageEventStatusByOutageLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageEventStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageEventStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllElectricMetersCompletedEventHandler(object sender, GetAllElectricMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllElectricMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllElectricMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public electricMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((electricMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllGasMetersCompletedEventHandler(object sender, GetAllGasMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGasMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGasMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gasMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gasMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    public delegate void GetAllWaterMetersCompletedEventHandler(object sender, GetAllWaterMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2552.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllWaterMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllWaterMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public waterMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((waterMeter[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591