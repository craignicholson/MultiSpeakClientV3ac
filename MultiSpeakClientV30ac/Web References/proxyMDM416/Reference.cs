//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MultiSpeakClientV30ac.proxyMDM416 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MDM_ServerSoap", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(time))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterConditions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeometryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspCIMObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IrregularTimePoint[]))]
    public partial class MDM_Server : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private MultiSpeakMsgHeader multiSpeakMsgHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetPPMPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrderByServiceOrderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrdersByServiceLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceOrdersByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustPPMBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitPaymentTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnrollPPMCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnenrollPPMCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrePayStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterConnectivityByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterEventMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelMeterEventMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByMeterConnectionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByTransponderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCDSupportedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateThresholdMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdjustThresholdMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelThresholdMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThresholdEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterExchangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterExchangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersAffectedByOutageOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterConfigurationNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RateChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterInstallationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateInHomeDisplayBillingMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelInHomeDisplayBillingMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateHistoricalMeterReadingsByMeterIDAndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportedMeterEventCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateBillingDeterminantsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback HANPricingNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateIHDCapabilitySettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateIHDCapabilitySettingsToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateManufacturerSpecificCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateManufacturerSpecificCommandToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManufacturerSpecificCommandNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThermostatAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThermostatRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThermostatScheduleNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThermostatScheduleConfirmedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ThermostatConfigurationNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateThermostatScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateThermostatScheduleRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateThermostatConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateThermostatConfigurationRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback IHDCapabilitySettingsNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIHDGroupNamesByInHomeDisplayIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHANDeviceGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayMessageNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateInHomeDisplayMessageToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateInHomeDisplayMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateHANCommissioningOperationCompleted;
        
        private System.Threading.SendOrPostCallback HANCommissioningNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelInHomeDisplayMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelInHomeDisplayMessageToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayBillingMessageNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadingScheduleResultNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterBaseAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConnectDisconnectChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PricingTiersChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback TemperatureTiersChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCycleTiersChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceOrderChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceOrderOpenedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceOrderClosedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsageMonitoringNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMDeviceRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationByPointIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationForPowerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAAnalogChangedNotificationForVoltageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAPointChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAPointChangedNotificationForAnalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAPointChangedNotificationForStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAStatusChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCADAStatusChangedNotificationByPointIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatusChangedNotificationByPointIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnalogChangedNotificationByPointIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubstationNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownlineCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUplineCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedCircuitElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownlineMeterConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUplineMeterConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiblingMeterConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOtherMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBilledUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillingDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChargeableDevicesByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIHDGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIHDGroupNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateHANRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelHANRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateHANRegistrationStatusRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback HANRegistrationNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterHistoryByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPMBalanceAdjustmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPMCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisplayODMonitoringRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelODMonitoringRequestByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateConnectDisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStateChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStatesChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateServiceLocationDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback IntervalDataNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateLPMeterReadingsByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateCDStateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStateNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDStatesNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDemandResponseEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDemandResponseEventToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DemandResponseEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DemandResponseSetupNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDemandResponseEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDemandResponseEventStatusRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDemandResponseEventToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDemandResponseEventStatusRequestToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDemandResponseSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDemandResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateArmCDDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateEnableCDDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDisableCDDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishReadingSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableReadingSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableReadingScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReadingScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadingsByFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateODEventRequestByServiceLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllActiveOutageEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCircuitElementByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLoadManagementDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountOfControllableLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAmountOfControlledLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoadManagementDeviceByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoadManagementDeviceByServiceLocationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLoadManagementActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSubstationLoadControlStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyODDataForOutageDetectionDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback BlinkAlarmNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoltageAlarmNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceLocationChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomersAffectedByOutageNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterConnectivityNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndDeviceShipmentNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormattedBlockNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ODEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ODDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CDDeviceRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback HistoryLogChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProfileChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterTestNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MeterInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PPMMeterExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChargeableDeviceChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCBDataForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCBDataForServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyCBDataForMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadingChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback IHDMessageStatusNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback IHDMessageConfirmedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayAddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayExchangeNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayInstalledNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayRemoveNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InHomeDisplayRetireNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateHANPricingOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateHANPricingRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByGridLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByPhaseCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByLoadGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByShutOffDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByEALocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByFacilityIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersBySiteIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByCustomerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByHomePhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersBySearchStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPReadingsByMeterIDFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPReadingsByDateFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPReadingsByBillingCycleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountsByCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountByServiceLocationIDAndServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationGroupNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationGroupNamesByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingScheduleByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsByMeterIDListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterBaseByObjectIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormattedBlockTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsByMeterListFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllConnectDisconnectEventsByReasonCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportedReadingStatusCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPReadingsByMeterIDIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPReadingsByDateIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPReadingsByBillingCycleIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByBillingCycleIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingByMeterIDIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByMeterIDAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsByMeterIDListIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsByMeterListIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutageReasonChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutageReasonContainerChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutageEventChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertInHomeDisplayInIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveInHomeDisplayFromIHDGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelCriticalPeakPriceEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelCriticalPeakPriceEventToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CriticalPeakPriceEventNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateCriticalPeakPriceEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateCriticalPeakPriceEventToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateLoadManagementEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateLoadManagementEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiatePowerFactorManagementEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiatePlannedOutageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelPlannedOutageOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateUsageMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelUsageMonitoringOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateDisconnectedStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelDisconnectedStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadingsByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback EstablishHANDeviceGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoHANDeviceGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromHANDeviceGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHANDeviceGroupNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHANDeviceGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHANDeviceGroupNamesByHANDeviceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMeterInMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMetersFromMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMeterInConfigurationGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMetersFromConfigurationGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateGroupMeterReadingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScheduleGroupMeterReadingOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadingByMeterIDAndFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateMeterReadingByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateOutageDetectionEventRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateODEventRequestByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitiateODMonitoringRequestByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback PingURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestRegistrationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterForServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnregisterForServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrationInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPublishMethodsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DomainMembersChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DomainNamesChangedNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAMRSupportedMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedAMRMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAMRMeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByMeterIDListAndFieldNameIntervalDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByBillingCycleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingByMeterIDFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateFormattedBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogsByMeterIDAndEventCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryLogsByDateAndEventCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestMeterReadingsByMeterGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByMeterIDAndFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingByFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByDateAndFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportedFieldNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByMeterIDAndFieldNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReadingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllInHomeDisplaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReadingsByUOMAndDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOutageDetectionDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageDetectionDevicesByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageDetectionDevicesByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageDetectionDevicesByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutagedODDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCDSupportedMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedCDMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCDMeterStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageEventStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveOutagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutageEventStatusByOutageLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllElectricMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGasMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllWaterMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPropaneMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetElectricMetersByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGasMetersByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaterMetersByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropaneMetersByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomersByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMetersByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllServiceLocationsByServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByAccountNumberAndServiceTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedServiceLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByDBANameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceTreeConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterConnectivityBySubstationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentByShipmentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentsByDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEndDeviceShipmentByTransponderIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLPDataByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByServiceLocationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMetersByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterByCustomerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMetersByAMRTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterGroupNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterGroupNamesByMeterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeterGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetModifiedMetersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByServiceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByServiceLocationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceLocationByCustomerIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MDM_Server() {
            this.Url = global::MultiSpeakClientV30ac.Properties.Settings.Default.MultiSpeakClientV30ac_proxyMDM416_MDM_Server;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MultiSpeakMsgHeader MultiSpeakMsgHeaderValue {
            get {
                return this.multiSpeakMsgHeaderValueField;
            }
            set {
                this.multiSpeakMsgHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPPMPaymentsCompletedEventHandler GetPPMPaymentsCompleted;
        
        /// <remarks/>
        public event GetServiceOrderByServiceOrderIDCompletedEventHandler GetServiceOrderByServiceOrderIDCompleted;
        
        /// <remarks/>
        public event GetServiceOrdersByServiceLocationCompletedEventHandler GetServiceOrdersByServiceLocationCompleted;
        
        /// <remarks/>
        public event GetServiceOrdersByStatusCompletedEventHandler GetServiceOrdersByStatusCompleted;
        
        /// <remarks/>
        public event AdjustPPMBalanceCompletedEventHandler AdjustPPMBalanceCompleted;
        
        /// <remarks/>
        public event CommitPaymentTransactionCompletedEventHandler CommitPaymentTransactionCompleted;
        
        /// <remarks/>
        public event EnrollPPMCustomerCompletedEventHandler EnrollPPMCustomerCompleted;
        
        /// <remarks/>
        public event UnenrollPPMCustomerCompletedEventHandler UnenrollPPMCustomerCompleted;
        
        /// <remarks/>
        public event GetPrePayStatusCompletedEventHandler GetPrePayStatusCompleted;
        
        /// <remarks/>
        public event GetMeterConnectivityByMeterIDCompletedEventHandler GetMeterConnectivityByMeterIDCompleted;
        
        /// <remarks/>
        public event InitiateMeterEventMonitoringCompletedEventHandler InitiateMeterEventMonitoringCompleted;
        
        /// <remarks/>
        public event CancelMeterEventMonitoringCompletedEventHandler CancelMeterEventMonitoringCompleted;
        
        /// <remarks/>
        public event GetMetersByMeterConnectionStatusCompletedEventHandler GetMetersByMeterConnectionStatusCompleted;
        
        /// <remarks/>
        public event GetMeterByTransponderIDCompletedEventHandler GetMeterByTransponderIDCompleted;
        
        /// <remarks/>
        public event IsCDSupportedCompletedEventHandler IsCDSupportedCompleted;
        
        /// <remarks/>
        public event InitiateThresholdMonitoringCompletedEventHandler InitiateThresholdMonitoringCompleted;
        
        /// <remarks/>
        public event AdjustThresholdMonitoringCompletedEventHandler AdjustThresholdMonitoringCompleted;
        
        /// <remarks/>
        public event CancelThresholdMonitoringCompletedEventHandler CancelThresholdMonitoringCompleted;
        
        /// <remarks/>
        public event ThresholdEventNotificationCompletedEventHandler ThresholdEventNotificationCompleted;
        
        /// <remarks/>
        public event InitiateMeterExchangeCompletedEventHandler InitiateMeterExchangeCompleted;
        
        /// <remarks/>
        public event MeterExchangedNotificationCompletedEventHandler MeterExchangedNotificationCompleted;
        
        /// <remarks/>
        public event GetCustomersAffectedByOutageCompletedEventHandler GetCustomersAffectedByOutageCompleted;
        
        /// <remarks/>
        public event MeterConfigurationNotificationCompletedEventHandler MeterConfigurationNotificationCompleted;
        
        /// <remarks/>
        public event RateChangedNotificationCompletedEventHandler RateChangedNotificationCompleted;
        
        /// <remarks/>
        public event InitiateMeterInstallationCompletedEventHandler InitiateMeterInstallationCompleted;
        
        /// <remarks/>
        public event InitiateInHomeDisplayBillingMessageCompletedEventHandler InitiateInHomeDisplayBillingMessageCompleted;
        
        /// <remarks/>
        public event CancelInHomeDisplayBillingMessageCompletedEventHandler CancelInHomeDisplayBillingMessageCompleted;
        
        /// <remarks/>
        public event InitiateHistoricalMeterReadingsByMeterIDAndDateCompletedEventHandler InitiateHistoricalMeterReadingsByMeterIDAndDateCompleted;
        
        /// <remarks/>
        public event GetSupportedMeterEventCodesCompletedEventHandler GetSupportedMeterEventCodesCompleted;
        
        /// <remarks/>
        public event InitiateBillingDeterminantsCompletedEventHandler InitiateBillingDeterminantsCompleted;
        
        /// <remarks/>
        public event LMDeviceInstalledNotificationCompletedEventHandler LMDeviceInstalledNotificationCompleted;
        
        /// <remarks/>
        public event HANPricingNotificationCompletedEventHandler HANPricingNotificationCompleted;
        
        /// <remarks/>
        public event InitiateIHDCapabilitySettingsCompletedEventHandler InitiateIHDCapabilitySettingsCompleted;
        
        /// <remarks/>
        public event InitiateIHDCapabilitySettingsToGroupCompletedEventHandler InitiateIHDCapabilitySettingsToGroupCompleted;
        
        /// <remarks/>
        public event InitiateManufacturerSpecificCommandCompletedEventHandler InitiateManufacturerSpecificCommandCompleted;
        
        /// <remarks/>
        public event InitiateManufacturerSpecificCommandToGroupCompletedEventHandler InitiateManufacturerSpecificCommandToGroupCompleted;
        
        /// <remarks/>
        public event ManufacturerSpecificCommandNotificationCompletedEventHandler ManufacturerSpecificCommandNotificationCompleted;
        
        /// <remarks/>
        public event ThermostatAddNotificationCompletedEventHandler ThermostatAddNotificationCompleted;
        
        /// <remarks/>
        public event ThermostatRemoveNotificationCompletedEventHandler ThermostatRemoveNotificationCompleted;
        
        /// <remarks/>
        public event ThermostatScheduleNotificationCompletedEventHandler ThermostatScheduleNotificationCompleted;
        
        /// <remarks/>
        public event ThermostatScheduleConfirmedNotificationCompletedEventHandler ThermostatScheduleConfirmedNotificationCompleted;
        
        /// <remarks/>
        public event ThermostatConfigurationNotificationCompletedEventHandler ThermostatConfigurationNotificationCompleted;
        
        /// <remarks/>
        public event InitiateThermostatScheduleCompletedEventHandler InitiateThermostatScheduleCompleted;
        
        /// <remarks/>
        public event InitiateThermostatScheduleRequestCompletedEventHandler InitiateThermostatScheduleRequestCompleted;
        
        /// <remarks/>
        public event InitiateThermostatConfigurationCompletedEventHandler InitiateThermostatConfigurationCompleted;
        
        /// <remarks/>
        public event InitiateThermostatConfigurationRequestCompletedEventHandler InitiateThermostatConfigurationRequestCompleted;
        
        /// <remarks/>
        public event IHDCapabilitySettingsNotificationCompletedEventHandler IHDCapabilitySettingsNotificationCompleted;
        
        /// <remarks/>
        public event GetIHDGroupNamesByInHomeDisplayIDCompletedEventHandler GetIHDGroupNamesByInHomeDisplayIDCompleted;
        
        /// <remarks/>
        public event EstablishIHDGroupCompletedEventHandler EstablishIHDGroupCompleted;
        
        /// <remarks/>
        public event DeleteIHDGroupCompletedEventHandler DeleteIHDGroupCompleted;
        
        /// <remarks/>
        public event DeleteHANDeviceGroupCompletedEventHandler DeleteHANDeviceGroupCompleted;
        
        /// <remarks/>
        public event InHomeDisplayMessageNotificationCompletedEventHandler InHomeDisplayMessageNotificationCompleted;
        
        /// <remarks/>
        public event InitiateInHomeDisplayMessageToGroupCompletedEventHandler InitiateInHomeDisplayMessageToGroupCompleted;
        
        /// <remarks/>
        public event InitiateInHomeDisplayMessageCompletedEventHandler InitiateInHomeDisplayMessageCompleted;
        
        /// <remarks/>
        public event InitiateHANCommissioningCompletedEventHandler InitiateHANCommissioningCompleted;
        
        /// <remarks/>
        public event HANCommissioningNotificationCompletedEventHandler HANCommissioningNotificationCompleted;
        
        /// <remarks/>
        public event CancelInHomeDisplayMessageCompletedEventHandler CancelInHomeDisplayMessageCompleted;
        
        /// <remarks/>
        public event CancelInHomeDisplayMessageToGroupCompletedEventHandler CancelInHomeDisplayMessageToGroupCompleted;
        
        /// <remarks/>
        public event InHomeDisplayBillingMessageNotificationCompletedEventHandler InHomeDisplayBillingMessageNotificationCompleted;
        
        /// <remarks/>
        public event ReadingScheduleResultNotificationCompletedEventHandler ReadingScheduleResultNotificationCompleted;
        
        /// <remarks/>
        public event MeterEventNotificationCompletedEventHandler MeterEventNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseExchangeNotificationCompletedEventHandler MeterBaseExchangeNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseInstalledNotificationCompletedEventHandler MeterBaseInstalledNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseChangedNotificationCompletedEventHandler MeterBaseChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseRemoveNotificationCompletedEventHandler MeterBaseRemoveNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseRetireNotificationCompletedEventHandler MeterBaseRetireNotificationCompleted;
        
        /// <remarks/>
        public event MeterBaseAddNotificationCompletedEventHandler MeterBaseAddNotificationCompleted;
        
        /// <remarks/>
        public event ConnectDisconnectChangedNotificationCompletedEventHandler ConnectDisconnectChangedNotificationCompleted;
        
        /// <remarks/>
        public event PricingTiersChangedNotificationCompletedEventHandler PricingTiersChangedNotificationCompleted;
        
        /// <remarks/>
        public event TemperatureTiersChangedNotificationCompletedEventHandler TemperatureTiersChangedNotificationCompleted;
        
        /// <remarks/>
        public event LoadCycleTiersChangedNotificationCompletedEventHandler LoadCycleTiersChangedNotificationCompleted;
        
        /// <remarks/>
        public event ServiceOrderChangedNotificationCompletedEventHandler ServiceOrderChangedNotificationCompleted;
        
        /// <remarks/>
        public event ServiceOrderOpenedNotificationCompletedEventHandler ServiceOrderOpenedNotificationCompleted;
        
        /// <remarks/>
        public event ServiceOrderClosedNotificationCompletedEventHandler ServiceOrderClosedNotificationCompleted;
        
        /// <remarks/>
        public event UsageMonitoringNotificationCompletedEventHandler UsageMonitoringNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceAddNotificationCompletedEventHandler LMDeviceAddNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceChangedNotificationCompletedEventHandler LMDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceExchangeNotificationCompletedEventHandler LMDeviceExchangeNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceRemoveNotificationCompletedEventHandler LMDeviceRemoveNotificationCompleted;
        
        /// <remarks/>
        public event LMDeviceRetireNotificationCompletedEventHandler LMDeviceRetireNotificationCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationCompletedEventHandler SCADAAnalogChangedNotificationCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationByPointIDCompletedEventHandler SCADAAnalogChangedNotificationByPointIDCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationForPowerCompletedEventHandler SCADAAnalogChangedNotificationForPowerCompleted;
        
        /// <remarks/>
        public event SCADAAnalogChangedNotificationForVoltageCompletedEventHandler SCADAAnalogChangedNotificationForVoltageCompleted;
        
        /// <remarks/>
        public event SCADAPointChangedNotificationCompletedEventHandler SCADAPointChangedNotificationCompleted;
        
        /// <remarks/>
        public event SCADAPointChangedNotificationForAnalogCompletedEventHandler SCADAPointChangedNotificationForAnalogCompleted;
        
        /// <remarks/>
        public event SCADAPointChangedNotificationForStatusCompletedEventHandler SCADAPointChangedNotificationForStatusCompleted;
        
        /// <remarks/>
        public event SCADAStatusChangedNotificationCompletedEventHandler SCADAStatusChangedNotificationCompleted;
        
        /// <remarks/>
        public event SCADAStatusChangedNotificationByPointIDCompletedEventHandler SCADAStatusChangedNotificationByPointIDCompleted;
        
        /// <remarks/>
        public event StatusChangedNotificationByPointIDCompletedEventHandler StatusChangedNotificationByPointIDCompleted;
        
        /// <remarks/>
        public event AnalogChangedNotificationByPointIDCompletedEventHandler AnalogChangedNotificationByPointIDCompleted;
        
        /// <remarks/>
        public event GetSubstationNamesCompletedEventHandler GetSubstationNamesCompleted;
        
        /// <remarks/>
        public event GetDownlineCircuitElementsCompletedEventHandler GetDownlineCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetUplineCircuitElementsCompletedEventHandler GetUplineCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetChildCircuitElementsCompletedEventHandler GetChildCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetParentCircuitElementsCompletedEventHandler GetParentCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetAllCircuitElementsCompletedEventHandler GetAllCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetModifiedCircuitElementsCompletedEventHandler GetModifiedCircuitElementsCompleted;
        
        /// <remarks/>
        public event GetDownlineMeterConnectivityCompletedEventHandler GetDownlineMeterConnectivityCompleted;
        
        /// <remarks/>
        public event GetUplineMeterConnectivityCompletedEventHandler GetUplineMeterConnectivityCompleted;
        
        /// <remarks/>
        public event GetSiblingMeterConnectivityCompletedEventHandler GetSiblingMeterConnectivityCompleted;
        
        /// <remarks/>
        public event GetAllOtherMetersCompletedEventHandler GetAllOtherMetersCompleted;
        
        /// <remarks/>
        public event GetAllServiceLocationsCompletedEventHandler GetAllServiceLocationsCompleted;
        
        /// <remarks/>
        public event GetBilledUsageCompletedEventHandler GetBilledUsageCompleted;
        
        /// <remarks/>
        public event GetBillingDataCompletedEventHandler GetBillingDataCompleted;
        
        /// <remarks/>
        public event GetBillingDetailCompletedEventHandler GetBillingDetailCompleted;
        
        /// <remarks/>
        public event GetChargeableDevicesByAccountNumberCompletedEventHandler GetChargeableDevicesByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetIHDGroupMembersCompletedEventHandler GetIHDGroupMembersCompleted;
        
        /// <remarks/>
        public event GetIHDGroupNamesCompletedEventHandler GetIHDGroupNamesCompleted;
        
        /// <remarks/>
        public event InitiateHANRegistrationCompletedEventHandler InitiateHANRegistrationCompleted;
        
        /// <remarks/>
        public event CancelHANRegistrationCompletedEventHandler CancelHANRegistrationCompleted;
        
        /// <remarks/>
        public event InitiateHANRegistrationStatusRequestCompletedEventHandler InitiateHANRegistrationStatusRequestCompleted;
        
        /// <remarks/>
        public event HANRegistrationNotificationCompletedEventHandler HANRegistrationNotificationCompleted;
        
        /// <remarks/>
        public event GetMeterHistoryByMeterIDCompletedEventHandler GetMeterHistoryByMeterIDCompleted;
        
        /// <remarks/>
        public event GetPPMBalanceAdjustmentsCompletedEventHandler GetPPMBalanceAdjustmentsCompleted;
        
        /// <remarks/>
        public event GetPPMCustomerCompletedEventHandler GetPPMCustomerCompleted;
        
        /// <remarks/>
        public event DisplayODMonitoringRequestsCompletedEventHandler DisplayODMonitoringRequestsCompleted;
        
        /// <remarks/>
        public event CancelODMonitoringRequestByObjectCompletedEventHandler CancelODMonitoringRequestByObjectCompleted;
        
        /// <remarks/>
        public event InitiateConnectDisconnectCompletedEventHandler InitiateConnectDisconnectCompleted;
        
        /// <remarks/>
        public event CDStateChangedNotificationCompletedEventHandler CDStateChangedNotificationCompleted;
        
        /// <remarks/>
        public event CDStatesChangedNotificationCompletedEventHandler CDStatesChangedNotificationCompleted;
        
        /// <remarks/>
        public event UpdateServiceLocationDisplaysCompletedEventHandler UpdateServiceLocationDisplaysCompleted;
        
        /// <remarks/>
        public event IntervalDataNotificationCompletedEventHandler IntervalDataNotificationCompleted;
        
        /// <remarks/>
        public event InitiateLPMeterReadingsByMeterIDCompletedEventHandler InitiateLPMeterReadingsByMeterIDCompleted;
        
        /// <remarks/>
        public event InitiateCDStateRequestCompletedEventHandler InitiateCDStateRequestCompleted;
        
        /// <remarks/>
        public event CDStateNotificationCompletedEventHandler CDStateNotificationCompleted;
        
        /// <remarks/>
        public event CDStatesNotificationCompletedEventHandler CDStatesNotificationCompleted;
        
        /// <remarks/>
        public event CancelDemandResponseEventCompletedEventHandler CancelDemandResponseEventCompleted;
        
        /// <remarks/>
        public event CancelDemandResponseEventToGroupCompletedEventHandler CancelDemandResponseEventToGroupCompleted;
        
        /// <remarks/>
        public event DemandResponseEventNotificationCompletedEventHandler DemandResponseEventNotificationCompleted;
        
        /// <remarks/>
        public event DemandResponseSetupNotificationCompletedEventHandler DemandResponseSetupNotificationCompleted;
        
        /// <remarks/>
        public event InitiateDemandResponseEventCompletedEventHandler InitiateDemandResponseEventCompleted;
        
        /// <remarks/>
        public event InitiateDemandResponseEventStatusRequestCompletedEventHandler InitiateDemandResponseEventStatusRequestCompleted;
        
        /// <remarks/>
        public event InitiateDemandResponseEventToGroupCompletedEventHandler InitiateDemandResponseEventToGroupCompleted;
        
        /// <remarks/>
        public event InitiateDemandResponseEventStatusRequestToGroupCompletedEventHandler InitiateDemandResponseEventStatusRequestToGroupCompleted;
        
        /// <remarks/>
        public event InitiateDemandResponseSetupCompletedEventHandler InitiateDemandResponseSetupCompleted;
        
        /// <remarks/>
        public event InitiateDemandResetCompletedEventHandler InitiateDemandResetCompleted;
        
        /// <remarks/>
        public event InitiateArmCDDeviceCompletedEventHandler InitiateArmCDDeviceCompleted;
        
        /// <remarks/>
        public event InitiateEnableCDDeviceCompletedEventHandler InitiateEnableCDDeviceCompleted;
        
        /// <remarks/>
        public event InitiateDisableCDDeviceCompletedEventHandler InitiateDisableCDDeviceCompleted;
        
        /// <remarks/>
        public event EstablishSchedulesCompletedEventHandler EstablishSchedulesCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event EstablishReadingSchedulesCompletedEventHandler EstablishReadingSchedulesCompleted;
        
        /// <remarks/>
        public event EnableReadingSchedulesCompletedEventHandler EnableReadingSchedulesCompleted;
        
        /// <remarks/>
        public event DisableReadingScheduleCompletedEventHandler DisableReadingScheduleCompleted;
        
        /// <remarks/>
        public event DeleteReadingScheduleCompletedEventHandler DeleteReadingScheduleCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadingsByFieldNameCompletedEventHandler InitiateMeterReadingsByFieldNameCompleted;
        
        /// <remarks/>
        public event InitiateODEventRequestByServiceLocationCompletedEventHandler InitiateODEventRequestByServiceLocationCompleted;
        
        /// <remarks/>
        public event GetAllActiveOutageEventsCompletedEventHandler GetAllActiveOutageEventsCompleted;
        
        /// <remarks/>
        public event GetOutageEventCompletedEventHandler GetOutageEventCompleted;
        
        /// <remarks/>
        public event GetCircuitElementByObjectCompletedEventHandler GetCircuitElementByObjectCompleted;
        
        /// <remarks/>
        public event GetAllLoadManagementDevicesCompletedEventHandler GetAllLoadManagementDevicesCompleted;
        
        /// <remarks/>
        public event GetAmountOfControllableLoadCompletedEventHandler GetAmountOfControllableLoadCompleted;
        
        /// <remarks/>
        public event GetAmountOfControlledLoadCompletedEventHandler GetAmountOfControlledLoadCompleted;
        
        /// <remarks/>
        public event GetLoadManagementDeviceByMeterIDCompletedEventHandler GetLoadManagementDeviceByMeterIDCompleted;
        
        /// <remarks/>
        public event GetLoadManagementDeviceByServiceLocationIDCompletedEventHandler GetLoadManagementDeviceByServiceLocationIDCompleted;
        
        /// <remarks/>
        public event IsLoadManagementActiveCompletedEventHandler IsLoadManagementActiveCompleted;
        
        /// <remarks/>
        public event GetAllSubstationLoadControlStatusesCompletedEventHandler GetAllSubstationLoadControlStatusesCompleted;
        
        /// <remarks/>
        public event ModifyODDataForOutageDetectionDeviceCompletedEventHandler ModifyODDataForOutageDetectionDeviceCompleted;
        
        /// <remarks/>
        public event BlinkAlarmNotificationCompletedEventHandler BlinkAlarmNotificationCompleted;
        
        /// <remarks/>
        public event VoltageAlarmNotificationCompletedEventHandler VoltageAlarmNotificationCompleted;
        
        /// <remarks/>
        public event CustomerChangedNotificationCompletedEventHandler CustomerChangedNotificationCompleted;
        
        /// <remarks/>
        public event AccountChangedNotificationCompletedEventHandler AccountChangedNotificationCompleted;
        
        /// <remarks/>
        public event ServiceLocationChangedNotificationCompletedEventHandler ServiceLocationChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterChangedNotificationCompletedEventHandler MeterChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterRemoveNotificationCompletedEventHandler MeterRemoveNotificationCompleted;
        
        /// <remarks/>
        public event MeterRetireNotificationCompletedEventHandler MeterRetireNotificationCompleted;
        
        /// <remarks/>
        public event MeterAddNotificationCompletedEventHandler MeterAddNotificationCompleted;
        
        /// <remarks/>
        public event MeterExchangeNotificationCompletedEventHandler MeterExchangeNotificationCompleted;
        
        /// <remarks/>
        public event CustomersAffectedByOutageNotificationCompletedEventHandler CustomersAffectedByOutageNotificationCompleted;
        
        /// <remarks/>
        public event MeterConnectivityNotificationCompletedEventHandler MeterConnectivityNotificationCompleted;
        
        /// <remarks/>
        public event EndDeviceShipmentNotificationCompletedEventHandler EndDeviceShipmentNotificationCompleted;
        
        /// <remarks/>
        public event FormattedBlockNotificationCompletedEventHandler FormattedBlockNotificationCompleted;
        
        /// <remarks/>
        public event ODEventNotificationCompletedEventHandler ODEventNotificationCompleted;
        
        /// <remarks/>
        public event ODDeviceChangedNotificationCompletedEventHandler ODDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceAddNotificationCompletedEventHandler CDDeviceAddNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceChangedNotificationCompletedEventHandler CDDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceExchangeNotificationCompletedEventHandler CDDeviceExchangeNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceRemoveNotificationCompletedEventHandler CDDeviceRemoveNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceInstalledNotificationCompletedEventHandler CDDeviceInstalledNotificationCompleted;
        
        /// <remarks/>
        public event CDDeviceRetireNotificationCompletedEventHandler CDDeviceRetireNotificationCompleted;
        
        /// <remarks/>
        public event HistoryLogChangedNotificationCompletedEventHandler HistoryLogChangedNotificationCompleted;
        
        /// <remarks/>
        public event LoadProfileChangedNotificationCompletedEventHandler LoadProfileChangedNotificationCompleted;
        
        /// <remarks/>
        public event MeterTestNotificationCompletedEventHandler MeterTestNotificationCompleted;
        
        /// <remarks/>
        public event MeterInstalledNotificationCompletedEventHandler MeterInstalledNotificationCompleted;
        
        /// <remarks/>
        public event PPMMeterExchangeNotificationCompletedEventHandler PPMMeterExchangeNotificationCompleted;
        
        /// <remarks/>
        public event ChargeableDeviceChangedNotificationCompletedEventHandler ChargeableDeviceChangedNotificationCompleted;
        
        /// <remarks/>
        public event ModifyCBDataForCustomerCompletedEventHandler ModifyCBDataForCustomerCompleted;
        
        /// <remarks/>
        public event ModifyCBDataForServiceLocationsCompletedEventHandler ModifyCBDataForServiceLocationsCompleted;
        
        /// <remarks/>
        public event ModifyCBDataForMetersCompletedEventHandler ModifyCBDataForMetersCompleted;
        
        /// <remarks/>
        public event ReadingChangedNotificationCompletedEventHandler ReadingChangedNotificationCompleted;
        
        /// <remarks/>
        public event IHDMessageStatusNotificationCompletedEventHandler IHDMessageStatusNotificationCompleted;
        
        /// <remarks/>
        public event IHDMessageConfirmedNotificationCompletedEventHandler IHDMessageConfirmedNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayAddNotificationCompletedEventHandler InHomeDisplayAddNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayChangedNotificationCompletedEventHandler InHomeDisplayChangedNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayExchangeNotificationCompletedEventHandler InHomeDisplayExchangeNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayInstalledNotificationCompletedEventHandler InHomeDisplayInstalledNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayRemoveNotificationCompletedEventHandler InHomeDisplayRemoveNotificationCompleted;
        
        /// <remarks/>
        public event InHomeDisplayRetireNotificationCompletedEventHandler InHomeDisplayRetireNotificationCompleted;
        
        /// <remarks/>
        public event InitiateHANPricingCompletedEventHandler InitiateHANPricingCompleted;
        
        /// <remarks/>
        public event InitiateHANPricingRequestCompletedEventHandler InitiateHANPricingRequestCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByMeterIDCompletedEventHandler GetServiceLocationByMeterIDCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByAccountNumberCompletedEventHandler GetServiceLocationByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByGridLocationCompletedEventHandler GetServiceLocationByGridLocationCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByPhaseCodeCompletedEventHandler GetServiceLocationByPhaseCodeCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByLoadGroupCompletedEventHandler GetServiceLocationByLoadGroupCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByServiceTypeCompletedEventHandler GetServiceLocationByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByShutOffDateCompletedEventHandler GetServiceLocationByShutOffDateCompleted;
        
        /// <remarks/>
        public event GetMetersByEALocationCompletedEventHandler GetMetersByEALocationCompleted;
        
        /// <remarks/>
        public event GetMetersByFacilityIDCompletedEventHandler GetMetersByFacilityIDCompleted;
        
        /// <remarks/>
        public event GetMetersBySiteIDCompletedEventHandler GetMetersBySiteIDCompleted;
        
        /// <remarks/>
        public event GetMetersByCustomerNameCompletedEventHandler GetMetersByCustomerNameCompleted;
        
        /// <remarks/>
        public event GetMetersByHomePhoneCompletedEventHandler GetMetersByHomePhoneCompleted;
        
        /// <remarks/>
        public event GetMetersBySearchStringCompletedEventHandler GetMetersBySearchStringCompleted;
        
        /// <remarks/>
        public event GetLPReadingsByMeterIDFormattedBlockCompletedEventHandler GetLPReadingsByMeterIDFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetLPReadingsByDateFormattedBlockCompletedEventHandler GetLPReadingsByDateFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetLPReadingsByBillingCycleCompletedEventHandler GetLPReadingsByBillingCycleCompleted;
        
        /// <remarks/>
        public event GetAllAccountsCompletedEventHandler GetAllAccountsCompleted;
        
        /// <remarks/>
        public event GetAccountsByCustomerIDCompletedEventHandler GetAccountsByCustomerIDCompleted;
        
        /// <remarks/>
        public event GetAccountByMeterIDCompletedEventHandler GetAccountByMeterIDCompleted;
        
        /// <remarks/>
        public event GetAccountByServiceLocationIDAndServiceTypeCompletedEventHandler GetAccountByServiceLocationIDAndServiceTypeCompleted;
        
        /// <remarks/>
        public event GetConfigurationGroupNamesCompletedEventHandler GetConfigurationGroupNamesCompleted;
        
        /// <remarks/>
        public event GetConfigurationGroupNamesByMeterIDCompletedEventHandler GetConfigurationGroupNamesByMeterIDCompleted;
        
        /// <remarks/>
        public event GetConfigurationGroupMembersCompletedEventHandler GetConfigurationGroupMembersCompleted;
        
        /// <remarks/>
        public event GetSchedulesCompletedEventHandler GetSchedulesCompleted;
        
        /// <remarks/>
        public event GetScheduleByIDCompletedEventHandler GetScheduleByIDCompleted;
        
        /// <remarks/>
        public event GetReadingSchedulesCompletedEventHandler GetReadingSchedulesCompleted;
        
        /// <remarks/>
        public event GetReadingScheduleByIDCompletedEventHandler GetReadingScheduleByIDCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsByMeterIDListCompletedEventHandler GetLatestReadingsByMeterIDListCompleted;
        
        /// <remarks/>
        public event GetMeterBaseByObjectIDCompletedEventHandler GetMeterBaseByObjectIDCompleted;
        
        /// <remarks/>
        public event GetFormattedBlockTemplatesCompletedEventHandler GetFormattedBlockTemplatesCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsByMeterListFormattedBlockCompletedEventHandler GetLatestReadingsByMeterListFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetAllConnectDisconnectEventsByReasonCodeCompletedEventHandler GetAllConnectDisconnectEventsByReasonCodeCompleted;
        
        /// <remarks/>
        public event GetSupportedReadingStatusCodesCompletedEventHandler GetSupportedReadingStatusCodesCompleted;
        
        /// <remarks/>
        public event GetLPReadingsByMeterIDIntervalDataCompletedEventHandler GetLPReadingsByMeterIDIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLPReadingsByDateIntervalDataCompletedEventHandler GetLPReadingsByDateIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLPReadingsByBillingCycleIntervalDataCompletedEventHandler GetLPReadingsByBillingCycleIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingsByBillingCycleIntervalDataCompletedEventHandler GetReadingsByBillingCycleIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingByMeterIDIntervalDataCompletedEventHandler GetReadingByMeterIDIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateIntervalDataCompletedEventHandler GetReadingsByDateIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventHandler GetLatestMeterReadingsByMeterGroupIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventHandler GetLatestReadingByMeterIDAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByFieldNameIntervalDataCompletedEventHandler GetLatestReadingByFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateAndFieldNameIntervalDataCompletedEventHandler GetReadingsByDateAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetReadingsByMeterIDAndFieldNameIntervalDataCompletedEventHandler GetReadingsByMeterIDAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsByMeterIDListIntervalDataCompletedEventHandler GetLatestReadingsByMeterIDListIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsByMeterListIntervalDataCompletedEventHandler GetLatestReadingsByMeterListIntervalDataCompleted;
        
        /// <remarks/>
        public event OutageReasonChangedNotificationCompletedEventHandler OutageReasonChangedNotificationCompleted;
        
        /// <remarks/>
        public event OutageReasonContainerChangedNotificationCompletedEventHandler OutageReasonContainerChangedNotificationCompleted;
        
        /// <remarks/>
        public event OutageEventChangedNotificationCompletedEventHandler OutageEventChangedNotificationCompleted;
        
        /// <remarks/>
        public event InsertInHomeDisplayInIHDGroupCompletedEventHandler InsertInHomeDisplayInIHDGroupCompleted;
        
        /// <remarks/>
        public event RemoveInHomeDisplayFromIHDGroupCompletedEventHandler RemoveInHomeDisplayFromIHDGroupCompleted;
        
        /// <remarks/>
        public event CancelCriticalPeakPriceEventCompletedEventHandler CancelCriticalPeakPriceEventCompleted;
        
        /// <remarks/>
        public event CancelCriticalPeakPriceEventToGroupCompletedEventHandler CancelCriticalPeakPriceEventToGroupCompleted;
        
        /// <remarks/>
        public event CriticalPeakPriceEventNotificationCompletedEventHandler CriticalPeakPriceEventNotificationCompleted;
        
        /// <remarks/>
        public event InitiateCriticalPeakPriceEventCompletedEventHandler InitiateCriticalPeakPriceEventCompleted;
        
        /// <remarks/>
        public event InitiateCriticalPeakPriceEventToGroupCompletedEventHandler InitiateCriticalPeakPriceEventToGroupCompleted;
        
        /// <remarks/>
        public event InitiateLoadManagementEventCompletedEventHandler InitiateLoadManagementEventCompleted;
        
        /// <remarks/>
        public event InitiateLoadManagementEventsCompletedEventHandler InitiateLoadManagementEventsCompleted;
        
        /// <remarks/>
        public event InitiatePowerFactorManagementEventCompletedEventHandler InitiatePowerFactorManagementEventCompleted;
        
        /// <remarks/>
        public event InitiatePlannedOutageCompletedEventHandler InitiatePlannedOutageCompleted;
        
        /// <remarks/>
        public event CancelPlannedOutageCompletedEventHandler CancelPlannedOutageCompleted;
        
        /// <remarks/>
        public event InitiateUsageMonitoringCompletedEventHandler InitiateUsageMonitoringCompleted;
        
        /// <remarks/>
        public event CancelUsageMonitoringCompletedEventHandler CancelUsageMonitoringCompleted;
        
        /// <remarks/>
        public event InitiateDisconnectedStatusCompletedEventHandler InitiateDisconnectedStatusCompleted;
        
        /// <remarks/>
        public event CancelDisconnectedStatusCompletedEventHandler CancelDisconnectedStatusCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadingsByMeterIDCompletedEventHandler InitiateMeterReadingsByMeterIDCompleted;
        
        /// <remarks/>
        public event EstablishMeterGroupCompletedEventHandler EstablishMeterGroupCompleted;
        
        /// <remarks/>
        public event EstablishHANDeviceGroupCompletedEventHandler EstablishHANDeviceGroupCompleted;
        
        /// <remarks/>
        public event InsertIntoHANDeviceGroupCompletedEventHandler InsertIntoHANDeviceGroupCompleted;
        
        /// <remarks/>
        public event RemoveFromHANDeviceGroupCompletedEventHandler RemoveFromHANDeviceGroupCompleted;
        
        /// <remarks/>
        public event GetHANDeviceGroupNamesCompletedEventHandler GetHANDeviceGroupNamesCompleted;
        
        /// <remarks/>
        public event GetHANDeviceGroupMembersCompletedEventHandler GetHANDeviceGroupMembersCompleted;
        
        /// <remarks/>
        public event GetHANDeviceGroupNamesByHANDeviceIDCompletedEventHandler GetHANDeviceGroupNamesByHANDeviceIDCompleted;
        
        /// <remarks/>
        public event DeleteMeterGroupCompletedEventHandler DeleteMeterGroupCompleted;
        
        /// <remarks/>
        public event InsertMeterInMeterGroupCompletedEventHandler InsertMeterInMeterGroupCompleted;
        
        /// <remarks/>
        public event RemoveMetersFromMeterGroupCompletedEventHandler RemoveMetersFromMeterGroupCompleted;
        
        /// <remarks/>
        public event InsertMeterInConfigurationGroupCompletedEventHandler InsertMeterInConfigurationGroupCompleted;
        
        /// <remarks/>
        public event RemoveMetersFromConfigurationGroupCompletedEventHandler RemoveMetersFromConfigurationGroupCompleted;
        
        /// <remarks/>
        public event InitiateGroupMeterReadingCompletedEventHandler InitiateGroupMeterReadingCompleted;
        
        /// <remarks/>
        public event ScheduleGroupMeterReadingCompletedEventHandler ScheduleGroupMeterReadingCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadingByMeterIDAndFieldNameCompletedEventHandler InitiateMeterReadingByMeterIDAndFieldNameCompleted;
        
        /// <remarks/>
        public event InitiateMeterReadingByObjectCompletedEventHandler InitiateMeterReadingByObjectCompleted;
        
        /// <remarks/>
        public event InitiateOutageDetectionEventRequestCompletedEventHandler InitiateOutageDetectionEventRequestCompleted;
        
        /// <remarks/>
        public event InitiateODEventRequestByObjectCompletedEventHandler InitiateODEventRequestByObjectCompleted;
        
        /// <remarks/>
        public event InitiateODMonitoringRequestByObjectCompletedEventHandler InitiateODMonitoringRequestByObjectCompleted;
        
        /// <remarks/>
        public event PingURLCompletedEventHandler PingURLCompleted;
        
        /// <remarks/>
        public event GetMethodsCompletedEventHandler GetMethodsCompleted;
        
        /// <remarks/>
        public event GetDomainNamesCompletedEventHandler GetDomainNamesCompleted;
        
        /// <remarks/>
        public event GetDomainMembersCompletedEventHandler GetDomainMembersCompleted;
        
        /// <remarks/>
        public event RequestRegistrationIDCompletedEventHandler RequestRegistrationIDCompleted;
        
        /// <remarks/>
        public event RegisterForServiceCompletedEventHandler RegisterForServiceCompleted;
        
        /// <remarks/>
        public event UnregisterForServiceCompletedEventHandler UnregisterForServiceCompleted;
        
        /// <remarks/>
        public event GetRegistrationInfoByIDCompletedEventHandler GetRegistrationInfoByIDCompleted;
        
        /// <remarks/>
        public event GetPublishMethodsCompletedEventHandler GetPublishMethodsCompleted;
        
        /// <remarks/>
        public event DomainMembersChangedNotificationCompletedEventHandler DomainMembersChangedNotificationCompleted;
        
        /// <remarks/>
        public event DomainNamesChangedNotificationCompletedEventHandler DomainNamesChangedNotificationCompleted;
        
        /// <remarks/>
        public event GetAllMetersCompletedEventHandler GetAllMetersCompleted;
        
        /// <remarks/>
        public event GetAMRSupportedMetersCompletedEventHandler GetAMRSupportedMetersCompleted;
        
        /// <remarks/>
        public event GetModifiedAMRMetersCompletedEventHandler GetModifiedAMRMetersCompleted;
        
        /// <remarks/>
        public event IsAMRMeterCompletedEventHandler IsAMRMeterCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateCompletedEventHandler GetReadingsByDateCompleted;
        
        /// <remarks/>
        public event GetReadingsByMeterIDCompletedEventHandler GetReadingsByMeterIDCompleted;
        
        /// <remarks/>
        public event GetReadingsByMeterIDListAndFieldNameIntervalDataCompletedEventHandler GetReadingsByMeterIDListAndFieldNameIntervalDataCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByMeterIDCompletedEventHandler GetLatestReadingByMeterIDCompleted;
        
        /// <remarks/>
        public event GetReadingsByBillingCycleCompletedEventHandler GetReadingsByBillingCycleCompleted;
        
        /// <remarks/>
        public event GetReadingByMeterIDFormattedBlockCompletedEventHandler GetReadingByMeterIDFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateFormattedBlockCompletedEventHandler GetReadingsByDateFormattedBlockCompleted;
        
        /// <remarks/>
        public event GetHistoryLogByMeterIDCompletedEventHandler GetHistoryLogByMeterIDCompleted;
        
        /// <remarks/>
        public event GetHistoryLogsByDateCompletedEventHandler GetHistoryLogsByDateCompleted;
        
        /// <remarks/>
        public event GetHistoryLogsByMeterIDAndEventCodeCompletedEventHandler GetHistoryLogsByMeterIDAndEventCodeCompleted;
        
        /// <remarks/>
        public event GetHistoryLogsByDateAndEventCodeCompletedEventHandler GetHistoryLogsByDateAndEventCodeCompleted;
        
        /// <remarks/>
        public event GetLatestMeterReadingsByMeterGroupCompletedEventHandler GetLatestMeterReadingsByMeterGroupCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByMeterIDAndFieldNameCompletedEventHandler GetLatestReadingByMeterIDAndFieldNameCompleted;
        
        /// <remarks/>
        public event GetLatestReadingByFieldNameCompletedEventHandler GetLatestReadingByFieldNameCompleted;
        
        /// <remarks/>
        public event GetReadingsByDateAndFieldNameCompletedEventHandler GetReadingsByDateAndFieldNameCompleted;
        
        /// <remarks/>
        public event GetSupportedFieldNamesCompletedEventHandler GetSupportedFieldNamesCompleted;
        
        /// <remarks/>
        public event GetReadingsByMeterIDAndFieldNameCompletedEventHandler GetReadingsByMeterIDAndFieldNameCompleted;
        
        /// <remarks/>
        public event GetLatestReadingsCompletedEventHandler GetLatestReadingsCompleted;
        
        /// <remarks/>
        public event GetAllInHomeDisplaysCompletedEventHandler GetAllInHomeDisplaysCompleted;
        
        /// <remarks/>
        public event GetReadingsByUOMAndDateCompletedEventHandler GetReadingsByUOMAndDateCompleted;
        
        /// <remarks/>
        public event GetAllOutageDetectionDevicesCompletedEventHandler GetAllOutageDetectionDevicesCompleted;
        
        /// <remarks/>
        public event GetOutageDetectionDevicesByMeterIDCompletedEventHandler GetOutageDetectionDevicesByMeterIDCompleted;
        
        /// <remarks/>
        public event GetOutageDetectionDevicesByStatusCompletedEventHandler GetOutageDetectionDevicesByStatusCompleted;
        
        /// <remarks/>
        public event GetOutageDetectionDevicesByTypeCompletedEventHandler GetOutageDetectionDevicesByTypeCompleted;
        
        /// <remarks/>
        public event GetOutagedODDevicesCompletedEventHandler GetOutagedODDevicesCompleted;
        
        /// <remarks/>
        public event GetCDSupportedMetersCompletedEventHandler GetCDSupportedMetersCompleted;
        
        /// <remarks/>
        public event GetModifiedCDMetersCompletedEventHandler GetModifiedCDMetersCompleted;
        
        /// <remarks/>
        public event GetCDMeterStateCompletedEventHandler GetCDMeterStateCompleted;
        
        /// <remarks/>
        public event GetOutageEventStatusCompletedEventHandler GetOutageEventStatusCompleted;
        
        /// <remarks/>
        public event GetActiveOutagesCompletedEventHandler GetActiveOutagesCompleted;
        
        /// <remarks/>
        public event GetOutageEventStatusByOutageLocationCompletedEventHandler GetOutageEventStatusByOutageLocationCompleted;
        
        /// <remarks/>
        public event GetAllElectricMetersCompletedEventHandler GetAllElectricMetersCompleted;
        
        /// <remarks/>
        public event GetAllGasMetersCompletedEventHandler GetAllGasMetersCompleted;
        
        /// <remarks/>
        public event GetAllWaterMetersCompletedEventHandler GetAllWaterMetersCompleted;
        
        /// <remarks/>
        public event GetAllPropaneMetersCompletedEventHandler GetAllPropaneMetersCompleted;
        
        /// <remarks/>
        public event GetElectricMetersByAccountNumberCompletedEventHandler GetElectricMetersByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetGasMetersByAccountNumberCompletedEventHandler GetGasMetersByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetWaterMetersByAccountNumberCompletedEventHandler GetWaterMetersByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetPropaneMetersByAccountNumberCompletedEventHandler GetPropaneMetersByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetAllCustomersByServiceTypeCompletedEventHandler GetAllCustomersByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetAllMetersByServiceTypeCompletedEventHandler GetAllMetersByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetAllServiceLocationsByServiceTypeCompletedEventHandler GetAllServiceLocationsByServiceTypeCompleted;
        
        /// <remarks/>
        public event GetMetersByAccountNumberAndServiceTypeCompletedEventHandler GetMetersByAccountNumberAndServiceTypeCompleted;
        
        /// <remarks/>
        public event GetAllCustomersCompletedEventHandler GetAllCustomersCompleted;
        
        /// <remarks/>
        public event GetModifiedCustomersCompletedEventHandler GetModifiedCustomersCompleted;
        
        /// <remarks/>
        public event GetModifiedServiceLocationsCompletedEventHandler GetModifiedServiceLocationsCompleted;
        
        /// <remarks/>
        public event GetCustomerByCustomerIDCompletedEventHandler GetCustomerByCustomerIDCompleted;
        
        /// <remarks/>
        public event GetCustomerByMeterIDCompletedEventHandler GetCustomerByMeterIDCompleted;
        
        /// <remarks/>
        public event GetCustomerByNameCompletedEventHandler GetCustomerByNameCompleted;
        
        /// <remarks/>
        public event GetCustomerByDBANameCompletedEventHandler GetCustomerByDBANameCompleted;
        
        /// <remarks/>
        public event GetDeviceTreeConnectivityCompletedEventHandler GetDeviceTreeConnectivityCompleted;
        
        /// <remarks/>
        public event GetMeterConnectivityBySubstationCompletedEventHandler GetMeterConnectivityBySubstationCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentByShipmentIDCompletedEventHandler GetEndDeviceShipmentByShipmentIDCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentsByDateRangeCompletedEventHandler GetEndDeviceShipmentsByDateRangeCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentByMeterIDCompletedEventHandler GetEndDeviceShipmentByMeterIDCompleted;
        
        /// <remarks/>
        public event GetEndDeviceShipmentByTransponderIDCompletedEventHandler GetEndDeviceShipmentByTransponderIDCompleted;
        
        /// <remarks/>
        public event GetLPDataByMeterIDCompletedEventHandler GetLPDataByMeterIDCompleted;
        
        /// <remarks/>
        public event GetMeterByMeterIDCompletedEventHandler GetMeterByMeterIDCompleted;
        
        /// <remarks/>
        public event GetMeterByServiceLocationIDCompletedEventHandler GetMeterByServiceLocationIDCompleted;
        
        /// <remarks/>
        public event GetAllMetersByAccountNumberCompletedEventHandler GetAllMetersByAccountNumberCompleted;
        
        /// <remarks/>
        public event GetMeterByCustomerIDCompletedEventHandler GetMeterByCustomerIDCompleted;
        
        /// <remarks/>
        public event GetMetersByAMRTypeCompletedEventHandler GetMetersByAMRTypeCompleted;
        
        /// <remarks/>
        public event GetMeterGroupNamesCompletedEventHandler GetMeterGroupNamesCompleted;
        
        /// <remarks/>
        public event GetMeterGroupNamesByMeterIDCompletedEventHandler GetMeterGroupNamesByMeterIDCompleted;
        
        /// <remarks/>
        public event GetMeterGroupMembersCompletedEventHandler GetMeterGroupMembersCompleted;
        
        /// <remarks/>
        public event GetModifiedMetersCompletedEventHandler GetModifiedMetersCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByServiceStatusCompletedEventHandler GetServiceLocationByServiceStatusCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByServiceLocationIDCompletedEventHandler GetServiceLocationByServiceLocationIDCompleted;
        
        /// <remarks/>
        public event GetServiceLocationByCustomerIDCompletedEventHandler GetServiceLocationByCustomerIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetPPMPayments", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("paymentTransactionList")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false, NestingLevel=1)]
        public paymentTransaction[][] GetPPMPayments(System.DateTime startTime, System.DateTime stopTime) {
            object[] results = this.Invoke("GetPPMPayments", new object[] {
                        startTime,
                        stopTime});
            return ((paymentTransaction[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPMPaymentsAsync(System.DateTime startTime, System.DateTime stopTime) {
            this.GetPPMPaymentsAsync(startTime, stopTime, null);
        }
        
        /// <remarks/>
        public void GetPPMPaymentsAsync(System.DateTime startTime, System.DateTime stopTime, object userState) {
            if ((this.GetPPMPaymentsOperationCompleted == null)) {
                this.GetPPMPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPMPaymentsOperationCompleted);
            }
            this.InvokeAsync("GetPPMPayments", new object[] {
                        startTime,
                        stopTime}, this.GetPPMPaymentsOperationCompleted, userState);
        }
        
        private void OnGetPPMPaymentsOperationCompleted(object arg) {
            if ((this.GetPPMPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPMPaymentsCompleted(this, new GetPPMPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceOrderByServiceOrderID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceOrder GetServiceOrderByServiceOrderID(string serviceOrderID) {
            object[] results = this.Invoke("GetServiceOrderByServiceOrderID", new object[] {
                        serviceOrderID});
            return ((serviceOrder)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrderByServiceOrderIDAsync(string serviceOrderID) {
            this.GetServiceOrderByServiceOrderIDAsync(serviceOrderID, null);
        }
        
        /// <remarks/>
        public void GetServiceOrderByServiceOrderIDAsync(string serviceOrderID, object userState) {
            if ((this.GetServiceOrderByServiceOrderIDOperationCompleted == null)) {
                this.GetServiceOrderByServiceOrderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrderByServiceOrderIDOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrderByServiceOrderID", new object[] {
                        serviceOrderID}, this.GetServiceOrderByServiceOrderIDOperationCompleted, userState);
        }
        
        private void OnGetServiceOrderByServiceOrderIDOperationCompleted(object arg) {
            if ((this.GetServiceOrderByServiceOrderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrderByServiceOrderIDCompleted(this, new GetServiceOrderByServiceOrderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceOrdersByServiceLocation", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceOrder[] GetServiceOrdersByServiceLocation(string serviceLocationID) {
            object[] results = this.Invoke("GetServiceOrdersByServiceLocation", new object[] {
                        serviceLocationID});
            return ((serviceOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrdersByServiceLocationAsync(string serviceLocationID) {
            this.GetServiceOrdersByServiceLocationAsync(serviceLocationID, null);
        }
        
        /// <remarks/>
        public void GetServiceOrdersByServiceLocationAsync(string serviceLocationID, object userState) {
            if ((this.GetServiceOrdersByServiceLocationOperationCompleted == null)) {
                this.GetServiceOrdersByServiceLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrdersByServiceLocationOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrdersByServiceLocation", new object[] {
                        serviceLocationID}, this.GetServiceOrdersByServiceLocationOperationCompleted, userState);
        }
        
        private void OnGetServiceOrdersByServiceLocationOperationCompleted(object arg) {
            if ((this.GetServiceOrdersByServiceLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrdersByServiceLocationCompleted(this, new GetServiceOrdersByServiceLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceOrdersByStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceOrder[] GetServiceOrdersByStatus(soStatusCode status, string lastReceived) {
            object[] results = this.Invoke("GetServiceOrdersByStatus", new object[] {
                        status,
                        lastReceived});
            return ((serviceOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceOrdersByStatusAsync(soStatusCode status, string lastReceived) {
            this.GetServiceOrdersByStatusAsync(status, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceOrdersByStatusAsync(soStatusCode status, string lastReceived, object userState) {
            if ((this.GetServiceOrdersByStatusOperationCompleted == null)) {
                this.GetServiceOrdersByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceOrdersByStatusOperationCompleted);
            }
            this.InvokeAsync("GetServiceOrdersByStatus", new object[] {
                        status,
                        lastReceived}, this.GetServiceOrdersByStatusOperationCompleted, userState);
        }
        
        private void OnGetServiceOrdersByStatusOperationCompleted(object arg) {
            if ((this.GetServiceOrdersByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceOrdersByStatusCompleted(this, new GetServiceOrdersByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/AdjustPPMBalance", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] AdjustPPMBalance(ppmBalanceAdjustment[] adjustments) {
            object[] results = this.Invoke("AdjustPPMBalance", new object[] {
                        adjustments});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void AdjustPPMBalanceAsync(ppmBalanceAdjustment[] adjustments) {
            this.AdjustPPMBalanceAsync(adjustments, null);
        }
        
        /// <remarks/>
        public void AdjustPPMBalanceAsync(ppmBalanceAdjustment[] adjustments, object userState) {
            if ((this.AdjustPPMBalanceOperationCompleted == null)) {
                this.AdjustPPMBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustPPMBalanceOperationCompleted);
            }
            this.InvokeAsync("AdjustPPMBalance", new object[] {
                        adjustments}, this.AdjustPPMBalanceOperationCompleted, userState);
        }
        
        private void OnAdjustPPMBalanceOperationCompleted(object arg) {
            if ((this.AdjustPPMBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustPPMBalanceCompleted(this, new AdjustPPMBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CommitPaymentTransaction", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public paymentTransaction[] CommitPaymentTransaction([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] paymentTransaction[] transactions) {
            object[] results = this.Invoke("CommitPaymentTransaction", new object[] {
                        transactions});
            return ((paymentTransaction[])(results[0]));
        }
        
        /// <remarks/>
        public void CommitPaymentTransactionAsync(paymentTransaction[] transactions) {
            this.CommitPaymentTransactionAsync(transactions, null);
        }
        
        /// <remarks/>
        public void CommitPaymentTransactionAsync(paymentTransaction[] transactions, object userState) {
            if ((this.CommitPaymentTransactionOperationCompleted == null)) {
                this.CommitPaymentTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitPaymentTransactionOperationCompleted);
            }
            this.InvokeAsync("CommitPaymentTransaction", new object[] {
                        transactions}, this.CommitPaymentTransactionOperationCompleted, userState);
        }
        
        private void OnCommitPaymentTransactionOperationCompleted(object arg) {
            if ((this.CommitPaymentTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitPaymentTransactionCompleted(this, new CommitPaymentTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EnrollPPMCustomer", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EnrollPPMCustomer(ppmLocation[] newPPMCustomers) {
            object[] results = this.Invoke("EnrollPPMCustomer", new object[] {
                        newPPMCustomers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EnrollPPMCustomerAsync(ppmLocation[] newPPMCustomers) {
            this.EnrollPPMCustomerAsync(newPPMCustomers, null);
        }
        
        /// <remarks/>
        public void EnrollPPMCustomerAsync(ppmLocation[] newPPMCustomers, object userState) {
            if ((this.EnrollPPMCustomerOperationCompleted == null)) {
                this.EnrollPPMCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnrollPPMCustomerOperationCompleted);
            }
            this.InvokeAsync("EnrollPPMCustomer", new object[] {
                        newPPMCustomers}, this.EnrollPPMCustomerOperationCompleted, userState);
        }
        
        private void OnEnrollPPMCustomerOperationCompleted(object arg) {
            if ((this.EnrollPPMCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnrollPPMCustomerCompleted(this, new EnrollPPMCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/UnenrollPPMCustomer", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UnenrollPPMCustomer(ppmLocation[] newPPMCustomers) {
            object[] results = this.Invoke("UnenrollPPMCustomer", new object[] {
                        newPPMCustomers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UnenrollPPMCustomerAsync(ppmLocation[] newPPMCustomers) {
            this.UnenrollPPMCustomerAsync(newPPMCustomers, null);
        }
        
        /// <remarks/>
        public void UnenrollPPMCustomerAsync(ppmLocation[] newPPMCustomers, object userState) {
            if ((this.UnenrollPPMCustomerOperationCompleted == null)) {
                this.UnenrollPPMCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnenrollPPMCustomerOperationCompleted);
            }
            this.InvokeAsync("UnenrollPPMCustomer", new object[] {
                        newPPMCustomers}, this.UnenrollPPMCustomerOperationCompleted, userState);
        }
        
        private void OnUnenrollPPMCustomerOperationCompleted(object arg) {
            if ((this.UnenrollPPMCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnenrollPPMCustomerCompleted(this, new UnenrollPPMCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetPrePayStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ppmStatus[] GetPrePayStatus(string[] ppmLocations) {
            object[] results = this.Invoke("GetPrePayStatus", new object[] {
                        ppmLocations});
            return ((ppmStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPrePayStatusAsync(string[] ppmLocations) {
            this.GetPrePayStatusAsync(ppmLocations, null);
        }
        
        /// <remarks/>
        public void GetPrePayStatusAsync(string[] ppmLocations, object userState) {
            if ((this.GetPrePayStatusOperationCompleted == null)) {
                this.GetPrePayStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrePayStatusOperationCompleted);
            }
            this.InvokeAsync("GetPrePayStatus", new object[] {
                        ppmLocations}, this.GetPrePayStatusOperationCompleted, userState);
        }
        
        private void OnGetPrePayStatusOperationCompleted(object arg) {
            if ((this.GetPrePayStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrePayStatusCompleted(this, new GetPrePayStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterConnectivityByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity GetMeterConnectivityByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetMeterConnectivityByMeterID", new object[] {
                        meterID});
            return ((meterConnectivity)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterConnectivityByMeterIDAsync(meterID meterID) {
            this.GetMeterConnectivityByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetMeterConnectivityByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetMeterConnectivityByMeterIDOperationCompleted == null)) {
                this.GetMeterConnectivityByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterConnectivityByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterConnectivityByMeterID", new object[] {
                        meterID}, this.GetMeterConnectivityByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetMeterConnectivityByMeterIDOperationCompleted(object arg) {
            if ((this.GetMeterConnectivityByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterConnectivityByMeterIDCompleted(this, new GetMeterConnectivityByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateMeterEventMonitoring", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterEventMonitoring([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] eventMonitoringItem[] monitoringList, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateMeterEventMonitoring", new object[] {
                        monitoringList,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterEventMonitoringAsync(eventMonitoringItem[] monitoringList, string responseURL, string transactionID) {
            this.InitiateMeterEventMonitoringAsync(monitoringList, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateMeterEventMonitoringAsync(eventMonitoringItem[] monitoringList, string responseURL, string transactionID, object userState) {
            if ((this.InitiateMeterEventMonitoringOperationCompleted == null)) {
                this.InitiateMeterEventMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterEventMonitoringOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterEventMonitoring", new object[] {
                        monitoringList,
                        responseURL,
                        transactionID}, this.InitiateMeterEventMonitoringOperationCompleted, userState);
        }
        
        private void OnInitiateMeterEventMonitoringOperationCompleted(object arg) {
            if ((this.InitiateMeterEventMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterEventMonitoringCompleted(this, new InitiateMeterEventMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelMeterEventMonitoring", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelMeterEventMonitoring(string monitoringItemObjectID, string transactionID) {
            object[] results = this.Invoke("CancelMeterEventMonitoring", new object[] {
                        monitoringItemObjectID,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelMeterEventMonitoringAsync(string monitoringItemObjectID, string transactionID) {
            this.CancelMeterEventMonitoringAsync(monitoringItemObjectID, transactionID, null);
        }
        
        /// <remarks/>
        public void CancelMeterEventMonitoringAsync(string monitoringItemObjectID, string transactionID, object userState) {
            if ((this.CancelMeterEventMonitoringOperationCompleted == null)) {
                this.CancelMeterEventMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelMeterEventMonitoringOperationCompleted);
            }
            this.InvokeAsync("CancelMeterEventMonitoring", new object[] {
                        monitoringItemObjectID,
                        transactionID}, this.CancelMeterEventMonitoringOperationCompleted, userState);
        }
        
        private void OnCancelMeterEventMonitoringOperationCompleted(object arg) {
            if ((this.CancelMeterEventMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelMeterEventMonitoringCompleted(this, new CancelMeterEventMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersByMeterConnectionStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByMeterConnectionStatus(meterConnectionStatus status, string lastReceived) {
            object[] results = this.Invoke("GetMetersByMeterConnectionStatus", new object[] {
                        status,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByMeterConnectionStatusAsync(meterConnectionStatus status, string lastReceived) {
            this.GetMetersByMeterConnectionStatusAsync(status, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetMetersByMeterConnectionStatusAsync(meterConnectionStatus status, string lastReceived, object userState) {
            if ((this.GetMetersByMeterConnectionStatusOperationCompleted == null)) {
                this.GetMetersByMeterConnectionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByMeterConnectionStatusOperationCompleted);
            }
            this.InvokeAsync("GetMetersByMeterConnectionStatus", new object[] {
                        status,
                        lastReceived}, this.GetMetersByMeterConnectionStatusOperationCompleted, userState);
        }
        
        private void OnGetMetersByMeterConnectionStatusOperationCompleted(object arg) {
            if ((this.GetMetersByMeterConnectionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByMeterConnectionStatusCompleted(this, new GetMetersByMeterConnectionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterByTransponderID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMeterByTransponderID(string transponderID) {
            object[] results = this.Invoke("GetMeterByTransponderID", new object[] {
                        transponderID});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByTransponderIDAsync(string transponderID) {
            this.GetMeterByTransponderIDAsync(transponderID, null);
        }
        
        /// <remarks/>
        public void GetMeterByTransponderIDAsync(string transponderID, object userState) {
            if ((this.GetMeterByTransponderIDOperationCompleted == null)) {
                this.GetMeterByTransponderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByTransponderIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterByTransponderID", new object[] {
                        transponderID}, this.GetMeterByTransponderIDOperationCompleted, userState);
        }
        
        private void OnGetMeterByTransponderIDOperationCompleted(object arg) {
            if ((this.GetMeterByTransponderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByTransponderIDCompleted(this, new GetMeterByTransponderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/IsCDSupported", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCDSupported(ppmLocation location) {
            object[] results = this.Invoke("IsCDSupported", new object[] {
                        location});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCDSupportedAsync(ppmLocation location) {
            this.IsCDSupportedAsync(location, null);
        }
        
        /// <remarks/>
        public void IsCDSupportedAsync(ppmLocation location, object userState) {
            if ((this.IsCDSupportedOperationCompleted == null)) {
                this.IsCDSupportedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCDSupportedOperationCompleted);
            }
            this.InvokeAsync("IsCDSupported", new object[] {
                        location}, this.IsCDSupportedOperationCompleted, userState);
        }
        
        private void OnIsCDSupportedOperationCompleted(object arg) {
            if ((this.IsCDSupportedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCDSupportedCompleted(this, new IsCDSupportedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateThresholdMonitoring", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateThresholdMonitoring([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] thresholdMonitoringItem[] monitoringList, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateThresholdMonitoring", new object[] {
                        monitoringList,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateThresholdMonitoringAsync(thresholdMonitoringItem[] monitoringList, string responseURL, string transactionID) {
            this.InitiateThresholdMonitoringAsync(monitoringList, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateThresholdMonitoringAsync(thresholdMonitoringItem[] monitoringList, string responseURL, string transactionID, object userState) {
            if ((this.InitiateThresholdMonitoringOperationCompleted == null)) {
                this.InitiateThresholdMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateThresholdMonitoringOperationCompleted);
            }
            this.InvokeAsync("InitiateThresholdMonitoring", new object[] {
                        monitoringList,
                        responseURL,
                        transactionID}, this.InitiateThresholdMonitoringOperationCompleted, userState);
        }
        
        private void OnInitiateThresholdMonitoringOperationCompleted(object arg) {
            if ((this.InitiateThresholdMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateThresholdMonitoringCompleted(this, new InitiateThresholdMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/AdjustThresholdMonitoring", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] AdjustThresholdMonitoring([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] thresholdMonitoringItem[] monitoringList, string transactionID) {
            object[] results = this.Invoke("AdjustThresholdMonitoring", new object[] {
                        monitoringList,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void AdjustThresholdMonitoringAsync(thresholdMonitoringItem[] monitoringList, string transactionID) {
            this.AdjustThresholdMonitoringAsync(monitoringList, transactionID, null);
        }
        
        /// <remarks/>
        public void AdjustThresholdMonitoringAsync(thresholdMonitoringItem[] monitoringList, string transactionID, object userState) {
            if ((this.AdjustThresholdMonitoringOperationCompleted == null)) {
                this.AdjustThresholdMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdjustThresholdMonitoringOperationCompleted);
            }
            this.InvokeAsync("AdjustThresholdMonitoring", new object[] {
                        monitoringList,
                        transactionID}, this.AdjustThresholdMonitoringOperationCompleted, userState);
        }
        
        private void OnAdjustThresholdMonitoringOperationCompleted(object arg) {
            if ((this.AdjustThresholdMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdjustThresholdMonitoringCompleted(this, new AdjustThresholdMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelThresholdMonitoring", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelThresholdMonitoring(string monitoringItemObjectID, string transactionID) {
            object[] results = this.Invoke("CancelThresholdMonitoring", new object[] {
                        monitoringItemObjectID,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelThresholdMonitoringAsync(string monitoringItemObjectID, string transactionID) {
            this.CancelThresholdMonitoringAsync(monitoringItemObjectID, transactionID, null);
        }
        
        /// <remarks/>
        public void CancelThresholdMonitoringAsync(string monitoringItemObjectID, string transactionID, object userState) {
            if ((this.CancelThresholdMonitoringOperationCompleted == null)) {
                this.CancelThresholdMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelThresholdMonitoringOperationCompleted);
            }
            this.InvokeAsync("CancelThresholdMonitoring", new object[] {
                        monitoringItemObjectID,
                        transactionID}, this.CancelThresholdMonitoringOperationCompleted, userState);
        }
        
        private void OnCancelThresholdMonitoringOperationCompleted(object arg) {
            if ((this.CancelThresholdMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelThresholdMonitoringCompleted(this, new CancelThresholdMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ThresholdEventNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ThresholdEventNotification([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] thresholdMonitoringItem[] thresholds, string transactionID) {
            object[] results = this.Invoke("ThresholdEventNotification", new object[] {
                        thresholds,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ThresholdEventNotificationAsync(thresholdMonitoringItem[] thresholds, string transactionID) {
            this.ThresholdEventNotificationAsync(thresholds, transactionID, null);
        }
        
        /// <remarks/>
        public void ThresholdEventNotificationAsync(thresholdMonitoringItem[] thresholds, string transactionID, object userState) {
            if ((this.ThresholdEventNotificationOperationCompleted == null)) {
                this.ThresholdEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThresholdEventNotificationOperationCompleted);
            }
            this.InvokeAsync("ThresholdEventNotification", new object[] {
                        thresholds,
                        transactionID}, this.ThresholdEventNotificationOperationCompleted, userState);
        }
        
        private void OnThresholdEventNotificationOperationCompleted(object arg) {
            if ((this.ThresholdEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThresholdEventNotificationCompleted(this, new ThresholdEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateMeterExchange", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterExchange(meterExchanges exchanges, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateMeterExchange", new object[] {
                        exchanges,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterExchangeAsync(meterExchanges exchanges, string responseURL, string transactionID) {
            this.InitiateMeterExchangeAsync(exchanges, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateMeterExchangeAsync(meterExchanges exchanges, string responseURL, string transactionID, object userState) {
            if ((this.InitiateMeterExchangeOperationCompleted == null)) {
                this.InitiateMeterExchangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterExchangeOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterExchange", new object[] {
                        exchanges,
                        responseURL,
                        transactionID}, this.InitiateMeterExchangeOperationCompleted, userState);
        }
        
        private void OnInitiateMeterExchangeOperationCompleted(object arg) {
            if ((this.InitiateMeterExchangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterExchangeCompleted(this, new InitiateMeterExchangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterExchangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterExchangedNotification(meterExchanges exchanges, string transactionID) {
            object[] results = this.Invoke("MeterExchangedNotification", new object[] {
                        exchanges,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterExchangedNotificationAsync(meterExchanges exchanges, string transactionID) {
            this.MeterExchangedNotificationAsync(exchanges, transactionID, null);
        }
        
        /// <remarks/>
        public void MeterExchangedNotificationAsync(meterExchanges exchanges, string transactionID, object userState) {
            if ((this.MeterExchangedNotificationOperationCompleted == null)) {
                this.MeterExchangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterExchangedNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterExchangedNotification", new object[] {
                        exchanges,
                        transactionID}, this.MeterExchangedNotificationOperationCompleted, userState);
        }
        
        private void OnMeterExchangedNotificationOperationCompleted(object arg) {
            if ((this.MeterExchangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterExchangedNotificationCompleted(this, new MeterExchangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCustomersAffectedByOutage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customersAffectedByOutage GetCustomersAffectedByOutage(string outageEventID) {
            object[] results = this.Invoke("GetCustomersAffectedByOutage", new object[] {
                        outageEventID});
            return ((customersAffectedByOutage)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersAffectedByOutageAsync(string outageEventID) {
            this.GetCustomersAffectedByOutageAsync(outageEventID, null);
        }
        
        /// <remarks/>
        public void GetCustomersAffectedByOutageAsync(string outageEventID, object userState) {
            if ((this.GetCustomersAffectedByOutageOperationCompleted == null)) {
                this.GetCustomersAffectedByOutageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersAffectedByOutageOperationCompleted);
            }
            this.InvokeAsync("GetCustomersAffectedByOutage", new object[] {
                        outageEventID}, this.GetCustomersAffectedByOutageOperationCompleted, userState);
        }
        
        private void OnGetCustomersAffectedByOutageOperationCompleted(object arg) {
            if ((this.GetCustomersAffectedByOutageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersAffectedByOutageCompleted(this, new GetCustomersAffectedByOutageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterConfigurationNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterConfigurationNotification(meterConfigurationStatus configStatus, string transactionID) {
            object[] results = this.Invoke("MeterConfigurationNotification", new object[] {
                        configStatus,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterConfigurationNotificationAsync(meterConfigurationStatus configStatus, string transactionID) {
            this.MeterConfigurationNotificationAsync(configStatus, transactionID, null);
        }
        
        /// <remarks/>
        public void MeterConfigurationNotificationAsync(meterConfigurationStatus configStatus, string transactionID, object userState) {
            if ((this.MeterConfigurationNotificationOperationCompleted == null)) {
                this.MeterConfigurationNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterConfigurationNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterConfigurationNotification", new object[] {
                        configStatus,
                        transactionID}, this.MeterConfigurationNotificationOperationCompleted, userState);
        }
        
        private void OnMeterConfigurationNotificationOperationCompleted(object arg) {
            if ((this.MeterConfigurationNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterConfigurationNotificationCompleted(this, new MeterConfigurationNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/RateChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RateChangedNotification(rate rateInfo, string transactionID) {
            object[] results = this.Invoke("RateChangedNotification", new object[] {
                        rateInfo,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RateChangedNotificationAsync(rate rateInfo, string transactionID) {
            this.RateChangedNotificationAsync(rateInfo, transactionID, null);
        }
        
        /// <remarks/>
        public void RateChangedNotificationAsync(rate rateInfo, string transactionID, object userState) {
            if ((this.RateChangedNotificationOperationCompleted == null)) {
                this.RateChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRateChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("RateChangedNotification", new object[] {
                        rateInfo,
                        transactionID}, this.RateChangedNotificationOperationCompleted, userState);
        }
        
        private void OnRateChangedNotificationOperationCompleted(object arg) {
            if ((this.RateChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RateChangedNotificationCompleted(this, new RateChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateMeterInstallation", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterInstallation(serviceLocation[] installLocations, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateMeterInstallation", new object[] {
                        installLocations,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterInstallationAsync(serviceLocation[] installLocations, string responseURL, string transactionID) {
            this.InitiateMeterInstallationAsync(installLocations, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateMeterInstallationAsync(serviceLocation[] installLocations, string responseURL, string transactionID, object userState) {
            if ((this.InitiateMeterInstallationOperationCompleted == null)) {
                this.InitiateMeterInstallationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterInstallationOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterInstallation", new object[] {
                        installLocations,
                        responseURL,
                        transactionID}, this.InitiateMeterInstallationOperationCompleted, userState);
        }
        
        private void OnInitiateMeterInstallationOperationCompleted(object arg) {
            if ((this.InitiateMeterInstallationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterInstallationCompleted(this, new InitiateMeterInstallationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateInHomeDisplayBillingMessage" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateInHomeDisplayBillingMessage([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] inHomeDisplayBillingMessage[] messages, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateInHomeDisplayBillingMessage", new object[] {
                        messages,
                        deviceID,
                        interfaceID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateInHomeDisplayBillingMessageAsync(inHomeDisplayBillingMessage[] messages, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            this.InitiateInHomeDisplayBillingMessageAsync(messages, deviceID, interfaceID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateInHomeDisplayBillingMessageAsync(inHomeDisplayBillingMessage[] messages, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateInHomeDisplayBillingMessageOperationCompleted == null)) {
                this.InitiateInHomeDisplayBillingMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateInHomeDisplayBillingMessageOperationCompleted);
            }
            this.InvokeAsync("InitiateInHomeDisplayBillingMessage", new object[] {
                        messages,
                        deviceID,
                        interfaceID,
                        transactionID,
                        responseURL}, this.InitiateInHomeDisplayBillingMessageOperationCompleted, userState);
        }
        
        private void OnInitiateInHomeDisplayBillingMessageOperationCompleted(object arg) {
            if ((this.InitiateInHomeDisplayBillingMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateInHomeDisplayBillingMessageCompleted(this, new InitiateInHomeDisplayBillingMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelInHomeDisplayBillingMessage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelInHomeDisplayBillingMessage(string inHomeDisplayMessageID, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            object[] results = this.Invoke("CancelInHomeDisplayBillingMessage", new object[] {
                        inHomeDisplayMessageID,
                        deviceID,
                        interfaceID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelInHomeDisplayBillingMessageAsync(string inHomeDisplayMessageID, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            this.CancelInHomeDisplayBillingMessageAsync(inHomeDisplayMessageID, deviceID, interfaceID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void CancelInHomeDisplayBillingMessageAsync(string inHomeDisplayMessageID, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL, object userState) {
            if ((this.CancelInHomeDisplayBillingMessageOperationCompleted == null)) {
                this.CancelInHomeDisplayBillingMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelInHomeDisplayBillingMessageOperationCompleted);
            }
            this.InvokeAsync("CancelInHomeDisplayBillingMessage", new object[] {
                        inHomeDisplayMessageID,
                        deviceID,
                        interfaceID,
                        transactionID,
                        responseURL}, this.CancelInHomeDisplayBillingMessageOperationCompleted, userState);
        }
        
        private void OnCancelInHomeDisplayBillingMessageOperationCompleted(object arg) {
            if ((this.CancelInHomeDisplayBillingMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelInHomeDisplayBillingMessageCompleted(this, new CancelInHomeDisplayBillingMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateHistoricalMeterReadingsByMe" +
            "terIDAndDate", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateHistoricalMeterReadingsByMeterIDAndDate(meterID[] meterIDs, System.DateTime date, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateHistoricalMeterReadingsByMeterIDAndDate", new object[] {
                        meterIDs,
                        date,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateHistoricalMeterReadingsByMeterIDAndDateAsync(meterID[] meterIDs, System.DateTime date, string responseURL, string transactionID) {
            this.InitiateHistoricalMeterReadingsByMeterIDAndDateAsync(meterIDs, date, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateHistoricalMeterReadingsByMeterIDAndDateAsync(meterID[] meterIDs, System.DateTime date, string responseURL, string transactionID, object userState) {
            if ((this.InitiateHistoricalMeterReadingsByMeterIDAndDateOperationCompleted == null)) {
                this.InitiateHistoricalMeterReadingsByMeterIDAndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateHistoricalMeterReadingsByMeterIDAndDateOperationCompleted);
            }
            this.InvokeAsync("InitiateHistoricalMeterReadingsByMeterIDAndDate", new object[] {
                        meterIDs,
                        date,
                        responseURL,
                        transactionID}, this.InitiateHistoricalMeterReadingsByMeterIDAndDateOperationCompleted, userState);
        }
        
        private void OnInitiateHistoricalMeterReadingsByMeterIDAndDateOperationCompleted(object arg) {
            if ((this.InitiateHistoricalMeterReadingsByMeterIDAndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateHistoricalMeterReadingsByMeterIDAndDateCompleted(this, new InitiateHistoricalMeterReadingsByMeterIDAndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetSupportedMeterEventCodes", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterEvent[] GetSupportedMeterEventCodes() {
            object[] results = this.Invoke("GetSupportedMeterEventCodes", new object[0]);
            return ((meterEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportedMeterEventCodesAsync() {
            this.GetSupportedMeterEventCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportedMeterEventCodesAsync(object userState) {
            if ((this.GetSupportedMeterEventCodesOperationCompleted == null)) {
                this.GetSupportedMeterEventCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportedMeterEventCodesOperationCompleted);
            }
            this.InvokeAsync("GetSupportedMeterEventCodes", new object[0], this.GetSupportedMeterEventCodesOperationCompleted, userState);
        }
        
        private void OnGetSupportedMeterEventCodesOperationCompleted(object arg) {
            if ((this.GetSupportedMeterEventCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportedMeterEventCodesCompleted(this, new GetSupportedMeterEventCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateBillingDeterminants", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateBillingDeterminants(serviceID[] serviceIDs, string billingCycle, System.DateTime billingStartDate, System.DateTime billingEndDate, bool isOffCycle, int kWhLookBack, int kWLookBack, int kWLookForward, string formattedBlockTemplateName, string[] fieldname, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateBillingDeterminants", new object[] {
                        serviceIDs,
                        billingCycle,
                        billingStartDate,
                        billingEndDate,
                        isOffCycle,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        formattedBlockTemplateName,
                        fieldname,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateBillingDeterminantsAsync(serviceID[] serviceIDs, string billingCycle, System.DateTime billingStartDate, System.DateTime billingEndDate, bool isOffCycle, int kWhLookBack, int kWLookBack, int kWLookForward, string formattedBlockTemplateName, string[] fieldname, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateBillingDeterminantsAsync(serviceIDs, billingCycle, billingStartDate, billingEndDate, isOffCycle, kWhLookBack, kWLookBack, kWLookForward, formattedBlockTemplateName, fieldname, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateBillingDeterminantsAsync(serviceID[] serviceIDs, string billingCycle, System.DateTime billingStartDate, System.DateTime billingEndDate, bool isOffCycle, int kWhLookBack, int kWLookBack, int kWLookForward, string formattedBlockTemplateName, string[] fieldname, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateBillingDeterminantsOperationCompleted == null)) {
                this.InitiateBillingDeterminantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateBillingDeterminantsOperationCompleted);
            }
            this.InvokeAsync("InitiateBillingDeterminants", new object[] {
                        serviceIDs,
                        billingCycle,
                        billingStartDate,
                        billingEndDate,
                        isOffCycle,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        formattedBlockTemplateName,
                        fieldname,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateBillingDeterminantsOperationCompleted, userState);
        }
        
        private void OnInitiateBillingDeterminantsOperationCompleted(object arg) {
            if ((this.InitiateBillingDeterminantsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateBillingDeterminantsCompleted(this, new InitiateBillingDeterminantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LMDeviceInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceInstalledNotification(loadManagementDevice[] installedLMDs) {
            object[] results = this.Invoke("LMDeviceInstalledNotification", new object[] {
                        installedLMDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceInstalledNotificationAsync(loadManagementDevice[] installedLMDs) {
            this.LMDeviceInstalledNotificationAsync(installedLMDs, null);
        }
        
        /// <remarks/>
        public void LMDeviceInstalledNotificationAsync(loadManagementDevice[] installedLMDs, object userState) {
            if ((this.LMDeviceInstalledNotificationOperationCompleted == null)) {
                this.LMDeviceInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceInstalledNotification", new object[] {
                        installedLMDs}, this.LMDeviceInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceInstalledNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceInstalledNotificationCompleted(this, new LMDeviceInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/HANPricingNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] HANPricingNotification(priceTierStructure priceTierStructure, HANInterfaceID interfaceID, string transactionID) {
            object[] results = this.Invoke("HANPricingNotification", new object[] {
                        priceTierStructure,
                        interfaceID,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void HANPricingNotificationAsync(priceTierStructure priceTierStructure, HANInterfaceID interfaceID, string transactionID) {
            this.HANPricingNotificationAsync(priceTierStructure, interfaceID, transactionID, null);
        }
        
        /// <remarks/>
        public void HANPricingNotificationAsync(priceTierStructure priceTierStructure, HANInterfaceID interfaceID, string transactionID, object userState) {
            if ((this.HANPricingNotificationOperationCompleted == null)) {
                this.HANPricingNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHANPricingNotificationOperationCompleted);
            }
            this.InvokeAsync("HANPricingNotification", new object[] {
                        priceTierStructure,
                        interfaceID,
                        transactionID}, this.HANPricingNotificationOperationCompleted, userState);
        }
        
        private void OnHANPricingNotificationOperationCompleted(object arg) {
            if ((this.HANPricingNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HANPricingNotificationCompleted(this, new HANPricingNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateIHDCapabilitySettings", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateIHDCapabilitySettings(inHomeDisplayCapabilitySetting[] inHomeDisplayCapabilitySettings, HANDeviceID deviceID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("InitiateIHDCapabilitySettings", new object[] {
                        inHomeDisplayCapabilitySettings,
                        deviceID,
                        transactionID,
                        responseURL,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateIHDCapabilitySettingsAsync(inHomeDisplayCapabilitySetting[] inHomeDisplayCapabilitySettings, HANDeviceID deviceID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            this.InitiateIHDCapabilitySettingsAsync(inHomeDisplayCapabilitySettings, deviceID, transactionID, responseURL, interfaceID, null);
        }
        
        /// <remarks/>
        public void InitiateIHDCapabilitySettingsAsync(inHomeDisplayCapabilitySetting[] inHomeDisplayCapabilitySettings, HANDeviceID deviceID, string transactionID, string responseURL, HANInterfaceID interfaceID, object userState) {
            if ((this.InitiateIHDCapabilitySettingsOperationCompleted == null)) {
                this.InitiateIHDCapabilitySettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateIHDCapabilitySettingsOperationCompleted);
            }
            this.InvokeAsync("InitiateIHDCapabilitySettings", new object[] {
                        inHomeDisplayCapabilitySettings,
                        deviceID,
                        transactionID,
                        responseURL,
                        interfaceID}, this.InitiateIHDCapabilitySettingsOperationCompleted, userState);
        }
        
        private void OnInitiateIHDCapabilitySettingsOperationCompleted(object arg) {
            if ((this.InitiateIHDCapabilitySettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateIHDCapabilitySettingsCompleted(this, new InitiateIHDCapabilitySettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateIHDCapabilitySettingsToGrou" +
            "p", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateIHDCapabilitySettingsToGroup(inHomeDisplayCapabilitySetting[] inHomeDisplayCapabilitySettings, HANGroupID groupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateIHDCapabilitySettingsToGroup", new object[] {
                        inHomeDisplayCapabilitySettings,
                        groupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateIHDCapabilitySettingsToGroupAsync(inHomeDisplayCapabilitySetting[] inHomeDisplayCapabilitySettings, HANGroupID groupID, string transactionID, string responseURL) {
            this.InitiateIHDCapabilitySettingsToGroupAsync(inHomeDisplayCapabilitySettings, groupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateIHDCapabilitySettingsToGroupAsync(inHomeDisplayCapabilitySetting[] inHomeDisplayCapabilitySettings, HANGroupID groupID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateIHDCapabilitySettingsToGroupOperationCompleted == null)) {
                this.InitiateIHDCapabilitySettingsToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateIHDCapabilitySettingsToGroupOperationCompleted);
            }
            this.InvokeAsync("InitiateIHDCapabilitySettingsToGroup", new object[] {
                        inHomeDisplayCapabilitySettings,
                        groupID,
                        transactionID,
                        responseURL}, this.InitiateIHDCapabilitySettingsToGroupOperationCompleted, userState);
        }
        
        private void OnInitiateIHDCapabilitySettingsToGroupOperationCompleted(object arg) {
            if ((this.InitiateIHDCapabilitySettingsToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateIHDCapabilitySettingsToGroupCompleted(this, new InitiateIHDCapabilitySettingsToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateManufacturerSpecificCommand" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateManufacturerSpecificCommand(HANDeviceID deviceID, string transactionID, tunnelCommandContent command, string responseURL, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("InitiateManufacturerSpecificCommand", new object[] {
                        deviceID,
                        transactionID,
                        command,
                        responseURL,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateManufacturerSpecificCommandAsync(HANDeviceID deviceID, string transactionID, tunnelCommandContent command, string responseURL, HANInterfaceID interfaceID) {
            this.InitiateManufacturerSpecificCommandAsync(deviceID, transactionID, command, responseURL, interfaceID, null);
        }
        
        /// <remarks/>
        public void InitiateManufacturerSpecificCommandAsync(HANDeviceID deviceID, string transactionID, tunnelCommandContent command, string responseURL, HANInterfaceID interfaceID, object userState) {
            if ((this.InitiateManufacturerSpecificCommandOperationCompleted == null)) {
                this.InitiateManufacturerSpecificCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateManufacturerSpecificCommandOperationCompleted);
            }
            this.InvokeAsync("InitiateManufacturerSpecificCommand", new object[] {
                        deviceID,
                        transactionID,
                        command,
                        responseURL,
                        interfaceID}, this.InitiateManufacturerSpecificCommandOperationCompleted, userState);
        }
        
        private void OnInitiateManufacturerSpecificCommandOperationCompleted(object arg) {
            if ((this.InitiateManufacturerSpecificCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateManufacturerSpecificCommandCompleted(this, new InitiateManufacturerSpecificCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateManufacturerSpecificCommand" +
            "ToGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateManufacturerSpecificCommandToGroup(HANGroupID groupID, string transactionID, tunnelCommandContent command, string responseURL) {
            object[] results = this.Invoke("InitiateManufacturerSpecificCommandToGroup", new object[] {
                        groupID,
                        transactionID,
                        command,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateManufacturerSpecificCommandToGroupAsync(HANGroupID groupID, string transactionID, tunnelCommandContent command, string responseURL) {
            this.InitiateManufacturerSpecificCommandToGroupAsync(groupID, transactionID, command, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateManufacturerSpecificCommandToGroupAsync(HANGroupID groupID, string transactionID, tunnelCommandContent command, string responseURL, object userState) {
            if ((this.InitiateManufacturerSpecificCommandToGroupOperationCompleted == null)) {
                this.InitiateManufacturerSpecificCommandToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateManufacturerSpecificCommandToGroupOperationCompleted);
            }
            this.InvokeAsync("InitiateManufacturerSpecificCommandToGroup", new object[] {
                        groupID,
                        transactionID,
                        command,
                        responseURL}, this.InitiateManufacturerSpecificCommandToGroupOperationCompleted, userState);
        }
        
        private void OnInitiateManufacturerSpecificCommandToGroupOperationCompleted(object arg) {
            if ((this.InitiateManufacturerSpecificCommandToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateManufacturerSpecificCommandToGroupCompleted(this, new InitiateManufacturerSpecificCommandToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ManufacturerSpecificCommandNotifica" +
            "tion", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ManufacturerSpecificCommandNotification(HANDeviceID deviceID, string transactionID, tunnelCommandContent command, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("ManufacturerSpecificCommandNotification", new object[] {
                        deviceID,
                        transactionID,
                        command,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ManufacturerSpecificCommandNotificationAsync(HANDeviceID deviceID, string transactionID, tunnelCommandContent command, HANInterfaceID interfaceID) {
            this.ManufacturerSpecificCommandNotificationAsync(deviceID, transactionID, command, interfaceID, null);
        }
        
        /// <remarks/>
        public void ManufacturerSpecificCommandNotificationAsync(HANDeviceID deviceID, string transactionID, tunnelCommandContent command, HANInterfaceID interfaceID, object userState) {
            if ((this.ManufacturerSpecificCommandNotificationOperationCompleted == null)) {
                this.ManufacturerSpecificCommandNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManufacturerSpecificCommandNotificationOperationCompleted);
            }
            this.InvokeAsync("ManufacturerSpecificCommandNotification", new object[] {
                        deviceID,
                        transactionID,
                        command,
                        interfaceID}, this.ManufacturerSpecificCommandNotificationOperationCompleted, userState);
        }
        
        private void OnManufacturerSpecificCommandNotificationOperationCompleted(object arg) {
            if ((this.ManufacturerSpecificCommandNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManufacturerSpecificCommandNotificationCompleted(this, new ManufacturerSpecificCommandNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ThermostatAddNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ThermostatAddNotification(thermostat[] addedThermostats, string transactionID) {
            object[] results = this.Invoke("ThermostatAddNotification", new object[] {
                        addedThermostats,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ThermostatAddNotificationAsync(thermostat[] addedThermostats, string transactionID) {
            this.ThermostatAddNotificationAsync(addedThermostats, transactionID, null);
        }
        
        /// <remarks/>
        public void ThermostatAddNotificationAsync(thermostat[] addedThermostats, string transactionID, object userState) {
            if ((this.ThermostatAddNotificationOperationCompleted == null)) {
                this.ThermostatAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThermostatAddNotificationOperationCompleted);
            }
            this.InvokeAsync("ThermostatAddNotification", new object[] {
                        addedThermostats,
                        transactionID}, this.ThermostatAddNotificationOperationCompleted, userState);
        }
        
        private void OnThermostatAddNotificationOperationCompleted(object arg) {
            if ((this.ThermostatAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThermostatAddNotificationCompleted(this, new ThermostatAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ThermostatRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ThermostatRemoveNotification(thermostat[] addedThermostats, string transactionID) {
            object[] results = this.Invoke("ThermostatRemoveNotification", new object[] {
                        addedThermostats,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ThermostatRemoveNotificationAsync(thermostat[] addedThermostats, string transactionID) {
            this.ThermostatRemoveNotificationAsync(addedThermostats, transactionID, null);
        }
        
        /// <remarks/>
        public void ThermostatRemoveNotificationAsync(thermostat[] addedThermostats, string transactionID, object userState) {
            if ((this.ThermostatRemoveNotificationOperationCompleted == null)) {
                this.ThermostatRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThermostatRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("ThermostatRemoveNotification", new object[] {
                        addedThermostats,
                        transactionID}, this.ThermostatRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnThermostatRemoveNotificationOperationCompleted(object arg) {
            if ((this.ThermostatRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThermostatRemoveNotificationCompleted(this, new ThermostatRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ThermostatScheduleNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ThermostatScheduleNotification([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] thermostatScheduleDay[] schedule, HANDeviceID thermostatID, string transactionID, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("ThermostatScheduleNotification", new object[] {
                        schedule,
                        thermostatID,
                        transactionID,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ThermostatScheduleNotificationAsync(thermostatScheduleDay[] schedule, HANDeviceID thermostatID, string transactionID, HANInterfaceID interfaceID) {
            this.ThermostatScheduleNotificationAsync(schedule, thermostatID, transactionID, interfaceID, null);
        }
        
        /// <remarks/>
        public void ThermostatScheduleNotificationAsync(thermostatScheduleDay[] schedule, HANDeviceID thermostatID, string transactionID, HANInterfaceID interfaceID, object userState) {
            if ((this.ThermostatScheduleNotificationOperationCompleted == null)) {
                this.ThermostatScheduleNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThermostatScheduleNotificationOperationCompleted);
            }
            this.InvokeAsync("ThermostatScheduleNotification", new object[] {
                        schedule,
                        thermostatID,
                        transactionID,
                        interfaceID}, this.ThermostatScheduleNotificationOperationCompleted, userState);
        }
        
        private void OnThermostatScheduleNotificationOperationCompleted(object arg) {
            if ((this.ThermostatScheduleNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThermostatScheduleNotificationCompleted(this, new ThermostatScheduleNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ThermostatScheduleConfirmedNotifica" +
            "tion", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ThermostatScheduleConfirmedNotification(HANDeviceID thermostatID, string transactionID, bool isConfirmed, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("ThermostatScheduleConfirmedNotification", new object[] {
                        thermostatID,
                        transactionID,
                        isConfirmed,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ThermostatScheduleConfirmedNotificationAsync(HANDeviceID thermostatID, string transactionID, bool isConfirmed, HANInterfaceID interfaceID) {
            this.ThermostatScheduleConfirmedNotificationAsync(thermostatID, transactionID, isConfirmed, interfaceID, null);
        }
        
        /// <remarks/>
        public void ThermostatScheduleConfirmedNotificationAsync(HANDeviceID thermostatID, string transactionID, bool isConfirmed, HANInterfaceID interfaceID, object userState) {
            if ((this.ThermostatScheduleConfirmedNotificationOperationCompleted == null)) {
                this.ThermostatScheduleConfirmedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThermostatScheduleConfirmedNotificationOperationCompleted);
            }
            this.InvokeAsync("ThermostatScheduleConfirmedNotification", new object[] {
                        thermostatID,
                        transactionID,
                        isConfirmed,
                        interfaceID}, this.ThermostatScheduleConfirmedNotificationOperationCompleted, userState);
        }
        
        private void OnThermostatScheduleConfirmedNotificationOperationCompleted(object arg) {
            if ((this.ThermostatScheduleConfirmedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThermostatScheduleConfirmedNotificationCompleted(this, new ThermostatScheduleConfirmedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ThermostatConfigurationNotification" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ThermostatConfigurationNotification(HANDeviceID thermostatID, string transactionID, thermostatCurrentConfiguration currentConfiguration, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("ThermostatConfigurationNotification", new object[] {
                        thermostatID,
                        transactionID,
                        currentConfiguration,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ThermostatConfigurationNotificationAsync(HANDeviceID thermostatID, string transactionID, thermostatCurrentConfiguration currentConfiguration, HANInterfaceID interfaceID) {
            this.ThermostatConfigurationNotificationAsync(thermostatID, transactionID, currentConfiguration, interfaceID, null);
        }
        
        /// <remarks/>
        public void ThermostatConfigurationNotificationAsync(HANDeviceID thermostatID, string transactionID, thermostatCurrentConfiguration currentConfiguration, HANInterfaceID interfaceID, object userState) {
            if ((this.ThermostatConfigurationNotificationOperationCompleted == null)) {
                this.ThermostatConfigurationNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnThermostatConfigurationNotificationOperationCompleted);
            }
            this.InvokeAsync("ThermostatConfigurationNotification", new object[] {
                        thermostatID,
                        transactionID,
                        currentConfiguration,
                        interfaceID}, this.ThermostatConfigurationNotificationOperationCompleted, userState);
        }
        
        private void OnThermostatConfigurationNotificationOperationCompleted(object arg) {
            if ((this.ThermostatConfigurationNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ThermostatConfigurationNotificationCompleted(this, new ThermostatConfigurationNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateThermostatSchedule", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateThermostatSchedule([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] thermostatScheduleDay[] schedule, HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("InitiateThermostatSchedule", new object[] {
                        schedule,
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateThermostatScheduleAsync(thermostatScheduleDay[] schedule, HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            this.InitiateThermostatScheduleAsync(schedule, thermostatID, transactionID, responseURL, interfaceID, null);
        }
        
        /// <remarks/>
        public void InitiateThermostatScheduleAsync(thermostatScheduleDay[] schedule, HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID, object userState) {
            if ((this.InitiateThermostatScheduleOperationCompleted == null)) {
                this.InitiateThermostatScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateThermostatScheduleOperationCompleted);
            }
            this.InvokeAsync("InitiateThermostatSchedule", new object[] {
                        schedule,
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID}, this.InitiateThermostatScheduleOperationCompleted, userState);
        }
        
        private void OnInitiateThermostatScheduleOperationCompleted(object arg) {
            if ((this.InitiateThermostatScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateThermostatScheduleCompleted(this, new InitiateThermostatScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateThermostatScheduleRequest", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateThermostatScheduleRequest(HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("InitiateThermostatScheduleRequest", new object[] {
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateThermostatScheduleRequestAsync(HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            this.InitiateThermostatScheduleRequestAsync(thermostatID, transactionID, responseURL, interfaceID, null);
        }
        
        /// <remarks/>
        public void InitiateThermostatScheduleRequestAsync(HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID, object userState) {
            if ((this.InitiateThermostatScheduleRequestOperationCompleted == null)) {
                this.InitiateThermostatScheduleRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateThermostatScheduleRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateThermostatScheduleRequest", new object[] {
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID}, this.InitiateThermostatScheduleRequestOperationCompleted, userState);
        }
        
        private void OnInitiateThermostatScheduleRequestOperationCompleted(object arg) {
            if ((this.InitiateThermostatScheduleRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateThermostatScheduleRequestCompleted(this, new InitiateThermostatScheduleRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateThermostatConfiguration", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateThermostatConfiguration(thermostatConfiguration configuration, HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("InitiateThermostatConfiguration", new object[] {
                        configuration,
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateThermostatConfigurationAsync(thermostatConfiguration configuration, HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            this.InitiateThermostatConfigurationAsync(configuration, thermostatID, transactionID, responseURL, interfaceID, null);
        }
        
        /// <remarks/>
        public void InitiateThermostatConfigurationAsync(thermostatConfiguration configuration, HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID, object userState) {
            if ((this.InitiateThermostatConfigurationOperationCompleted == null)) {
                this.InitiateThermostatConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateThermostatConfigurationOperationCompleted);
            }
            this.InvokeAsync("InitiateThermostatConfiguration", new object[] {
                        configuration,
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID}, this.InitiateThermostatConfigurationOperationCompleted, userState);
        }
        
        private void OnInitiateThermostatConfigurationOperationCompleted(object arg) {
            if ((this.InitiateThermostatConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateThermostatConfigurationCompleted(this, new InitiateThermostatConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateThermostatConfigurationRequ" +
            "est", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateThermostatConfigurationRequest(HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("InitiateThermostatConfigurationRequest", new object[] {
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateThermostatConfigurationRequestAsync(HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            this.InitiateThermostatConfigurationRequestAsync(thermostatID, transactionID, responseURL, interfaceID, null);
        }
        
        /// <remarks/>
        public void InitiateThermostatConfigurationRequestAsync(HANDeviceID thermostatID, string transactionID, string responseURL, HANInterfaceID interfaceID, object userState) {
            if ((this.InitiateThermostatConfigurationRequestOperationCompleted == null)) {
                this.InitiateThermostatConfigurationRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateThermostatConfigurationRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateThermostatConfigurationRequest", new object[] {
                        thermostatID,
                        transactionID,
                        responseURL,
                        interfaceID}, this.InitiateThermostatConfigurationRequestOperationCompleted, userState);
        }
        
        private void OnInitiateThermostatConfigurationRequestOperationCompleted(object arg) {
            if ((this.InitiateThermostatConfigurationRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateThermostatConfigurationRequestCompleted(this, new InitiateThermostatConfigurationRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/IHDCapabilitySettingsNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] IHDCapabilitySettingsNotification(HANDeviceID inHomeDisplayID, string transactionID, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("IHDCapabilitySettingsNotification", new object[] {
                        inHomeDisplayID,
                        transactionID,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void IHDCapabilitySettingsNotificationAsync(HANDeviceID inHomeDisplayID, string transactionID, HANInterfaceID interfaceID) {
            this.IHDCapabilitySettingsNotificationAsync(inHomeDisplayID, transactionID, interfaceID, null);
        }
        
        /// <remarks/>
        public void IHDCapabilitySettingsNotificationAsync(HANDeviceID inHomeDisplayID, string transactionID, HANInterfaceID interfaceID, object userState) {
            if ((this.IHDCapabilitySettingsNotificationOperationCompleted == null)) {
                this.IHDCapabilitySettingsNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHDCapabilitySettingsNotificationOperationCompleted);
            }
            this.InvokeAsync("IHDCapabilitySettingsNotification", new object[] {
                        inHomeDisplayID,
                        transactionID,
                        interfaceID}, this.IHDCapabilitySettingsNotificationOperationCompleted, userState);
        }
        
        private void OnIHDCapabilitySettingsNotificationOperationCompleted(object arg) {
            if ((this.IHDCapabilitySettingsNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHDCapabilitySettingsNotificationCompleted(this, new IHDCapabilitySettingsNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetIHDGroupNamesByInHomeDisplayID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetIHDGroupNamesByInHomeDisplayID(string inHomeDisplayID) {
            object[] results = this.Invoke("GetIHDGroupNamesByInHomeDisplayID", new object[] {
                        inHomeDisplayID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIHDGroupNamesByInHomeDisplayIDAsync(string inHomeDisplayID) {
            this.GetIHDGroupNamesByInHomeDisplayIDAsync(inHomeDisplayID, null);
        }
        
        /// <remarks/>
        public void GetIHDGroupNamesByInHomeDisplayIDAsync(string inHomeDisplayID, object userState) {
            if ((this.GetIHDGroupNamesByInHomeDisplayIDOperationCompleted == null)) {
                this.GetIHDGroupNamesByInHomeDisplayIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIHDGroupNamesByInHomeDisplayIDOperationCompleted);
            }
            this.InvokeAsync("GetIHDGroupNamesByInHomeDisplayID", new object[] {
                        inHomeDisplayID}, this.GetIHDGroupNamesByInHomeDisplayIDOperationCompleted, userState);
        }
        
        private void OnGetIHDGroupNamesByInHomeDisplayIDOperationCompleted(object arg) {
            if ((this.GetIHDGroupNamesByInHomeDisplayIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIHDGroupNamesByInHomeDisplayIDCompleted(this, new GetIHDGroupNamesByInHomeDisplayIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EstablishIHDGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishIHDGroup(inHomeDisplayGroup IHDGroup) {
            object[] results = this.Invoke("EstablishIHDGroup", new object[] {
                        IHDGroup});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishIHDGroupAsync(inHomeDisplayGroup IHDGroup) {
            this.EstablishIHDGroupAsync(IHDGroup, null);
        }
        
        /// <remarks/>
        public void EstablishIHDGroupAsync(inHomeDisplayGroup IHDGroup, object userState) {
            if ((this.EstablishIHDGroupOperationCompleted == null)) {
                this.EstablishIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishIHDGroupOperationCompleted);
            }
            this.InvokeAsync("EstablishIHDGroup", new object[] {
                        IHDGroup}, this.EstablishIHDGroupOperationCompleted, userState);
        }
        
        private void OnEstablishIHDGroupOperationCompleted(object arg) {
            if ((this.EstablishIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishIHDGroupCompleted(this, new EstablishIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DeleteIHDGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteIHDGroup(string IHDGroupID) {
            object[] results = this.Invoke("DeleteIHDGroup", new object[] {
                        IHDGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteIHDGroupAsync(string IHDGroupID) {
            this.DeleteIHDGroupAsync(IHDGroupID, null);
        }
        
        /// <remarks/>
        public void DeleteIHDGroupAsync(string IHDGroupID, object userState) {
            if ((this.DeleteIHDGroupOperationCompleted == null)) {
                this.DeleteIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteIHDGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteIHDGroup", new object[] {
                        IHDGroupID}, this.DeleteIHDGroupOperationCompleted, userState);
        }
        
        private void OnDeleteIHDGroupOperationCompleted(object arg) {
            if ((this.DeleteIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteIHDGroupCompleted(this, new DeleteIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DeleteHANDeviceGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteHANDeviceGroup(HANGroupID groupID) {
            object[] results = this.Invoke("DeleteHANDeviceGroup", new object[] {
                        groupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteHANDeviceGroupAsync(HANGroupID groupID) {
            this.DeleteHANDeviceGroupAsync(groupID, null);
        }
        
        /// <remarks/>
        public void DeleteHANDeviceGroupAsync(HANGroupID groupID, object userState) {
            if ((this.DeleteHANDeviceGroupOperationCompleted == null)) {
                this.DeleteHANDeviceGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHANDeviceGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteHANDeviceGroup", new object[] {
                        groupID}, this.DeleteHANDeviceGroupOperationCompleted, userState);
        }
        
        private void OnDeleteHANDeviceGroupOperationCompleted(object arg) {
            if ((this.DeleteHANDeviceGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHANDeviceGroupCompleted(this, new DeleteHANDeviceGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayMessageNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayMessageNotification(inHomeDisplayMessage message) {
            object[] results = this.Invoke("InHomeDisplayMessageNotification", new object[] {
                        message});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayMessageNotificationAsync(inHomeDisplayMessage message) {
            this.InHomeDisplayMessageNotificationAsync(message, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayMessageNotificationAsync(inHomeDisplayMessage message, object userState) {
            if ((this.InHomeDisplayMessageNotificationOperationCompleted == null)) {
                this.InHomeDisplayMessageNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayMessageNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayMessageNotification", new object[] {
                        message}, this.InHomeDisplayMessageNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayMessageNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayMessageNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayMessageNotificationCompleted(this, new InHomeDisplayMessageNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateInHomeDisplayMessageToGroup" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateInHomeDisplayMessageToGroup(inHomeDisplayMessage[] messages, HANGroupID hanGroupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateInHomeDisplayMessageToGroup", new object[] {
                        messages,
                        hanGroupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateInHomeDisplayMessageToGroupAsync(inHomeDisplayMessage[] messages, HANGroupID hanGroupID, string transactionID, string responseURL) {
            this.InitiateInHomeDisplayMessageToGroupAsync(messages, hanGroupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateInHomeDisplayMessageToGroupAsync(inHomeDisplayMessage[] messages, HANGroupID hanGroupID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateInHomeDisplayMessageToGroupOperationCompleted == null)) {
                this.InitiateInHomeDisplayMessageToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateInHomeDisplayMessageToGroupOperationCompleted);
            }
            this.InvokeAsync("InitiateInHomeDisplayMessageToGroup", new object[] {
                        messages,
                        hanGroupID,
                        transactionID,
                        responseURL}, this.InitiateInHomeDisplayMessageToGroupOperationCompleted, userState);
        }
        
        private void OnInitiateInHomeDisplayMessageToGroupOperationCompleted(object arg) {
            if ((this.InitiateInHomeDisplayMessageToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateInHomeDisplayMessageToGroupCompleted(this, new InitiateInHomeDisplayMessageToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateInHomeDisplayMessage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateInHomeDisplayMessage(inHomeDisplayMessage message, HANDeviceID deviceID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("InitiateInHomeDisplayMessage", new object[] {
                        message,
                        deviceID,
                        transactionID,
                        responseURL,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateInHomeDisplayMessageAsync(inHomeDisplayMessage message, HANDeviceID deviceID, string transactionID, string responseURL, HANInterfaceID interfaceID) {
            this.InitiateInHomeDisplayMessageAsync(message, deviceID, transactionID, responseURL, interfaceID, null);
        }
        
        /// <remarks/>
        public void InitiateInHomeDisplayMessageAsync(inHomeDisplayMessage message, HANDeviceID deviceID, string transactionID, string responseURL, HANInterfaceID interfaceID, object userState) {
            if ((this.InitiateInHomeDisplayMessageOperationCompleted == null)) {
                this.InitiateInHomeDisplayMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateInHomeDisplayMessageOperationCompleted);
            }
            this.InvokeAsync("InitiateInHomeDisplayMessage", new object[] {
                        message,
                        deviceID,
                        transactionID,
                        responseURL,
                        interfaceID}, this.InitiateInHomeDisplayMessageOperationCompleted, userState);
        }
        
        private void OnInitiateInHomeDisplayMessageOperationCompleted(object arg) {
            if ((this.InitiateInHomeDisplayMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateInHomeDisplayMessageCompleted(this, new InitiateInHomeDisplayMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateHANCommissioning", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateHANCommissioning(HANInterfaceID interfaceID, string type, duration timeout, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateHANCommissioning", new object[] {
                        interfaceID,
                        type,
                        timeout,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateHANCommissioningAsync(HANInterfaceID interfaceID, string type, duration timeout, string transactionID, string responseURL) {
            this.InitiateHANCommissioningAsync(interfaceID, type, timeout, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateHANCommissioningAsync(HANInterfaceID interfaceID, string type, duration timeout, string transactionID, string responseURL, object userState) {
            if ((this.InitiateHANCommissioningOperationCompleted == null)) {
                this.InitiateHANCommissioningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateHANCommissioningOperationCompleted);
            }
            this.InvokeAsync("InitiateHANCommissioning", new object[] {
                        interfaceID,
                        type,
                        timeout,
                        transactionID,
                        responseURL}, this.InitiateHANCommissioningOperationCompleted, userState);
        }
        
        private void OnInitiateHANCommissioningOperationCompleted(object arg) {
            if ((this.InitiateHANCommissioningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateHANCommissioningCompleted(this, new InitiateHANCommissioningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/HANCommissioningNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] HANCommissioningNotification(HANCommission[] commissions, string transactionID) {
            object[] results = this.Invoke("HANCommissioningNotification", new object[] {
                        commissions,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void HANCommissioningNotificationAsync(HANCommission[] commissions, string transactionID) {
            this.HANCommissioningNotificationAsync(commissions, transactionID, null);
        }
        
        /// <remarks/>
        public void HANCommissioningNotificationAsync(HANCommission[] commissions, string transactionID, object userState) {
            if ((this.HANCommissioningNotificationOperationCompleted == null)) {
                this.HANCommissioningNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHANCommissioningNotificationOperationCompleted);
            }
            this.InvokeAsync("HANCommissioningNotification", new object[] {
                        commissions,
                        transactionID}, this.HANCommissioningNotificationOperationCompleted, userState);
        }
        
        private void OnHANCommissioningNotificationOperationCompleted(object arg) {
            if ((this.HANCommissioningNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HANCommissioningNotificationCompleted(this, new HANCommissioningNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelInHomeDisplayMessage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelInHomeDisplayMessage(string inHomeDisplayMessageID, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            object[] results = this.Invoke("CancelInHomeDisplayMessage", new object[] {
                        inHomeDisplayMessageID,
                        deviceID,
                        interfaceID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelInHomeDisplayMessageAsync(string inHomeDisplayMessageID, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            this.CancelInHomeDisplayMessageAsync(inHomeDisplayMessageID, deviceID, interfaceID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void CancelInHomeDisplayMessageAsync(string inHomeDisplayMessageID, HANDeviceID deviceID, HANInterfaceID interfaceID, string transactionID, string responseURL, object userState) {
            if ((this.CancelInHomeDisplayMessageOperationCompleted == null)) {
                this.CancelInHomeDisplayMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelInHomeDisplayMessageOperationCompleted);
            }
            this.InvokeAsync("CancelInHomeDisplayMessage", new object[] {
                        inHomeDisplayMessageID,
                        deviceID,
                        interfaceID,
                        transactionID,
                        responseURL}, this.CancelInHomeDisplayMessageOperationCompleted, userState);
        }
        
        private void OnCancelInHomeDisplayMessageOperationCompleted(object arg) {
            if ((this.CancelInHomeDisplayMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelInHomeDisplayMessageCompleted(this, new CancelInHomeDisplayMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelInHomeDisplayMessageToGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelInHomeDisplayMessageToGroup(string inHomeDisplayMessageID, HANGroupID HANGroupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("CancelInHomeDisplayMessageToGroup", new object[] {
                        inHomeDisplayMessageID,
                        HANGroupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelInHomeDisplayMessageToGroupAsync(string inHomeDisplayMessageID, HANGroupID HANGroupID, string transactionID, string responseURL) {
            this.CancelInHomeDisplayMessageToGroupAsync(inHomeDisplayMessageID, HANGroupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void CancelInHomeDisplayMessageToGroupAsync(string inHomeDisplayMessageID, HANGroupID HANGroupID, string transactionID, string responseURL, object userState) {
            if ((this.CancelInHomeDisplayMessageToGroupOperationCompleted == null)) {
                this.CancelInHomeDisplayMessageToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelInHomeDisplayMessageToGroupOperationCompleted);
            }
            this.InvokeAsync("CancelInHomeDisplayMessageToGroup", new object[] {
                        inHomeDisplayMessageID,
                        HANGroupID,
                        transactionID,
                        responseURL}, this.CancelInHomeDisplayMessageToGroupOperationCompleted, userState);
        }
        
        private void OnCancelInHomeDisplayMessageToGroupOperationCompleted(object arg) {
            if ((this.CancelInHomeDisplayMessageToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelInHomeDisplayMessageToGroupCompleted(this, new CancelInHomeDisplayMessageToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayBillingMessageNotifica" +
            "tion", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayBillingMessageNotification(inHomeDisplayBillingMessage message) {
            object[] results = this.Invoke("InHomeDisplayBillingMessageNotification", new object[] {
                        message});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayBillingMessageNotificationAsync(inHomeDisplayBillingMessage message) {
            this.InHomeDisplayBillingMessageNotificationAsync(message, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayBillingMessageNotificationAsync(inHomeDisplayBillingMessage message, object userState) {
            if ((this.InHomeDisplayBillingMessageNotificationOperationCompleted == null)) {
                this.InHomeDisplayBillingMessageNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayBillingMessageNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayBillingMessageNotification", new object[] {
                        message}, this.InHomeDisplayBillingMessageNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayBillingMessageNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayBillingMessageNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayBillingMessageNotificationCompleted(this, new InHomeDisplayBillingMessageNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ReadingScheduleResultNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ReadingScheduleResultNotification(readingScheduleResult[] scheduleResult, string transactionID, string errorString) {
            object[] results = this.Invoke("ReadingScheduleResultNotification", new object[] {
                        scheduleResult,
                        transactionID,
                        errorString});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadingScheduleResultNotificationAsync(readingScheduleResult[] scheduleResult, string transactionID, string errorString) {
            this.ReadingScheduleResultNotificationAsync(scheduleResult, transactionID, errorString, null);
        }
        
        /// <remarks/>
        public void ReadingScheduleResultNotificationAsync(readingScheduleResult[] scheduleResult, string transactionID, string errorString, object userState) {
            if ((this.ReadingScheduleResultNotificationOperationCompleted == null)) {
                this.ReadingScheduleResultNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadingScheduleResultNotificationOperationCompleted);
            }
            this.InvokeAsync("ReadingScheduleResultNotification", new object[] {
                        scheduleResult,
                        transactionID,
                        errorString}, this.ReadingScheduleResultNotificationOperationCompleted, userState);
        }
        
        private void OnReadingScheduleResultNotificationOperationCompleted(object arg) {
            if ((this.ReadingScheduleResultNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadingScheduleResultNotificationCompleted(this, new ReadingScheduleResultNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterEventNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterEventNotification(meterEventList events, string transactionID) {
            object[] results = this.Invoke("MeterEventNotification", new object[] {
                        events,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterEventNotificationAsync(meterEventList events, string transactionID) {
            this.MeterEventNotificationAsync(events, transactionID, null);
        }
        
        /// <remarks/>
        public void MeterEventNotificationAsync(meterEventList events, string transactionID, object userState) {
            if ((this.MeterEventNotificationOperationCompleted == null)) {
                this.MeterEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterEventNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterEventNotification", new object[] {
                        events,
                        transactionID}, this.MeterEventNotificationOperationCompleted, userState);
        }
        
        private void OnMeterEventNotificationOperationCompleted(object arg) {
            if ((this.MeterEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterEventNotificationCompleted(this, new MeterEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterBaseExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseExchangeNotification(meterBaseExchange[] MBChangeout) {
            object[] results = this.Invoke("MeterBaseExchangeNotification", new object[] {
                        MBChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseExchangeNotificationAsync(meterBaseExchange[] MBChangeout) {
            this.MeterBaseExchangeNotificationAsync(MBChangeout, null);
        }
        
        /// <remarks/>
        public void MeterBaseExchangeNotificationAsync(meterBaseExchange[] MBChangeout, object userState) {
            if ((this.MeterBaseExchangeNotificationOperationCompleted == null)) {
                this.MeterBaseExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseExchangeNotification", new object[] {
                        MBChangeout}, this.MeterBaseExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseExchangeNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseExchangeNotificationCompleted(this, new MeterBaseExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterBaseInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseInstalledNotification(meterBase[] addedMBs) {
            object[] results = this.Invoke("MeterBaseInstalledNotification", new object[] {
                        addedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseInstalledNotificationAsync(meterBase[] addedMBs) {
            this.MeterBaseInstalledNotificationAsync(addedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseInstalledNotificationAsync(meterBase[] addedMBs, object userState) {
            if ((this.MeterBaseInstalledNotificationOperationCompleted == null)) {
                this.MeterBaseInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseInstalledNotification", new object[] {
                        addedMBs}, this.MeterBaseInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseInstalledNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseInstalledNotificationCompleted(this, new MeterBaseInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterBaseChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseChangedNotification(meterBase[] changedMBs) {
            object[] results = this.Invoke("MeterBaseChangedNotification", new object[] {
                        changedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseChangedNotificationAsync(meterBase[] changedMBs) {
            this.MeterBaseChangedNotificationAsync(changedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseChangedNotificationAsync(meterBase[] changedMBs, object userState) {
            if ((this.MeterBaseChangedNotificationOperationCompleted == null)) {
                this.MeterBaseChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseChangedNotification", new object[] {
                        changedMBs}, this.MeterBaseChangedNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseChangedNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseChangedNotificationCompleted(this, new MeterBaseChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterBaseRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseRemoveNotification(meterBase[] removedMBs) {
            object[] results = this.Invoke("MeterBaseRemoveNotification", new object[] {
                        removedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseRemoveNotificationAsync(meterBase[] removedMBs) {
            this.MeterBaseRemoveNotificationAsync(removedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseRemoveNotificationAsync(meterBase[] removedMBs, object userState) {
            if ((this.MeterBaseRemoveNotificationOperationCompleted == null)) {
                this.MeterBaseRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseRemoveNotification", new object[] {
                        removedMBs}, this.MeterBaseRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseRemoveNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseRemoveNotificationCompleted(this, new MeterBaseRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterBaseRetireNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseRetireNotification(meterBase[] retiredMBs) {
            object[] results = this.Invoke("MeterBaseRetireNotification", new object[] {
                        retiredMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseRetireNotificationAsync(meterBase[] retiredMBs) {
            this.MeterBaseRetireNotificationAsync(retiredMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseRetireNotificationAsync(meterBase[] retiredMBs, object userState) {
            if ((this.MeterBaseRetireNotificationOperationCompleted == null)) {
                this.MeterBaseRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseRetireNotification", new object[] {
                        retiredMBs}, this.MeterBaseRetireNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseRetireNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseRetireNotificationCompleted(this, new MeterBaseRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterBaseAddNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterBaseAddNotification(meterBase[] addedMBs) {
            object[] results = this.Invoke("MeterBaseAddNotification", new object[] {
                        addedMBs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterBaseAddNotificationAsync(meterBase[] addedMBs) {
            this.MeterBaseAddNotificationAsync(addedMBs, null);
        }
        
        /// <remarks/>
        public void MeterBaseAddNotificationAsync(meterBase[] addedMBs, object userState) {
            if ((this.MeterBaseAddNotificationOperationCompleted == null)) {
                this.MeterBaseAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterBaseAddNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterBaseAddNotification", new object[] {
                        addedMBs}, this.MeterBaseAddNotificationOperationCompleted, userState);
        }
        
        private void OnMeterBaseAddNotificationOperationCompleted(object arg) {
            if ((this.MeterBaseAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterBaseAddNotificationCompleted(this, new MeterBaseAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ConnectDisconnectChangedNotificatio" +
            "n", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ConnectDisconnectChangedNotification(connectDisconnectEvent[] changedCDEvents) {
            object[] results = this.Invoke("ConnectDisconnectChangedNotification", new object[] {
                        changedCDEvents});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ConnectDisconnectChangedNotificationAsync(connectDisconnectEvent[] changedCDEvents) {
            this.ConnectDisconnectChangedNotificationAsync(changedCDEvents, null);
        }
        
        /// <remarks/>
        public void ConnectDisconnectChangedNotificationAsync(connectDisconnectEvent[] changedCDEvents, object userState) {
            if ((this.ConnectDisconnectChangedNotificationOperationCompleted == null)) {
                this.ConnectDisconnectChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnectDisconnectChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ConnectDisconnectChangedNotification", new object[] {
                        changedCDEvents}, this.ConnectDisconnectChangedNotificationOperationCompleted, userState);
        }
        
        private void OnConnectDisconnectChangedNotificationOperationCompleted(object arg) {
            if ((this.ConnectDisconnectChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConnectDisconnectChangedNotificationCompleted(this, new ConnectDisconnectChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/PricingTiersChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] PricingTiersChangedNotification(HANInterfaceID hanInterfaceID, string transactionID) {
            object[] results = this.Invoke("PricingTiersChangedNotification", new object[] {
                        hanInterfaceID,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void PricingTiersChangedNotificationAsync(HANInterfaceID hanInterfaceID, string transactionID) {
            this.PricingTiersChangedNotificationAsync(hanInterfaceID, transactionID, null);
        }
        
        /// <remarks/>
        public void PricingTiersChangedNotificationAsync(HANInterfaceID hanInterfaceID, string transactionID, object userState) {
            if ((this.PricingTiersChangedNotificationOperationCompleted == null)) {
                this.PricingTiersChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPricingTiersChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("PricingTiersChangedNotification", new object[] {
                        hanInterfaceID,
                        transactionID}, this.PricingTiersChangedNotificationOperationCompleted, userState);
        }
        
        private void OnPricingTiersChangedNotificationOperationCompleted(object arg) {
            if ((this.PricingTiersChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PricingTiersChangedNotificationCompleted(this, new PricingTiersChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/TemperatureTiersChangedNotification" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] TemperatureTiersChangedNotification(HANDeviceID thermostatID, string transactionID, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("TemperatureTiersChangedNotification", new object[] {
                        thermostatID,
                        transactionID,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void TemperatureTiersChangedNotificationAsync(HANDeviceID thermostatID, string transactionID, HANInterfaceID interfaceID) {
            this.TemperatureTiersChangedNotificationAsync(thermostatID, transactionID, interfaceID, null);
        }
        
        /// <remarks/>
        public void TemperatureTiersChangedNotificationAsync(HANDeviceID thermostatID, string transactionID, HANInterfaceID interfaceID, object userState) {
            if ((this.TemperatureTiersChangedNotificationOperationCompleted == null)) {
                this.TemperatureTiersChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTemperatureTiersChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("TemperatureTiersChangedNotification", new object[] {
                        thermostatID,
                        transactionID,
                        interfaceID}, this.TemperatureTiersChangedNotificationOperationCompleted, userState);
        }
        
        private void OnTemperatureTiersChangedNotificationOperationCompleted(object arg) {
            if ((this.TemperatureTiersChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TemperatureTiersChangedNotificationCompleted(this, new TemperatureTiersChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LoadCycleTiersChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LoadCycleTiersChangedNotification(HANDeviceID loadControlDeviceID, string transactionID, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("LoadCycleTiersChangedNotification", new object[] {
                        loadControlDeviceID,
                        transactionID,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadCycleTiersChangedNotificationAsync(HANDeviceID loadControlDeviceID, string transactionID, HANInterfaceID interfaceID) {
            this.LoadCycleTiersChangedNotificationAsync(loadControlDeviceID, transactionID, interfaceID, null);
        }
        
        /// <remarks/>
        public void LoadCycleTiersChangedNotificationAsync(HANDeviceID loadControlDeviceID, string transactionID, HANInterfaceID interfaceID, object userState) {
            if ((this.LoadCycleTiersChangedNotificationOperationCompleted == null)) {
                this.LoadCycleTiersChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCycleTiersChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("LoadCycleTiersChangedNotification", new object[] {
                        loadControlDeviceID,
                        transactionID,
                        interfaceID}, this.LoadCycleTiersChangedNotificationOperationCompleted, userState);
        }
        
        private void OnLoadCycleTiersChangedNotificationOperationCompleted(object arg) {
            if ((this.LoadCycleTiersChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCycleTiersChangedNotificationCompleted(this, new LoadCycleTiersChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ServiceOrderChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ServiceOrderChangedNotification(serviceOrder[] changedSOs) {
            object[] results = this.Invoke("ServiceOrderChangedNotification", new object[] {
                        changedSOs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ServiceOrderChangedNotificationAsync(serviceOrder[] changedSOs) {
            this.ServiceOrderChangedNotificationAsync(changedSOs, null);
        }
        
        /// <remarks/>
        public void ServiceOrderChangedNotificationAsync(serviceOrder[] changedSOs, object userState) {
            if ((this.ServiceOrderChangedNotificationOperationCompleted == null)) {
                this.ServiceOrderChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceOrderChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ServiceOrderChangedNotification", new object[] {
                        changedSOs}, this.ServiceOrderChangedNotificationOperationCompleted, userState);
        }
        
        private void OnServiceOrderChangedNotificationOperationCompleted(object arg) {
            if ((this.ServiceOrderChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceOrderChangedNotificationCompleted(this, new ServiceOrderChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ServiceOrderOpenedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ServiceOrderOpenedNotification(serviceOrder[] changedSOs) {
            object[] results = this.Invoke("ServiceOrderOpenedNotification", new object[] {
                        changedSOs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ServiceOrderOpenedNotificationAsync(serviceOrder[] changedSOs) {
            this.ServiceOrderOpenedNotificationAsync(changedSOs, null);
        }
        
        /// <remarks/>
        public void ServiceOrderOpenedNotificationAsync(serviceOrder[] changedSOs, object userState) {
            if ((this.ServiceOrderOpenedNotificationOperationCompleted == null)) {
                this.ServiceOrderOpenedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceOrderOpenedNotificationOperationCompleted);
            }
            this.InvokeAsync("ServiceOrderOpenedNotification", new object[] {
                        changedSOs}, this.ServiceOrderOpenedNotificationOperationCompleted, userState);
        }
        
        private void OnServiceOrderOpenedNotificationOperationCompleted(object arg) {
            if ((this.ServiceOrderOpenedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceOrderOpenedNotificationCompleted(this, new ServiceOrderOpenedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ServiceOrderClosedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ServiceOrderClosedNotification(serviceOrder[] changedSOs) {
            object[] results = this.Invoke("ServiceOrderClosedNotification", new object[] {
                        changedSOs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ServiceOrderClosedNotificationAsync(serviceOrder[] changedSOs) {
            this.ServiceOrderClosedNotificationAsync(changedSOs, null);
        }
        
        /// <remarks/>
        public void ServiceOrderClosedNotificationAsync(serviceOrder[] changedSOs, object userState) {
            if ((this.ServiceOrderClosedNotificationOperationCompleted == null)) {
                this.ServiceOrderClosedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceOrderClosedNotificationOperationCompleted);
            }
            this.InvokeAsync("ServiceOrderClosedNotification", new object[] {
                        changedSOs}, this.ServiceOrderClosedNotificationOperationCompleted, userState);
        }
        
        private void OnServiceOrderClosedNotificationOperationCompleted(object arg) {
            if ((this.ServiceOrderClosedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceOrderClosedNotificationCompleted(this, new ServiceOrderClosedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/UsageMonitoringNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UsageMonitoringNotification(meterID[] meters, meterReading[] readings, string transactionID) {
            object[] results = this.Invoke("UsageMonitoringNotification", new object[] {
                        meters,
                        readings,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UsageMonitoringNotificationAsync(meterID[] meters, meterReading[] readings, string transactionID) {
            this.UsageMonitoringNotificationAsync(meters, readings, transactionID, null);
        }
        
        /// <remarks/>
        public void UsageMonitoringNotificationAsync(meterID[] meters, meterReading[] readings, string transactionID, object userState) {
            if ((this.UsageMonitoringNotificationOperationCompleted == null)) {
                this.UsageMonitoringNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsageMonitoringNotificationOperationCompleted);
            }
            this.InvokeAsync("UsageMonitoringNotification", new object[] {
                        meters,
                        readings,
                        transactionID}, this.UsageMonitoringNotificationOperationCompleted, userState);
        }
        
        private void OnUsageMonitoringNotificationOperationCompleted(object arg) {
            if ((this.UsageMonitoringNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsageMonitoringNotificationCompleted(this, new UsageMonitoringNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LMDeviceAddNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceAddNotification(loadManagementDevice[] addedLMDs, string transactionID) {
            object[] results = this.Invoke("LMDeviceAddNotification", new object[] {
                        addedLMDs,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceAddNotificationAsync(loadManagementDevice[] addedLMDs, string transactionID) {
            this.LMDeviceAddNotificationAsync(addedLMDs, transactionID, null);
        }
        
        /// <remarks/>
        public void LMDeviceAddNotificationAsync(loadManagementDevice[] addedLMDs, string transactionID, object userState) {
            if ((this.LMDeviceAddNotificationOperationCompleted == null)) {
                this.LMDeviceAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceAddNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceAddNotification", new object[] {
                        addedLMDs,
                        transactionID}, this.LMDeviceAddNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceAddNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceAddNotificationCompleted(this, new LMDeviceAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LMDeviceChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceChangedNotification(loadManagementDevice[] changedLMDs, string transactionID) {
            object[] results = this.Invoke("LMDeviceChangedNotification", new object[] {
                        changedLMDs,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceChangedNotificationAsync(loadManagementDevice[] changedLMDs, string transactionID) {
            this.LMDeviceChangedNotificationAsync(changedLMDs, transactionID, null);
        }
        
        /// <remarks/>
        public void LMDeviceChangedNotificationAsync(loadManagementDevice[] changedLMDs, string transactionID, object userState) {
            if ((this.LMDeviceChangedNotificationOperationCompleted == null)) {
                this.LMDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceChangedNotification", new object[] {
                        changedLMDs,
                        transactionID}, this.LMDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceChangedNotificationCompleted(this, new LMDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LMDeviceExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceExchangeNotification(LMDeviceExchange[] LMDChangeout) {
            object[] results = this.Invoke("LMDeviceExchangeNotification", new object[] {
                        LMDChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceExchangeNotificationAsync(LMDeviceExchange[] LMDChangeout) {
            this.LMDeviceExchangeNotificationAsync(LMDChangeout, null);
        }
        
        /// <remarks/>
        public void LMDeviceExchangeNotificationAsync(LMDeviceExchange[] LMDChangeout, object userState) {
            if ((this.LMDeviceExchangeNotificationOperationCompleted == null)) {
                this.LMDeviceExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceExchangeNotification", new object[] {
                        LMDChangeout}, this.LMDeviceExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceExchangeNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceExchangeNotificationCompleted(this, new LMDeviceExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LMDeviceRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceRemoveNotification(loadManagementDevice[] removedLMDs, string transactionID) {
            object[] results = this.Invoke("LMDeviceRemoveNotification", new object[] {
                        removedLMDs,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceRemoveNotificationAsync(loadManagementDevice[] removedLMDs, string transactionID) {
            this.LMDeviceRemoveNotificationAsync(removedLMDs, transactionID, null);
        }
        
        /// <remarks/>
        public void LMDeviceRemoveNotificationAsync(loadManagementDevice[] removedLMDs, string transactionID, object userState) {
            if ((this.LMDeviceRemoveNotificationOperationCompleted == null)) {
                this.LMDeviceRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceRemoveNotification", new object[] {
                        removedLMDs,
                        transactionID}, this.LMDeviceRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceRemoveNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceRemoveNotificationCompleted(this, new LMDeviceRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LMDeviceRetireNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LMDeviceRetireNotification(loadManagementDevice[] retiredLMDs) {
            object[] results = this.Invoke("LMDeviceRetireNotification", new object[] {
                        retiredLMDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LMDeviceRetireNotificationAsync(loadManagementDevice[] retiredLMDs) {
            this.LMDeviceRetireNotificationAsync(retiredLMDs, null);
        }
        
        /// <remarks/>
        public void LMDeviceRetireNotificationAsync(loadManagementDevice[] retiredLMDs, object userState) {
            if ((this.LMDeviceRetireNotificationOperationCompleted == null)) {
                this.LMDeviceRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMDeviceRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("LMDeviceRetireNotification", new object[] {
                        retiredLMDs}, this.LMDeviceRetireNotificationOperationCompleted, userState);
        }
        
        private void OnLMDeviceRetireNotificationOperationCompleted(object arg) {
            if ((this.LMDeviceRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMDeviceRetireNotificationCompleted(this, new LMDeviceRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAAnalogChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAAnalogChangedNotification(scadaAnalog[] scadaAnalogs) {
            object[] results = this.Invoke("SCADAAnalogChangedNotification", new object[] {
                        scadaAnalogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationAsync(scadaAnalog[] scadaAnalogs) {
            this.SCADAAnalogChangedNotificationAsync(scadaAnalogs, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationAsync(scadaAnalog[] scadaAnalogs, object userState) {
            if ((this.SCADAAnalogChangedNotificationOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotification", new object[] {
                        scadaAnalogs}, this.SCADAAnalogChangedNotificationOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationCompleted(this, new SCADAAnalogChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAAnalogChangedNotificationByPoi" +
            "ntID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAAnalogChangedNotificationByPointID(scadaAnalog scadaAnalog) {
            object[] results = this.Invoke("SCADAAnalogChangedNotificationByPointID", new object[] {
                        scadaAnalog});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationByPointIDAsync(scadaAnalog scadaAnalog) {
            this.SCADAAnalogChangedNotificationByPointIDAsync(scadaAnalog, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationByPointIDAsync(scadaAnalog scadaAnalog, object userState) {
            if ((this.SCADAAnalogChangedNotificationByPointIDOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationByPointIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationByPointIDOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotificationByPointID", new object[] {
                        scadaAnalog}, this.SCADAAnalogChangedNotificationByPointIDOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationByPointIDOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationByPointIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationByPointIDCompleted(this, new SCADAAnalogChangedNotificationByPointIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAAnalogChangedNotificationForPo" +
            "wer", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAAnalogChangedNotificationForPower(scadaAnalog[] scadaAnalogs) {
            object[] results = this.Invoke("SCADAAnalogChangedNotificationForPower", new object[] {
                        scadaAnalogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForPowerAsync(scadaAnalog[] scadaAnalogs) {
            this.SCADAAnalogChangedNotificationForPowerAsync(scadaAnalogs, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForPowerAsync(scadaAnalog[] scadaAnalogs, object userState) {
            if ((this.SCADAAnalogChangedNotificationForPowerOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationForPowerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationForPowerOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotificationForPower", new object[] {
                        scadaAnalogs}, this.SCADAAnalogChangedNotificationForPowerOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationForPowerOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationForPowerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationForPowerCompleted(this, new SCADAAnalogChangedNotificationForPowerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAAnalogChangedNotificationForVo" +
            "ltage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAAnalogChangedNotificationForVoltage(scadaAnalog[] scadaAnalogs) {
            object[] results = this.Invoke("SCADAAnalogChangedNotificationForVoltage", new object[] {
                        scadaAnalogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForVoltageAsync(scadaAnalog[] scadaAnalogs) {
            this.SCADAAnalogChangedNotificationForVoltageAsync(scadaAnalogs, null);
        }
        
        /// <remarks/>
        public void SCADAAnalogChangedNotificationForVoltageAsync(scadaAnalog[] scadaAnalogs, object userState) {
            if ((this.SCADAAnalogChangedNotificationForVoltageOperationCompleted == null)) {
                this.SCADAAnalogChangedNotificationForVoltageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAAnalogChangedNotificationForVoltageOperationCompleted);
            }
            this.InvokeAsync("SCADAAnalogChangedNotificationForVoltage", new object[] {
                        scadaAnalogs}, this.SCADAAnalogChangedNotificationForVoltageOperationCompleted, userState);
        }
        
        private void OnSCADAAnalogChangedNotificationForVoltageOperationCompleted(object arg) {
            if ((this.SCADAAnalogChangedNotificationForVoltageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAAnalogChangedNotificationForVoltageCompleted(this, new SCADAAnalogChangedNotificationForVoltageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAPointChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAPointChangedNotification(scadaPoint[] scadaPoints) {
            object[] results = this.Invoke("SCADAPointChangedNotification", new object[] {
                        scadaPoints});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationAsync(scadaPoint[] scadaPoints) {
            this.SCADAPointChangedNotificationAsync(scadaPoints, null);
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationAsync(scadaPoint[] scadaPoints, object userState) {
            if ((this.SCADAPointChangedNotificationOperationCompleted == null)) {
                this.SCADAPointChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAPointChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("SCADAPointChangedNotification", new object[] {
                        scadaPoints}, this.SCADAPointChangedNotificationOperationCompleted, userState);
        }
        
        private void OnSCADAPointChangedNotificationOperationCompleted(object arg) {
            if ((this.SCADAPointChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAPointChangedNotificationCompleted(this, new SCADAPointChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAPointChangedNotificationForAna" +
            "log", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAPointChangedNotificationForAnalog(scadaPoint[] scadaPoints) {
            object[] results = this.Invoke("SCADAPointChangedNotificationForAnalog", new object[] {
                        scadaPoints});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForAnalogAsync(scadaPoint[] scadaPoints) {
            this.SCADAPointChangedNotificationForAnalogAsync(scadaPoints, null);
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForAnalogAsync(scadaPoint[] scadaPoints, object userState) {
            if ((this.SCADAPointChangedNotificationForAnalogOperationCompleted == null)) {
                this.SCADAPointChangedNotificationForAnalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAPointChangedNotificationForAnalogOperationCompleted);
            }
            this.InvokeAsync("SCADAPointChangedNotificationForAnalog", new object[] {
                        scadaPoints}, this.SCADAPointChangedNotificationForAnalogOperationCompleted, userState);
        }
        
        private void OnSCADAPointChangedNotificationForAnalogOperationCompleted(object arg) {
            if ((this.SCADAPointChangedNotificationForAnalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAPointChangedNotificationForAnalogCompleted(this, new SCADAPointChangedNotificationForAnalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAPointChangedNotificationForSta" +
            "tus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAPointChangedNotificationForStatus(scadaPoint[] scadaPoints) {
            object[] results = this.Invoke("SCADAPointChangedNotificationForStatus", new object[] {
                        scadaPoints});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForStatusAsync(scadaPoint[] scadaPoints) {
            this.SCADAPointChangedNotificationForStatusAsync(scadaPoints, null);
        }
        
        /// <remarks/>
        public void SCADAPointChangedNotificationForStatusAsync(scadaPoint[] scadaPoints, object userState) {
            if ((this.SCADAPointChangedNotificationForStatusOperationCompleted == null)) {
                this.SCADAPointChangedNotificationForStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAPointChangedNotificationForStatusOperationCompleted);
            }
            this.InvokeAsync("SCADAPointChangedNotificationForStatus", new object[] {
                        scadaPoints}, this.SCADAPointChangedNotificationForStatusOperationCompleted, userState);
        }
        
        private void OnSCADAPointChangedNotificationForStatusOperationCompleted(object arg) {
            if ((this.SCADAPointChangedNotificationForStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAPointChangedNotificationForStatusCompleted(this, new SCADAPointChangedNotificationForStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAStatusChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAStatusChangedNotification(scadaStatus[] scadaStatuses) {
            object[] results = this.Invoke("SCADAStatusChangedNotification", new object[] {
                        scadaStatuses});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationAsync(scadaStatus[] scadaStatuses) {
            this.SCADAStatusChangedNotificationAsync(scadaStatuses, null);
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationAsync(scadaStatus[] scadaStatuses, object userState) {
            if ((this.SCADAStatusChangedNotificationOperationCompleted == null)) {
                this.SCADAStatusChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAStatusChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("SCADAStatusChangedNotification", new object[] {
                        scadaStatuses}, this.SCADAStatusChangedNotificationOperationCompleted, userState);
        }
        
        private void OnSCADAStatusChangedNotificationOperationCompleted(object arg) {
            if ((this.SCADAStatusChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAStatusChangedNotificationCompleted(this, new SCADAStatusChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/SCADAStatusChangedNotificationByPoi" +
            "ntID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] SCADAStatusChangedNotificationByPointID(scadaStatus scadaStatus) {
            object[] results = this.Invoke("SCADAStatusChangedNotificationByPointID", new object[] {
                        scadaStatus});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationByPointIDAsync(scadaStatus scadaStatus) {
            this.SCADAStatusChangedNotificationByPointIDAsync(scadaStatus, null);
        }
        
        /// <remarks/>
        public void SCADAStatusChangedNotificationByPointIDAsync(scadaStatus scadaStatus, object userState) {
            if ((this.SCADAStatusChangedNotificationByPointIDOperationCompleted == null)) {
                this.SCADAStatusChangedNotificationByPointIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCADAStatusChangedNotificationByPointIDOperationCompleted);
            }
            this.InvokeAsync("SCADAStatusChangedNotificationByPointID", new object[] {
                        scadaStatus}, this.SCADAStatusChangedNotificationByPointIDOperationCompleted, userState);
        }
        
        private void OnSCADAStatusChangedNotificationByPointIDOperationCompleted(object arg) {
            if ((this.SCADAStatusChangedNotificationByPointIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCADAStatusChangedNotificationByPointIDCompleted(this, new SCADAStatusChangedNotificationByPointIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/StatusChangedNotificationByPointID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] StatusChangedNotificationByPointID(scadaStatus[] scadaStatuses, string transactionID) {
            object[] results = this.Invoke("StatusChangedNotificationByPointID", new object[] {
                        scadaStatuses,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void StatusChangedNotificationByPointIDAsync(scadaStatus[] scadaStatuses, string transactionID) {
            this.StatusChangedNotificationByPointIDAsync(scadaStatuses, transactionID, null);
        }
        
        /// <remarks/>
        public void StatusChangedNotificationByPointIDAsync(scadaStatus[] scadaStatuses, string transactionID, object userState) {
            if ((this.StatusChangedNotificationByPointIDOperationCompleted == null)) {
                this.StatusChangedNotificationByPointIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatusChangedNotificationByPointIDOperationCompleted);
            }
            this.InvokeAsync("StatusChangedNotificationByPointID", new object[] {
                        scadaStatuses,
                        transactionID}, this.StatusChangedNotificationByPointIDOperationCompleted, userState);
        }
        
        private void OnStatusChangedNotificationByPointIDOperationCompleted(object arg) {
            if ((this.StatusChangedNotificationByPointIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatusChangedNotificationByPointIDCompleted(this, new StatusChangedNotificationByPointIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/AnalogChangedNotificationByPointID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] AnalogChangedNotificationByPointID(scadaAnalog[] scadaAnalogs, string transactionID) {
            object[] results = this.Invoke("AnalogChangedNotificationByPointID", new object[] {
                        scadaAnalogs,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void AnalogChangedNotificationByPointIDAsync(scadaAnalog[] scadaAnalogs, string transactionID) {
            this.AnalogChangedNotificationByPointIDAsync(scadaAnalogs, transactionID, null);
        }
        
        /// <remarks/>
        public void AnalogChangedNotificationByPointIDAsync(scadaAnalog[] scadaAnalogs, string transactionID, object userState) {
            if ((this.AnalogChangedNotificationByPointIDOperationCompleted == null)) {
                this.AnalogChangedNotificationByPointIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnalogChangedNotificationByPointIDOperationCompleted);
            }
            this.InvokeAsync("AnalogChangedNotificationByPointID", new object[] {
                        scadaAnalogs,
                        transactionID}, this.AnalogChangedNotificationByPointIDOperationCompleted, userState);
        }
        
        private void OnAnalogChangedNotificationByPointIDOperationCompleted(object arg) {
            if ((this.AnalogChangedNotificationByPointIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnalogChangedNotificationByPointIDCompleted(this, new AnalogChangedNotificationByPointIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetSubstationNames", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSubstationNames() {
            object[] results = this.Invoke("GetSubstationNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubstationNamesAsync() {
            this.GetSubstationNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetSubstationNamesAsync(object userState) {
            if ((this.GetSubstationNamesOperationCompleted == null)) {
                this.GetSubstationNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubstationNamesOperationCompleted);
            }
            this.InvokeAsync("GetSubstationNames", new object[0], this.GetSubstationNamesOperationCompleted, userState);
        }
        
        private void OnGetSubstationNamesOperationCompleted(object arg) {
            if ((this.GetSubstationNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubstationNamesCompleted(this, new GetSubstationNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetDownlineCircuitElements", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetDownlineCircuitElements(string eaLoc, string lastReceived) {
            object[] results = this.Invoke("GetDownlineCircuitElements", new object[] {
                        eaLoc,
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDownlineCircuitElementsAsync(string eaLoc, string lastReceived) {
            this.GetDownlineCircuitElementsAsync(eaLoc, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetDownlineCircuitElementsAsync(string eaLoc, string lastReceived, object userState) {
            if ((this.GetDownlineCircuitElementsOperationCompleted == null)) {
                this.GetDownlineCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownlineCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetDownlineCircuitElements", new object[] {
                        eaLoc,
                        lastReceived}, this.GetDownlineCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetDownlineCircuitElementsOperationCompleted(object arg) {
            if ((this.GetDownlineCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownlineCircuitElementsCompleted(this, new GetDownlineCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetUplineCircuitElements", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetUplineCircuitElements(string eaLoc, string lastReceived) {
            object[] results = this.Invoke("GetUplineCircuitElements", new object[] {
                        eaLoc,
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUplineCircuitElementsAsync(string eaLoc, string lastReceived) {
            this.GetUplineCircuitElementsAsync(eaLoc, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetUplineCircuitElementsAsync(string eaLoc, string lastReceived, object userState) {
            if ((this.GetUplineCircuitElementsOperationCompleted == null)) {
                this.GetUplineCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUplineCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetUplineCircuitElements", new object[] {
                        eaLoc,
                        lastReceived}, this.GetUplineCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetUplineCircuitElementsOperationCompleted(object arg) {
            if ((this.GetUplineCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUplineCircuitElementsCompleted(this, new GetUplineCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetChildCircuitElements", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetChildCircuitElements(string eaLoc, string lastReceived) {
            object[] results = this.Invoke("GetChildCircuitElements", new object[] {
                        eaLoc,
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildCircuitElementsAsync(string eaLoc, string lastReceived) {
            this.GetChildCircuitElementsAsync(eaLoc, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetChildCircuitElementsAsync(string eaLoc, string lastReceived, object userState) {
            if ((this.GetChildCircuitElementsOperationCompleted == null)) {
                this.GetChildCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetChildCircuitElements", new object[] {
                        eaLoc,
                        lastReceived}, this.GetChildCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetChildCircuitElementsOperationCompleted(object arg) {
            if ((this.GetChildCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildCircuitElementsCompleted(this, new GetChildCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetParentCircuitElements", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetParentCircuitElements(string eaLoc, string lastReceived) {
            object[] results = this.Invoke("GetParentCircuitElements", new object[] {
                        eaLoc,
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetParentCircuitElementsAsync(string eaLoc, string lastReceived) {
            this.GetParentCircuitElementsAsync(eaLoc, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetParentCircuitElementsAsync(string eaLoc, string lastReceived, object userState) {
            if ((this.GetParentCircuitElementsOperationCompleted == null)) {
                this.GetParentCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetParentCircuitElements", new object[] {
                        eaLoc,
                        lastReceived}, this.GetParentCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetParentCircuitElementsOperationCompleted(object arg) {
            if ((this.GetParentCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentCircuitElementsCompleted(this, new GetParentCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllCircuitElements", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetAllCircuitElements(string lastReceived) {
            object[] results = this.Invoke("GetAllCircuitElements", new object[] {
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCircuitElementsAsync(string lastReceived) {
            this.GetAllCircuitElementsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllCircuitElementsAsync(string lastReceived, object userState) {
            if ((this.GetAllCircuitElementsOperationCompleted == null)) {
                this.GetAllCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetAllCircuitElements", new object[] {
                        lastReceived}, this.GetAllCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetAllCircuitElementsOperationCompleted(object arg) {
            if ((this.GetAllCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCircuitElementsCompleted(this, new GetAllCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetModifiedCircuitElements", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetModifiedCircuitElements(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedCircuitElements", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedCircuitElementsAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedCircuitElementsAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedCircuitElementsAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedCircuitElementsOperationCompleted == null)) {
                this.GetModifiedCircuitElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedCircuitElementsOperationCompleted);
            }
            this.InvokeAsync("GetModifiedCircuitElements", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedCircuitElementsOperationCompleted, userState);
        }
        
        private void OnGetModifiedCircuitElementsOperationCompleted(object arg) {
            if ((this.GetModifiedCircuitElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedCircuitElementsCompleted(this, new GetModifiedCircuitElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetDownlineMeterConnectivity", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetDownlineMeterConnectivity(meterID meterID) {
            object[] results = this.Invoke("GetDownlineMeterConnectivity", new object[] {
                        meterID});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDownlineMeterConnectivityAsync(meterID meterID) {
            this.GetDownlineMeterConnectivityAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetDownlineMeterConnectivityAsync(meterID meterID, object userState) {
            if ((this.GetDownlineMeterConnectivityOperationCompleted == null)) {
                this.GetDownlineMeterConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownlineMeterConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetDownlineMeterConnectivity", new object[] {
                        meterID}, this.GetDownlineMeterConnectivityOperationCompleted, userState);
        }
        
        private void OnGetDownlineMeterConnectivityOperationCompleted(object arg) {
            if ((this.GetDownlineMeterConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownlineMeterConnectivityCompleted(this, new GetDownlineMeterConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetUplineMeterConnectivity", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetUplineMeterConnectivity(meterID meterID) {
            object[] results = this.Invoke("GetUplineMeterConnectivity", new object[] {
                        meterID});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUplineMeterConnectivityAsync(meterID meterID) {
            this.GetUplineMeterConnectivityAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetUplineMeterConnectivityAsync(meterID meterID, object userState) {
            if ((this.GetUplineMeterConnectivityOperationCompleted == null)) {
                this.GetUplineMeterConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUplineMeterConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetUplineMeterConnectivity", new object[] {
                        meterID}, this.GetUplineMeterConnectivityOperationCompleted, userState);
        }
        
        private void OnGetUplineMeterConnectivityOperationCompleted(object arg) {
            if ((this.GetUplineMeterConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUplineMeterConnectivityCompleted(this, new GetUplineMeterConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetSiblingMeterConnectivity", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetSiblingMeterConnectivity(meterID meterID) {
            object[] results = this.Invoke("GetSiblingMeterConnectivity", new object[] {
                        meterID});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiblingMeterConnectivityAsync(meterID meterID) {
            this.GetSiblingMeterConnectivityAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetSiblingMeterConnectivityAsync(meterID meterID, object userState) {
            if ((this.GetSiblingMeterConnectivityOperationCompleted == null)) {
                this.GetSiblingMeterConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiblingMeterConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetSiblingMeterConnectivity", new object[] {
                        meterID}, this.GetSiblingMeterConnectivityOperationCompleted, userState);
        }
        
        private void OnGetSiblingMeterConnectivityOperationCompleted(object arg) {
            if ((this.GetSiblingMeterConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiblingMeterConnectivityCompleted(this, new GetSiblingMeterConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllOtherMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public otherMeter[] GetAllOtherMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllOtherMeters", new object[] {
                        lastReceived});
            return ((otherMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOtherMetersAsync(string lastReceived) {
            this.GetAllOtherMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllOtherMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllOtherMetersOperationCompleted == null)) {
                this.GetAllOtherMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOtherMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllOtherMeters", new object[] {
                        lastReceived}, this.GetAllOtherMetersOperationCompleted, userState);
        }
        
        private void OnGetAllOtherMetersOperationCompleted(object arg) {
            if ((this.GetAllOtherMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOtherMetersCompleted(this, new GetAllOtherMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllServiceLocations", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetAllServiceLocations(string lastReceived) {
            object[] results = this.Invoke("GetAllServiceLocations", new object[] {
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllServiceLocationsAsync(string lastReceived) {
            this.GetAllServiceLocationsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllServiceLocationsAsync(string lastReceived, object userState) {
            if ((this.GetAllServiceLocationsOperationCompleted == null)) {
                this.GetAllServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetAllServiceLocations", new object[] {
                        lastReceived}, this.GetAllServiceLocationsOperationCompleted, userState);
        }
        
        private void OnGetAllServiceLocationsOperationCompleted(object arg) {
            if ((this.GetAllServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllServiceLocationsCompleted(this, new GetAllServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetBilledUsage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public billedUsage GetBilledUsage(string accountNumber, System.DateTime cisBillDate) {
            object[] results = this.Invoke("GetBilledUsage", new object[] {
                        accountNumber,
                        cisBillDate});
            return ((billedUsage)(results[0]));
        }
        
        /// <remarks/>
        public void GetBilledUsageAsync(string accountNumber, System.DateTime cisBillDate) {
            this.GetBilledUsageAsync(accountNumber, cisBillDate, null);
        }
        
        /// <remarks/>
        public void GetBilledUsageAsync(string accountNumber, System.DateTime cisBillDate, object userState) {
            if ((this.GetBilledUsageOperationCompleted == null)) {
                this.GetBilledUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBilledUsageOperationCompleted);
            }
            this.InvokeAsync("GetBilledUsage", new object[] {
                        accountNumber,
                        cisBillDate}, this.GetBilledUsageOperationCompleted, userState);
        }
        
        private void OnGetBilledUsageOperationCompleted(object arg) {
            if ((this.GetBilledUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBilledUsageCompleted(this, new GetBilledUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetBillingData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public billingData[] GetBillingData(System.DateTime startBillDate, System.DateTime endBillDate, string lastReceived) {
            object[] results = this.Invoke("GetBillingData", new object[] {
                        startBillDate,
                        endBillDate,
                        lastReceived});
            return ((billingData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBillingDataAsync(System.DateTime startBillDate, System.DateTime endBillDate, string lastReceived) {
            this.GetBillingDataAsync(startBillDate, endBillDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetBillingDataAsync(System.DateTime startBillDate, System.DateTime endBillDate, string lastReceived, object userState) {
            if ((this.GetBillingDataOperationCompleted == null)) {
                this.GetBillingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillingDataOperationCompleted);
            }
            this.InvokeAsync("GetBillingData", new object[] {
                        startBillDate,
                        endBillDate,
                        lastReceived}, this.GetBillingDataOperationCompleted, userState);
        }
        
        private void OnGetBillingDataOperationCompleted(object arg) {
            if ((this.GetBillingDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillingDataCompleted(this, new GetBillingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetBillingDetail", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public billingDetail[] GetBillingDetail(string accountNumber, System.DateTime cisBillDate) {
            object[] results = this.Invoke("GetBillingDetail", new object[] {
                        accountNumber,
                        cisBillDate});
            return ((billingDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBillingDetailAsync(string accountNumber, System.DateTime cisBillDate) {
            this.GetBillingDetailAsync(accountNumber, cisBillDate, null);
        }
        
        /// <remarks/>
        public void GetBillingDetailAsync(string accountNumber, System.DateTime cisBillDate, object userState) {
            if ((this.GetBillingDetailOperationCompleted == null)) {
                this.GetBillingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillingDetailOperationCompleted);
            }
            this.InvokeAsync("GetBillingDetail", new object[] {
                        accountNumber,
                        cisBillDate}, this.GetBillingDetailOperationCompleted, userState);
        }
        
        private void OnGetBillingDetailOperationCompleted(object arg) {
            if ((this.GetBillingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillingDetailCompleted(this, new GetBillingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetChargeableDevicesByAccountNumber" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public chargeableDevice[] GetChargeableDevicesByAccountNumber(string accountNumber) {
            object[] results = this.Invoke("GetChargeableDevicesByAccountNumber", new object[] {
                        accountNumber});
            return ((chargeableDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChargeableDevicesByAccountNumberAsync(string accountNumber) {
            this.GetChargeableDevicesByAccountNumberAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetChargeableDevicesByAccountNumberAsync(string accountNumber, object userState) {
            if ((this.GetChargeableDevicesByAccountNumberOperationCompleted == null)) {
                this.GetChargeableDevicesByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChargeableDevicesByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetChargeableDevicesByAccountNumber", new object[] {
                        accountNumber}, this.GetChargeableDevicesByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetChargeableDevicesByAccountNumberOperationCompleted(object arg) {
            if ((this.GetChargeableDevicesByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChargeableDevicesByAccountNumberCompleted(this, new GetChargeableDevicesByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetIHDGroupMembers", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public inHomeDisplayGroup GetIHDGroupMembers(string IHDGroupName) {
            object[] results = this.Invoke("GetIHDGroupMembers", new object[] {
                        IHDGroupName});
            return ((inHomeDisplayGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetIHDGroupMembersAsync(string IHDGroupName) {
            this.GetIHDGroupMembersAsync(IHDGroupName, null);
        }
        
        /// <remarks/>
        public void GetIHDGroupMembersAsync(string IHDGroupName, object userState) {
            if ((this.GetIHDGroupMembersOperationCompleted == null)) {
                this.GetIHDGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIHDGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetIHDGroupMembers", new object[] {
                        IHDGroupName}, this.GetIHDGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetIHDGroupMembersOperationCompleted(object arg) {
            if ((this.GetIHDGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIHDGroupMembersCompleted(this, new GetIHDGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetIHDGroupNames", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetIHDGroupNames() {
            object[] results = this.Invoke("GetIHDGroupNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetIHDGroupNamesAsync() {
            this.GetIHDGroupNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetIHDGroupNamesAsync(object userState) {
            if ((this.GetIHDGroupNamesOperationCompleted == null)) {
                this.GetIHDGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIHDGroupNamesOperationCompleted);
            }
            this.InvokeAsync("GetIHDGroupNames", new object[0], this.GetIHDGroupNamesOperationCompleted, userState);
        }
        
        private void OnGetIHDGroupNamesOperationCompleted(object arg) {
            if ((this.GetIHDGroupNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIHDGroupNamesCompleted(this, new GetIHDGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateHANRegistration", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateHANRegistration(HANInterfaceID HANInterfaceID, HANDeviceID deviceID, HANSecurityToken securityToken, duration timeOut, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateHANRegistration", new object[] {
                        HANInterfaceID,
                        deviceID,
                        securityToken,
                        timeOut,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateHANRegistrationAsync(HANInterfaceID HANInterfaceID, HANDeviceID deviceID, HANSecurityToken securityToken, duration timeOut, string responseURL, string transactionID) {
            this.InitiateHANRegistrationAsync(HANInterfaceID, deviceID, securityToken, timeOut, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateHANRegistrationAsync(HANInterfaceID HANInterfaceID, HANDeviceID deviceID, HANSecurityToken securityToken, duration timeOut, string responseURL, string transactionID, object userState) {
            if ((this.InitiateHANRegistrationOperationCompleted == null)) {
                this.InitiateHANRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateHANRegistrationOperationCompleted);
            }
            this.InvokeAsync("InitiateHANRegistration", new object[] {
                        HANInterfaceID,
                        deviceID,
                        securityToken,
                        timeOut,
                        responseURL,
                        transactionID}, this.InitiateHANRegistrationOperationCompleted, userState);
        }
        
        private void OnInitiateHANRegistrationOperationCompleted(object arg) {
            if ((this.InitiateHANRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateHANRegistrationCompleted(this, new InitiateHANRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelHANRegistration", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelHANRegistration(HANInterfaceID HANInterfaceID, HANDeviceID deviceID, string responseURL, string transactionID) {
            object[] results = this.Invoke("CancelHANRegistration", new object[] {
                        HANInterfaceID,
                        deviceID,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelHANRegistrationAsync(HANInterfaceID HANInterfaceID, HANDeviceID deviceID, string responseURL, string transactionID) {
            this.CancelHANRegistrationAsync(HANInterfaceID, deviceID, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void CancelHANRegistrationAsync(HANInterfaceID HANInterfaceID, HANDeviceID deviceID, string responseURL, string transactionID, object userState) {
            if ((this.CancelHANRegistrationOperationCompleted == null)) {
                this.CancelHANRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelHANRegistrationOperationCompleted);
            }
            this.InvokeAsync("CancelHANRegistration", new object[] {
                        HANInterfaceID,
                        deviceID,
                        responseURL,
                        transactionID}, this.CancelHANRegistrationOperationCompleted, userState);
        }
        
        private void OnCancelHANRegistrationOperationCompleted(object arg) {
            if ((this.CancelHANRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelHANRegistrationCompleted(this, new CancelHANRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateHANRegistrationStatusReques" +
            "t", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateHANRegistrationStatusRequest(registrationStatus[] registrationStatuses, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateHANRegistrationStatusRequest", new object[] {
                        registrationStatuses,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateHANRegistrationStatusRequestAsync(registrationStatus[] registrationStatuses, string responseURL, string transactionID) {
            this.InitiateHANRegistrationStatusRequestAsync(registrationStatuses, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateHANRegistrationStatusRequestAsync(registrationStatus[] registrationStatuses, string responseURL, string transactionID, object userState) {
            if ((this.InitiateHANRegistrationStatusRequestOperationCompleted == null)) {
                this.InitiateHANRegistrationStatusRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateHANRegistrationStatusRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateHANRegistrationStatusRequest", new object[] {
                        registrationStatuses,
                        responseURL,
                        transactionID}, this.InitiateHANRegistrationStatusRequestOperationCompleted, userState);
        }
        
        private void OnInitiateHANRegistrationStatusRequestOperationCompleted(object arg) {
            if ((this.InitiateHANRegistrationStatusRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateHANRegistrationStatusRequestCompleted(this, new InitiateHANRegistrationStatusRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/HANRegistrationNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] HANRegistrationNotification(HANRegistration[] registrations, string transactionID) {
            object[] results = this.Invoke("HANRegistrationNotification", new object[] {
                        registrations,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void HANRegistrationNotificationAsync(HANRegistration[] registrations, string transactionID) {
            this.HANRegistrationNotificationAsync(registrations, transactionID, null);
        }
        
        /// <remarks/>
        public void HANRegistrationNotificationAsync(HANRegistration[] registrations, string transactionID, object userState) {
            if ((this.HANRegistrationNotificationOperationCompleted == null)) {
                this.HANRegistrationNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHANRegistrationNotificationOperationCompleted);
            }
            this.InvokeAsync("HANRegistrationNotification", new object[] {
                        registrations,
                        transactionID}, this.HANRegistrationNotificationOperationCompleted, userState);
        }
        
        private void OnHANRegistrationNotificationOperationCompleted(object arg) {
            if ((this.HANRegistrationNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HANRegistrationNotificationCompleted(this, new HANRegistrationNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterHistoryByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterHistoryEvent[] GetMeterHistoryByMeterID(meterID meter) {
            object[] results = this.Invoke("GetMeterHistoryByMeterID", new object[] {
                        meter});
            return ((meterHistoryEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterHistoryByMeterIDAsync(meterID meter) {
            this.GetMeterHistoryByMeterIDAsync(meter, null);
        }
        
        /// <remarks/>
        public void GetMeterHistoryByMeterIDAsync(meterID meter, object userState) {
            if ((this.GetMeterHistoryByMeterIDOperationCompleted == null)) {
                this.GetMeterHistoryByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterHistoryByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterHistoryByMeterID", new object[] {
                        meter}, this.GetMeterHistoryByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetMeterHistoryByMeterIDOperationCompleted(object arg) {
            if ((this.GetMeterHistoryByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterHistoryByMeterIDCompleted(this, new GetMeterHistoryByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetPPMBalanceAdjustments", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ppmBalanceAdjustment[] GetPPMBalanceAdjustments(System.DateTime startTime, System.DateTime stopTime) {
            object[] results = this.Invoke("GetPPMBalanceAdjustments", new object[] {
                        startTime,
                        stopTime});
            return ((ppmBalanceAdjustment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPPMBalanceAdjustmentsAsync(System.DateTime startTime, System.DateTime stopTime) {
            this.GetPPMBalanceAdjustmentsAsync(startTime, stopTime, null);
        }
        
        /// <remarks/>
        public void GetPPMBalanceAdjustmentsAsync(System.DateTime startTime, System.DateTime stopTime, object userState) {
            if ((this.GetPPMBalanceAdjustmentsOperationCompleted == null)) {
                this.GetPPMBalanceAdjustmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPMBalanceAdjustmentsOperationCompleted);
            }
            this.InvokeAsync("GetPPMBalanceAdjustments", new object[] {
                        startTime,
                        stopTime}, this.GetPPMBalanceAdjustmentsOperationCompleted, userState);
        }
        
        private void OnGetPPMBalanceAdjustmentsOperationCompleted(object arg) {
            if ((this.GetPPMBalanceAdjustmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPMBalanceAdjustmentsCompleted(this, new GetPPMBalanceAdjustmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetPPMCustomer", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ppmLocation GetPPMCustomer(string accountNumber) {
            object[] results = this.Invoke("GetPPMCustomer", new object[] {
                        accountNumber});
            return ((ppmLocation)(results[0]));
        }
        
        /// <remarks/>
        public void GetPPMCustomerAsync(string accountNumber) {
            this.GetPPMCustomerAsync(accountNumber, null);
        }
        
        /// <remarks/>
        public void GetPPMCustomerAsync(string accountNumber, object userState) {
            if ((this.GetPPMCustomerOperationCompleted == null)) {
                this.GetPPMCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPMCustomerOperationCompleted);
            }
            this.InvokeAsync("GetPPMCustomer", new object[] {
                        accountNumber}, this.GetPPMCustomerOperationCompleted, userState);
        }
        
        private void OnGetPPMCustomerOperationCompleted(object arg) {
            if ((this.GetPPMCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPMCustomerCompleted(this, new GetPPMCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DisplayODMonitoringRequests", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public objectRef[] DisplayODMonitoringRequests() {
            object[] results = this.Invoke("DisplayODMonitoringRequests", new object[0]);
            return ((objectRef[])(results[0]));
        }
        
        /// <remarks/>
        public void DisplayODMonitoringRequestsAsync() {
            this.DisplayODMonitoringRequestsAsync(null);
        }
        
        /// <remarks/>
        public void DisplayODMonitoringRequestsAsync(object userState) {
            if ((this.DisplayODMonitoringRequestsOperationCompleted == null)) {
                this.DisplayODMonitoringRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisplayODMonitoringRequestsOperationCompleted);
            }
            this.InvokeAsync("DisplayODMonitoringRequests", new object[0], this.DisplayODMonitoringRequestsOperationCompleted, userState);
        }
        
        private void OnDisplayODMonitoringRequestsOperationCompleted(object arg) {
            if ((this.DisplayODMonitoringRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisplayODMonitoringRequestsCompleted(this, new DisplayODMonitoringRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelODMonitoringRequestByObject", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelODMonitoringRequestByObject(objectRef[] ObjectRef, System.DateTime requestDate) {
            object[] results = this.Invoke("CancelODMonitoringRequestByObject", new object[] {
                        ObjectRef,
                        requestDate});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelODMonitoringRequestByObjectAsync(objectRef[] ObjectRef, System.DateTime requestDate) {
            this.CancelODMonitoringRequestByObjectAsync(ObjectRef, requestDate, null);
        }
        
        /// <remarks/>
        public void CancelODMonitoringRequestByObjectAsync(objectRef[] ObjectRef, System.DateTime requestDate, object userState) {
            if ((this.CancelODMonitoringRequestByObjectOperationCompleted == null)) {
                this.CancelODMonitoringRequestByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelODMonitoringRequestByObjectOperationCompleted);
            }
            this.InvokeAsync("CancelODMonitoringRequestByObject", new object[] {
                        ObjectRef,
                        requestDate}, this.CancelODMonitoringRequestByObjectOperationCompleted, userState);
        }
        
        private void OnCancelODMonitoringRequestByObjectOperationCompleted(object arg) {
            if ((this.CancelODMonitoringRequestByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelODMonitoringRequestByObjectCompleted(this, new CancelODMonitoringRequestByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateConnectDisconnect", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateConnectDisconnect(connectDisconnectEvent[] cdEvents, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateConnectDisconnect", new object[] {
                        cdEvents,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateConnectDisconnectAsync(connectDisconnectEvent[] cdEvents, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateConnectDisconnectAsync(cdEvents, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateConnectDisconnectAsync(connectDisconnectEvent[] cdEvents, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateConnectDisconnectOperationCompleted == null)) {
                this.InitiateConnectDisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateConnectDisconnectOperationCompleted);
            }
            this.InvokeAsync("InitiateConnectDisconnect", new object[] {
                        cdEvents,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateConnectDisconnectOperationCompleted, userState);
        }
        
        private void OnInitiateConnectDisconnectOperationCompleted(object arg) {
            if ((this.InitiateConnectDisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateConnectDisconnectCompleted(this, new InitiateConnectDisconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDStateChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDStateChangedNotification(CDStateChange stateChange, string transactionID) {
            object[] results = this.Invoke("CDStateChangedNotification", new object[] {
                        stateChange,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDStateChangedNotificationAsync(CDStateChange stateChange, string transactionID) {
            this.CDStateChangedNotificationAsync(stateChange, transactionID, null);
        }
        
        /// <remarks/>
        public void CDStateChangedNotificationAsync(CDStateChange stateChange, string transactionID, object userState) {
            if ((this.CDStateChangedNotificationOperationCompleted == null)) {
                this.CDStateChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStateChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStateChangedNotification", new object[] {
                        stateChange,
                        transactionID}, this.CDStateChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCDStateChangedNotificationOperationCompleted(object arg) {
            if ((this.CDStateChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStateChangedNotificationCompleted(this, new CDStateChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDStatesChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDStatesChangedNotification(CDStateChange[] stateChanges, string transactionID) {
            object[] results = this.Invoke("CDStatesChangedNotification", new object[] {
                        stateChanges,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDStatesChangedNotificationAsync(CDStateChange[] stateChanges, string transactionID) {
            this.CDStatesChangedNotificationAsync(stateChanges, transactionID, null);
        }
        
        /// <remarks/>
        public void CDStatesChangedNotificationAsync(CDStateChange[] stateChanges, string transactionID, object userState) {
            if ((this.CDStatesChangedNotificationOperationCompleted == null)) {
                this.CDStatesChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStatesChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStatesChangedNotification", new object[] {
                        stateChanges,
                        transactionID}, this.CDStatesChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCDStatesChangedNotificationOperationCompleted(object arg) {
            if ((this.CDStatesChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStatesChangedNotificationCompleted(this, new CDStatesChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/UpdateServiceLocationDisplays", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UpdateServiceLocationDisplays(string serviceLocationID, serviceType serviceType) {
            object[] results = this.Invoke("UpdateServiceLocationDisplays", new object[] {
                        serviceLocationID,
                        serviceType});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UpdateServiceLocationDisplaysAsync(string serviceLocationID, serviceType serviceType) {
            this.UpdateServiceLocationDisplaysAsync(serviceLocationID, serviceType, null);
        }
        
        /// <remarks/>
        public void UpdateServiceLocationDisplaysAsync(string serviceLocationID, serviceType serviceType, object userState) {
            if ((this.UpdateServiceLocationDisplaysOperationCompleted == null)) {
                this.UpdateServiceLocationDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateServiceLocationDisplaysOperationCompleted);
            }
            this.InvokeAsync("UpdateServiceLocationDisplays", new object[] {
                        serviceLocationID,
                        serviceType}, this.UpdateServiceLocationDisplaysOperationCompleted, userState);
        }
        
        private void OnUpdateServiceLocationDisplaysOperationCompleted(object arg) {
            if ((this.UpdateServiceLocationDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateServiceLocationDisplaysCompleted(this, new UpdateServiceLocationDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/IntervalDataNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] IntervalDataNotification(intervalData intervalReads, string transactionID, string errorString) {
            object[] results = this.Invoke("IntervalDataNotification", new object[] {
                        intervalReads,
                        transactionID,
                        errorString});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void IntervalDataNotificationAsync(intervalData intervalReads, string transactionID, string errorString) {
            this.IntervalDataNotificationAsync(intervalReads, transactionID, errorString, null);
        }
        
        /// <remarks/>
        public void IntervalDataNotificationAsync(intervalData intervalReads, string transactionID, string errorString, object userState) {
            if ((this.IntervalDataNotificationOperationCompleted == null)) {
                this.IntervalDataNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIntervalDataNotificationOperationCompleted);
            }
            this.InvokeAsync("IntervalDataNotification", new object[] {
                        intervalReads,
                        transactionID,
                        errorString}, this.IntervalDataNotificationOperationCompleted, userState);
        }
        
        private void OnIntervalDataNotificationOperationCompleted(object arg) {
            if ((this.IntervalDataNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IntervalDataNotificationCompleted(this, new IntervalDataNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateLPMeterReadingsByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateLPMeterReadingsByMeterID(meterID[] meterIDs, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateLPMeterReadingsByMeterID", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateLPMeterReadingsByMeterIDAsync(meterID[] meterIDs, string responseURL, string transactionID) {
            this.InitiateLPMeterReadingsByMeterIDAsync(meterIDs, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateLPMeterReadingsByMeterIDAsync(meterID[] meterIDs, string responseURL, string transactionID, object userState) {
            if ((this.InitiateLPMeterReadingsByMeterIDOperationCompleted == null)) {
                this.InitiateLPMeterReadingsByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateLPMeterReadingsByMeterIDOperationCompleted);
            }
            this.InvokeAsync("InitiateLPMeterReadingsByMeterID", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID}, this.InitiateLPMeterReadingsByMeterIDOperationCompleted, userState);
        }
        
        private void OnInitiateLPMeterReadingsByMeterIDOperationCompleted(object arg) {
            if ((this.InitiateLPMeterReadingsByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateLPMeterReadingsByMeterIDCompleted(this, new InitiateLPMeterReadingsByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateCDStateRequest", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateCDStateRequest(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateCDStateRequest", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateCDStateRequestAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateCDStateRequestAsync(states, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateCDStateRequestAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateCDStateRequestOperationCompleted == null)) {
                this.InitiateCDStateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateCDStateRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateCDStateRequest", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateCDStateRequestOperationCompleted, userState);
        }
        
        private void OnInitiateCDStateRequestOperationCompleted(object arg) {
            if ((this.InitiateCDStateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateCDStateRequestCompleted(this, new InitiateCDStateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDStateNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDStateNotification(CDState state, string transactionID) {
            object[] results = this.Invoke("CDStateNotification", new object[] {
                        state,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDStateNotificationAsync(CDState state, string transactionID) {
            this.CDStateNotificationAsync(state, transactionID, null);
        }
        
        /// <remarks/>
        public void CDStateNotificationAsync(CDState state, string transactionID, object userState) {
            if ((this.CDStateNotificationOperationCompleted == null)) {
                this.CDStateNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStateNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStateNotification", new object[] {
                        state,
                        transactionID}, this.CDStateNotificationOperationCompleted, userState);
        }
        
        private void OnCDStateNotificationOperationCompleted(object arg) {
            if ((this.CDStateNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStateNotificationCompleted(this, new CDStateNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDStatesNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDStatesNotification(CDState[] states, string transactionID) {
            object[] results = this.Invoke("CDStatesNotification", new object[] {
                        states,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDStatesNotificationAsync(CDState[] states, string transactionID) {
            this.CDStatesNotificationAsync(states, transactionID, null);
        }
        
        /// <remarks/>
        public void CDStatesNotificationAsync(CDState[] states, string transactionID, object userState) {
            if ((this.CDStatesNotificationOperationCompleted == null)) {
                this.CDStatesNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDStatesNotificationOperationCompleted);
            }
            this.InvokeAsync("CDStatesNotification", new object[] {
                        states,
                        transactionID}, this.CDStatesNotificationOperationCompleted, userState);
        }
        
        private void OnCDStatesNotificationOperationCompleted(object arg) {
            if ((this.CDStatesNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDStatesNotificationCompleted(this, new CDStatesNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelDemandResponseEvent", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelDemandResponseEvent(demandResponseEvent demandResponseEvent, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            object[] results = this.Invoke("CancelDemandResponseEvent", new object[] {
                        demandResponseEvent,
                        interfaceID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelDemandResponseEventAsync(demandResponseEvent demandResponseEvent, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            this.CancelDemandResponseEventAsync(demandResponseEvent, interfaceID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void CancelDemandResponseEventAsync(demandResponseEvent demandResponseEvent, HANInterfaceID interfaceID, string transactionID, string responseURL, object userState) {
            if ((this.CancelDemandResponseEventOperationCompleted == null)) {
                this.CancelDemandResponseEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDemandResponseEventOperationCompleted);
            }
            this.InvokeAsync("CancelDemandResponseEvent", new object[] {
                        demandResponseEvent,
                        interfaceID,
                        transactionID,
                        responseURL}, this.CancelDemandResponseEventOperationCompleted, userState);
        }
        
        private void OnCancelDemandResponseEventOperationCompleted(object arg) {
            if ((this.CancelDemandResponseEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDemandResponseEventCompleted(this, new CancelDemandResponseEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelDemandResponseEventToGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelDemandResponseEventToGroup(string eventID, HANGroupID groupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("CancelDemandResponseEventToGroup", new object[] {
                        eventID,
                        groupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelDemandResponseEventToGroupAsync(string eventID, HANGroupID groupID, string transactionID, string responseURL) {
            this.CancelDemandResponseEventToGroupAsync(eventID, groupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void CancelDemandResponseEventToGroupAsync(string eventID, HANGroupID groupID, string transactionID, string responseURL, object userState) {
            if ((this.CancelDemandResponseEventToGroupOperationCompleted == null)) {
                this.CancelDemandResponseEventToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDemandResponseEventToGroupOperationCompleted);
            }
            this.InvokeAsync("CancelDemandResponseEventToGroup", new object[] {
                        eventID,
                        groupID,
                        transactionID,
                        responseURL}, this.CancelDemandResponseEventToGroupOperationCompleted, userState);
        }
        
        private void OnCancelDemandResponseEventToGroupOperationCompleted(object arg) {
            if ((this.CancelDemandResponseEventToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDemandResponseEventToGroupCompleted(this, new CancelDemandResponseEventToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DemandResponseEventNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DemandResponseEventNotification(demandResponseEventStatus[] eventHistory, string transactionID) {
            object[] results = this.Invoke("DemandResponseEventNotification", new object[] {
                        eventHistory,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DemandResponseEventNotificationAsync(demandResponseEventStatus[] eventHistory, string transactionID) {
            this.DemandResponseEventNotificationAsync(eventHistory, transactionID, null);
        }
        
        /// <remarks/>
        public void DemandResponseEventNotificationAsync(demandResponseEventStatus[] eventHistory, string transactionID, object userState) {
            if ((this.DemandResponseEventNotificationOperationCompleted == null)) {
                this.DemandResponseEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDemandResponseEventNotificationOperationCompleted);
            }
            this.InvokeAsync("DemandResponseEventNotification", new object[] {
                        eventHistory,
                        transactionID}, this.DemandResponseEventNotificationOperationCompleted, userState);
        }
        
        private void OnDemandResponseEventNotificationOperationCompleted(object arg) {
            if ((this.DemandResponseEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DemandResponseEventNotificationCompleted(this, new DemandResponseEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DemandResponseSetupNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DemandResponseSetupNotification(demandResponseParameters drParameters, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID) {
            object[] results = this.Invoke("DemandResponseSetupNotification", new object[] {
                        drParameters,
                        deviceID,
                        transactionID,
                        interfaceID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DemandResponseSetupNotificationAsync(demandResponseParameters drParameters, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID) {
            this.DemandResponseSetupNotificationAsync(drParameters, deviceID, transactionID, interfaceID, null);
        }
        
        /// <remarks/>
        public void DemandResponseSetupNotificationAsync(demandResponseParameters drParameters, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, object userState) {
            if ((this.DemandResponseSetupNotificationOperationCompleted == null)) {
                this.DemandResponseSetupNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDemandResponseSetupNotificationOperationCompleted);
            }
            this.InvokeAsync("DemandResponseSetupNotification", new object[] {
                        drParameters,
                        deviceID,
                        transactionID,
                        interfaceID}, this.DemandResponseSetupNotificationOperationCompleted, userState);
        }
        
        private void OnDemandResponseSetupNotificationOperationCompleted(object arg) {
            if ((this.DemandResponseSetupNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DemandResponseSetupNotificationCompleted(this, new DemandResponseSetupNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDemandResponseEvent", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDemandResponseEvent(demandResponseEvent demandResponseEvent, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateDemandResponseEvent", new object[] {
                        demandResponseEvent,
                        interfaceID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventAsync(demandResponseEvent demandResponseEvent, HANInterfaceID interfaceID, string transactionID, string responseURL) {
            this.InitiateDemandResponseEventAsync(demandResponseEvent, interfaceID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventAsync(demandResponseEvent demandResponseEvent, HANInterfaceID interfaceID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateDemandResponseEventOperationCompleted == null)) {
                this.InitiateDemandResponseEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDemandResponseEventOperationCompleted);
            }
            this.InvokeAsync("InitiateDemandResponseEvent", new object[] {
                        demandResponseEvent,
                        interfaceID,
                        transactionID,
                        responseURL}, this.InitiateDemandResponseEventOperationCompleted, userState);
        }
        
        private void OnInitiateDemandResponseEventOperationCompleted(object arg) {
            if ((this.InitiateDemandResponseEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDemandResponseEventCompleted(this, new InitiateDemandResponseEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDemandResponseEventStatusRe" +
            "quest", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDemandResponseEventStatusRequest(string eventID, HANInterfaceID interfaceID, duration dither, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateDemandResponseEventStatusRequest", new object[] {
                        eventID,
                        interfaceID,
                        dither,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventStatusRequestAsync(string eventID, HANInterfaceID interfaceID, duration dither, string transactionID, string responseURL) {
            this.InitiateDemandResponseEventStatusRequestAsync(eventID, interfaceID, dither, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventStatusRequestAsync(string eventID, HANInterfaceID interfaceID, duration dither, string transactionID, string responseURL, object userState) {
            if ((this.InitiateDemandResponseEventStatusRequestOperationCompleted == null)) {
                this.InitiateDemandResponseEventStatusRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDemandResponseEventStatusRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateDemandResponseEventStatusRequest", new object[] {
                        eventID,
                        interfaceID,
                        dither,
                        transactionID,
                        responseURL}, this.InitiateDemandResponseEventStatusRequestOperationCompleted, userState);
        }
        
        private void OnInitiateDemandResponseEventStatusRequestOperationCompleted(object arg) {
            if ((this.InitiateDemandResponseEventStatusRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDemandResponseEventStatusRequestCompleted(this, new InitiateDemandResponseEventStatusRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDemandResponseEventToGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDemandResponseEventToGroup(demandResponseEvent demandResponseEvent, HANGroupID groupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateDemandResponseEventToGroup", new object[] {
                        demandResponseEvent,
                        groupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventToGroupAsync(demandResponseEvent demandResponseEvent, HANGroupID groupID, string transactionID, string responseURL) {
            this.InitiateDemandResponseEventToGroupAsync(demandResponseEvent, groupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventToGroupAsync(demandResponseEvent demandResponseEvent, HANGroupID groupID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateDemandResponseEventToGroupOperationCompleted == null)) {
                this.InitiateDemandResponseEventToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDemandResponseEventToGroupOperationCompleted);
            }
            this.InvokeAsync("InitiateDemandResponseEventToGroup", new object[] {
                        demandResponseEvent,
                        groupID,
                        transactionID,
                        responseURL}, this.InitiateDemandResponseEventToGroupOperationCompleted, userState);
        }
        
        private void OnInitiateDemandResponseEventToGroupOperationCompleted(object arg) {
            if ((this.InitiateDemandResponseEventToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDemandResponseEventToGroupCompleted(this, new InitiateDemandResponseEventToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDemandResponseEventStatusRe" +
            "questToGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDemandResponseEventStatusRequestToGroup(string eventID, HANGroupID groupID, duration dither, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateDemandResponseEventStatusRequestToGroup", new object[] {
                        eventID,
                        groupID,
                        dither,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventStatusRequestToGroupAsync(string eventID, HANGroupID groupID, duration dither, string transactionID, string responseURL) {
            this.InitiateDemandResponseEventStatusRequestToGroupAsync(eventID, groupID, dither, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateDemandResponseEventStatusRequestToGroupAsync(string eventID, HANGroupID groupID, duration dither, string transactionID, string responseURL, object userState) {
            if ((this.InitiateDemandResponseEventStatusRequestToGroupOperationCompleted == null)) {
                this.InitiateDemandResponseEventStatusRequestToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDemandResponseEventStatusRequestToGroupOperationCompleted);
            }
            this.InvokeAsync("InitiateDemandResponseEventStatusRequestToGroup", new object[] {
                        eventID,
                        groupID,
                        dither,
                        transactionID,
                        responseURL}, this.InitiateDemandResponseEventStatusRequestToGroupOperationCompleted, userState);
        }
        
        private void OnInitiateDemandResponseEventStatusRequestToGroupOperationCompleted(object arg) {
            if ((this.InitiateDemandResponseEventStatusRequestToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDemandResponseEventStatusRequestToGroupCompleted(this, new InitiateDemandResponseEventStatusRequestToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDemandResponseSetup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDemandResponseSetup(demandResponseParameters drParameters, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL) {
            object[] results = this.Invoke("InitiateDemandResponseSetup", new object[] {
                        drParameters,
                        deviceID,
                        transactionID,
                        interfaceID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDemandResponseSetupAsync(demandResponseParameters drParameters, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL) {
            this.InitiateDemandResponseSetupAsync(drParameters, deviceID, transactionID, interfaceID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateDemandResponseSetupAsync(demandResponseParameters drParameters, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL, object userState) {
            if ((this.InitiateDemandResponseSetupOperationCompleted == null)) {
                this.InitiateDemandResponseSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDemandResponseSetupOperationCompleted);
            }
            this.InvokeAsync("InitiateDemandResponseSetup", new object[] {
                        drParameters,
                        deviceID,
                        transactionID,
                        interfaceID,
                        responseURL}, this.InitiateDemandResponseSetupOperationCompleted, userState);
        }
        
        private void OnInitiateDemandResponseSetupOperationCompleted(object arg) {
            if ((this.InitiateDemandResponseSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDemandResponseSetupCompleted(this, new InitiateDemandResponseSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDemandReset", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDemandReset(meterID[] meterIDs, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateDemandReset", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDemandResetAsync(meterID[] meterIDs, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateDemandResetAsync(meterIDs, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateDemandResetAsync(meterID[] meterIDs, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateDemandResetOperationCompleted == null)) {
                this.InitiateDemandResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDemandResetOperationCompleted);
            }
            this.InvokeAsync("InitiateDemandReset", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateDemandResetOperationCompleted, userState);
        }
        
        private void OnInitiateDemandResetOperationCompleted(object arg) {
            if ((this.InitiateDemandResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDemandResetCompleted(this, new InitiateDemandResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateArmCDDevice", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateArmCDDevice(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateArmCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateArmCDDeviceAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateArmCDDeviceAsync(states, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateArmCDDeviceAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateArmCDDeviceOperationCompleted == null)) {
                this.InitiateArmCDDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateArmCDDeviceOperationCompleted);
            }
            this.InvokeAsync("InitiateArmCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateArmCDDeviceOperationCompleted, userState);
        }
        
        private void OnInitiateArmCDDeviceOperationCompleted(object arg) {
            if ((this.InitiateArmCDDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateArmCDDeviceCompleted(this, new InitiateArmCDDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateEnableCDDevice", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateEnableCDDevice(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateEnableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateEnableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateEnableCDDeviceAsync(states, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateEnableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateEnableCDDeviceOperationCompleted == null)) {
                this.InitiateEnableCDDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateEnableCDDeviceOperationCompleted);
            }
            this.InvokeAsync("InitiateEnableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateEnableCDDeviceOperationCompleted, userState);
        }
        
        private void OnInitiateEnableCDDeviceOperationCompleted(object arg) {
            if ((this.InitiateEnableCDDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateEnableCDDeviceCompleted(this, new InitiateEnableCDDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDisableCDDevice", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDisableCDDevice(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateDisableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDisableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateDisableCDDeviceAsync(states, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateDisableCDDeviceAsync(CDState[] states, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateDisableCDDeviceOperationCompleted == null)) {
                this.InitiateDisableCDDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDisableCDDeviceOperationCompleted);
            }
            this.InvokeAsync("InitiateDisableCDDevice", new object[] {
                        states,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateDisableCDDeviceOperationCompleted, userState);
        }
        
        private void OnInitiateDisableCDDeviceOperationCompleted(object arg) {
            if ((this.InitiateDisableCDDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDisableCDDeviceCompleted(this, new InitiateDisableCDDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EstablishSchedules", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishSchedules(schedule[] schedules) {
            object[] results = this.Invoke("EstablishSchedules", new object[] {
                        schedules});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishSchedulesAsync(schedule[] schedules) {
            this.EstablishSchedulesAsync(schedules, null);
        }
        
        /// <remarks/>
        public void EstablishSchedulesAsync(schedule[] schedules, object userState) {
            if ((this.EstablishSchedulesOperationCompleted == null)) {
                this.EstablishSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishSchedulesOperationCompleted);
            }
            this.InvokeAsync("EstablishSchedules", new object[] {
                        schedules}, this.EstablishSchedulesOperationCompleted, userState);
        }
        
        private void OnEstablishSchedulesOperationCompleted(object arg) {
            if ((this.EstablishSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishSchedulesCompleted(this, new EstablishSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DeleteSchedule", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteSchedule(string scheduleID) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        scheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(string scheduleID) {
            this.DeleteScheduleAsync(scheduleID, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(string scheduleID, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        scheduleID}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EstablishReadingSchedules", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishReadingSchedules(readingSchedule[] readingSchedules) {
            object[] results = this.Invoke("EstablishReadingSchedules", new object[] {
                        readingSchedules});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishReadingSchedulesAsync(readingSchedule[] readingSchedules) {
            this.EstablishReadingSchedulesAsync(readingSchedules, null);
        }
        
        /// <remarks/>
        public void EstablishReadingSchedulesAsync(readingSchedule[] readingSchedules, object userState) {
            if ((this.EstablishReadingSchedulesOperationCompleted == null)) {
                this.EstablishReadingSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishReadingSchedulesOperationCompleted);
            }
            this.InvokeAsync("EstablishReadingSchedules", new object[] {
                        readingSchedules}, this.EstablishReadingSchedulesOperationCompleted, userState);
        }
        
        private void OnEstablishReadingSchedulesOperationCompleted(object arg) {
            if ((this.EstablishReadingSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishReadingSchedulesCompleted(this, new EstablishReadingSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EnableReadingSchedules", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EnableReadingSchedules(string[] readingScheduleID) {
            object[] results = this.Invoke("EnableReadingSchedules", new object[] {
                        readingScheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EnableReadingSchedulesAsync(string[] readingScheduleID) {
            this.EnableReadingSchedulesAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void EnableReadingSchedulesAsync(string[] readingScheduleID, object userState) {
            if ((this.EnableReadingSchedulesOperationCompleted == null)) {
                this.EnableReadingSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableReadingSchedulesOperationCompleted);
            }
            this.InvokeAsync("EnableReadingSchedules", new object[] {
                        readingScheduleID}, this.EnableReadingSchedulesOperationCompleted, userState);
        }
        
        private void OnEnableReadingSchedulesOperationCompleted(object arg) {
            if ((this.EnableReadingSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableReadingSchedulesCompleted(this, new EnableReadingSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DisableReadingSchedule", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DisableReadingSchedule(string readingScheduleID) {
            object[] results = this.Invoke("DisableReadingSchedule", new object[] {
                        readingScheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DisableReadingScheduleAsync(string readingScheduleID) {
            this.DisableReadingScheduleAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void DisableReadingScheduleAsync(string readingScheduleID, object userState) {
            if ((this.DisableReadingScheduleOperationCompleted == null)) {
                this.DisableReadingScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableReadingScheduleOperationCompleted);
            }
            this.InvokeAsync("DisableReadingSchedule", new object[] {
                        readingScheduleID}, this.DisableReadingScheduleOperationCompleted, userState);
        }
        
        private void OnDisableReadingScheduleOperationCompleted(object arg) {
            if ((this.DisableReadingScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableReadingScheduleCompleted(this, new DisableReadingScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DeleteReadingSchedule", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteReadingSchedule(string readingScheduleID) {
            object[] results = this.Invoke("DeleteReadingSchedule", new object[] {
                        readingScheduleID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReadingScheduleAsync(string readingScheduleID) {
            this.DeleteReadingScheduleAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void DeleteReadingScheduleAsync(string readingScheduleID, object userState) {
            if ((this.DeleteReadingScheduleOperationCompleted == null)) {
                this.DeleteReadingScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReadingScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteReadingSchedule", new object[] {
                        readingScheduleID}, this.DeleteReadingScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteReadingScheduleOperationCompleted(object arg) {
            if ((this.DeleteReadingScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReadingScheduleCompleted(this, new DeleteReadingScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateMeterReadingsByFieldName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadingsByFieldName(meterID[] meterIDs, string[] fieldNames, string responseURL, string transactionID, expirationTime expTime, string formattedBlockTemplateName) {
            object[] results = this.Invoke("InitiateMeterReadingsByFieldName", new object[] {
                        meterIDs,
                        fieldNames,
                        responseURL,
                        transactionID,
                        expTime,
                        formattedBlockTemplateName});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadingsByFieldNameAsync(meterID[] meterIDs, string[] fieldNames, string responseURL, string transactionID, expirationTime expTime, string formattedBlockTemplateName) {
            this.InitiateMeterReadingsByFieldNameAsync(meterIDs, fieldNames, responseURL, transactionID, expTime, formattedBlockTemplateName, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadingsByFieldNameAsync(meterID[] meterIDs, string[] fieldNames, string responseURL, string transactionID, expirationTime expTime, string formattedBlockTemplateName, object userState) {
            if ((this.InitiateMeterReadingsByFieldNameOperationCompleted == null)) {
                this.InitiateMeterReadingsByFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadingsByFieldNameOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadingsByFieldName", new object[] {
                        meterIDs,
                        fieldNames,
                        responseURL,
                        transactionID,
                        expTime,
                        formattedBlockTemplateName}, this.InitiateMeterReadingsByFieldNameOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadingsByFieldNameOperationCompleted(object arg) {
            if ((this.InitiateMeterReadingsByFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadingsByFieldNameCompleted(this, new InitiateMeterReadingsByFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateODEventRequestByServiceLoca" +
            "tion", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateODEventRequestByServiceLocation(string[] serviceLocationID, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateODEventRequestByServiceLocation", new object[] {
                        serviceLocationID,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByServiceLocationAsync(string[] serviceLocationID, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateODEventRequestByServiceLocationAsync(serviceLocationID, requestDate, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByServiceLocationAsync(string[] serviceLocationID, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateODEventRequestByServiceLocationOperationCompleted == null)) {
                this.InitiateODEventRequestByServiceLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateODEventRequestByServiceLocationOperationCompleted);
            }
            this.InvokeAsync("InitiateODEventRequestByServiceLocation", new object[] {
                        serviceLocationID,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateODEventRequestByServiceLocationOperationCompleted, userState);
        }
        
        private void OnInitiateODEventRequestByServiceLocationOperationCompleted(object arg) {
            if ((this.InitiateODEventRequestByServiceLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateODEventRequestByServiceLocationCompleted(this, new InitiateODEventRequestByServiceLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllActiveOutageEvents", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageEvent[] GetAllActiveOutageEvents(string lastReceived) {
            object[] results = this.Invoke("GetAllActiveOutageEvents", new object[] {
                        lastReceived});
            return ((outageEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllActiveOutageEventsAsync(string lastReceived) {
            this.GetAllActiveOutageEventsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllActiveOutageEventsAsync(string lastReceived, object userState) {
            if ((this.GetAllActiveOutageEventsOperationCompleted == null)) {
                this.GetAllActiveOutageEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllActiveOutageEventsOperationCompleted);
            }
            this.InvokeAsync("GetAllActiveOutageEvents", new object[] {
                        lastReceived}, this.GetAllActiveOutageEventsOperationCompleted, userState);
        }
        
        private void OnGetAllActiveOutageEventsOperationCompleted(object arg) {
            if ((this.GetAllActiveOutageEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllActiveOutageEventsCompleted(this, new GetAllActiveOutageEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetOutageEvent", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageEvent GetOutageEvent(string outageEventID) {
            object[] results = this.Invoke("GetOutageEvent", new object[] {
                        outageEventID});
            return ((outageEvent)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageEventAsync(string outageEventID) {
            this.GetOutageEventAsync(outageEventID, null);
        }
        
        /// <remarks/>
        public void GetOutageEventAsync(string outageEventID, object userState) {
            if ((this.GetOutageEventOperationCompleted == null)) {
                this.GetOutageEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageEventOperationCompleted);
            }
            this.InvokeAsync("GetOutageEvent", new object[] {
                        outageEventID}, this.GetOutageEventOperationCompleted, userState);
        }
        
        private void OnGetOutageEventOperationCompleted(object arg) {
            if ((this.GetOutageEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageEventCompleted(this, new GetOutageEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCircuitElementByObject", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement GetCircuitElementByObject(string eaLoc) {
            object[] results = this.Invoke("GetCircuitElementByObject", new object[] {
                        eaLoc});
            return ((circuitElement)(results[0]));
        }
        
        /// <remarks/>
        public void GetCircuitElementByObjectAsync(string eaLoc) {
            this.GetCircuitElementByObjectAsync(eaLoc, null);
        }
        
        /// <remarks/>
        public void GetCircuitElementByObjectAsync(string eaLoc, object userState) {
            if ((this.GetCircuitElementByObjectOperationCompleted == null)) {
                this.GetCircuitElementByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCircuitElementByObjectOperationCompleted);
            }
            this.InvokeAsync("GetCircuitElementByObject", new object[] {
                        eaLoc}, this.GetCircuitElementByObjectOperationCompleted, userState);
        }
        
        private void OnGetCircuitElementByObjectOperationCompleted(object arg) {
            if ((this.GetCircuitElementByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCircuitElementByObjectCompleted(this, new GetCircuitElementByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllLoadManagementDevices", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public loadManagementDevice[] GetAllLoadManagementDevices(string lastReceived) {
            object[] results = this.Invoke("GetAllLoadManagementDevices", new object[] {
                        lastReceived});
            return ((loadManagementDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLoadManagementDevicesAsync(string lastReceived) {
            this.GetAllLoadManagementDevicesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllLoadManagementDevicesAsync(string lastReceived, object userState) {
            if ((this.GetAllLoadManagementDevicesOperationCompleted == null)) {
                this.GetAllLoadManagementDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLoadManagementDevicesOperationCompleted);
            }
            this.InvokeAsync("GetAllLoadManagementDevices", new object[] {
                        lastReceived}, this.GetAllLoadManagementDevicesOperationCompleted, userState);
        }
        
        private void OnGetAllLoadManagementDevicesOperationCompleted(object arg) {
            if ((this.GetAllLoadManagementDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLoadManagementDevicesCompleted(this, new GetAllLoadManagementDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAmountOfControllableLoad", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float GetAmountOfControllableLoad() {
            object[] results = this.Invoke("GetAmountOfControllableLoad", new object[0]);
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountOfControllableLoadAsync() {
            this.GetAmountOfControllableLoadAsync(null);
        }
        
        /// <remarks/>
        public void GetAmountOfControllableLoadAsync(object userState) {
            if ((this.GetAmountOfControllableLoadOperationCompleted == null)) {
                this.GetAmountOfControllableLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountOfControllableLoadOperationCompleted);
            }
            this.InvokeAsync("GetAmountOfControllableLoad", new object[0], this.GetAmountOfControllableLoadOperationCompleted, userState);
        }
        
        private void OnGetAmountOfControllableLoadOperationCompleted(object arg) {
            if ((this.GetAmountOfControllableLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountOfControllableLoadCompleted(this, new GetAmountOfControllableLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAmountOfControlledLoad", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public float GetAmountOfControlledLoad() {
            object[] results = this.Invoke("GetAmountOfControlledLoad", new object[0]);
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void GetAmountOfControlledLoadAsync() {
            this.GetAmountOfControlledLoadAsync(null);
        }
        
        /// <remarks/>
        public void GetAmountOfControlledLoadAsync(object userState) {
            if ((this.GetAmountOfControlledLoadOperationCompleted == null)) {
                this.GetAmountOfControlledLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAmountOfControlledLoadOperationCompleted);
            }
            this.InvokeAsync("GetAmountOfControlledLoad", new object[0], this.GetAmountOfControlledLoadOperationCompleted, userState);
        }
        
        private void OnGetAmountOfControlledLoadOperationCompleted(object arg) {
            if ((this.GetAmountOfControlledLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAmountOfControlledLoadCompleted(this, new GetAmountOfControlledLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLoadManagementDeviceByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public loadManagementDevice[] GetLoadManagementDeviceByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetLoadManagementDeviceByMeterID", new object[] {
                        meterID});
            return ((loadManagementDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByMeterIDAsync(meterID meterID) {
            this.GetLoadManagementDeviceByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetLoadManagementDeviceByMeterIDOperationCompleted == null)) {
                this.GetLoadManagementDeviceByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoadManagementDeviceByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetLoadManagementDeviceByMeterID", new object[] {
                        meterID}, this.GetLoadManagementDeviceByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetLoadManagementDeviceByMeterIDOperationCompleted(object arg) {
            if ((this.GetLoadManagementDeviceByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoadManagementDeviceByMeterIDCompleted(this, new GetLoadManagementDeviceByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLoadManagementDeviceByServiceLoc" +
            "ationID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public loadManagementDevice[] GetLoadManagementDeviceByServiceLocationID(string serviceLocationID, serviceType serviceType) {
            object[] results = this.Invoke("GetLoadManagementDeviceByServiceLocationID", new object[] {
                        serviceLocationID,
                        serviceType});
            return ((loadManagementDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByServiceLocationIDAsync(string serviceLocationID, serviceType serviceType) {
            this.GetLoadManagementDeviceByServiceLocationIDAsync(serviceLocationID, serviceType, null);
        }
        
        /// <remarks/>
        public void GetLoadManagementDeviceByServiceLocationIDAsync(string serviceLocationID, serviceType serviceType, object userState) {
            if ((this.GetLoadManagementDeviceByServiceLocationIDOperationCompleted == null)) {
                this.GetLoadManagementDeviceByServiceLocationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoadManagementDeviceByServiceLocationIDOperationCompleted);
            }
            this.InvokeAsync("GetLoadManagementDeviceByServiceLocationID", new object[] {
                        serviceLocationID,
                        serviceType}, this.GetLoadManagementDeviceByServiceLocationIDOperationCompleted, userState);
        }
        
        private void OnGetLoadManagementDeviceByServiceLocationIDOperationCompleted(object arg) {
            if ((this.GetLoadManagementDeviceByServiceLocationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoadManagementDeviceByServiceLocationIDCompleted(this, new GetLoadManagementDeviceByServiceLocationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/IsLoadManagementActive", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLoadManagementActive(string serviceLocationID, serviceType serviceType) {
            object[] results = this.Invoke("IsLoadManagementActive", new object[] {
                        serviceLocationID,
                        serviceType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLoadManagementActiveAsync(string serviceLocationID, serviceType serviceType) {
            this.IsLoadManagementActiveAsync(serviceLocationID, serviceType, null);
        }
        
        /// <remarks/>
        public void IsLoadManagementActiveAsync(string serviceLocationID, serviceType serviceType, object userState) {
            if ((this.IsLoadManagementActiveOperationCompleted == null)) {
                this.IsLoadManagementActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLoadManagementActiveOperationCompleted);
            }
            this.InvokeAsync("IsLoadManagementActive", new object[] {
                        serviceLocationID,
                        serviceType}, this.IsLoadManagementActiveOperationCompleted, userState);
        }
        
        private void OnIsLoadManagementActiveOperationCompleted(object arg) {
            if ((this.IsLoadManagementActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLoadManagementActiveCompleted(this, new IsLoadManagementActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllSubstationLoadControlStatuses" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public substationLoadControlStatus[] GetAllSubstationLoadControlStatuses() {
            object[] results = this.Invoke("GetAllSubstationLoadControlStatuses", new object[0]);
            return ((substationLoadControlStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSubstationLoadControlStatusesAsync() {
            this.GetAllSubstationLoadControlStatusesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSubstationLoadControlStatusesAsync(object userState) {
            if ((this.GetAllSubstationLoadControlStatusesOperationCompleted == null)) {
                this.GetAllSubstationLoadControlStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSubstationLoadControlStatusesOperationCompleted);
            }
            this.InvokeAsync("GetAllSubstationLoadControlStatuses", new object[0], this.GetAllSubstationLoadControlStatusesOperationCompleted, userState);
        }
        
        private void OnGetAllSubstationLoadControlStatusesOperationCompleted(object arg) {
            if ((this.GetAllSubstationLoadControlStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSubstationLoadControlStatusesCompleted(this, new GetAllSubstationLoadControlStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ModifyODDataForOutageDetectionDevic" +
            "e", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ModifyODDataForOutageDetectionDevice(outageDetectionDevice oDDevice) {
            object[] results = this.Invoke("ModifyODDataForOutageDetectionDevice", new object[] {
                        oDDevice});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ModifyODDataForOutageDetectionDeviceAsync(outageDetectionDevice oDDevice) {
            this.ModifyODDataForOutageDetectionDeviceAsync(oDDevice, null);
        }
        
        /// <remarks/>
        public void ModifyODDataForOutageDetectionDeviceAsync(outageDetectionDevice oDDevice, object userState) {
            if ((this.ModifyODDataForOutageDetectionDeviceOperationCompleted == null)) {
                this.ModifyODDataForOutageDetectionDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyODDataForOutageDetectionDeviceOperationCompleted);
            }
            this.InvokeAsync("ModifyODDataForOutageDetectionDevice", new object[] {
                        oDDevice}, this.ModifyODDataForOutageDetectionDeviceOperationCompleted, userState);
        }
        
        private void OnModifyODDataForOutageDetectionDeviceOperationCompleted(object arg) {
            if ((this.ModifyODDataForOutageDetectionDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyODDataForOutageDetectionDeviceCompleted(this, new ModifyODDataForOutageDetectionDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/BlinkAlarmNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] BlinkAlarmNotification(blinkAlarm[] alarms) {
            object[] results = this.Invoke("BlinkAlarmNotification", new object[] {
                        alarms});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void BlinkAlarmNotificationAsync(blinkAlarm[] alarms) {
            this.BlinkAlarmNotificationAsync(alarms, null);
        }
        
        /// <remarks/>
        public void BlinkAlarmNotificationAsync(blinkAlarm[] alarms, object userState) {
            if ((this.BlinkAlarmNotificationOperationCompleted == null)) {
                this.BlinkAlarmNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBlinkAlarmNotificationOperationCompleted);
            }
            this.InvokeAsync("BlinkAlarmNotification", new object[] {
                        alarms}, this.BlinkAlarmNotificationOperationCompleted, userState);
        }
        
        private void OnBlinkAlarmNotificationOperationCompleted(object arg) {
            if ((this.BlinkAlarmNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BlinkAlarmNotificationCompleted(this, new BlinkAlarmNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/VoltageAlarmNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] VoltageAlarmNotification(voltageAlarm[] alarms) {
            object[] results = this.Invoke("VoltageAlarmNotification", new object[] {
                        alarms});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void VoltageAlarmNotificationAsync(voltageAlarm[] alarms) {
            this.VoltageAlarmNotificationAsync(alarms, null);
        }
        
        /// <remarks/>
        public void VoltageAlarmNotificationAsync(voltageAlarm[] alarms, object userState) {
            if ((this.VoltageAlarmNotificationOperationCompleted == null)) {
                this.VoltageAlarmNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoltageAlarmNotificationOperationCompleted);
            }
            this.InvokeAsync("VoltageAlarmNotification", new object[] {
                        alarms}, this.VoltageAlarmNotificationOperationCompleted, userState);
        }
        
        private void OnVoltageAlarmNotificationOperationCompleted(object arg) {
            if ((this.VoltageAlarmNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoltageAlarmNotificationCompleted(this, new VoltageAlarmNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CustomerChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CustomerChangedNotification(customer[] changedCustomers) {
            object[] results = this.Invoke("CustomerChangedNotification", new object[] {
                        changedCustomers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerChangedNotificationAsync(customer[] changedCustomers) {
            this.CustomerChangedNotificationAsync(changedCustomers, null);
        }
        
        /// <remarks/>
        public void CustomerChangedNotificationAsync(customer[] changedCustomers, object userState) {
            if ((this.CustomerChangedNotificationOperationCompleted == null)) {
                this.CustomerChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CustomerChangedNotification", new object[] {
                        changedCustomers}, this.CustomerChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCustomerChangedNotificationOperationCompleted(object arg) {
            if ((this.CustomerChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerChangedNotificationCompleted(this, new CustomerChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/AccountChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] AccountChangedNotification(account[] changedAccounts) {
            object[] results = this.Invoke("AccountChangedNotification", new object[] {
                        changedAccounts});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void AccountChangedNotificationAsync(account[] changedAccounts) {
            this.AccountChangedNotificationAsync(changedAccounts, null);
        }
        
        /// <remarks/>
        public void AccountChangedNotificationAsync(account[] changedAccounts, object userState) {
            if ((this.AccountChangedNotificationOperationCompleted == null)) {
                this.AccountChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("AccountChangedNotification", new object[] {
                        changedAccounts}, this.AccountChangedNotificationOperationCompleted, userState);
        }
        
        private void OnAccountChangedNotificationOperationCompleted(object arg) {
            if ((this.AccountChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountChangedNotificationCompleted(this, new AccountChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ServiceLocationChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ServiceLocationChangedNotification(serviceLocation[] changedServiceLocations) {
            object[] results = this.Invoke("ServiceLocationChangedNotification", new object[] {
                        changedServiceLocations});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ServiceLocationChangedNotificationAsync(serviceLocation[] changedServiceLocations) {
            this.ServiceLocationChangedNotificationAsync(changedServiceLocations, null);
        }
        
        /// <remarks/>
        public void ServiceLocationChangedNotificationAsync(serviceLocation[] changedServiceLocations, object userState) {
            if ((this.ServiceLocationChangedNotificationOperationCompleted == null)) {
                this.ServiceLocationChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceLocationChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ServiceLocationChangedNotification", new object[] {
                        changedServiceLocations}, this.ServiceLocationChangedNotificationOperationCompleted, userState);
        }
        
        private void OnServiceLocationChangedNotificationOperationCompleted(object arg) {
            if ((this.ServiceLocationChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceLocationChangedNotificationCompleted(this, new ServiceLocationChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterChangedNotification(meters changedMeters) {
            object[] results = this.Invoke("MeterChangedNotification", new object[] {
                        changedMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterChangedNotificationAsync(meters changedMeters) {
            this.MeterChangedNotificationAsync(changedMeters, null);
        }
        
        /// <remarks/>
        public void MeterChangedNotificationAsync(meters changedMeters, object userState) {
            if ((this.MeterChangedNotificationOperationCompleted == null)) {
                this.MeterChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterChangedNotification", new object[] {
                        changedMeters}, this.MeterChangedNotificationOperationCompleted, userState);
        }
        
        private void OnMeterChangedNotificationOperationCompleted(object arg) {
            if ((this.MeterChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterChangedNotificationCompleted(this, new MeterChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterRemoveNotification(meters removedMeters) {
            object[] results = this.Invoke("MeterRemoveNotification", new object[] {
                        removedMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterRemoveNotificationAsync(meters removedMeters) {
            this.MeterRemoveNotificationAsync(removedMeters, null);
        }
        
        /// <remarks/>
        public void MeterRemoveNotificationAsync(meters removedMeters, object userState) {
            if ((this.MeterRemoveNotificationOperationCompleted == null)) {
                this.MeterRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterRemoveNotification", new object[] {
                        removedMeters}, this.MeterRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnMeterRemoveNotificationOperationCompleted(object arg) {
            if ((this.MeterRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterRemoveNotificationCompleted(this, new MeterRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterRetireNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterRetireNotification(meters retiredMeters) {
            object[] results = this.Invoke("MeterRetireNotification", new object[] {
                        retiredMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterRetireNotificationAsync(meters retiredMeters) {
            this.MeterRetireNotificationAsync(retiredMeters, null);
        }
        
        /// <remarks/>
        public void MeterRetireNotificationAsync(meters retiredMeters, object userState) {
            if ((this.MeterRetireNotificationOperationCompleted == null)) {
                this.MeterRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterRetireNotification", new object[] {
                        retiredMeters}, this.MeterRetireNotificationOperationCompleted, userState);
        }
        
        private void OnMeterRetireNotificationOperationCompleted(object arg) {
            if ((this.MeterRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterRetireNotificationCompleted(this, new MeterRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterAddNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterAddNotification(meters addedMeters) {
            object[] results = this.Invoke("MeterAddNotification", new object[] {
                        addedMeters});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterAddNotificationAsync(meters addedMeters) {
            this.MeterAddNotificationAsync(addedMeters, null);
        }
        
        /// <remarks/>
        public void MeterAddNotificationAsync(meters addedMeters, object userState) {
            if ((this.MeterAddNotificationOperationCompleted == null)) {
                this.MeterAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterAddNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterAddNotification", new object[] {
                        addedMeters}, this.MeterAddNotificationOperationCompleted, userState);
        }
        
        private void OnMeterAddNotificationOperationCompleted(object arg) {
            if ((this.MeterAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterAddNotificationCompleted(this, new MeterAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterExchangeNotification(meterExchanges meterChangeout) {
            object[] results = this.Invoke("MeterExchangeNotification", new object[] {
                        meterChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterExchangeNotificationAsync(meterExchanges meterChangeout) {
            this.MeterExchangeNotificationAsync(meterChangeout, null);
        }
        
        /// <remarks/>
        public void MeterExchangeNotificationAsync(meterExchanges meterChangeout, object userState) {
            if ((this.MeterExchangeNotificationOperationCompleted == null)) {
                this.MeterExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterExchangeNotification", new object[] {
                        meterChangeout}, this.MeterExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnMeterExchangeNotificationOperationCompleted(object arg) {
            if ((this.MeterExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterExchangeNotificationCompleted(this, new MeterExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CustomersAffectedByOutageNotificati" +
            "on", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CustomersAffectedByOutageNotification(customersAffectedByOutage[] newOutages) {
            object[] results = this.Invoke("CustomersAffectedByOutageNotification", new object[] {
                        newOutages});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomersAffectedByOutageNotificationAsync(customersAffectedByOutage[] newOutages) {
            this.CustomersAffectedByOutageNotificationAsync(newOutages, null);
        }
        
        /// <remarks/>
        public void CustomersAffectedByOutageNotificationAsync(customersAffectedByOutage[] newOutages, object userState) {
            if ((this.CustomersAffectedByOutageNotificationOperationCompleted == null)) {
                this.CustomersAffectedByOutageNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomersAffectedByOutageNotificationOperationCompleted);
            }
            this.InvokeAsync("CustomersAffectedByOutageNotification", new object[] {
                        newOutages}, this.CustomersAffectedByOutageNotificationOperationCompleted, userState);
        }
        
        private void OnCustomersAffectedByOutageNotificationOperationCompleted(object arg) {
            if ((this.CustomersAffectedByOutageNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomersAffectedByOutageNotificationCompleted(this, new CustomersAffectedByOutageNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterConnectivityNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterConnectivityNotification(meterConnectivity[] newConnectivity) {
            object[] results = this.Invoke("MeterConnectivityNotification", new object[] {
                        newConnectivity});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterConnectivityNotificationAsync(meterConnectivity[] newConnectivity) {
            this.MeterConnectivityNotificationAsync(newConnectivity, null);
        }
        
        /// <remarks/>
        public void MeterConnectivityNotificationAsync(meterConnectivity[] newConnectivity, object userState) {
            if ((this.MeterConnectivityNotificationOperationCompleted == null)) {
                this.MeterConnectivityNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterConnectivityNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterConnectivityNotification", new object[] {
                        newConnectivity}, this.MeterConnectivityNotificationOperationCompleted, userState);
        }
        
        private void OnMeterConnectivityNotificationOperationCompleted(object arg) {
            if ((this.MeterConnectivityNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterConnectivityNotificationCompleted(this, new MeterConnectivityNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EndDeviceShipmentNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EndDeviceShipmentNotification(endDeviceShipment shipment) {
            object[] results = this.Invoke("EndDeviceShipmentNotification", new object[] {
                        shipment});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EndDeviceShipmentNotificationAsync(endDeviceShipment shipment) {
            this.EndDeviceShipmentNotificationAsync(shipment, null);
        }
        
        /// <remarks/>
        public void EndDeviceShipmentNotificationAsync(endDeviceShipment shipment, object userState) {
            if ((this.EndDeviceShipmentNotificationOperationCompleted == null)) {
                this.EndDeviceShipmentNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndDeviceShipmentNotificationOperationCompleted);
            }
            this.InvokeAsync("EndDeviceShipmentNotification", new object[] {
                        shipment}, this.EndDeviceShipmentNotificationOperationCompleted, userState);
        }
        
        private void OnEndDeviceShipmentNotificationOperationCompleted(object arg) {
            if ((this.EndDeviceShipmentNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndDeviceShipmentNotificationCompleted(this, new EndDeviceShipmentNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/FormattedBlockNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] FormattedBlockNotification(formattedBlock changedMeterReads, string transactionID, string errorString) {
            object[] results = this.Invoke("FormattedBlockNotification", new object[] {
                        changedMeterReads,
                        transactionID,
                        errorString});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void FormattedBlockNotificationAsync(formattedBlock changedMeterReads, string transactionID, string errorString) {
            this.FormattedBlockNotificationAsync(changedMeterReads, transactionID, errorString, null);
        }
        
        /// <remarks/>
        public void FormattedBlockNotificationAsync(formattedBlock changedMeterReads, string transactionID, string errorString, object userState) {
            if ((this.FormattedBlockNotificationOperationCompleted == null)) {
                this.FormattedBlockNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormattedBlockNotificationOperationCompleted);
            }
            this.InvokeAsync("FormattedBlockNotification", new object[] {
                        changedMeterReads,
                        transactionID,
                        errorString}, this.FormattedBlockNotificationOperationCompleted, userState);
        }
        
        private void OnFormattedBlockNotificationOperationCompleted(object arg) {
            if ((this.FormattedBlockNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormattedBlockNotificationCompleted(this, new FormattedBlockNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ODEventNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ODEventNotification(outageDetectionEvent[] ODEvents, string transactionID) {
            object[] results = this.Invoke("ODEventNotification", new object[] {
                        ODEvents,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ODEventNotificationAsync(outageDetectionEvent[] ODEvents, string transactionID) {
            this.ODEventNotificationAsync(ODEvents, transactionID, null);
        }
        
        /// <remarks/>
        public void ODEventNotificationAsync(outageDetectionEvent[] ODEvents, string transactionID, object userState) {
            if ((this.ODEventNotificationOperationCompleted == null)) {
                this.ODEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnODEventNotificationOperationCompleted);
            }
            this.InvokeAsync("ODEventNotification", new object[] {
                        ODEvents,
                        transactionID}, this.ODEventNotificationOperationCompleted, userState);
        }
        
        private void OnODEventNotificationOperationCompleted(object arg) {
            if ((this.ODEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ODEventNotificationCompleted(this, new ODEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ODDeviceChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ODDeviceChangedNotification(outageDetectionDevice[] ODDevices) {
            object[] results = this.Invoke("ODDeviceChangedNotification", new object[] {
                        ODDevices});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ODDeviceChangedNotificationAsync(outageDetectionDevice[] ODDevices) {
            this.ODDeviceChangedNotificationAsync(ODDevices, null);
        }
        
        /// <remarks/>
        public void ODDeviceChangedNotificationAsync(outageDetectionDevice[] ODDevices, object userState) {
            if ((this.ODDeviceChangedNotificationOperationCompleted == null)) {
                this.ODDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnODDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ODDeviceChangedNotification", new object[] {
                        ODDevices}, this.ODDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnODDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.ODDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ODDeviceChangedNotificationCompleted(this, new ODDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDDeviceAddNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceAddNotification(CDDevice[] addedCDDs) {
            object[] results = this.Invoke("CDDeviceAddNotification", new object[] {
                        addedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceAddNotificationAsync(CDDevice[] addedCDDs) {
            this.CDDeviceAddNotificationAsync(addedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceAddNotificationAsync(CDDevice[] addedCDDs, object userState) {
            if ((this.CDDeviceAddNotificationOperationCompleted == null)) {
                this.CDDeviceAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceAddNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceAddNotification", new object[] {
                        addedCDDs}, this.CDDeviceAddNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceAddNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceAddNotificationCompleted(this, new CDDeviceAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDDeviceChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceChangedNotification(CDDevice[] changedCDDs) {
            object[] results = this.Invoke("CDDeviceChangedNotification", new object[] {
                        changedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceChangedNotificationAsync(CDDevice[] changedCDDs) {
            this.CDDeviceChangedNotificationAsync(changedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceChangedNotificationAsync(CDDevice[] changedCDDs, object userState) {
            if ((this.CDDeviceChangedNotificationOperationCompleted == null)) {
                this.CDDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceChangedNotification", new object[] {
                        changedCDDs}, this.CDDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceChangedNotificationCompleted(this, new CDDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDDeviceExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceExchangeNotification(CDDeviceExchange[] CDDChangeout) {
            object[] results = this.Invoke("CDDeviceExchangeNotification", new object[] {
                        CDDChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceExchangeNotificationAsync(CDDeviceExchange[] CDDChangeout) {
            this.CDDeviceExchangeNotificationAsync(CDDChangeout, null);
        }
        
        /// <remarks/>
        public void CDDeviceExchangeNotificationAsync(CDDeviceExchange[] CDDChangeout, object userState) {
            if ((this.CDDeviceExchangeNotificationOperationCompleted == null)) {
                this.CDDeviceExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceExchangeNotification", new object[] {
                        CDDChangeout}, this.CDDeviceExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceExchangeNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceExchangeNotificationCompleted(this, new CDDeviceExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDDeviceRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceRemoveNotification(CDDevice[] removedCDDs) {
            object[] results = this.Invoke("CDDeviceRemoveNotification", new object[] {
                        removedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceRemoveNotificationAsync(CDDevice[] removedCDDs) {
            this.CDDeviceRemoveNotificationAsync(removedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceRemoveNotificationAsync(CDDevice[] removedCDDs, object userState) {
            if ((this.CDDeviceRemoveNotificationOperationCompleted == null)) {
                this.CDDeviceRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceRemoveNotification", new object[] {
                        removedCDDs}, this.CDDeviceRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceRemoveNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceRemoveNotificationCompleted(this, new CDDeviceRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDDeviceInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceInstalledNotification(CDDevice[] installedCDDs) {
            object[] results = this.Invoke("CDDeviceInstalledNotification", new object[] {
                        installedCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceInstalledNotificationAsync(CDDevice[] installedCDDs) {
            this.CDDeviceInstalledNotificationAsync(installedCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceInstalledNotificationAsync(CDDevice[] installedCDDs, object userState) {
            if ((this.CDDeviceInstalledNotificationOperationCompleted == null)) {
                this.CDDeviceInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceInstalledNotification", new object[] {
                        installedCDDs}, this.CDDeviceInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceInstalledNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceInstalledNotificationCompleted(this, new CDDeviceInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CDDeviceRetireNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CDDeviceRetireNotification(CDDevice[] retiredCDDs) {
            object[] results = this.Invoke("CDDeviceRetireNotification", new object[] {
                        retiredCDDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CDDeviceRetireNotificationAsync(CDDevice[] retiredCDDs) {
            this.CDDeviceRetireNotificationAsync(retiredCDDs, null);
        }
        
        /// <remarks/>
        public void CDDeviceRetireNotificationAsync(CDDevice[] retiredCDDs, object userState) {
            if ((this.CDDeviceRetireNotificationOperationCompleted == null)) {
                this.CDDeviceRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCDDeviceRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("CDDeviceRetireNotification", new object[] {
                        retiredCDDs}, this.CDDeviceRetireNotificationOperationCompleted, userState);
        }
        
        private void OnCDDeviceRetireNotificationOperationCompleted(object arg) {
            if ((this.CDDeviceRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CDDeviceRetireNotificationCompleted(this, new CDDeviceRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/HistoryLogChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] HistoryLogChangedNotification(historyLog[] changedHistoryLogs) {
            object[] results = this.Invoke("HistoryLogChangedNotification", new object[] {
                        changedHistoryLogs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void HistoryLogChangedNotificationAsync(historyLog[] changedHistoryLogs) {
            this.HistoryLogChangedNotificationAsync(changedHistoryLogs, null);
        }
        
        /// <remarks/>
        public void HistoryLogChangedNotificationAsync(historyLog[] changedHistoryLogs, object userState) {
            if ((this.HistoryLogChangedNotificationOperationCompleted == null)) {
                this.HistoryLogChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHistoryLogChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("HistoryLogChangedNotification", new object[] {
                        changedHistoryLogs}, this.HistoryLogChangedNotificationOperationCompleted, userState);
        }
        
        private void OnHistoryLogChangedNotificationOperationCompleted(object arg) {
            if ((this.HistoryLogChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HistoryLogChangedNotificationCompleted(this, new HistoryLogChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/LoadProfileChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] LoadProfileChangedNotification(profileObject[] changedLoadProfiles) {
            object[] results = this.Invoke("LoadProfileChangedNotification", new object[] {
                        changedLoadProfiles});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadProfileChangedNotificationAsync(profileObject[] changedLoadProfiles) {
            this.LoadProfileChangedNotificationAsync(changedLoadProfiles, null);
        }
        
        /// <remarks/>
        public void LoadProfileChangedNotificationAsync(profileObject[] changedLoadProfiles, object userState) {
            if ((this.LoadProfileChangedNotificationOperationCompleted == null)) {
                this.LoadProfileChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProfileChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("LoadProfileChangedNotification", new object[] {
                        changedLoadProfiles}, this.LoadProfileChangedNotificationOperationCompleted, userState);
        }
        
        private void OnLoadProfileChangedNotificationOperationCompleted(object arg) {
            if ((this.LoadProfileChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProfileChangedNotificationCompleted(this, new LoadProfileChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterTestNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterTestNotification(testedElectricMeter[] tests, string transactionID) {
            object[] results = this.Invoke("MeterTestNotification", new object[] {
                        tests,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterTestNotificationAsync(testedElectricMeter[] tests, string transactionID) {
            this.MeterTestNotificationAsync(tests, transactionID, null);
        }
        
        /// <remarks/>
        public void MeterTestNotificationAsync(testedElectricMeter[] tests, string transactionID, object userState) {
            if ((this.MeterTestNotificationOperationCompleted == null)) {
                this.MeterTestNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterTestNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterTestNotification", new object[] {
                        tests,
                        transactionID}, this.MeterTestNotificationOperationCompleted, userState);
        }
        
        private void OnMeterTestNotificationOperationCompleted(object arg) {
            if ((this.MeterTestNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterTestNotificationCompleted(this, new MeterTestNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/MeterInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] MeterInstalledNotification(meters addedMeters, string transactionID) {
            object[] results = this.Invoke("MeterInstalledNotification", new object[] {
                        addedMeters,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void MeterInstalledNotificationAsync(meters addedMeters, string transactionID) {
            this.MeterInstalledNotificationAsync(addedMeters, transactionID, null);
        }
        
        /// <remarks/>
        public void MeterInstalledNotificationAsync(meters addedMeters, string transactionID, object userState) {
            if ((this.MeterInstalledNotificationOperationCompleted == null)) {
                this.MeterInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMeterInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("MeterInstalledNotification", new object[] {
                        addedMeters,
                        transactionID}, this.MeterInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnMeterInstalledNotificationOperationCompleted(object arg) {
            if ((this.MeterInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MeterInstalledNotificationCompleted(this, new MeterInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/PPMMeterExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] PPMMeterExchangeNotification(meterExchanges changeouts) {
            object[] results = this.Invoke("PPMMeterExchangeNotification", new object[] {
                        changeouts});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void PPMMeterExchangeNotificationAsync(meterExchanges changeouts) {
            this.PPMMeterExchangeNotificationAsync(changeouts, null);
        }
        
        /// <remarks/>
        public void PPMMeterExchangeNotificationAsync(meterExchanges changeouts, object userState) {
            if ((this.PPMMeterExchangeNotificationOperationCompleted == null)) {
                this.PPMMeterExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPPMMeterExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("PPMMeterExchangeNotification", new object[] {
                        changeouts}, this.PPMMeterExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnPPMMeterExchangeNotificationOperationCompleted(object arg) {
            if ((this.PPMMeterExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PPMMeterExchangeNotificationCompleted(this, new PPMMeterExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ChargeableDeviceChangedNotification" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ChargeableDeviceChangedNotification(chargeableDeviceList[] deviceList) {
            object[] results = this.Invoke("ChargeableDeviceChangedNotification", new object[] {
                        deviceList});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ChargeableDeviceChangedNotificationAsync(chargeableDeviceList[] deviceList) {
            this.ChargeableDeviceChangedNotificationAsync(deviceList, null);
        }
        
        /// <remarks/>
        public void ChargeableDeviceChangedNotificationAsync(chargeableDeviceList[] deviceList, object userState) {
            if ((this.ChargeableDeviceChangedNotificationOperationCompleted == null)) {
                this.ChargeableDeviceChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChargeableDeviceChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ChargeableDeviceChangedNotification", new object[] {
                        deviceList}, this.ChargeableDeviceChangedNotificationOperationCompleted, userState);
        }
        
        private void OnChargeableDeviceChangedNotificationOperationCompleted(object arg) {
            if ((this.ChargeableDeviceChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChargeableDeviceChangedNotificationCompleted(this, new ChargeableDeviceChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForCustomer", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ModifyCBDataForCustomer(customer[] customerData) {
            object[] results = this.Invoke("ModifyCBDataForCustomer", new object[] {
                        customerData});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCBDataForCustomerAsync(customer[] customerData) {
            this.ModifyCBDataForCustomerAsync(customerData, null);
        }
        
        /// <remarks/>
        public void ModifyCBDataForCustomerAsync(customer[] customerData, object userState) {
            if ((this.ModifyCBDataForCustomerOperationCompleted == null)) {
                this.ModifyCBDataForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCBDataForCustomerOperationCompleted);
            }
            this.InvokeAsync("ModifyCBDataForCustomer", new object[] {
                        customerData}, this.ModifyCBDataForCustomerOperationCompleted, userState);
        }
        
        private void OnModifyCBDataForCustomerOperationCompleted(object arg) {
            if ((this.ModifyCBDataForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCBDataForCustomerCompleted(this, new ModifyCBDataForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForServiceLocations", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ModifyCBDataForServiceLocations(serviceLocation[] serviceLocationData) {
            object[] results = this.Invoke("ModifyCBDataForServiceLocations", new object[] {
                        serviceLocationData});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCBDataForServiceLocationsAsync(serviceLocation[] serviceLocationData) {
            this.ModifyCBDataForServiceLocationsAsync(serviceLocationData, null);
        }
        
        /// <remarks/>
        public void ModifyCBDataForServiceLocationsAsync(serviceLocation[] serviceLocationData, object userState) {
            if ((this.ModifyCBDataForServiceLocationsOperationCompleted == null)) {
                this.ModifyCBDataForServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCBDataForServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("ModifyCBDataForServiceLocations", new object[] {
                        serviceLocationData}, this.ModifyCBDataForServiceLocationsOperationCompleted, userState);
        }
        
        private void OnModifyCBDataForServiceLocationsOperationCompleted(object arg) {
            if ((this.ModifyCBDataForServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCBDataForServiceLocationsCompleted(this, new ModifyCBDataForServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ModifyCBDataForMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ModifyCBDataForMeters(meters meterData) {
            object[] results = this.Invoke("ModifyCBDataForMeters", new object[] {
                        meterData});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ModifyCBDataForMetersAsync(meters meterData) {
            this.ModifyCBDataForMetersAsync(meterData, null);
        }
        
        /// <remarks/>
        public void ModifyCBDataForMetersAsync(meters meterData, object userState) {
            if ((this.ModifyCBDataForMetersOperationCompleted == null)) {
                this.ModifyCBDataForMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyCBDataForMetersOperationCompleted);
            }
            this.InvokeAsync("ModifyCBDataForMeters", new object[] {
                        meterData}, this.ModifyCBDataForMetersOperationCompleted, userState);
        }
        
        private void OnModifyCBDataForMetersOperationCompleted(object arg) {
            if ((this.ModifyCBDataForMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyCBDataForMetersCompleted(this, new ModifyCBDataForMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ReadingChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ReadingChangedNotification(meterReading[] changedMeterReads, string transactionID) {
            object[] results = this.Invoke("ReadingChangedNotification", new object[] {
                        changedMeterReads,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadingChangedNotificationAsync(meterReading[] changedMeterReads, string transactionID) {
            this.ReadingChangedNotificationAsync(changedMeterReads, transactionID, null);
        }
        
        /// <remarks/>
        public void ReadingChangedNotificationAsync(meterReading[] changedMeterReads, string transactionID, object userState) {
            if ((this.ReadingChangedNotificationOperationCompleted == null)) {
                this.ReadingChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadingChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("ReadingChangedNotification", new object[] {
                        changedMeterReads,
                        transactionID}, this.ReadingChangedNotificationOperationCompleted, userState);
        }
        
        private void OnReadingChangedNotificationOperationCompleted(object arg) {
            if ((this.ReadingChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadingChangedNotificationCompleted(this, new ReadingChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/IHDMessageStatusNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] IHDMessageStatusNotification(IHDMessageStatus messageStatus, string messageID, HANDeviceID hanDeviceID, string transactionID, HANInterfaceID interfaceID, IHDMessageType messageType) {
            object[] results = this.Invoke("IHDMessageStatusNotification", new object[] {
                        messageStatus,
                        messageID,
                        hanDeviceID,
                        transactionID,
                        interfaceID,
                        messageType});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void IHDMessageStatusNotificationAsync(IHDMessageStatus messageStatus, string messageID, HANDeviceID hanDeviceID, string transactionID, HANInterfaceID interfaceID, IHDMessageType messageType) {
            this.IHDMessageStatusNotificationAsync(messageStatus, messageID, hanDeviceID, transactionID, interfaceID, messageType, null);
        }
        
        /// <remarks/>
        public void IHDMessageStatusNotificationAsync(IHDMessageStatus messageStatus, string messageID, HANDeviceID hanDeviceID, string transactionID, HANInterfaceID interfaceID, IHDMessageType messageType, object userState) {
            if ((this.IHDMessageStatusNotificationOperationCompleted == null)) {
                this.IHDMessageStatusNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHDMessageStatusNotificationOperationCompleted);
            }
            this.InvokeAsync("IHDMessageStatusNotification", new object[] {
                        messageStatus,
                        messageID,
                        hanDeviceID,
                        transactionID,
                        interfaceID,
                        messageType}, this.IHDMessageStatusNotificationOperationCompleted, userState);
        }
        
        private void OnIHDMessageStatusNotificationOperationCompleted(object arg) {
            if ((this.IHDMessageStatusNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHDMessageStatusNotificationCompleted(this, new IHDMessageStatusNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/IHDMessageConfirmedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] IHDMessageConfirmedNotification(string inHomeDisplayMessageID, HANDeviceID hanDeviceID, string transactionID, HANInterfaceID interfaceID, System.DateTime messageConfirmedTime, string errorString) {
            object[] results = this.Invoke("IHDMessageConfirmedNotification", new object[] {
                        inHomeDisplayMessageID,
                        hanDeviceID,
                        transactionID,
                        interfaceID,
                        messageConfirmedTime,
                        errorString});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void IHDMessageConfirmedNotificationAsync(string inHomeDisplayMessageID, HANDeviceID hanDeviceID, string transactionID, HANInterfaceID interfaceID, System.DateTime messageConfirmedTime, string errorString) {
            this.IHDMessageConfirmedNotificationAsync(inHomeDisplayMessageID, hanDeviceID, transactionID, interfaceID, messageConfirmedTime, errorString, null);
        }
        
        /// <remarks/>
        public void IHDMessageConfirmedNotificationAsync(string inHomeDisplayMessageID, HANDeviceID hanDeviceID, string transactionID, HANInterfaceID interfaceID, System.DateTime messageConfirmedTime, string errorString, object userState) {
            if ((this.IHDMessageConfirmedNotificationOperationCompleted == null)) {
                this.IHDMessageConfirmedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHDMessageConfirmedNotificationOperationCompleted);
            }
            this.InvokeAsync("IHDMessageConfirmedNotification", new object[] {
                        inHomeDisplayMessageID,
                        hanDeviceID,
                        transactionID,
                        interfaceID,
                        messageConfirmedTime,
                        errorString}, this.IHDMessageConfirmedNotificationOperationCompleted, userState);
        }
        
        private void OnIHDMessageConfirmedNotificationOperationCompleted(object arg) {
            if ((this.IHDMessageConfirmedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHDMessageConfirmedNotificationCompleted(this, new IHDMessageConfirmedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayAddNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayAddNotification(inHomeDisplay[] addedIHDs, string transactionID) {
            object[] results = this.Invoke("InHomeDisplayAddNotification", new object[] {
                        addedIHDs,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayAddNotificationAsync(inHomeDisplay[] addedIHDs, string transactionID) {
            this.InHomeDisplayAddNotificationAsync(addedIHDs, transactionID, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayAddNotificationAsync(inHomeDisplay[] addedIHDs, string transactionID, object userState) {
            if ((this.InHomeDisplayAddNotificationOperationCompleted == null)) {
                this.InHomeDisplayAddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayAddNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayAddNotification", new object[] {
                        addedIHDs,
                        transactionID}, this.InHomeDisplayAddNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayAddNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayAddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayAddNotificationCompleted(this, new InHomeDisplayAddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayChangedNotification(inHomeDisplay[] changedIHDs) {
            object[] results = this.Invoke("InHomeDisplayChangedNotification", new object[] {
                        changedIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayChangedNotificationAsync(inHomeDisplay[] changedIHDs) {
            this.InHomeDisplayChangedNotificationAsync(changedIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayChangedNotificationAsync(inHomeDisplay[] changedIHDs, object userState) {
            if ((this.InHomeDisplayChangedNotificationOperationCompleted == null)) {
                this.InHomeDisplayChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayChangedNotification", new object[] {
                        changedIHDs}, this.InHomeDisplayChangedNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayChangedNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayChangedNotificationCompleted(this, new InHomeDisplayChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayExchangeNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayExchangeNotification(inHomeDisplayExchange[] IHDChangeout) {
            object[] results = this.Invoke("InHomeDisplayExchangeNotification", new object[] {
                        IHDChangeout});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayExchangeNotificationAsync(inHomeDisplayExchange[] IHDChangeout) {
            this.InHomeDisplayExchangeNotificationAsync(IHDChangeout, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayExchangeNotificationAsync(inHomeDisplayExchange[] IHDChangeout, object userState) {
            if ((this.InHomeDisplayExchangeNotificationOperationCompleted == null)) {
                this.InHomeDisplayExchangeNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayExchangeNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayExchangeNotification", new object[] {
                        IHDChangeout}, this.InHomeDisplayExchangeNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayExchangeNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayExchangeNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayExchangeNotificationCompleted(this, new InHomeDisplayExchangeNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayInstalledNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayInstalledNotification(inHomeDisplay[] addedIHDs) {
            object[] results = this.Invoke("InHomeDisplayInstalledNotification", new object[] {
                        addedIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayInstalledNotificationAsync(inHomeDisplay[] addedIHDs) {
            this.InHomeDisplayInstalledNotificationAsync(addedIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayInstalledNotificationAsync(inHomeDisplay[] addedIHDs, object userState) {
            if ((this.InHomeDisplayInstalledNotificationOperationCompleted == null)) {
                this.InHomeDisplayInstalledNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayInstalledNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayInstalledNotification", new object[] {
                        addedIHDs}, this.InHomeDisplayInstalledNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayInstalledNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayInstalledNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayInstalledNotificationCompleted(this, new InHomeDisplayInstalledNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayRemoveNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayRemoveNotification(inHomeDisplay[] removedIHDs, string transactionID) {
            object[] results = this.Invoke("InHomeDisplayRemoveNotification", new object[] {
                        removedIHDs,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayRemoveNotificationAsync(inHomeDisplay[] removedIHDs, string transactionID) {
            this.InHomeDisplayRemoveNotificationAsync(removedIHDs, transactionID, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayRemoveNotificationAsync(inHomeDisplay[] removedIHDs, string transactionID, object userState) {
            if ((this.InHomeDisplayRemoveNotificationOperationCompleted == null)) {
                this.InHomeDisplayRemoveNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayRemoveNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayRemoveNotification", new object[] {
                        removedIHDs,
                        transactionID}, this.InHomeDisplayRemoveNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayRemoveNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayRemoveNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayRemoveNotificationCompleted(this, new InHomeDisplayRemoveNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InHomeDisplayRetireNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InHomeDisplayRetireNotification(inHomeDisplay[] retiredIHDs) {
            object[] results = this.Invoke("InHomeDisplayRetireNotification", new object[] {
                        retiredIHDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InHomeDisplayRetireNotificationAsync(inHomeDisplay[] retiredIHDs) {
            this.InHomeDisplayRetireNotificationAsync(retiredIHDs, null);
        }
        
        /// <remarks/>
        public void InHomeDisplayRetireNotificationAsync(inHomeDisplay[] retiredIHDs, object userState) {
            if ((this.InHomeDisplayRetireNotificationOperationCompleted == null)) {
                this.InHomeDisplayRetireNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInHomeDisplayRetireNotificationOperationCompleted);
            }
            this.InvokeAsync("InHomeDisplayRetireNotification", new object[] {
                        retiredIHDs}, this.InHomeDisplayRetireNotificationOperationCompleted, userState);
        }
        
        private void OnInHomeDisplayRetireNotificationOperationCompleted(object arg) {
            if ((this.InHomeDisplayRetireNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InHomeDisplayRetireNotificationCompleted(this, new InHomeDisplayRetireNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateHANPricing", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateHANPricing(priceTierStructure priceTierStructure, temperatureTierStructure temperatureTierStructure, loadCycleTierStructure loadCycleTierStructure, HANInterfaceID hanInterfaceID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateHANPricing", new object[] {
                        priceTierStructure,
                        temperatureTierStructure,
                        loadCycleTierStructure,
                        hanInterfaceID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateHANPricingAsync(priceTierStructure priceTierStructure, temperatureTierStructure temperatureTierStructure, loadCycleTierStructure loadCycleTierStructure, HANInterfaceID hanInterfaceID, string transactionID, string responseURL) {
            this.InitiateHANPricingAsync(priceTierStructure, temperatureTierStructure, loadCycleTierStructure, hanInterfaceID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateHANPricingAsync(priceTierStructure priceTierStructure, temperatureTierStructure temperatureTierStructure, loadCycleTierStructure loadCycleTierStructure, HANInterfaceID hanInterfaceID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateHANPricingOperationCompleted == null)) {
                this.InitiateHANPricingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateHANPricingOperationCompleted);
            }
            this.InvokeAsync("InitiateHANPricing", new object[] {
                        priceTierStructure,
                        temperatureTierStructure,
                        loadCycleTierStructure,
                        hanInterfaceID,
                        transactionID,
                        responseURL}, this.InitiateHANPricingOperationCompleted, userState);
        }
        
        private void OnInitiateHANPricingOperationCompleted(object arg) {
            if ((this.InitiateHANPricingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateHANPricingCompleted(this, new InitiateHANPricingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateHANPricingRequest", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateHANPricingRequest(HANInterfaceID hanInterfaceID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateHANPricingRequest", new object[] {
                        hanInterfaceID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateHANPricingRequestAsync(HANInterfaceID hanInterfaceID, string transactionID, string responseURL) {
            this.InitiateHANPricingRequestAsync(hanInterfaceID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateHANPricingRequestAsync(HANInterfaceID hanInterfaceID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateHANPricingRequestOperationCompleted == null)) {
                this.InitiateHANPricingRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateHANPricingRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateHANPricingRequest", new object[] {
                        hanInterfaceID,
                        transactionID,
                        responseURL}, this.InitiateHANPricingRequestOperationCompleted, userState);
        }
        
        private void OnInitiateHANPricingRequestOperationCompleted(object arg) {
            if ((this.InitiateHANPricingRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateHANPricingRequestCompleted(this, new InitiateHANPricingRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetServiceLocationByMeterID", new object[] {
                        meterID});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByMeterIDAsync(meterID meterID) {
            this.GetServiceLocationByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetServiceLocationByMeterIDOperationCompleted == null)) {
                this.GetServiceLocationByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByMeterID", new object[] {
                        meterID}, this.GetServiceLocationByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByMeterIDOperationCompleted(object arg) {
            if ((this.GetServiceLocationByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByMeterIDCompleted(this, new GetServiceLocationByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByAccountNumber(string accountNumber, serviceType serviceType) {
            object[] results = this.Invoke("GetServiceLocationByAccountNumber", new object[] {
                        accountNumber,
                        serviceType});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByAccountNumberAsync(string accountNumber, serviceType serviceType) {
            this.GetServiceLocationByAccountNumberAsync(accountNumber, serviceType, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByAccountNumberAsync(string accountNumber, serviceType serviceType, object userState) {
            if ((this.GetServiceLocationByAccountNumberOperationCompleted == null)) {
                this.GetServiceLocationByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByAccountNumber", new object[] {
                        accountNumber,
                        serviceType}, this.GetServiceLocationByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByAccountNumberOperationCompleted(object arg) {
            if ((this.GetServiceLocationByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByAccountNumberCompleted(this, new GetServiceLocationByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByGridLocation", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByGridLocation(string gridLocation, serviceType serviceType) {
            object[] results = this.Invoke("GetServiceLocationByGridLocation", new object[] {
                        gridLocation,
                        serviceType});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByGridLocationAsync(string gridLocation, serviceType serviceType) {
            this.GetServiceLocationByGridLocationAsync(gridLocation, serviceType, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByGridLocationAsync(string gridLocation, serviceType serviceType, object userState) {
            if ((this.GetServiceLocationByGridLocationOperationCompleted == null)) {
                this.GetServiceLocationByGridLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByGridLocationOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByGridLocation", new object[] {
                        gridLocation,
                        serviceType}, this.GetServiceLocationByGridLocationOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByGridLocationOperationCompleted(object arg) {
            if ((this.GetServiceLocationByGridLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByGridLocationCompleted(this, new GetServiceLocationByGridLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByPhaseCode", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByPhaseCode(phaseCode phaseCode, string lastReceived) {
            object[] results = this.Invoke("GetServiceLocationByPhaseCode", new object[] {
                        phaseCode,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByPhaseCodeAsync(phaseCode phaseCode, string lastReceived) {
            this.GetServiceLocationByPhaseCodeAsync(phaseCode, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByPhaseCodeAsync(phaseCode phaseCode, string lastReceived, object userState) {
            if ((this.GetServiceLocationByPhaseCodeOperationCompleted == null)) {
                this.GetServiceLocationByPhaseCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByPhaseCodeOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByPhaseCode", new object[] {
                        phaseCode,
                        lastReceived}, this.GetServiceLocationByPhaseCodeOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByPhaseCodeOperationCompleted(object arg) {
            if ((this.GetServiceLocationByPhaseCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByPhaseCodeCompleted(this, new GetServiceLocationByPhaseCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByLoadGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByLoadGroup(string loadGroup, string lastReceived) {
            object[] results = this.Invoke("GetServiceLocationByLoadGroup", new object[] {
                        loadGroup,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByLoadGroupAsync(string loadGroup, string lastReceived) {
            this.GetServiceLocationByLoadGroupAsync(loadGroup, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByLoadGroupAsync(string loadGroup, string lastReceived, object userState) {
            if ((this.GetServiceLocationByLoadGroupOperationCompleted == null)) {
                this.GetServiceLocationByLoadGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByLoadGroupOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByLoadGroup", new object[] {
                        loadGroup,
                        lastReceived}, this.GetServiceLocationByLoadGroupOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByLoadGroupOperationCompleted(object arg) {
            if ((this.GetServiceLocationByLoadGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByLoadGroupCompleted(this, new GetServiceLocationByLoadGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByServiceType", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByServiceType(serviceType serviceType, string lastReceived) {
            object[] results = this.Invoke("GetServiceLocationByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceTypeAsync(serviceType serviceType, string lastReceived) {
            this.GetServiceLocationByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceTypeAsync(serviceType serviceType, string lastReceived, object userState) {
            if ((this.GetServiceLocationByServiceTypeOperationCompleted == null)) {
                this.GetServiceLocationByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetServiceLocationByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByServiceTypeOperationCompleted(object arg) {
            if ((this.GetServiceLocationByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByServiceTypeCompleted(this, new GetServiceLocationByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByShutOffDate", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByShutOffDate(System.DateTime shutOffDate, serviceType serviceType) {
            object[] results = this.Invoke("GetServiceLocationByShutOffDate", new object[] {
                        shutOffDate,
                        serviceType});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByShutOffDateAsync(System.DateTime shutOffDate, serviceType serviceType) {
            this.GetServiceLocationByShutOffDateAsync(shutOffDate, serviceType, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByShutOffDateAsync(System.DateTime shutOffDate, serviceType serviceType, object userState) {
            if ((this.GetServiceLocationByShutOffDateOperationCompleted == null)) {
                this.GetServiceLocationByShutOffDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByShutOffDateOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByShutOffDate", new object[] {
                        shutOffDate,
                        serviceType}, this.GetServiceLocationByShutOffDateOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByShutOffDateOperationCompleted(object arg) {
            if ((this.GetServiceLocationByShutOffDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByShutOffDateCompleted(this, new GetServiceLocationByShutOffDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersByEALocation", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByEALocation(string eaLoc) {
            object[] results = this.Invoke("GetMetersByEALocation", new object[] {
                        eaLoc});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByEALocationAsync(string eaLoc) {
            this.GetMetersByEALocationAsync(eaLoc, null);
        }
        
        /// <remarks/>
        public void GetMetersByEALocationAsync(string eaLoc, object userState) {
            if ((this.GetMetersByEALocationOperationCompleted == null)) {
                this.GetMetersByEALocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByEALocationOperationCompleted);
            }
            this.InvokeAsync("GetMetersByEALocation", new object[] {
                        eaLoc}, this.GetMetersByEALocationOperationCompleted, userState);
        }
        
        private void OnGetMetersByEALocationOperationCompleted(object arg) {
            if ((this.GetMetersByEALocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByEALocationCompleted(this, new GetMetersByEALocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersByFacilityID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByFacilityID(string facilityID, serviceType serviceType) {
            object[] results = this.Invoke("GetMetersByFacilityID", new object[] {
                        facilityID,
                        serviceType});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByFacilityIDAsync(string facilityID, serviceType serviceType) {
            this.GetMetersByFacilityIDAsync(facilityID, serviceType, null);
        }
        
        /// <remarks/>
        public void GetMetersByFacilityIDAsync(string facilityID, serviceType serviceType, object userState) {
            if ((this.GetMetersByFacilityIDOperationCompleted == null)) {
                this.GetMetersByFacilityIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByFacilityIDOperationCompleted);
            }
            this.InvokeAsync("GetMetersByFacilityID", new object[] {
                        facilityID,
                        serviceType}, this.GetMetersByFacilityIDOperationCompleted, userState);
        }
        
        private void OnGetMetersByFacilityIDOperationCompleted(object arg) {
            if ((this.GetMetersByFacilityIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByFacilityIDCompleted(this, new GetMetersByFacilityIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersBySiteID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersBySiteID(string siteID, serviceType serviceType) {
            object[] results = this.Invoke("GetMetersBySiteID", new object[] {
                        siteID,
                        serviceType});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersBySiteIDAsync(string siteID, serviceType serviceType) {
            this.GetMetersBySiteIDAsync(siteID, serviceType, null);
        }
        
        /// <remarks/>
        public void GetMetersBySiteIDAsync(string siteID, serviceType serviceType, object userState) {
            if ((this.GetMetersBySiteIDOperationCompleted == null)) {
                this.GetMetersBySiteIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersBySiteIDOperationCompleted);
            }
            this.InvokeAsync("GetMetersBySiteID", new object[] {
                        siteID,
                        serviceType}, this.GetMetersBySiteIDOperationCompleted, userState);
        }
        
        private void OnGetMetersBySiteIDOperationCompleted(object arg) {
            if ((this.GetMetersBySiteIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersBySiteIDCompleted(this, new GetMetersBySiteIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersByCustomerName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByCustomerName(string firstName, string lastName) {
            object[] results = this.Invoke("GetMetersByCustomerName", new object[] {
                        firstName,
                        lastName});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByCustomerNameAsync(string firstName, string lastName) {
            this.GetMetersByCustomerNameAsync(firstName, lastName, null);
        }
        
        /// <remarks/>
        public void GetMetersByCustomerNameAsync(string firstName, string lastName, object userState) {
            if ((this.GetMetersByCustomerNameOperationCompleted == null)) {
                this.GetMetersByCustomerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByCustomerNameOperationCompleted);
            }
            this.InvokeAsync("GetMetersByCustomerName", new object[] {
                        firstName,
                        lastName}, this.GetMetersByCustomerNameOperationCompleted, userState);
        }
        
        private void OnGetMetersByCustomerNameOperationCompleted(object arg) {
            if ((this.GetMetersByCustomerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByCustomerNameCompleted(this, new GetMetersByCustomerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersByHomePhone", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByHomePhone(telephoneNumber phone) {
            object[] results = this.Invoke("GetMetersByHomePhone", new object[] {
                        phone});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByHomePhoneAsync(telephoneNumber phone) {
            this.GetMetersByHomePhoneAsync(phone, null);
        }
        
        /// <remarks/>
        public void GetMetersByHomePhoneAsync(telephoneNumber phone, object userState) {
            if ((this.GetMetersByHomePhoneOperationCompleted == null)) {
                this.GetMetersByHomePhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByHomePhoneOperationCompleted);
            }
            this.InvokeAsync("GetMetersByHomePhone", new object[] {
                        phone}, this.GetMetersByHomePhoneOperationCompleted, userState);
        }
        
        private void OnGetMetersByHomePhoneOperationCompleted(object arg) {
            if ((this.GetMetersByHomePhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByHomePhoneCompleted(this, new GetMetersByHomePhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersBySearchString", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersBySearchString(string searchString) {
            object[] results = this.Invoke("GetMetersBySearchString", new object[] {
                        searchString});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersBySearchStringAsync(string searchString) {
            this.GetMetersBySearchStringAsync(searchString, null);
        }
        
        /// <remarks/>
        public void GetMetersBySearchStringAsync(string searchString, object userState) {
            if ((this.GetMetersBySearchStringOperationCompleted == null)) {
                this.GetMetersBySearchStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersBySearchStringOperationCompleted);
            }
            this.InvokeAsync("GetMetersBySearchString", new object[] {
                        searchString}, this.GetMetersBySearchStringOperationCompleted, userState);
        }
        
        private void OnGetMetersBySearchStringOperationCompleted(object arg) {
            if ((this.GetMetersBySearchStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersBySearchStringCompleted(this, new GetMetersBySearchStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLPReadingsByMeterIDFormattedBloc" +
            "k", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLPReadingsByMeterIDFormattedBlock(meterID meterID, System.DateTime profileStartDate, System.DateTime profileEndDate, string lastReceived) {
            object[] results = this.Invoke("GetLPReadingsByMeterIDFormattedBlock", new object[] {
                        meterID,
                        profileStartDate,
                        profileEndDate,
                        lastReceived});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPReadingsByMeterIDFormattedBlockAsync(meterID meterID, System.DateTime profileStartDate, System.DateTime profileEndDate, string lastReceived) {
            this.GetLPReadingsByMeterIDFormattedBlockAsync(meterID, profileStartDate, profileEndDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLPReadingsByMeterIDFormattedBlockAsync(meterID meterID, System.DateTime profileStartDate, System.DateTime profileEndDate, string lastReceived, object userState) {
            if ((this.GetLPReadingsByMeterIDFormattedBlockOperationCompleted == null)) {
                this.GetLPReadingsByMeterIDFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPReadingsByMeterIDFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetLPReadingsByMeterIDFormattedBlock", new object[] {
                        meterID,
                        profileStartDate,
                        profileEndDate,
                        lastReceived}, this.GetLPReadingsByMeterIDFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetLPReadingsByMeterIDFormattedBlockOperationCompleted(object arg) {
            if ((this.GetLPReadingsByMeterIDFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPReadingsByMeterIDFormattedBlockCompleted(this, new GetLPReadingsByMeterIDFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLPReadingsByDateFormattedBlock", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLPReadingsByDateFormattedBlock(System.DateTime profileDate, string lastReceived) {
            object[] results = this.Invoke("GetLPReadingsByDateFormattedBlock", new object[] {
                        profileDate,
                        lastReceived});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPReadingsByDateFormattedBlockAsync(System.DateTime profileDate, string lastReceived) {
            this.GetLPReadingsByDateFormattedBlockAsync(profileDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLPReadingsByDateFormattedBlockAsync(System.DateTime profileDate, string lastReceived, object userState) {
            if ((this.GetLPReadingsByDateFormattedBlockOperationCompleted == null)) {
                this.GetLPReadingsByDateFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPReadingsByDateFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetLPReadingsByDateFormattedBlock", new object[] {
                        profileDate,
                        lastReceived}, this.GetLPReadingsByDateFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetLPReadingsByDateFormattedBlockOperationCompleted(object arg) {
            if ((this.GetLPReadingsByDateFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPReadingsByDateFormattedBlockCompleted(this, new GetLPReadingsByDateFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLPReadingsByBillingCycle", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLPReadingsByBillingCycle(string billingCycle, System.DateTime profileDate, string lastReceived) {
            object[] results = this.Invoke("GetLPReadingsByBillingCycle", new object[] {
                        billingCycle,
                        profileDate,
                        lastReceived});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPReadingsByBillingCycleAsync(string billingCycle, System.DateTime profileDate, string lastReceived) {
            this.GetLPReadingsByBillingCycleAsync(billingCycle, profileDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLPReadingsByBillingCycleAsync(string billingCycle, System.DateTime profileDate, string lastReceived, object userState) {
            if ((this.GetLPReadingsByBillingCycleOperationCompleted == null)) {
                this.GetLPReadingsByBillingCycleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPReadingsByBillingCycleOperationCompleted);
            }
            this.InvokeAsync("GetLPReadingsByBillingCycle", new object[] {
                        billingCycle,
                        profileDate,
                        lastReceived}, this.GetLPReadingsByBillingCycleOperationCompleted, userState);
        }
        
        private void OnGetLPReadingsByBillingCycleOperationCompleted(object arg) {
            if ((this.GetLPReadingsByBillingCycleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPReadingsByBillingCycleCompleted(this, new GetLPReadingsByBillingCycleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllAccounts", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public account[] GetAllAccounts(string lastReceived) {
            object[] results = this.Invoke("GetAllAccounts", new object[] {
                        lastReceived});
            return ((account[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAccountsAsync(string lastReceived) {
            this.GetAllAccountsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllAccountsAsync(string lastReceived, object userState) {
            if ((this.GetAllAccountsOperationCompleted == null)) {
                this.GetAllAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAccountsOperationCompleted);
            }
            this.InvokeAsync("GetAllAccounts", new object[] {
                        lastReceived}, this.GetAllAccountsOperationCompleted, userState);
        }
        
        private void OnGetAllAccountsOperationCompleted(object arg) {
            if ((this.GetAllAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAccountsCompleted(this, new GetAllAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAccountsByCustomerID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public account[] GetAccountsByCustomerID(string customerID) {
            object[] results = this.Invoke("GetAccountsByCustomerID", new object[] {
                        customerID});
            return ((account[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountsByCustomerIDAsync(string customerID) {
            this.GetAccountsByCustomerIDAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetAccountsByCustomerIDAsync(string customerID, object userState) {
            if ((this.GetAccountsByCustomerIDOperationCompleted == null)) {
                this.GetAccountsByCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsByCustomerIDOperationCompleted);
            }
            this.InvokeAsync("GetAccountsByCustomerID", new object[] {
                        customerID}, this.GetAccountsByCustomerIDOperationCompleted, userState);
        }
        
        private void OnGetAccountsByCustomerIDOperationCompleted(object arg) {
            if ((this.GetAccountsByCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountsByCustomerIDCompleted(this, new GetAccountsByCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAccountByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public account GetAccountByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetAccountByMeterID", new object[] {
                        meterID});
            return ((account)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountByMeterIDAsync(meterID meterID) {
            this.GetAccountByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetAccountByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetAccountByMeterIDOperationCompleted == null)) {
                this.GetAccountByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetAccountByMeterID", new object[] {
                        meterID}, this.GetAccountByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetAccountByMeterIDOperationCompleted(object arg) {
            if ((this.GetAccountByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByMeterIDCompleted(this, new GetAccountByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAccountByServiceLocationIDAndSer" +
            "viceType", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public account GetAccountByServiceLocationIDAndServiceType(string serviceLocationID, serviceType serviceType) {
            object[] results = this.Invoke("GetAccountByServiceLocationIDAndServiceType", new object[] {
                        serviceLocationID,
                        serviceType});
            return ((account)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountByServiceLocationIDAndServiceTypeAsync(string serviceLocationID, serviceType serviceType) {
            this.GetAccountByServiceLocationIDAndServiceTypeAsync(serviceLocationID, serviceType, null);
        }
        
        /// <remarks/>
        public void GetAccountByServiceLocationIDAndServiceTypeAsync(string serviceLocationID, serviceType serviceType, object userState) {
            if ((this.GetAccountByServiceLocationIDAndServiceTypeOperationCompleted == null)) {
                this.GetAccountByServiceLocationIDAndServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountByServiceLocationIDAndServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAccountByServiceLocationIDAndServiceType", new object[] {
                        serviceLocationID,
                        serviceType}, this.GetAccountByServiceLocationIDAndServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAccountByServiceLocationIDAndServiceTypeOperationCompleted(object arg) {
            if ((this.GetAccountByServiceLocationIDAndServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountByServiceLocationIDAndServiceTypeCompleted(this, new GetAccountByServiceLocationIDAndServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetConfigurationGroupNames", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetConfigurationGroupNames() {
            object[] results = this.Invoke("GetConfigurationGroupNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesAsync() {
            this.GetConfigurationGroupNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesAsync(object userState) {
            if ((this.GetConfigurationGroupNamesOperationCompleted == null)) {
                this.GetConfigurationGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationGroupNamesOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationGroupNames", new object[0], this.GetConfigurationGroupNamesOperationCompleted, userState);
        }
        
        private void OnGetConfigurationGroupNamesOperationCompleted(object arg) {
            if ((this.GetConfigurationGroupNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationGroupNamesCompleted(this, new GetConfigurationGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetConfigurationGroupNamesByMeterID" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetConfigurationGroupNamesByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetConfigurationGroupNamesByMeterID", new object[] {
                        meterID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesByMeterIDAsync(meterID meterID) {
            this.GetConfigurationGroupNamesByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetConfigurationGroupNamesByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetConfigurationGroupNamesByMeterIDOperationCompleted == null)) {
                this.GetConfigurationGroupNamesByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationGroupNamesByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationGroupNamesByMeterID", new object[] {
                        meterID}, this.GetConfigurationGroupNamesByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetConfigurationGroupNamesByMeterIDOperationCompleted(object arg) {
            if ((this.GetConfigurationGroupNamesByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationGroupNamesByMeterIDCompleted(this, new GetConfigurationGroupNamesByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetConfigurationGroupMembers", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public configurationGroup GetConfigurationGroupMembers(string meterGroupName) {
            object[] results = this.Invoke("GetConfigurationGroupMembers", new object[] {
                        meterGroupName});
            return ((configurationGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationGroupMembersAsync(string meterGroupName) {
            this.GetConfigurationGroupMembersAsync(meterGroupName, null);
        }
        
        /// <remarks/>
        public void GetConfigurationGroupMembersAsync(string meterGroupName, object userState) {
            if ((this.GetConfigurationGroupMembersOperationCompleted == null)) {
                this.GetConfigurationGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationGroupMembers", new object[] {
                        meterGroupName}, this.GetConfigurationGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetConfigurationGroupMembersOperationCompleted(object arg) {
            if ((this.GetConfigurationGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationGroupMembersCompleted(this, new GetConfigurationGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetSchedules", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public schedule[] GetSchedules(string lastReceived) {
            object[] results = this.Invoke("GetSchedules", new object[] {
                        lastReceived});
            return ((schedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string lastReceived) {
            this.GetSchedulesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string lastReceived, object userState) {
            if ((this.GetSchedulesOperationCompleted == null)) {
                this.GetSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetSchedules", new object[] {
                        lastReceived}, this.GetSchedulesOperationCompleted, userState);
        }
        
        private void OnGetSchedulesOperationCompleted(object arg) {
            if ((this.GetSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesCompleted(this, new GetSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetScheduleByID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public schedule GetScheduleByID(string scheduleID) {
            object[] results = this.Invoke("GetScheduleByID", new object[] {
                        scheduleID});
            return ((schedule)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByIDAsync(string scheduleID) {
            this.GetScheduleByIDAsync(scheduleID, null);
        }
        
        /// <remarks/>
        public void GetScheduleByIDAsync(string scheduleID, object userState) {
            if ((this.GetScheduleByIDOperationCompleted == null)) {
                this.GetScheduleByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByIDOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByID", new object[] {
                        scheduleID}, this.GetScheduleByIDOperationCompleted, userState);
        }
        
        private void OnGetScheduleByIDOperationCompleted(object arg) {
            if ((this.GetScheduleByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByIDCompleted(this, new GetScheduleByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingSchedules", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public readingSchedule[] GetReadingSchedules(string lastReceived) {
            object[] results = this.Invoke("GetReadingSchedules", new object[] {
                        lastReceived});
            return ((readingSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingSchedulesAsync(string lastReceived) {
            this.GetReadingSchedulesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetReadingSchedulesAsync(string lastReceived, object userState) {
            if ((this.GetReadingSchedulesOperationCompleted == null)) {
                this.GetReadingSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetReadingSchedules", new object[] {
                        lastReceived}, this.GetReadingSchedulesOperationCompleted, userState);
        }
        
        private void OnGetReadingSchedulesOperationCompleted(object arg) {
            if ((this.GetReadingSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingSchedulesCompleted(this, new GetReadingSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingScheduleByID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public readingSchedule GetReadingScheduleByID(string readingScheduleID) {
            object[] results = this.Invoke("GetReadingScheduleByID", new object[] {
                        readingScheduleID});
            return ((readingSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingScheduleByIDAsync(string readingScheduleID) {
            this.GetReadingScheduleByIDAsync(readingScheduleID, null);
        }
        
        /// <remarks/>
        public void GetReadingScheduleByIDAsync(string readingScheduleID, object userState) {
            if ((this.GetReadingScheduleByIDOperationCompleted == null)) {
                this.GetReadingScheduleByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingScheduleByIDOperationCompleted);
            }
            this.InvokeAsync("GetReadingScheduleByID", new object[] {
                        readingScheduleID}, this.GetReadingScheduleByIDOperationCompleted, userState);
        }
        
        private void OnGetReadingScheduleByIDOperationCompleted(object arg) {
            if ((this.GetReadingScheduleByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingScheduleByIDCompleted(this, new GetReadingScheduleByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingsByMeterIDList", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLatestReadingsByMeterIDList(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetLatestReadingsByMeterIDList", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterIDListAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetLatestReadingsByMeterIDListAsync(meterIDs, startDate, endDate, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterIDListAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetLatestReadingsByMeterIDListOperationCompleted == null)) {
                this.GetLatestReadingsByMeterIDListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsByMeterIDListOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingsByMeterIDList", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetLatestReadingsByMeterIDListOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsByMeterIDListOperationCompleted(object arg) {
            if ((this.GetLatestReadingsByMeterIDListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsByMeterIDListCompleted(this, new GetLatestReadingsByMeterIDListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterBaseByObjectID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterBase GetMeterBaseByObjectID(string meterBaseID) {
            object[] results = this.Invoke("GetMeterBaseByObjectID", new object[] {
                        meterBaseID});
            return ((meterBase)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterBaseByObjectIDAsync(string meterBaseID) {
            this.GetMeterBaseByObjectIDAsync(meterBaseID, null);
        }
        
        /// <remarks/>
        public void GetMeterBaseByObjectIDAsync(string meterBaseID, object userState) {
            if ((this.GetMeterBaseByObjectIDOperationCompleted == null)) {
                this.GetMeterBaseByObjectIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterBaseByObjectIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterBaseByObjectID", new object[] {
                        meterBaseID}, this.GetMeterBaseByObjectIDOperationCompleted, userState);
        }
        
        private void OnGetMeterBaseByObjectIDOperationCompleted(object arg) {
            if ((this.GetMeterBaseByObjectIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterBaseByObjectIDCompleted(this, new GetMeterBaseByObjectIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetFormattedBlockTemplates", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlockTemplate[] GetFormattedBlockTemplates(string lastReceived) {
            object[] results = this.Invoke("GetFormattedBlockTemplates", new object[] {
                        lastReceived});
            return ((formattedBlockTemplate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFormattedBlockTemplatesAsync(string lastReceived) {
            this.GetFormattedBlockTemplatesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetFormattedBlockTemplatesAsync(string lastReceived, object userState) {
            if ((this.GetFormattedBlockTemplatesOperationCompleted == null)) {
                this.GetFormattedBlockTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormattedBlockTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetFormattedBlockTemplates", new object[] {
                        lastReceived}, this.GetFormattedBlockTemplatesOperationCompleted, userState);
        }
        
        private void OnGetFormattedBlockTemplatesOperationCompleted(object arg) {
            if ((this.GetFormattedBlockTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormattedBlockTemplatesCompleted(this, new GetFormattedBlockTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingsByMeterListFormatt" +
            "edBlock", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLatestReadingsByMeterListFormattedBlock(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingsByMeterListFormattedBlock", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterListFormattedBlockAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            this.GetLatestReadingsByMeterListFormattedBlockAsync(meterIDs, startDate, endDate, formattedBlockTemplateName, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterListFormattedBlockAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string formattedBlockTemplateName, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingsByMeterListFormattedBlockOperationCompleted == null)) {
                this.GetLatestReadingsByMeterListFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsByMeterListFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingsByMeterListFormattedBlock", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived}, this.GetLatestReadingsByMeterListFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsByMeterListFormattedBlockOperationCompleted(object arg) {
            if ((this.GetLatestReadingsByMeterListFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsByMeterListFormattedBlockCompleted(this, new GetLatestReadingsByMeterListFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllConnectDisconnectEventsByReas" +
            "onCode", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public connectDisconnectEvent[] GetAllConnectDisconnectEventsByReasonCode(string reasonCode, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetAllConnectDisconnectEventsByReasonCode", new object[] {
                        reasonCode,
                        startDate,
                        endDate});
            return ((connectDisconnectEvent[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllConnectDisconnectEventsByReasonCodeAsync(string reasonCode, System.DateTime startDate, System.DateTime endDate) {
            this.GetAllConnectDisconnectEventsByReasonCodeAsync(reasonCode, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetAllConnectDisconnectEventsByReasonCodeAsync(string reasonCode, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetAllConnectDisconnectEventsByReasonCodeOperationCompleted == null)) {
                this.GetAllConnectDisconnectEventsByReasonCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllConnectDisconnectEventsByReasonCodeOperationCompleted);
            }
            this.InvokeAsync("GetAllConnectDisconnectEventsByReasonCode", new object[] {
                        reasonCode,
                        startDate,
                        endDate}, this.GetAllConnectDisconnectEventsByReasonCodeOperationCompleted, userState);
        }
        
        private void OnGetAllConnectDisconnectEventsByReasonCodeOperationCompleted(object arg) {
            if ((this.GetAllConnectDisconnectEventsByReasonCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllConnectDisconnectEventsByReasonCodeCompleted(this, new GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetSupportedReadingStatusCodes", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public readingStatusCodeEntry[] GetSupportedReadingStatusCodes() {
            object[] results = this.Invoke("GetSupportedReadingStatusCodes", new object[0]);
            return ((readingStatusCodeEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportedReadingStatusCodesAsync() {
            this.GetSupportedReadingStatusCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportedReadingStatusCodesAsync(object userState) {
            if ((this.GetSupportedReadingStatusCodesOperationCompleted == null)) {
                this.GetSupportedReadingStatusCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportedReadingStatusCodesOperationCompleted);
            }
            this.InvokeAsync("GetSupportedReadingStatusCodes", new object[0], this.GetSupportedReadingStatusCodesOperationCompleted, userState);
        }
        
        private void OnGetSupportedReadingStatusCodesOperationCompleted(object arg) {
            if ((this.GetSupportedReadingStatusCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportedReadingStatusCodesCompleted(this, new GetSupportedReadingStatusCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLPReadingsByMeterIDIntervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLPReadingsByMeterIDIntervalData(meterID meterID, System.DateTime profileStartDate, System.DateTime profileEndDate, string lastReceived) {
            object[] results = this.Invoke("GetLPReadingsByMeterIDIntervalData", new object[] {
                        meterID,
                        profileStartDate,
                        profileEndDate,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPReadingsByMeterIDIntervalDataAsync(meterID meterID, System.DateTime profileStartDate, System.DateTime profileEndDate, string lastReceived) {
            this.GetLPReadingsByMeterIDIntervalDataAsync(meterID, profileStartDate, profileEndDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLPReadingsByMeterIDIntervalDataAsync(meterID meterID, System.DateTime profileStartDate, System.DateTime profileEndDate, string lastReceived, object userState) {
            if ((this.GetLPReadingsByMeterIDIntervalDataOperationCompleted == null)) {
                this.GetLPReadingsByMeterIDIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPReadingsByMeterIDIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLPReadingsByMeterIDIntervalData", new object[] {
                        meterID,
                        profileStartDate,
                        profileEndDate,
                        lastReceived}, this.GetLPReadingsByMeterIDIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLPReadingsByMeterIDIntervalDataOperationCompleted(object arg) {
            if ((this.GetLPReadingsByMeterIDIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPReadingsByMeterIDIntervalDataCompleted(this, new GetLPReadingsByMeterIDIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLPReadingsByDateIntervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLPReadingsByDateIntervalData(System.DateTime profileDate, string lastReceived) {
            object[] results = this.Invoke("GetLPReadingsByDateIntervalData", new object[] {
                        profileDate,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPReadingsByDateIntervalDataAsync(System.DateTime profileDate, string lastReceived) {
            this.GetLPReadingsByDateIntervalDataAsync(profileDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLPReadingsByDateIntervalDataAsync(System.DateTime profileDate, string lastReceived, object userState) {
            if ((this.GetLPReadingsByDateIntervalDataOperationCompleted == null)) {
                this.GetLPReadingsByDateIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPReadingsByDateIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLPReadingsByDateIntervalData", new object[] {
                        profileDate,
                        lastReceived}, this.GetLPReadingsByDateIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLPReadingsByDateIntervalDataOperationCompleted(object arg) {
            if ((this.GetLPReadingsByDateIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPReadingsByDateIntervalDataCompleted(this, new GetLPReadingsByDateIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLPReadingsByBillingCycleInterval" +
            "Data", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLPReadingsByBillingCycleIntervalData(string billingCycle, System.DateTime profileDate, string lastReceived) {
            object[] results = this.Invoke("GetLPReadingsByBillingCycleIntervalData", new object[] {
                        billingCycle,
                        profileDate,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPReadingsByBillingCycleIntervalDataAsync(string billingCycle, System.DateTime profileDate, string lastReceived) {
            this.GetLPReadingsByBillingCycleIntervalDataAsync(billingCycle, profileDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLPReadingsByBillingCycleIntervalDataAsync(string billingCycle, System.DateTime profileDate, string lastReceived, object userState) {
            if ((this.GetLPReadingsByBillingCycleIntervalDataOperationCompleted == null)) {
                this.GetLPReadingsByBillingCycleIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPReadingsByBillingCycleIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLPReadingsByBillingCycleIntervalData", new object[] {
                        billingCycle,
                        profileDate,
                        lastReceived}, this.GetLPReadingsByBillingCycleIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLPReadingsByBillingCycleIntervalDataOperationCompleted(object arg) {
            if ((this.GetLPReadingsByBillingCycleIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPReadingsByBillingCycleIntervalDataCompleted(this, new GetLPReadingsByBillingCycleIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByBillingCycleIntervalDa" +
            "ta", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByBillingCycleIntervalData(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByBillingCycleIntervalData", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleIntervalDataAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            this.GetReadingsByBillingCycleIntervalDataAsync(billingCycle, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleIntervalDataAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByBillingCycleIntervalDataOperationCompleted == null)) {
                this.GetReadingsByBillingCycleIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByBillingCycleIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByBillingCycleIntervalData", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName}, this.GetReadingsByBillingCycleIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByBillingCycleIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByBillingCycleIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByBillingCycleIntervalDataCompleted(this, new GetReadingsByBillingCycleIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingByMeterIDIntervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingByMeterIDIntervalData(meterID meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingByMeterIDIntervalData", new object[] {
                        meterID,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDIntervalDataAsync(meterID meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            this.GetReadingByMeterIDIntervalDataAsync(meterID, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDIntervalDataAsync(meterID meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingByMeterIDIntervalDataOperationCompleted == null)) {
                this.GetReadingByMeterIDIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingByMeterIDIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingByMeterIDIntervalData", new object[] {
                        meterID,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName}, this.GetReadingByMeterIDIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingByMeterIDIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingByMeterIDIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingByMeterIDIntervalDataCompleted(this, new GetReadingByMeterIDIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByDateIntervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByDateIntervalData(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateIntervalData", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateIntervalDataAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName) {
            this.GetReadingsByDateIntervalDataAsync(billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateIntervalDataAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateIntervalDataOperationCompleted == null)) {
                this.GetReadingsByDateIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateIntervalData", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        fieldName}, this.GetReadingsByDateIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByDateIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateIntervalDataCompleted(this, new GetReadingsByDateIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestMeterReadingsByMeterGroupI" +
            "ntervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData GetLatestMeterReadingsByMeterGroupIntervalData(string meterGroupID, serviceType serviceType, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestMeterReadingsByMeterGroupIntervalData", new object[] {
                        meterGroupID,
                        serviceType,
                        fieldName,
                        lastReceived});
            return ((intervalData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupIntervalDataAsync(string meterGroupID, serviceType serviceType, string[] fieldName, string lastReceived) {
            this.GetLatestMeterReadingsByMeterGroupIntervalDataAsync(meterGroupID, serviceType, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupIntervalDataAsync(string meterGroupID, serviceType serviceType, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted == null)) {
                this.GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestMeterReadingsByMeterGroupIntervalData", new object[] {
                        meterGroupID,
                        serviceType,
                        fieldName,
                        lastReceived}, this.GetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestMeterReadingsByMeterGroupIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestMeterReadingsByMeterGroupIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestMeterReadingsByMeterGroupIntervalDataCompleted(this, new GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingByMeterIDAndFieldNa" +
            "meIntervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData GetLatestReadingByMeterIDAndFieldNameIntervalData(meterID meterID, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        fieldName,
                        lastReceived});
            return ((intervalData)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAndFieldNameIntervalDataAsync(meterID meterID, string[] fieldName, string lastReceived) {
            this.GetLatestReadingByMeterIDAndFieldNameIntervalDataAsync(meterID, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAndFieldNameIntervalDataAsync(meterID meterID, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        fieldName,
                        lastReceived}, this.GetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByMeterIDAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestReadingByMeterIDAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByMeterIDAndFieldNameIntervalDataCompleted(this, new GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingByFieldNameInterval" +
            "Data", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLatestReadingByFieldNameIntervalData(string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingByFieldNameIntervalData", new object[] {
                        fieldName,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByFieldNameIntervalDataAsync(string[] fieldName, string lastReceived) {
            this.GetLatestReadingByFieldNameIntervalDataAsync(fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByFieldNameIntervalDataAsync(string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingByFieldNameIntervalDataOperationCompleted == null)) {
                this.GetLatestReadingByFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByFieldNameIntervalData", new object[] {
                        fieldName,
                        lastReceived}, this.GetLatestReadingByFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestReadingByFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByFieldNameIntervalDataCompleted(this, new GetLatestReadingByFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByDateAndFieldNameInterv" +
            "alData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByDateAndFieldNameIntervalData(System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateAndFieldNameIntervalData", new object[] {
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndFieldNameIntervalDataAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            this.GetReadingsByDateAndFieldNameIntervalDataAsync(startDate, endDate, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndFieldNameIntervalDataAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetReadingsByDateAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateAndFieldNameIntervalData", new object[] {
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName}, this.GetReadingsByDateAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByDateAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateAndFieldNameIntervalDataCompleted(this, new GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByMeterIDAndFieldNameInt" +
            "ervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByMeterIDAndFieldNameIntervalData(meterID meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDAndFieldNameIntervalDataAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            this.GetReadingsByMeterIDAndFieldNameIntervalDataAsync(meterID, startDate, endDate, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDAndFieldNameIntervalDataAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByMeterIDAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetReadingsByMeterIDAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByMeterIDAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByMeterIDAndFieldNameIntervalData", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName}, this.GetReadingsByMeterIDAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByMeterIDAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByMeterIDAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByMeterIDAndFieldNameIntervalDataCompleted(this, new GetReadingsByMeterIDAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingsByMeterIDListInter" +
            "valData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLatestReadingsByMeterIDListIntervalData(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetLatestReadingsByMeterIDListIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterIDListIntervalDataAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            this.GetLatestReadingsByMeterIDListIntervalDataAsync(meterIDs, startDate, endDate, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterIDListIntervalDataAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetLatestReadingsByMeterIDListIntervalDataOperationCompleted == null)) {
                this.GetLatestReadingsByMeterIDListIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsByMeterIDListIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingsByMeterIDListIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName}, this.GetLatestReadingsByMeterIDListIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsByMeterIDListIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestReadingsByMeterIDListIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsByMeterIDListIntervalDataCompleted(this, new GetLatestReadingsByMeterIDListIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingsByMeterListInterva" +
            "lData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetLatestReadingsByMeterListIntervalData(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingsByMeterListIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        fieldName,
                        lastReceived});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterListIntervalDataAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string[] fieldName, string lastReceived) {
            this.GetLatestReadingsByMeterListIntervalDataAsync(meterIDs, startDate, endDate, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsByMeterListIntervalDataAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingsByMeterListIntervalDataOperationCompleted == null)) {
                this.GetLatestReadingsByMeterListIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsByMeterListIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingsByMeterListIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        fieldName,
                        lastReceived}, this.GetLatestReadingsByMeterListIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsByMeterListIntervalDataOperationCompleted(object arg) {
            if ((this.GetLatestReadingsByMeterListIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsByMeterListIntervalDataCompleted(this, new GetLatestReadingsByMeterListIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/OutageReasonChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] OutageReasonChangedNotification(string outageEventID, outageReasonCodeList reasonCodes, string transactionID) {
            object[] results = this.Invoke("OutageReasonChangedNotification", new object[] {
                        outageEventID,
                        reasonCodes,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void OutageReasonChangedNotificationAsync(string outageEventID, outageReasonCodeList reasonCodes, string transactionID) {
            this.OutageReasonChangedNotificationAsync(outageEventID, reasonCodes, transactionID, null);
        }
        
        /// <remarks/>
        public void OutageReasonChangedNotificationAsync(string outageEventID, outageReasonCodeList reasonCodes, string transactionID, object userState) {
            if ((this.OutageReasonChangedNotificationOperationCompleted == null)) {
                this.OutageReasonChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutageReasonChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("OutageReasonChangedNotification", new object[] {
                        outageEventID,
                        reasonCodes,
                        transactionID}, this.OutageReasonChangedNotificationOperationCompleted, userState);
        }
        
        private void OnOutageReasonChangedNotificationOperationCompleted(object arg) {
            if ((this.OutageReasonChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutageReasonChangedNotificationCompleted(this, new OutageReasonChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/OutageReasonContainerChangedNotific" +
            "ation", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] OutageReasonContainerChangedNotification(outageReasonContainer reasons, string transactionID) {
            object[] results = this.Invoke("OutageReasonContainerChangedNotification", new object[] {
                        reasons,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void OutageReasonContainerChangedNotificationAsync(outageReasonContainer reasons, string transactionID) {
            this.OutageReasonContainerChangedNotificationAsync(reasons, transactionID, null);
        }
        
        /// <remarks/>
        public void OutageReasonContainerChangedNotificationAsync(outageReasonContainer reasons, string transactionID, object userState) {
            if ((this.OutageReasonContainerChangedNotificationOperationCompleted == null)) {
                this.OutageReasonContainerChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutageReasonContainerChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("OutageReasonContainerChangedNotification", new object[] {
                        reasons,
                        transactionID}, this.OutageReasonContainerChangedNotificationOperationCompleted, userState);
        }
        
        private void OnOutageReasonContainerChangedNotificationOperationCompleted(object arg) {
            if ((this.OutageReasonContainerChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutageReasonContainerChangedNotificationCompleted(this, new OutageReasonContainerChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/OutageEventChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] OutageEventChangedNotification(outageEvent[] oEvents) {
            object[] results = this.Invoke("OutageEventChangedNotification", new object[] {
                        oEvents});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void OutageEventChangedNotificationAsync(outageEvent[] oEvents) {
            this.OutageEventChangedNotificationAsync(oEvents, null);
        }
        
        /// <remarks/>
        public void OutageEventChangedNotificationAsync(outageEvent[] oEvents, object userState) {
            if ((this.OutageEventChangedNotificationOperationCompleted == null)) {
                this.OutageEventChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutageEventChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("OutageEventChangedNotification", new object[] {
                        oEvents}, this.OutageEventChangedNotificationOperationCompleted, userState);
        }
        
        private void OnOutageEventChangedNotificationOperationCompleted(object arg) {
            if ((this.OutageEventChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutageEventChangedNotificationCompleted(this, new OutageEventChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InsertInHomeDisplayInIHDGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InsertInHomeDisplayInIHDGroup(string[] inHomeDisplayIDs, string IHDGroupID) {
            object[] results = this.Invoke("InsertInHomeDisplayInIHDGroup", new object[] {
                        inHomeDisplayIDs,
                        IHDGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertInHomeDisplayInIHDGroupAsync(string[] inHomeDisplayIDs, string IHDGroupID) {
            this.InsertInHomeDisplayInIHDGroupAsync(inHomeDisplayIDs, IHDGroupID, null);
        }
        
        /// <remarks/>
        public void InsertInHomeDisplayInIHDGroupAsync(string[] inHomeDisplayIDs, string IHDGroupID, object userState) {
            if ((this.InsertInHomeDisplayInIHDGroupOperationCompleted == null)) {
                this.InsertInHomeDisplayInIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertInHomeDisplayInIHDGroupOperationCompleted);
            }
            this.InvokeAsync("InsertInHomeDisplayInIHDGroup", new object[] {
                        inHomeDisplayIDs,
                        IHDGroupID}, this.InsertInHomeDisplayInIHDGroupOperationCompleted, userState);
        }
        
        private void OnInsertInHomeDisplayInIHDGroupOperationCompleted(object arg) {
            if ((this.InsertInHomeDisplayInIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertInHomeDisplayInIHDGroupCompleted(this, new InsertInHomeDisplayInIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/RemoveInHomeDisplayFromIHDGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RemoveInHomeDisplayFromIHDGroup(string[] inHomeDisplays, string IHDGroupID) {
            object[] results = this.Invoke("RemoveInHomeDisplayFromIHDGroup", new object[] {
                        inHomeDisplays,
                        IHDGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RemoveInHomeDisplayFromIHDGroupAsync(string[] inHomeDisplays, string IHDGroupID) {
            this.RemoveInHomeDisplayFromIHDGroupAsync(inHomeDisplays, IHDGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveInHomeDisplayFromIHDGroupAsync(string[] inHomeDisplays, string IHDGroupID, object userState) {
            if ((this.RemoveInHomeDisplayFromIHDGroupOperationCompleted == null)) {
                this.RemoveInHomeDisplayFromIHDGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveInHomeDisplayFromIHDGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveInHomeDisplayFromIHDGroup", new object[] {
                        inHomeDisplays,
                        IHDGroupID}, this.RemoveInHomeDisplayFromIHDGroupOperationCompleted, userState);
        }
        
        private void OnRemoveInHomeDisplayFromIHDGroupOperationCompleted(object arg) {
            if ((this.RemoveInHomeDisplayFromIHDGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveInHomeDisplayFromIHDGroupCompleted(this, new RemoveInHomeDisplayFromIHDGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelCriticalPeakPriceEvent", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelCriticalPeakPriceEvent(criticalPeakPriceEvent criticalPeakPriceEvent, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL) {
            object[] results = this.Invoke("CancelCriticalPeakPriceEvent", new object[] {
                        criticalPeakPriceEvent,
                        deviceID,
                        transactionID,
                        interfaceID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelCriticalPeakPriceEventAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL) {
            this.CancelCriticalPeakPriceEventAsync(criticalPeakPriceEvent, deviceID, transactionID, interfaceID, responseURL, null);
        }
        
        /// <remarks/>
        public void CancelCriticalPeakPriceEventAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL, object userState) {
            if ((this.CancelCriticalPeakPriceEventOperationCompleted == null)) {
                this.CancelCriticalPeakPriceEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelCriticalPeakPriceEventOperationCompleted);
            }
            this.InvokeAsync("CancelCriticalPeakPriceEvent", new object[] {
                        criticalPeakPriceEvent,
                        deviceID,
                        transactionID,
                        interfaceID,
                        responseURL}, this.CancelCriticalPeakPriceEventOperationCompleted, userState);
        }
        
        private void OnCancelCriticalPeakPriceEventOperationCompleted(object arg) {
            if ((this.CancelCriticalPeakPriceEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCriticalPeakPriceEventCompleted(this, new CancelCriticalPeakPriceEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelCriticalPeakPriceEventToGroup" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelCriticalPeakPriceEventToGroup(criticalPeakPriceEvent criticalPeakPriceEvent, HANGroupID groupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("CancelCriticalPeakPriceEventToGroup", new object[] {
                        criticalPeakPriceEvent,
                        groupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelCriticalPeakPriceEventToGroupAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANGroupID groupID, string transactionID, string responseURL) {
            this.CancelCriticalPeakPriceEventToGroupAsync(criticalPeakPriceEvent, groupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void CancelCriticalPeakPriceEventToGroupAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANGroupID groupID, string transactionID, string responseURL, object userState) {
            if ((this.CancelCriticalPeakPriceEventToGroupOperationCompleted == null)) {
                this.CancelCriticalPeakPriceEventToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelCriticalPeakPriceEventToGroupOperationCompleted);
            }
            this.InvokeAsync("CancelCriticalPeakPriceEventToGroup", new object[] {
                        criticalPeakPriceEvent,
                        groupID,
                        transactionID,
                        responseURL}, this.CancelCriticalPeakPriceEventToGroupOperationCompleted, userState);
        }
        
        private void OnCancelCriticalPeakPriceEventToGroupOperationCompleted(object arg) {
            if ((this.CancelCriticalPeakPriceEventToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCriticalPeakPriceEventToGroupCompleted(this, new CancelCriticalPeakPriceEventToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CriticalPeakPriceEventNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CriticalPeakPriceEventNotification(criticalPeakPriceEventStatus[] eventHistory, string transactionID) {
            object[] results = this.Invoke("CriticalPeakPriceEventNotification", new object[] {
                        eventHistory,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CriticalPeakPriceEventNotificationAsync(criticalPeakPriceEventStatus[] eventHistory, string transactionID) {
            this.CriticalPeakPriceEventNotificationAsync(eventHistory, transactionID, null);
        }
        
        /// <remarks/>
        public void CriticalPeakPriceEventNotificationAsync(criticalPeakPriceEventStatus[] eventHistory, string transactionID, object userState) {
            if ((this.CriticalPeakPriceEventNotificationOperationCompleted == null)) {
                this.CriticalPeakPriceEventNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCriticalPeakPriceEventNotificationOperationCompleted);
            }
            this.InvokeAsync("CriticalPeakPriceEventNotification", new object[] {
                        eventHistory,
                        transactionID}, this.CriticalPeakPriceEventNotificationOperationCompleted, userState);
        }
        
        private void OnCriticalPeakPriceEventNotificationOperationCompleted(object arg) {
            if ((this.CriticalPeakPriceEventNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CriticalPeakPriceEventNotificationCompleted(this, new CriticalPeakPriceEventNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateCriticalPeakPriceEvent", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateCriticalPeakPriceEvent(criticalPeakPriceEvent criticalPeakPriceEvent, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL) {
            object[] results = this.Invoke("InitiateCriticalPeakPriceEvent", new object[] {
                        criticalPeakPriceEvent,
                        deviceID,
                        transactionID,
                        interfaceID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateCriticalPeakPriceEventAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL) {
            this.InitiateCriticalPeakPriceEventAsync(criticalPeakPriceEvent, deviceID, transactionID, interfaceID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateCriticalPeakPriceEventAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANDeviceID deviceID, string transactionID, HANInterfaceID interfaceID, string responseURL, object userState) {
            if ((this.InitiateCriticalPeakPriceEventOperationCompleted == null)) {
                this.InitiateCriticalPeakPriceEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateCriticalPeakPriceEventOperationCompleted);
            }
            this.InvokeAsync("InitiateCriticalPeakPriceEvent", new object[] {
                        criticalPeakPriceEvent,
                        deviceID,
                        transactionID,
                        interfaceID,
                        responseURL}, this.InitiateCriticalPeakPriceEventOperationCompleted, userState);
        }
        
        private void OnInitiateCriticalPeakPriceEventOperationCompleted(object arg) {
            if ((this.InitiateCriticalPeakPriceEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateCriticalPeakPriceEventCompleted(this, new InitiateCriticalPeakPriceEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateCriticalPeakPriceEventToGro" +
            "up", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateCriticalPeakPriceEventToGroup(criticalPeakPriceEvent criticalPeakPriceEvent, HANGroupID groupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateCriticalPeakPriceEventToGroup", new object[] {
                        criticalPeakPriceEvent,
                        groupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateCriticalPeakPriceEventToGroupAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANGroupID groupID, string transactionID, string responseURL) {
            this.InitiateCriticalPeakPriceEventToGroupAsync(criticalPeakPriceEvent, groupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateCriticalPeakPriceEventToGroupAsync(criticalPeakPriceEvent criticalPeakPriceEvent, HANGroupID groupID, string transactionID, string responseURL, object userState) {
            if ((this.InitiateCriticalPeakPriceEventToGroupOperationCompleted == null)) {
                this.InitiateCriticalPeakPriceEventToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateCriticalPeakPriceEventToGroupOperationCompleted);
            }
            this.InvokeAsync("InitiateCriticalPeakPriceEventToGroup", new object[] {
                        criticalPeakPriceEvent,
                        groupID,
                        transactionID,
                        responseURL}, this.InitiateCriticalPeakPriceEventToGroupOperationCompleted, userState);
        }
        
        private void OnInitiateCriticalPeakPriceEventToGroupOperationCompleted(object arg) {
            if ((this.InitiateCriticalPeakPriceEventToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateCriticalPeakPriceEventToGroupCompleted(this, new InitiateCriticalPeakPriceEventToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateLoadManagementEvent", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateLoadManagementEvent(loadManagementEvent theLMEvent, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateLoadManagementEvent", new object[] {
                        theLMEvent,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventAsync(loadManagementEvent theLMEvent, string transactionID, string responseURL) {
            this.InitiateLoadManagementEventAsync(theLMEvent, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventAsync(loadManagementEvent theLMEvent, string transactionID, string responseURL, object userState) {
            if ((this.InitiateLoadManagementEventOperationCompleted == null)) {
                this.InitiateLoadManagementEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateLoadManagementEventOperationCompleted);
            }
            this.InvokeAsync("InitiateLoadManagementEvent", new object[] {
                        theLMEvent,
                        transactionID,
                        responseURL}, this.InitiateLoadManagementEventOperationCompleted, userState);
        }
        
        private void OnInitiateLoadManagementEventOperationCompleted(object arg) {
            if ((this.InitiateLoadManagementEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateLoadManagementEventCompleted(this, new InitiateLoadManagementEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateLoadManagementEvents", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateLoadManagementEvents(loadManagementEvent[] theLMEvents, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiateLoadManagementEvents", new object[] {
                        theLMEvents,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventsAsync(loadManagementEvent[] theLMEvents, string transactionID, string responseURL) {
            this.InitiateLoadManagementEventsAsync(theLMEvents, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiateLoadManagementEventsAsync(loadManagementEvent[] theLMEvents, string transactionID, string responseURL, object userState) {
            if ((this.InitiateLoadManagementEventsOperationCompleted == null)) {
                this.InitiateLoadManagementEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateLoadManagementEventsOperationCompleted);
            }
            this.InvokeAsync("InitiateLoadManagementEvents", new object[] {
                        theLMEvents,
                        transactionID,
                        responseURL}, this.InitiateLoadManagementEventsOperationCompleted, userState);
        }
        
        private void OnInitiateLoadManagementEventsOperationCompleted(object arg) {
            if ((this.InitiateLoadManagementEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateLoadManagementEventsCompleted(this, new InitiateLoadManagementEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiatePowerFactorManagementEvent", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiatePowerFactorManagementEvent(powerFactorManagementEvent thePFMEvent, string transactionID, string responseURL) {
            object[] results = this.Invoke("InitiatePowerFactorManagementEvent", new object[] {
                        thePFMEvent,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiatePowerFactorManagementEventAsync(powerFactorManagementEvent thePFMEvent, string transactionID, string responseURL) {
            this.InitiatePowerFactorManagementEventAsync(thePFMEvent, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InitiatePowerFactorManagementEventAsync(powerFactorManagementEvent thePFMEvent, string transactionID, string responseURL, object userState) {
            if ((this.InitiatePowerFactorManagementEventOperationCompleted == null)) {
                this.InitiatePowerFactorManagementEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiatePowerFactorManagementEventOperationCompleted);
            }
            this.InvokeAsync("InitiatePowerFactorManagementEvent", new object[] {
                        thePFMEvent,
                        transactionID,
                        responseURL}, this.InitiatePowerFactorManagementEventOperationCompleted, userState);
        }
        
        private void OnInitiatePowerFactorManagementEventOperationCompleted(object arg) {
            if ((this.InitiatePowerFactorManagementEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiatePowerFactorManagementEventCompleted(this, new InitiatePowerFactorManagementEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiatePlannedOutage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiatePlannedOutage(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("InitiatePlannedOutage", new object[] {
                        meterIDs,
                        startDate,
                        endDate});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiatePlannedOutageAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate) {
            this.InitiatePlannedOutageAsync(meterIDs, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void InitiatePlannedOutageAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.InitiatePlannedOutageOperationCompleted == null)) {
                this.InitiatePlannedOutageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiatePlannedOutageOperationCompleted);
            }
            this.InvokeAsync("InitiatePlannedOutage", new object[] {
                        meterIDs,
                        startDate,
                        endDate}, this.InitiatePlannedOutageOperationCompleted, userState);
        }
        
        private void OnInitiatePlannedOutageOperationCompleted(object arg) {
            if ((this.InitiatePlannedOutageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiatePlannedOutageCompleted(this, new InitiatePlannedOutageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelPlannedOutage", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelPlannedOutage(meterID[] meterIDs) {
            object[] results = this.Invoke("CancelPlannedOutage", new object[] {
                        meterIDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelPlannedOutageAsync(meterID[] meterIDs) {
            this.CancelPlannedOutageAsync(meterIDs, null);
        }
        
        /// <remarks/>
        public void CancelPlannedOutageAsync(meterID[] meterIDs, object userState) {
            if ((this.CancelPlannedOutageOperationCompleted == null)) {
                this.CancelPlannedOutageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelPlannedOutageOperationCompleted);
            }
            this.InvokeAsync("CancelPlannedOutage", new object[] {
                        meterIDs}, this.CancelPlannedOutageOperationCompleted, userState);
        }
        
        private void OnCancelPlannedOutageOperationCompleted(object arg) {
            if ((this.CancelPlannedOutageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelPlannedOutageCompleted(this, new CancelPlannedOutageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateUsageMonitoring", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateUsageMonitoring(meterID[] meterIDs, string responseURL, string transactionID) {
            object[] results = this.Invoke("InitiateUsageMonitoring", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateUsageMonitoringAsync(meterID[] meterIDs, string responseURL, string transactionID) {
            this.InitiateUsageMonitoringAsync(meterIDs, responseURL, transactionID, null);
        }
        
        /// <remarks/>
        public void InitiateUsageMonitoringAsync(meterID[] meterIDs, string responseURL, string transactionID, object userState) {
            if ((this.InitiateUsageMonitoringOperationCompleted == null)) {
                this.InitiateUsageMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateUsageMonitoringOperationCompleted);
            }
            this.InvokeAsync("InitiateUsageMonitoring", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID}, this.InitiateUsageMonitoringOperationCompleted, userState);
        }
        
        private void OnInitiateUsageMonitoringOperationCompleted(object arg) {
            if ((this.InitiateUsageMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateUsageMonitoringCompleted(this, new InitiateUsageMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelUsageMonitoring", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelUsageMonitoring(meterID[] meterIDs) {
            object[] results = this.Invoke("CancelUsageMonitoring", new object[] {
                        meterIDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelUsageMonitoringAsync(meterID[] meterIDs) {
            this.CancelUsageMonitoringAsync(meterIDs, null);
        }
        
        /// <remarks/>
        public void CancelUsageMonitoringAsync(meterID[] meterIDs, object userState) {
            if ((this.CancelUsageMonitoringOperationCompleted == null)) {
                this.CancelUsageMonitoringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelUsageMonitoringOperationCompleted);
            }
            this.InvokeAsync("CancelUsageMonitoring", new object[] {
                        meterIDs}, this.CancelUsageMonitoringOperationCompleted, userState);
        }
        
        private void OnCancelUsageMonitoringOperationCompleted(object arg) {
            if ((this.CancelUsageMonitoringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelUsageMonitoringCompleted(this, new CancelUsageMonitoringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateDisconnectedStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateDisconnectedStatus(meterID[] meterIDs) {
            object[] results = this.Invoke("InitiateDisconnectedStatus", new object[] {
                        meterIDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateDisconnectedStatusAsync(meterID[] meterIDs) {
            this.InitiateDisconnectedStatusAsync(meterIDs, null);
        }
        
        /// <remarks/>
        public void InitiateDisconnectedStatusAsync(meterID[] meterIDs, object userState) {
            if ((this.InitiateDisconnectedStatusOperationCompleted == null)) {
                this.InitiateDisconnectedStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateDisconnectedStatusOperationCompleted);
            }
            this.InvokeAsync("InitiateDisconnectedStatus", new object[] {
                        meterIDs}, this.InitiateDisconnectedStatusOperationCompleted, userState);
        }
        
        private void OnInitiateDisconnectedStatusOperationCompleted(object arg) {
            if ((this.InitiateDisconnectedStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateDisconnectedStatusCompleted(this, new InitiateDisconnectedStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/CancelDisconnectedStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] CancelDisconnectedStatus(meterID[] meterIDs) {
            object[] results = this.Invoke("CancelDisconnectedStatus", new object[] {
                        meterIDs});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelDisconnectedStatusAsync(meterID[] meterIDs) {
            this.CancelDisconnectedStatusAsync(meterIDs, null);
        }
        
        /// <remarks/>
        public void CancelDisconnectedStatusAsync(meterID[] meterIDs, object userState) {
            if ((this.CancelDisconnectedStatusOperationCompleted == null)) {
                this.CancelDisconnectedStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelDisconnectedStatusOperationCompleted);
            }
            this.InvokeAsync("CancelDisconnectedStatus", new object[] {
                        meterIDs}, this.CancelDisconnectedStatusOperationCompleted, userState);
        }
        
        private void OnCancelDisconnectedStatusOperationCompleted(object arg) {
            if ((this.CancelDisconnectedStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelDisconnectedStatusCompleted(this, new CancelDisconnectedStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateMeterReadingsByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadingsByMeterID(meterID[] meterIDs, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateMeterReadingsByMeterID", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadingsByMeterIDAsync(meterID[] meterIDs, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateMeterReadingsByMeterIDAsync(meterIDs, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadingsByMeterIDAsync(meterID[] meterIDs, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateMeterReadingsByMeterIDOperationCompleted == null)) {
                this.InitiateMeterReadingsByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadingsByMeterIDOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadingsByMeterID", new object[] {
                        meterIDs,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateMeterReadingsByMeterIDOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadingsByMeterIDOperationCompleted(object arg) {
            if ((this.InitiateMeterReadingsByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadingsByMeterIDCompleted(this, new InitiateMeterReadingsByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EstablishMeterGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishMeterGroup(meterGroup meterGroup, serviceType serviceType) {
            object[] results = this.Invoke("EstablishMeterGroup", new object[] {
                        meterGroup,
                        serviceType});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishMeterGroupAsync(meterGroup meterGroup, serviceType serviceType) {
            this.EstablishMeterGroupAsync(meterGroup, serviceType, null);
        }
        
        /// <remarks/>
        public void EstablishMeterGroupAsync(meterGroup meterGroup, serviceType serviceType, object userState) {
            if ((this.EstablishMeterGroupOperationCompleted == null)) {
                this.EstablishMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishMeterGroupOperationCompleted);
            }
            this.InvokeAsync("EstablishMeterGroup", new object[] {
                        meterGroup,
                        serviceType}, this.EstablishMeterGroupOperationCompleted, userState);
        }
        
        private void OnEstablishMeterGroupOperationCompleted(object arg) {
            if ((this.EstablishMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishMeterGroupCompleted(this, new EstablishMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/EstablishHANDeviceGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] EstablishHANDeviceGroup(HANGroupID groupID, HANDeviceID[] groupMembers) {
            object[] results = this.Invoke("EstablishHANDeviceGroup", new object[] {
                        groupID,
                        groupMembers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void EstablishHANDeviceGroupAsync(HANGroupID groupID, HANDeviceID[] groupMembers) {
            this.EstablishHANDeviceGroupAsync(groupID, groupMembers, null);
        }
        
        /// <remarks/>
        public void EstablishHANDeviceGroupAsync(HANGroupID groupID, HANDeviceID[] groupMembers, object userState) {
            if ((this.EstablishHANDeviceGroupOperationCompleted == null)) {
                this.EstablishHANDeviceGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEstablishHANDeviceGroupOperationCompleted);
            }
            this.InvokeAsync("EstablishHANDeviceGroup", new object[] {
                        groupID,
                        groupMembers}, this.EstablishHANDeviceGroupOperationCompleted, userState);
        }
        
        private void OnEstablishHANDeviceGroupOperationCompleted(object arg) {
            if ((this.EstablishHANDeviceGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EstablishHANDeviceGroupCompleted(this, new EstablishHANDeviceGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InsertIntoHANDeviceGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InsertIntoHANDeviceGroup(HANGroupID groupID, HANDeviceID[] groupMembers) {
            object[] results = this.Invoke("InsertIntoHANDeviceGroup", new object[] {
                        groupID,
                        groupMembers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertIntoHANDeviceGroupAsync(HANGroupID groupID, HANDeviceID[] groupMembers) {
            this.InsertIntoHANDeviceGroupAsync(groupID, groupMembers, null);
        }
        
        /// <remarks/>
        public void InsertIntoHANDeviceGroupAsync(HANGroupID groupID, HANDeviceID[] groupMembers, object userState) {
            if ((this.InsertIntoHANDeviceGroupOperationCompleted == null)) {
                this.InsertIntoHANDeviceGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoHANDeviceGroupOperationCompleted);
            }
            this.InvokeAsync("InsertIntoHANDeviceGroup", new object[] {
                        groupID,
                        groupMembers}, this.InsertIntoHANDeviceGroupOperationCompleted, userState);
        }
        
        private void OnInsertIntoHANDeviceGroupOperationCompleted(object arg) {
            if ((this.InsertIntoHANDeviceGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoHANDeviceGroupCompleted(this, new InsertIntoHANDeviceGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/RemoveFromHANDeviceGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RemoveFromHANDeviceGroup(HANGroupID groupID, HANDeviceID[] groupMembers) {
            object[] results = this.Invoke("RemoveFromHANDeviceGroup", new object[] {
                        groupID,
                        groupMembers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFromHANDeviceGroupAsync(HANGroupID groupID, HANDeviceID[] groupMembers) {
            this.RemoveFromHANDeviceGroupAsync(groupID, groupMembers, null);
        }
        
        /// <remarks/>
        public void RemoveFromHANDeviceGroupAsync(HANGroupID groupID, HANDeviceID[] groupMembers, object userState) {
            if ((this.RemoveFromHANDeviceGroupOperationCompleted == null)) {
                this.RemoveFromHANDeviceGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromHANDeviceGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveFromHANDeviceGroup", new object[] {
                        groupID,
                        groupMembers}, this.RemoveFromHANDeviceGroupOperationCompleted, userState);
        }
        
        private void OnRemoveFromHANDeviceGroupOperationCompleted(object arg) {
            if ((this.RemoveFromHANDeviceGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromHANDeviceGroupCompleted(this, new RemoveFromHANDeviceGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetHANDeviceGroupNames", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetHANDeviceGroupNames() {
            object[] results = this.Invoke("GetHANDeviceGroupNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHANDeviceGroupNamesAsync() {
            this.GetHANDeviceGroupNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetHANDeviceGroupNamesAsync(object userState) {
            if ((this.GetHANDeviceGroupNamesOperationCompleted == null)) {
                this.GetHANDeviceGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHANDeviceGroupNamesOperationCompleted);
            }
            this.InvokeAsync("GetHANDeviceGroupNames", new object[0], this.GetHANDeviceGroupNamesOperationCompleted, userState);
        }
        
        private void OnGetHANDeviceGroupNamesOperationCompleted(object arg) {
            if ((this.GetHANDeviceGroupNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHANDeviceGroupNamesCompleted(this, new GetHANDeviceGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetHANDeviceGroupMembers", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HANDeviceGroup GetHANDeviceGroupMembers(string HANDeviceGroupName) {
            object[] results = this.Invoke("GetHANDeviceGroupMembers", new object[] {
                        HANDeviceGroupName});
            return ((HANDeviceGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetHANDeviceGroupMembersAsync(string HANDeviceGroupName) {
            this.GetHANDeviceGroupMembersAsync(HANDeviceGroupName, null);
        }
        
        /// <remarks/>
        public void GetHANDeviceGroupMembersAsync(string HANDeviceGroupName, object userState) {
            if ((this.GetHANDeviceGroupMembersOperationCompleted == null)) {
                this.GetHANDeviceGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHANDeviceGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetHANDeviceGroupMembers", new object[] {
                        HANDeviceGroupName}, this.GetHANDeviceGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetHANDeviceGroupMembersOperationCompleted(object arg) {
            if ((this.GetHANDeviceGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHANDeviceGroupMembersCompleted(this, new GetHANDeviceGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetHANDeviceGroupNamesByHANDeviceID" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetHANDeviceGroupNamesByHANDeviceID(HANDeviceID deviceID) {
            object[] results = this.Invoke("GetHANDeviceGroupNamesByHANDeviceID", new object[] {
                        deviceID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHANDeviceGroupNamesByHANDeviceIDAsync(HANDeviceID deviceID) {
            this.GetHANDeviceGroupNamesByHANDeviceIDAsync(deviceID, null);
        }
        
        /// <remarks/>
        public void GetHANDeviceGroupNamesByHANDeviceIDAsync(HANDeviceID deviceID, object userState) {
            if ((this.GetHANDeviceGroupNamesByHANDeviceIDOperationCompleted == null)) {
                this.GetHANDeviceGroupNamesByHANDeviceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHANDeviceGroupNamesByHANDeviceIDOperationCompleted);
            }
            this.InvokeAsync("GetHANDeviceGroupNamesByHANDeviceID", new object[] {
                        deviceID}, this.GetHANDeviceGroupNamesByHANDeviceIDOperationCompleted, userState);
        }
        
        private void OnGetHANDeviceGroupNamesByHANDeviceIDOperationCompleted(object arg) {
            if ((this.GetHANDeviceGroupNamesByHANDeviceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHANDeviceGroupNamesByHANDeviceIDCompleted(this, new GetHANDeviceGroupNamesByHANDeviceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DeleteMeterGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DeleteMeterGroup(string meterGroupID, serviceType serviceType) {
            object[] results = this.Invoke("DeleteMeterGroup", new object[] {
                        meterGroupID,
                        serviceType});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMeterGroupAsync(string meterGroupID, serviceType serviceType) {
            this.DeleteMeterGroupAsync(meterGroupID, serviceType, null);
        }
        
        /// <remarks/>
        public void DeleteMeterGroupAsync(string meterGroupID, serviceType serviceType, object userState) {
            if ((this.DeleteMeterGroupOperationCompleted == null)) {
                this.DeleteMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMeterGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteMeterGroup", new object[] {
                        meterGroupID,
                        serviceType}, this.DeleteMeterGroupOperationCompleted, userState);
        }
        
        private void OnDeleteMeterGroupOperationCompleted(object arg) {
            if ((this.DeleteMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMeterGroupCompleted(this, new DeleteMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InsertMeterInMeterGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InsertMeterInMeterGroup(meterID[] meterIDs, string meterGroupID) {
            object[] results = this.Invoke("InsertMeterInMeterGroup", new object[] {
                        meterIDs,
                        meterGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertMeterInMeterGroupAsync(meterID[] meterIDs, string meterGroupID) {
            this.InsertMeterInMeterGroupAsync(meterIDs, meterGroupID, null);
        }
        
        /// <remarks/>
        public void InsertMeterInMeterGroupAsync(meterID[] meterIDs, string meterGroupID, object userState) {
            if ((this.InsertMeterInMeterGroupOperationCompleted == null)) {
                this.InsertMeterInMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMeterInMeterGroupOperationCompleted);
            }
            this.InvokeAsync("InsertMeterInMeterGroup", new object[] {
                        meterIDs,
                        meterGroupID}, this.InsertMeterInMeterGroupOperationCompleted, userState);
        }
        
        private void OnInsertMeterInMeterGroupOperationCompleted(object arg) {
            if ((this.InsertMeterInMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMeterInMeterGroupCompleted(this, new InsertMeterInMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/RemoveMetersFromMeterGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RemoveMetersFromMeterGroup(meterID[] meterIDs, string meterGroupID) {
            object[] results = this.Invoke("RemoveMetersFromMeterGroup", new object[] {
                        meterIDs,
                        meterGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMetersFromMeterGroupAsync(meterID[] meterIDs, string meterGroupID) {
            this.RemoveMetersFromMeterGroupAsync(meterIDs, meterGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveMetersFromMeterGroupAsync(meterID[] meterIDs, string meterGroupID, object userState) {
            if ((this.RemoveMetersFromMeterGroupOperationCompleted == null)) {
                this.RemoveMetersFromMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMetersFromMeterGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveMetersFromMeterGroup", new object[] {
                        meterIDs,
                        meterGroupID}, this.RemoveMetersFromMeterGroupOperationCompleted, userState);
        }
        
        private void OnRemoveMetersFromMeterGroupOperationCompleted(object arg) {
            if ((this.RemoveMetersFromMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMetersFromMeterGroupCompleted(this, new RemoveMetersFromMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InsertMeterInConfigurationGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InsertMeterInConfigurationGroup(meterID[] meterIDs, string meterGroupID, string transactionID, string responseURL) {
            object[] results = this.Invoke("InsertMeterInConfigurationGroup", new object[] {
                        meterIDs,
                        meterGroupID,
                        transactionID,
                        responseURL});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InsertMeterInConfigurationGroupAsync(meterID[] meterIDs, string meterGroupID, string transactionID, string responseURL) {
            this.InsertMeterInConfigurationGroupAsync(meterIDs, meterGroupID, transactionID, responseURL, null);
        }
        
        /// <remarks/>
        public void InsertMeterInConfigurationGroupAsync(meterID[] meterIDs, string meterGroupID, string transactionID, string responseURL, object userState) {
            if ((this.InsertMeterInConfigurationGroupOperationCompleted == null)) {
                this.InsertMeterInConfigurationGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMeterInConfigurationGroupOperationCompleted);
            }
            this.InvokeAsync("InsertMeterInConfigurationGroup", new object[] {
                        meterIDs,
                        meterGroupID,
                        transactionID,
                        responseURL}, this.InsertMeterInConfigurationGroupOperationCompleted, userState);
        }
        
        private void OnInsertMeterInConfigurationGroupOperationCompleted(object arg) {
            if ((this.InsertMeterInConfigurationGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMeterInConfigurationGroupCompleted(this, new InsertMeterInConfigurationGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/RemoveMetersFromConfigurationGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RemoveMetersFromConfigurationGroup(meterID[] meterIDs, string meterGroupID) {
            object[] results = this.Invoke("RemoveMetersFromConfigurationGroup", new object[] {
                        meterIDs,
                        meterGroupID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMetersFromConfigurationGroupAsync(meterID[] meterIDs, string meterGroupID) {
            this.RemoveMetersFromConfigurationGroupAsync(meterIDs, meterGroupID, null);
        }
        
        /// <remarks/>
        public void RemoveMetersFromConfigurationGroupAsync(meterID[] meterIDs, string meterGroupID, object userState) {
            if ((this.RemoveMetersFromConfigurationGroupOperationCompleted == null)) {
                this.RemoveMetersFromConfigurationGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMetersFromConfigurationGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveMetersFromConfigurationGroup", new object[] {
                        meterIDs,
                        meterGroupID}, this.RemoveMetersFromConfigurationGroupOperationCompleted, userState);
        }
        
        private void OnRemoveMetersFromConfigurationGroupOperationCompleted(object arg) {
            if ((this.RemoveMetersFromConfigurationGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMetersFromConfigurationGroupCompleted(this, new RemoveMetersFromConfigurationGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateGroupMeterReading", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateGroupMeterReading(string meterGroupName, string responseURL, string transactionID, serviceType serviceType, expirationTime expTime) {
            object[] results = this.Invoke("InitiateGroupMeterReading", new object[] {
                        meterGroupName,
                        responseURL,
                        transactionID,
                        serviceType,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateGroupMeterReadingAsync(string meterGroupName, string responseURL, string transactionID, serviceType serviceType, expirationTime expTime) {
            this.InitiateGroupMeterReadingAsync(meterGroupName, responseURL, transactionID, serviceType, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateGroupMeterReadingAsync(string meterGroupName, string responseURL, string transactionID, serviceType serviceType, expirationTime expTime, object userState) {
            if ((this.InitiateGroupMeterReadingOperationCompleted == null)) {
                this.InitiateGroupMeterReadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateGroupMeterReadingOperationCompleted);
            }
            this.InvokeAsync("InitiateGroupMeterReading", new object[] {
                        meterGroupName,
                        responseURL,
                        transactionID,
                        serviceType,
                        expTime}, this.InitiateGroupMeterReadingOperationCompleted, userState);
        }
        
        private void OnInitiateGroupMeterReadingOperationCompleted(object arg) {
            if ((this.InitiateGroupMeterReadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateGroupMeterReadingCompleted(this, new InitiateGroupMeterReadingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/ScheduleGroupMeterReading", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] ScheduleGroupMeterReading(string meterGroupName, System.DateTime timeToRead, string responseURL, string transactionID, serviceType serviceType) {
            object[] results = this.Invoke("ScheduleGroupMeterReading", new object[] {
                        meterGroupName,
                        timeToRead,
                        responseURL,
                        transactionID,
                        serviceType});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void ScheduleGroupMeterReadingAsync(string meterGroupName, System.DateTime timeToRead, string responseURL, string transactionID, serviceType serviceType) {
            this.ScheduleGroupMeterReadingAsync(meterGroupName, timeToRead, responseURL, transactionID, serviceType, null);
        }
        
        /// <remarks/>
        public void ScheduleGroupMeterReadingAsync(string meterGroupName, System.DateTime timeToRead, string responseURL, string transactionID, serviceType serviceType, object userState) {
            if ((this.ScheduleGroupMeterReadingOperationCompleted == null)) {
                this.ScheduleGroupMeterReadingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScheduleGroupMeterReadingOperationCompleted);
            }
            this.InvokeAsync("ScheduleGroupMeterReading", new object[] {
                        meterGroupName,
                        timeToRead,
                        responseURL,
                        transactionID,
                        serviceType}, this.ScheduleGroupMeterReadingOperationCompleted, userState);
        }
        
        private void OnScheduleGroupMeterReadingOperationCompleted(object arg) {
            if ((this.ScheduleGroupMeterReadingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScheduleGroupMeterReadingCompleted(this, new ScheduleGroupMeterReadingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateMeterReadingByMeterIDAndFie" +
            "ldName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadingByMeterIDAndFieldName(meterID meterID, string responseURL, string fieldName, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateMeterReadingByMeterIDAndFieldName", new object[] {
                        meterID,
                        responseURL,
                        fieldName,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadingByMeterIDAndFieldNameAsync(meterID meterID, string responseURL, string fieldName, string transactionID, expirationTime expTime) {
            this.InitiateMeterReadingByMeterIDAndFieldNameAsync(meterID, responseURL, fieldName, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadingByMeterIDAndFieldNameAsync(meterID meterID, string responseURL, string fieldName, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateMeterReadingByMeterIDAndFieldNameOperationCompleted == null)) {
                this.InitiateMeterReadingByMeterIDAndFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadingByMeterIDAndFieldNameOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadingByMeterIDAndFieldName", new object[] {
                        meterID,
                        responseURL,
                        fieldName,
                        transactionID,
                        expTime}, this.InitiateMeterReadingByMeterIDAndFieldNameOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadingByMeterIDAndFieldNameOperationCompleted(object arg) {
            if ((this.InitiateMeterReadingByMeterIDAndFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadingByMeterIDAndFieldNameCompleted(this, new InitiateMeterReadingByMeterIDAndFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateMeterReadingByObject", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateMeterReadingByObject(string objectName, string nounType, phaseCode PhaseCode, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateMeterReadingByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateMeterReadingByObjectAsync(string objectName, string nounType, phaseCode PhaseCode, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateMeterReadingByObjectAsync(objectName, nounType, PhaseCode, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateMeterReadingByObjectAsync(string objectName, string nounType, phaseCode PhaseCode, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateMeterReadingByObjectOperationCompleted == null)) {
                this.InitiateMeterReadingByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateMeterReadingByObjectOperationCompleted);
            }
            this.InvokeAsync("InitiateMeterReadingByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateMeterReadingByObjectOperationCompleted, userState);
        }
        
        private void OnInitiateMeterReadingByObjectOperationCompleted(object arg) {
            if ((this.InitiateMeterReadingByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateMeterReadingByObjectCompleted(this, new InitiateMeterReadingByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateOutageDetectionEventRequest" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateOutageDetectionEventRequest(meterID[] meterIDs, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateOutageDetectionEventRequest", new object[] {
                        meterIDs,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateOutageDetectionEventRequestAsync(meterID[] meterIDs, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateOutageDetectionEventRequestAsync(meterIDs, requestDate, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateOutageDetectionEventRequestAsync(meterID[] meterIDs, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateOutageDetectionEventRequestOperationCompleted == null)) {
                this.InitiateOutageDetectionEventRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateOutageDetectionEventRequestOperationCompleted);
            }
            this.InvokeAsync("InitiateOutageDetectionEventRequest", new object[] {
                        meterIDs,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateOutageDetectionEventRequestOperationCompleted, userState);
        }
        
        private void OnInitiateOutageDetectionEventRequestOperationCompleted(object arg) {
            if ((this.InitiateOutageDetectionEventRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateOutageDetectionEventRequestCompleted(this, new InitiateOutageDetectionEventRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateODEventRequestByObject", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateODEventRequestByObject(string objectName, string nounType, phaseCode PhaseCode, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateODEventRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByObjectAsync(string objectName, string nounType, phaseCode PhaseCode, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateODEventRequestByObjectAsync(objectName, nounType, PhaseCode, requestDate, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateODEventRequestByObjectAsync(string objectName, string nounType, phaseCode PhaseCode, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateODEventRequestByObjectOperationCompleted == null)) {
                this.InitiateODEventRequestByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateODEventRequestByObjectOperationCompleted);
            }
            this.InvokeAsync("InitiateODEventRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateODEventRequestByObjectOperationCompleted, userState);
        }
        
        private void OnInitiateODEventRequestByObjectOperationCompleted(object arg) {
            if ((this.InitiateODEventRequestByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateODEventRequestByObjectCompleted(this, new InitiateODEventRequestByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/InitiateODMonitoringRequestByObject" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] InitiateODMonitoringRequestByObject(string objectName, string nounType, phaseCode PhaseCode, int periodicity, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            object[] results = this.Invoke("InitiateODMonitoringRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        periodicity,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void InitiateODMonitoringRequestByObjectAsync(string objectName, string nounType, phaseCode PhaseCode, int periodicity, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime) {
            this.InitiateODMonitoringRequestByObjectAsync(objectName, nounType, PhaseCode, periodicity, requestDate, responseURL, transactionID, expTime, null);
        }
        
        /// <remarks/>
        public void InitiateODMonitoringRequestByObjectAsync(string objectName, string nounType, phaseCode PhaseCode, int periodicity, System.DateTime requestDate, string responseURL, string transactionID, expirationTime expTime, object userState) {
            if ((this.InitiateODMonitoringRequestByObjectOperationCompleted == null)) {
                this.InitiateODMonitoringRequestByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateODMonitoringRequestByObjectOperationCompleted);
            }
            this.InvokeAsync("InitiateODMonitoringRequestByObject", new object[] {
                        objectName,
                        nounType,
                        PhaseCode,
                        periodicity,
                        requestDate,
                        responseURL,
                        transactionID,
                        expTime}, this.InitiateODMonitoringRequestByObjectOperationCompleted, userState);
        }
        
        private void OnInitiateODMonitoringRequestByObjectOperationCompleted(object arg) {
            if ((this.InitiateODMonitoringRequestByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateODMonitoringRequestByObjectCompleted(this, new InitiateODMonitoringRequestByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/PingURL", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] PingURL() {
            object[] results = this.Invoke("PingURL", new object[0]);
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void PingURLAsync() {
            this.PingURLAsync(null);
        }
        
        /// <remarks/>
        public void PingURLAsync(object userState) {
            if ((this.PingURLOperationCompleted == null)) {
                this.PingURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingURLOperationCompleted);
            }
            this.InvokeAsync("PingURL", new object[0], this.PingURLOperationCompleted, userState);
        }
        
        private void OnPingURLOperationCompleted(object arg) {
            if ((this.PingURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PingURLCompleted(this, new PingURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMethods", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMethods() {
            object[] results = this.Invoke("GetMethods", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMethodsAsync() {
            this.GetMethodsAsync(null);
        }
        
        /// <remarks/>
        public void GetMethodsAsync(object userState) {
            if ((this.GetMethodsOperationCompleted == null)) {
                this.GetMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMethodsOperationCompleted);
            }
            this.InvokeAsync("GetMethods", new object[0], this.GetMethodsOperationCompleted, userState);
        }
        
        private void OnGetMethodsOperationCompleted(object arg) {
            if ((this.GetMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMethodsCompleted(this, new GetMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetDomainNames", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDomainNames() {
            object[] results = this.Invoke("GetDomainNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainNamesAsync() {
            this.GetDomainNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetDomainNamesAsync(object userState) {
            if ((this.GetDomainNamesOperationCompleted == null)) {
                this.GetDomainNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainNamesOperationCompleted);
            }
            this.InvokeAsync("GetDomainNames", new object[0], this.GetDomainNamesOperationCompleted, userState);
        }
        
        private void OnGetDomainNamesOperationCompleted(object arg) {
            if ((this.GetDomainNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainNamesCompleted(this, new GetDomainNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetDomainMembers", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public domainMember[] GetDomainMembers(string domainName) {
            object[] results = this.Invoke("GetDomainMembers", new object[] {
                        domainName});
            return ((domainMember[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainMembersAsync(string domainName) {
            this.GetDomainMembersAsync(domainName, null);
        }
        
        /// <remarks/>
        public void GetDomainMembersAsync(string domainName, object userState) {
            if ((this.GetDomainMembersOperationCompleted == null)) {
                this.GetDomainMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainMembersOperationCompleted);
            }
            this.InvokeAsync("GetDomainMembers", new object[] {
                        domainName}, this.GetDomainMembersOperationCompleted, userState);
        }
        
        private void OnGetDomainMembersOperationCompleted(object arg) {
            if ((this.GetDomainMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainMembersCompleted(this, new GetDomainMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/RequestRegistrationID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestRegistrationID() {
            object[] results = this.Invoke("RequestRegistrationID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestRegistrationIDAsync() {
            this.RequestRegistrationIDAsync(null);
        }
        
        /// <remarks/>
        public void RequestRegistrationIDAsync(object userState) {
            if ((this.RequestRegistrationIDOperationCompleted == null)) {
                this.RequestRegistrationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestRegistrationIDOperationCompleted);
            }
            this.InvokeAsync("RequestRegistrationID", new object[0], this.RequestRegistrationIDOperationCompleted, userState);
        }
        
        private void OnRequestRegistrationIDOperationCompleted(object arg) {
            if ((this.RequestRegistrationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestRegistrationIDCompleted(this, new RequestRegistrationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/RegisterForService", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] RegisterForService(registrationInfo registrationDetails) {
            object[] results = this.Invoke("RegisterForService", new object[] {
                        registrationDetails});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void RegisterForServiceAsync(registrationInfo registrationDetails) {
            this.RegisterForServiceAsync(registrationDetails, null);
        }
        
        /// <remarks/>
        public void RegisterForServiceAsync(registrationInfo registrationDetails, object userState) {
            if ((this.RegisterForServiceOperationCompleted == null)) {
                this.RegisterForServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterForServiceOperationCompleted);
            }
            this.InvokeAsync("RegisterForService", new object[] {
                        registrationDetails}, this.RegisterForServiceOperationCompleted, userState);
        }
        
        private void OnRegisterForServiceOperationCompleted(object arg) {
            if ((this.RegisterForServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterForServiceCompleted(this, new RegisterForServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/UnregisterForService", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] UnregisterForService(string registrationID) {
            object[] results = this.Invoke("UnregisterForService", new object[] {
                        registrationID});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void UnregisterForServiceAsync(string registrationID) {
            this.UnregisterForServiceAsync(registrationID, null);
        }
        
        /// <remarks/>
        public void UnregisterForServiceAsync(string registrationID, object userState) {
            if ((this.UnregisterForServiceOperationCompleted == null)) {
                this.UnregisterForServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnregisterForServiceOperationCompleted);
            }
            this.InvokeAsync("UnregisterForService", new object[] {
                        registrationID}, this.UnregisterForServiceOperationCompleted, userState);
        }
        
        private void OnUnregisterForServiceOperationCompleted(object arg) {
            if ((this.UnregisterForServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnregisterForServiceCompleted(this, new UnregisterForServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetRegistrationInfoByID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public registrationInfo GetRegistrationInfoByID(string registrationID) {
            object[] results = this.Invoke("GetRegistrationInfoByID", new object[] {
                        registrationID});
            return ((registrationInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrationInfoByIDAsync(string registrationID) {
            this.GetRegistrationInfoByIDAsync(registrationID, null);
        }
        
        /// <remarks/>
        public void GetRegistrationInfoByIDAsync(string registrationID, object userState) {
            if ((this.GetRegistrationInfoByIDOperationCompleted == null)) {
                this.GetRegistrationInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrationInfoByIDOperationCompleted);
            }
            this.InvokeAsync("GetRegistrationInfoByID", new object[] {
                        registrationID}, this.GetRegistrationInfoByIDOperationCompleted, userState);
        }
        
        private void OnGetRegistrationInfoByIDOperationCompleted(object arg) {
            if ((this.GetRegistrationInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrationInfoByIDCompleted(this, new GetRegistrationInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetPublishMethods", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPublishMethods() {
            object[] results = this.Invoke("GetPublishMethods", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPublishMethodsAsync() {
            this.GetPublishMethodsAsync(null);
        }
        
        /// <remarks/>
        public void GetPublishMethodsAsync(object userState) {
            if ((this.GetPublishMethodsOperationCompleted == null)) {
                this.GetPublishMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublishMethodsOperationCompleted);
            }
            this.InvokeAsync("GetPublishMethods", new object[0], this.GetPublishMethodsOperationCompleted, userState);
        }
        
        private void OnGetPublishMethodsOperationCompleted(object arg) {
            if ((this.GetPublishMethodsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPublishMethodsCompleted(this, new GetPublishMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DomainMembersChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DomainMembersChangedNotification(domainMember[] changedDomainMembers) {
            object[] results = this.Invoke("DomainMembersChangedNotification", new object[] {
                        changedDomainMembers});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DomainMembersChangedNotificationAsync(domainMember[] changedDomainMembers) {
            this.DomainMembersChangedNotificationAsync(changedDomainMembers, null);
        }
        
        /// <remarks/>
        public void DomainMembersChangedNotificationAsync(domainMember[] changedDomainMembers, object userState) {
            if ((this.DomainMembersChangedNotificationOperationCompleted == null)) {
                this.DomainMembersChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDomainMembersChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("DomainMembersChangedNotification", new object[] {
                        changedDomainMembers}, this.DomainMembersChangedNotificationOperationCompleted, userState);
        }
        
        private void OnDomainMembersChangedNotificationOperationCompleted(object arg) {
            if ((this.DomainMembersChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DomainMembersChangedNotificationCompleted(this, new DomainMembersChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/DomainNamesChangedNotification", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public errorObject[] DomainNamesChangedNotification(domainNameChange[] changedDomainNames) {
            object[] results = this.Invoke("DomainNamesChangedNotification", new object[] {
                        changedDomainNames});
            return ((errorObject[])(results[0]));
        }
        
        /// <remarks/>
        public void DomainNamesChangedNotificationAsync(domainNameChange[] changedDomainNames) {
            this.DomainNamesChangedNotificationAsync(changedDomainNames, null);
        }
        
        /// <remarks/>
        public void DomainNamesChangedNotificationAsync(domainNameChange[] changedDomainNames, object userState) {
            if ((this.DomainNamesChangedNotificationOperationCompleted == null)) {
                this.DomainNamesChangedNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDomainNamesChangedNotificationOperationCompleted);
            }
            this.InvokeAsync("DomainNamesChangedNotification", new object[] {
                        changedDomainNames}, this.DomainNamesChangedNotificationOperationCompleted, userState);
        }
        
        private void OnDomainNamesChangedNotificationOperationCompleted(object arg) {
            if ((this.DomainNamesChangedNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DomainNamesChangedNotificationCompleted(this, new DomainNamesChangedNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetAllMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllMeters", new object[] {
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMetersAsync(string lastReceived) {
            this.GetAllMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllMetersOperationCompleted == null)) {
                this.GetAllMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllMeters", new object[] {
                        lastReceived}, this.GetAllMetersOperationCompleted, userState);
        }
        
        private void OnGetAllMetersOperationCompleted(object arg) {
            if ((this.GetAllMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMetersCompleted(this, new GetAllMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAMRSupportedMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetAMRSupportedMeters(string lastReceived) {
            object[] results = this.Invoke("GetAMRSupportedMeters", new object[] {
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetAMRSupportedMetersAsync(string lastReceived) {
            this.GetAMRSupportedMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAMRSupportedMetersAsync(string lastReceived, object userState) {
            if ((this.GetAMRSupportedMetersOperationCompleted == null)) {
                this.GetAMRSupportedMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAMRSupportedMetersOperationCompleted);
            }
            this.InvokeAsync("GetAMRSupportedMeters", new object[] {
                        lastReceived}, this.GetAMRSupportedMetersOperationCompleted, userState);
        }
        
        private void OnGetAMRSupportedMetersOperationCompleted(object arg) {
            if ((this.GetAMRSupportedMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAMRSupportedMetersCompleted(this, new GetAMRSupportedMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetModifiedAMRMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetModifiedAMRMeters(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedAMRMeters", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedAMRMetersAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedAMRMetersAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedAMRMetersAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedAMRMetersOperationCompleted == null)) {
                this.GetModifiedAMRMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedAMRMetersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedAMRMeters", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedAMRMetersOperationCompleted, userState);
        }
        
        private void OnGetModifiedAMRMetersOperationCompleted(object arg) {
            if ((this.GetModifiedAMRMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedAMRMetersCompleted(this, new GetModifiedAMRMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/IsAMRMeter", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAMRMeter(meterID meterID) {
            object[] results = this.Invoke("IsAMRMeter", new object[] {
                        meterID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAMRMeterAsync(meterID meterID) {
            this.IsAMRMeterAsync(meterID, null);
        }
        
        /// <remarks/>
        public void IsAMRMeterAsync(meterID meterID, object userState) {
            if ((this.IsAMRMeterOperationCompleted == null)) {
                this.IsAMRMeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAMRMeterOperationCompleted);
            }
            this.InvokeAsync("IsAMRMeter", new object[] {
                        meterID}, this.IsAMRMeterOperationCompleted, userState);
        }
        
        private void OnIsAMRMeterOperationCompleted(object arg) {
            if ((this.IsAMRMeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAMRMeterCompleted(this, new IsAMRMeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByDate", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterReading[] GetReadingsByDate(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetReadingsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived});
            return ((meterReading[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetReadingsByDateAsync(startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetReadingsByDateOperationCompleted == null)) {
                this.GetReadingsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived}, this.GetReadingsByDateOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateOperationCompleted(object arg) {
            if ((this.GetReadingsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateCompleted(this, new GetReadingsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterReading[] GetReadingsByMeterID(meterID meterID, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetReadingsByMeterID", new object[] {
                        meterID,
                        startDate,
                        endDate});
            return ((meterReading[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate) {
            this.GetReadingsByMeterIDAsync(meterID, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetReadingsByMeterIDOperationCompleted == null)) {
                this.GetReadingsByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByMeterID", new object[] {
                        meterID,
                        startDate,
                        endDate}, this.GetReadingsByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetReadingsByMeterIDOperationCompleted(object arg) {
            if ((this.GetReadingsByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByMeterIDCompleted(this, new GetReadingsByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByMeterIDListAndFieldNam" +
            "eIntervalData", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public intervalData[] GetReadingsByMeterIDListAndFieldNameIntervalData(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByMeterIDListAndFieldNameIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName});
            return ((intervalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDListAndFieldNameIntervalDataAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName) {
            this.GetReadingsByMeterIDListAndFieldNameIntervalDataAsync(meterIDs, startDate, endDate, lastReceived, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDListAndFieldNameIntervalDataAsync(meterID[] meterIDs, System.DateTime startDate, System.DateTime endDate, string lastReceived, string[] fieldName, object userState) {
            if ((this.GetReadingsByMeterIDListAndFieldNameIntervalDataOperationCompleted == null)) {
                this.GetReadingsByMeterIDListAndFieldNameIntervalDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByMeterIDListAndFieldNameIntervalDataOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByMeterIDListAndFieldNameIntervalData", new object[] {
                        meterIDs,
                        startDate,
                        endDate,
                        lastReceived,
                        fieldName}, this.GetReadingsByMeterIDListAndFieldNameIntervalDataOperationCompleted, userState);
        }
        
        private void OnGetReadingsByMeterIDListAndFieldNameIntervalDataOperationCompleted(object arg) {
            if ((this.GetReadingsByMeterIDListAndFieldNameIntervalDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByMeterIDListAndFieldNameIntervalDataCompleted(this, new GetReadingsByMeterIDListAndFieldNameIntervalDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterReading GetLatestReadingByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetLatestReadingByMeterID", new object[] {
                        meterID});
            return ((meterReading)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAsync(meterID meterID) {
            this.GetLatestReadingByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetLatestReadingByMeterIDOperationCompleted == null)) {
                this.GetLatestReadingByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByMeterID", new object[] {
                        meterID}, this.GetLatestReadingByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByMeterIDOperationCompleted(object arg) {
            if ((this.GetLatestReadingByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByMeterIDCompleted(this, new GetLatestReadingByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByBillingCycle", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByBillingCycle(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByBillingCycle", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByBillingCycleAsync(billingCycle, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByBillingCycleAsync(string billingCycle, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByBillingCycleOperationCompleted == null)) {
                this.GetReadingsByBillingCycleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByBillingCycleOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByBillingCycle", new object[] {
                        billingCycle,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByBillingCycleOperationCompleted, userState);
        }
        
        private void OnGetReadingsByBillingCycleOperationCompleted(object arg) {
            if ((this.GetReadingsByBillingCycleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByBillingCycleCompleted(this, new GetReadingsByBillingCycleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingByMeterIDFormattedBlock", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingByMeterIDFormattedBlock(meterID meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingByMeterIDFormattedBlock", new object[] {
                        meterID,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDFormattedBlockAsync(meterID meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingByMeterIDFormattedBlockAsync(meterID, billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingByMeterIDFormattedBlockAsync(meterID meterID, System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingByMeterIDFormattedBlockOperationCompleted == null)) {
                this.GetReadingByMeterIDFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingByMeterIDFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetReadingByMeterIDFormattedBlock", new object[] {
                        meterID,
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingByMeterIDFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetReadingByMeterIDFormattedBlockOperationCompleted(object arg) {
            if ((this.GetReadingByMeterIDFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingByMeterIDFormattedBlockCompleted(this, new GetReadingByMeterIDFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByDateFormattedBlock", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByDateFormattedBlock(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateFormattedBlock", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateFormattedBlockAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByDateFormattedBlockAsync(billingDate, kWhLookBack, kWLookBack, kWLookForward, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateFormattedBlockAsync(System.DateTime billingDate, int kWhLookBack, int kWLookBack, int kWLookForward, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateFormattedBlockOperationCompleted == null)) {
                this.GetReadingsByDateFormattedBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateFormattedBlockOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateFormattedBlock", new object[] {
                        billingDate,
                        kWhLookBack,
                        kWLookBack,
                        kWLookForward,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByDateFormattedBlockOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateFormattedBlockOperationCompleted(object arg) {
            if ((this.GetReadingsByDateFormattedBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateFormattedBlockCompleted(this, new GetReadingsByDateFormattedBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetHistoryLogByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogByMeterID(meterID meterID, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetHistoryLogByMeterID", new object[] {
                        meterID,
                        startDate,
                        endDate});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogByMeterIDAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate) {
            this.GetHistoryLogByMeterIDAsync(meterID, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogByMeterIDAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetHistoryLogByMeterIDOperationCompleted == null)) {
                this.GetHistoryLogByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogByMeterID", new object[] {
                        meterID,
                        startDate,
                        endDate}, this.GetHistoryLogByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogByMeterIDOperationCompleted(object arg) {
            if ((this.GetHistoryLogByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogByMeterIDCompleted(this, new GetHistoryLogByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetHistoryLogsByDate", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogsByDate(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetHistoryLogsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetHistoryLogsByDateAsync(startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetHistoryLogsByDateOperationCompleted == null)) {
                this.GetHistoryLogsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogsByDateOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogsByDate", new object[] {
                        startDate,
                        endDate,
                        lastReceived}, this.GetHistoryLogsByDateOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogsByDateOperationCompleted(object arg) {
            if ((this.GetHistoryLogsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogsByDateCompleted(this, new GetHistoryLogsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetHistoryLogsByMeterIDAndEventCode" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogsByMeterIDAndEventCode(meterID meterID, meterEvent eventCode, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetHistoryLogsByMeterIDAndEventCode", new object[] {
                        meterID,
                        eventCode,
                        startDate,
                        endDate});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogsByMeterIDAndEventCodeAsync(meterID meterID, meterEvent eventCode, System.DateTime startDate, System.DateTime endDate) {
            this.GetHistoryLogsByMeterIDAndEventCodeAsync(meterID, eventCode, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogsByMeterIDAndEventCodeAsync(meterID meterID, meterEvent eventCode, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetHistoryLogsByMeterIDAndEventCodeOperationCompleted == null)) {
                this.GetHistoryLogsByMeterIDAndEventCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogsByMeterIDAndEventCodeOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogsByMeterIDAndEventCode", new object[] {
                        meterID,
                        eventCode,
                        startDate,
                        endDate}, this.GetHistoryLogsByMeterIDAndEventCodeOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogsByMeterIDAndEventCodeOperationCompleted(object arg) {
            if ((this.GetHistoryLogsByMeterIDAndEventCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogsByMeterIDAndEventCodeCompleted(this, new GetHistoryLogsByMeterIDAndEventCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetHistoryLogsByDateAndEventCode", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public historyLog[] GetHistoryLogsByDateAndEventCode(meterEvent eventCode, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetHistoryLogsByDateAndEventCode", new object[] {
                        eventCode,
                        startDate,
                        endDate,
                        lastReceived});
            return ((historyLog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAndEventCodeAsync(meterEvent eventCode, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetHistoryLogsByDateAndEventCodeAsync(eventCode, startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetHistoryLogsByDateAndEventCodeAsync(meterEvent eventCode, System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetHistoryLogsByDateAndEventCodeOperationCompleted == null)) {
                this.GetHistoryLogsByDateAndEventCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryLogsByDateAndEventCodeOperationCompleted);
            }
            this.InvokeAsync("GetHistoryLogsByDateAndEventCode", new object[] {
                        eventCode,
                        startDate,
                        endDate,
                        lastReceived}, this.GetHistoryLogsByDateAndEventCodeOperationCompleted, userState);
        }
        
        private void OnGetHistoryLogsByDateAndEventCodeOperationCompleted(object arg) {
            if ((this.GetHistoryLogsByDateAndEventCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryLogsByDateAndEventCodeCompleted(this, new GetHistoryLogsByDateAndEventCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestMeterReadingsByMeterGroup", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock GetLatestMeterReadingsByMeterGroup(string meterGroupID, serviceType serviceType, string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestMeterReadingsByMeterGroup", new object[] {
                        meterGroupID,
                        serviceType,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived});
            return ((formattedBlock)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupAsync(string meterGroupID, serviceType serviceType, string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            this.GetLatestMeterReadingsByMeterGroupAsync(meterGroupID, serviceType, formattedBlockTemplateName, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestMeterReadingsByMeterGroupAsync(string meterGroupID, serviceType serviceType, string formattedBlockTemplateName, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestMeterReadingsByMeterGroupOperationCompleted == null)) {
                this.GetLatestMeterReadingsByMeterGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestMeterReadingsByMeterGroupOperationCompleted);
            }
            this.InvokeAsync("GetLatestMeterReadingsByMeterGroup", new object[] {
                        meterGroupID,
                        serviceType,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived}, this.GetLatestMeterReadingsByMeterGroupOperationCompleted, userState);
        }
        
        private void OnGetLatestMeterReadingsByMeterGroupOperationCompleted(object arg) {
            if ((this.GetLatestMeterReadingsByMeterGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestMeterReadingsByMeterGroupCompleted(this, new GetLatestMeterReadingsByMeterGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingByMeterIDAndFieldNa" +
            "me", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock GetLatestReadingByMeterIDAndFieldName(meterID meterID, string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingByMeterIDAndFieldName", new object[] {
                        meterID,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived});
            return ((formattedBlock)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAndFieldNameAsync(meterID meterID, string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            this.GetLatestReadingByMeterIDAndFieldNameAsync(meterID, formattedBlockTemplateName, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByMeterIDAndFieldNameAsync(meterID meterID, string formattedBlockTemplateName, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingByMeterIDAndFieldNameOperationCompleted == null)) {
                this.GetLatestReadingByMeterIDAndFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByMeterIDAndFieldNameOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByMeterIDAndFieldName", new object[] {
                        meterID,
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived}, this.GetLatestReadingByMeterIDAndFieldNameOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByMeterIDAndFieldNameOperationCompleted(object arg) {
            if ((this.GetLatestReadingByMeterIDAndFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByMeterIDAndFieldNameCompleted(this, new GetLatestReadingByMeterIDAndFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadingByFieldName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetLatestReadingByFieldName(string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            object[] results = this.Invoke("GetLatestReadingByFieldName", new object[] {
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingByFieldNameAsync(string formattedBlockTemplateName, string[] fieldName, string lastReceived) {
            this.GetLatestReadingByFieldNameAsync(formattedBlockTemplateName, fieldName, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingByFieldNameAsync(string formattedBlockTemplateName, string[] fieldName, string lastReceived, object userState) {
            if ((this.GetLatestReadingByFieldNameOperationCompleted == null)) {
                this.GetLatestReadingByFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingByFieldNameOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadingByFieldName", new object[] {
                        formattedBlockTemplateName,
                        fieldName,
                        lastReceived}, this.GetLatestReadingByFieldNameOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingByFieldNameOperationCompleted(object arg) {
            if ((this.GetLatestReadingByFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingByFieldNameCompleted(this, new GetLatestReadingByFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByDateAndFieldName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByDateAndFieldName(System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByDateAndFieldName", new object[] {
                        startDate,
                        endDate,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndFieldNameAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByDateAndFieldNameAsync(startDate, endDate, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByDateAndFieldNameAsync(System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByDateAndFieldNameOperationCompleted == null)) {
                this.GetReadingsByDateAndFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByDateAndFieldNameOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByDateAndFieldName", new object[] {
                        startDate,
                        endDate,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByDateAndFieldNameOperationCompleted, userState);
        }
        
        private void OnGetReadingsByDateAndFieldNameOperationCompleted(object arg) {
            if ((this.GetReadingsByDateAndFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByDateAndFieldNameCompleted(this, new GetReadingsByDateAndFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetSupportedFieldNames", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetSupportedFieldNames() {
            object[] results = this.Invoke("GetSupportedFieldNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportedFieldNamesAsync() {
            this.GetSupportedFieldNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportedFieldNamesAsync(object userState) {
            if ((this.GetSupportedFieldNamesOperationCompleted == null)) {
                this.GetSupportedFieldNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportedFieldNamesOperationCompleted);
            }
            this.InvokeAsync("GetSupportedFieldNames", new object[0], this.GetSupportedFieldNamesOperationCompleted, userState);
        }
        
        private void OnGetSupportedFieldNamesOperationCompleted(object arg) {
            if ((this.GetSupportedFieldNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportedFieldNamesCompleted(this, new GetSupportedFieldNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByMeterIDAndFieldName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public formattedBlock[] GetReadingsByMeterIDAndFieldName(meterID meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            object[] results = this.Invoke("GetReadingsByMeterIDAndFieldName", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName});
            return ((formattedBlock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDAndFieldNameAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName) {
            this.GetReadingsByMeterIDAndFieldNameAsync(meterID, startDate, endDate, lastReceived, formattedBlockTemplateName, fieldName, null);
        }
        
        /// <remarks/>
        public void GetReadingsByMeterIDAndFieldNameAsync(meterID meterID, System.DateTime startDate, System.DateTime endDate, string lastReceived, string formattedBlockTemplateName, string[] fieldName, object userState) {
            if ((this.GetReadingsByMeterIDAndFieldNameOperationCompleted == null)) {
                this.GetReadingsByMeterIDAndFieldNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByMeterIDAndFieldNameOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByMeterIDAndFieldName", new object[] {
                        meterID,
                        startDate,
                        endDate,
                        lastReceived,
                        formattedBlockTemplateName,
                        fieldName}, this.GetReadingsByMeterIDAndFieldNameOperationCompleted, userState);
        }
        
        private void OnGetReadingsByMeterIDAndFieldNameOperationCompleted(object arg) {
            if ((this.GetReadingsByMeterIDAndFieldNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByMeterIDAndFieldNameCompleted(this, new GetReadingsByMeterIDAndFieldNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLatestReadings", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterReading[] GetLatestReadings(string lastReceived) {
            object[] results = this.Invoke("GetLatestReadings", new object[] {
                        lastReceived});
            return ((meterReading[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReadingsAsync(string lastReceived) {
            this.GetLatestReadingsAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetLatestReadingsAsync(string lastReceived, object userState) {
            if ((this.GetLatestReadingsOperationCompleted == null)) {
                this.GetLatestReadingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReadingsOperationCompleted);
            }
            this.InvokeAsync("GetLatestReadings", new object[] {
                        lastReceived}, this.GetLatestReadingsOperationCompleted, userState);
        }
        
        private void OnGetLatestReadingsOperationCompleted(object arg) {
            if ((this.GetLatestReadingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReadingsCompleted(this, new GetLatestReadingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllInHomeDisplays", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public inHomeDisplay[] GetAllInHomeDisplays(string lastReceived) {
            object[] results = this.Invoke("GetAllInHomeDisplays", new object[] {
                        lastReceived});
            return ((inHomeDisplay[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllInHomeDisplaysAsync(string lastReceived) {
            this.GetAllInHomeDisplaysAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllInHomeDisplaysAsync(string lastReceived, object userState) {
            if ((this.GetAllInHomeDisplaysOperationCompleted == null)) {
                this.GetAllInHomeDisplaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllInHomeDisplaysOperationCompleted);
            }
            this.InvokeAsync("GetAllInHomeDisplays", new object[] {
                        lastReceived}, this.GetAllInHomeDisplaysOperationCompleted, userState);
        }
        
        private void OnGetAllInHomeDisplaysOperationCompleted(object arg) {
            if ((this.GetAllInHomeDisplaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllInHomeDisplaysCompleted(this, new GetAllInHomeDisplaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetReadingsByUOMAndDate", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterReading[] GetReadingsByUOMAndDate(uom uomData, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            object[] results = this.Invoke("GetReadingsByUOMAndDate", new object[] {
                        uomData,
                        startDate,
                        endDate,
                        lastReceived});
            return ((meterReading[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReadingsByUOMAndDateAsync(uom uomData, System.DateTime startDate, System.DateTime endDate, string lastReceived) {
            this.GetReadingsByUOMAndDateAsync(uomData, startDate, endDate, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetReadingsByUOMAndDateAsync(uom uomData, System.DateTime startDate, System.DateTime endDate, string lastReceived, object userState) {
            if ((this.GetReadingsByUOMAndDateOperationCompleted == null)) {
                this.GetReadingsByUOMAndDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReadingsByUOMAndDateOperationCompleted);
            }
            this.InvokeAsync("GetReadingsByUOMAndDate", new object[] {
                        uomData,
                        startDate,
                        endDate,
                        lastReceived}, this.GetReadingsByUOMAndDateOperationCompleted, userState);
        }
        
        private void OnGetReadingsByUOMAndDateOperationCompleted(object arg) {
            if ((this.GetReadingsByUOMAndDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReadingsByUOMAndDateCompleted(this, new GetReadingsByUOMAndDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllOutageDetectionDevices", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetAllOutageDetectionDevices(string lastReceived) {
            object[] results = this.Invoke("GetAllOutageDetectionDevices", new object[] {
                        lastReceived});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOutageDetectionDevicesAsync(string lastReceived) {
            this.GetAllOutageDetectionDevicesAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllOutageDetectionDevicesAsync(string lastReceived, object userState) {
            if ((this.GetAllOutageDetectionDevicesOperationCompleted == null)) {
                this.GetAllOutageDetectionDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOutageDetectionDevicesOperationCompleted);
            }
            this.InvokeAsync("GetAllOutageDetectionDevices", new object[] {
                        lastReceived}, this.GetAllOutageDetectionDevicesOperationCompleted, userState);
        }
        
        private void OnGetAllOutageDetectionDevicesOperationCompleted(object arg) {
            if ((this.GetAllOutageDetectionDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOutageDetectionDevicesCompleted(this, new GetAllOutageDetectionDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetOutageDetectionDevicesByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutageDetectionDevicesByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetOutageDetectionDevicesByMeterID", new object[] {
                        meterID});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByMeterIDAsync(meterID meterID) {
            this.GetOutageDetectionDevicesByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetOutageDetectionDevicesByMeterIDOperationCompleted == null)) {
                this.GetOutageDetectionDevicesByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageDetectionDevicesByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetOutageDetectionDevicesByMeterID", new object[] {
                        meterID}, this.GetOutageDetectionDevicesByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetOutageDetectionDevicesByMeterIDOperationCompleted(object arg) {
            if ((this.GetOutageDetectionDevicesByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageDetectionDevicesByMeterIDCompleted(this, new GetOutageDetectionDevicesByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetOutageDetectionDevicesByStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutageDetectionDevicesByStatus(outageDetectDeviceStatus oDDStatus, string lastReceived) {
            object[] results = this.Invoke("GetOutageDetectionDevicesByStatus", new object[] {
                        oDDStatus,
                        lastReceived});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByStatusAsync(outageDetectDeviceStatus oDDStatus, string lastReceived) {
            this.GetOutageDetectionDevicesByStatusAsync(oDDStatus, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByStatusAsync(outageDetectDeviceStatus oDDStatus, string lastReceived, object userState) {
            if ((this.GetOutageDetectionDevicesByStatusOperationCompleted == null)) {
                this.GetOutageDetectionDevicesByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageDetectionDevicesByStatusOperationCompleted);
            }
            this.InvokeAsync("GetOutageDetectionDevicesByStatus", new object[] {
                        oDDStatus,
                        lastReceived}, this.GetOutageDetectionDevicesByStatusOperationCompleted, userState);
        }
        
        private void OnGetOutageDetectionDevicesByStatusOperationCompleted(object arg) {
            if ((this.GetOutageDetectionDevicesByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageDetectionDevicesByStatusCompleted(this, new GetOutageDetectionDevicesByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetOutageDetectionDevicesByType", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutageDetectionDevicesByType(outageDetectDeviceType oDDType, string lastReceived) {
            object[] results = this.Invoke("GetOutageDetectionDevicesByType", new object[] {
                        oDDType,
                        lastReceived});
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByTypeAsync(outageDetectDeviceType oDDType, string lastReceived) {
            this.GetOutageDetectionDevicesByTypeAsync(oDDType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetOutageDetectionDevicesByTypeAsync(outageDetectDeviceType oDDType, string lastReceived, object userState) {
            if ((this.GetOutageDetectionDevicesByTypeOperationCompleted == null)) {
                this.GetOutageDetectionDevicesByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageDetectionDevicesByTypeOperationCompleted);
            }
            this.InvokeAsync("GetOutageDetectionDevicesByType", new object[] {
                        oDDType,
                        lastReceived}, this.GetOutageDetectionDevicesByTypeOperationCompleted, userState);
        }
        
        private void OnGetOutageDetectionDevicesByTypeOperationCompleted(object arg) {
            if ((this.GetOutageDetectionDevicesByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageDetectionDevicesByTypeCompleted(this, new GetOutageDetectionDevicesByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetOutagedODDevices", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageDetectionDevice[] GetOutagedODDevices() {
            object[] results = this.Invoke("GetOutagedODDevices", new object[0]);
            return ((outageDetectionDevice[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOutagedODDevicesAsync() {
            this.GetOutagedODDevicesAsync(null);
        }
        
        /// <remarks/>
        public void GetOutagedODDevicesAsync(object userState) {
            if ((this.GetOutagedODDevicesOperationCompleted == null)) {
                this.GetOutagedODDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutagedODDevicesOperationCompleted);
            }
            this.InvokeAsync("GetOutagedODDevices", new object[0], this.GetOutagedODDevicesOperationCompleted, userState);
        }
        
        private void OnGetOutagedODDevicesOperationCompleted(object arg) {
            if ((this.GetOutagedODDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutagedODDevicesCompleted(this, new GetOutagedODDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCDSupportedMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetCDSupportedMeters(string lastReceived) {
            object[] results = this.Invoke("GetCDSupportedMeters", new object[] {
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetCDSupportedMetersAsync(string lastReceived) {
            this.GetCDSupportedMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetCDSupportedMetersAsync(string lastReceived, object userState) {
            if ((this.GetCDSupportedMetersOperationCompleted == null)) {
                this.GetCDSupportedMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCDSupportedMetersOperationCompleted);
            }
            this.InvokeAsync("GetCDSupportedMeters", new object[] {
                        lastReceived}, this.GetCDSupportedMetersOperationCompleted, userState);
        }
        
        private void OnGetCDSupportedMetersOperationCompleted(object arg) {
            if ((this.GetCDSupportedMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCDSupportedMetersCompleted(this, new GetCDSupportedMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetModifiedCDMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetModifiedCDMeters(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedCDMeters", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedCDMetersAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedCDMetersAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedCDMetersAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedCDMetersOperationCompleted == null)) {
                this.GetModifiedCDMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedCDMetersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedCDMeters", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedCDMetersOperationCompleted, userState);
        }
        
        private void OnGetModifiedCDMetersOperationCompleted(object arg) {
            if ((this.GetModifiedCDMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedCDMetersCompleted(this, new GetModifiedCDMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCDMeterState", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CDState GetCDMeterState(meterID meterID) {
            object[] results = this.Invoke("GetCDMeterState", new object[] {
                        meterID});
            return ((CDState)(results[0]));
        }
        
        /// <remarks/>
        public void GetCDMeterStateAsync(meterID meterID) {
            this.GetCDMeterStateAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetCDMeterStateAsync(meterID meterID, object userState) {
            if ((this.GetCDMeterStateOperationCompleted == null)) {
                this.GetCDMeterStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCDMeterStateOperationCompleted);
            }
            this.InvokeAsync("GetCDMeterState", new object[] {
                        meterID}, this.GetCDMeterStateOperationCompleted, userState);
        }
        
        private void OnGetCDMeterStateOperationCompleted(object arg) {
            if ((this.GetCDMeterStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCDMeterStateCompleted(this, new GetCDMeterStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetOutageEventStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageEventStatus GetOutageEventStatus(string outageEventID) {
            object[] results = this.Invoke("GetOutageEventStatus", new object[] {
                        outageEventID});
            return ((outageEventStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageEventStatusAsync(string outageEventID) {
            this.GetOutageEventStatusAsync(outageEventID, null);
        }
        
        /// <remarks/>
        public void GetOutageEventStatusAsync(string outageEventID, object userState) {
            if ((this.GetOutageEventStatusOperationCompleted == null)) {
                this.GetOutageEventStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageEventStatusOperationCompleted);
            }
            this.InvokeAsync("GetOutageEventStatus", new object[] {
                        outageEventID}, this.GetOutageEventStatusOperationCompleted, userState);
        }
        
        private void OnGetOutageEventStatusOperationCompleted(object arg) {
            if ((this.GetOutageEventStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageEventStatusCompleted(this, new GetOutageEventStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetActiveOutages", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetActiveOutages() {
            object[] results = this.Invoke("GetActiveOutages", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveOutagesAsync() {
            this.GetActiveOutagesAsync(null);
        }
        
        /// <remarks/>
        public void GetActiveOutagesAsync(object userState) {
            if ((this.GetActiveOutagesOperationCompleted == null)) {
                this.GetActiveOutagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveOutagesOperationCompleted);
            }
            this.InvokeAsync("GetActiveOutages", new object[0], this.GetActiveOutagesOperationCompleted, userState);
        }
        
        private void OnGetActiveOutagesOperationCompleted(object arg) {
            if ((this.GetActiveOutagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveOutagesCompleted(this, new GetActiveOutagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetOutageEventStatusByOutageLocatio" +
            "n", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public outageEventStatus GetOutageEventStatusByOutageLocation(outageLocation location) {
            object[] results = this.Invoke("GetOutageEventStatusByOutageLocation", new object[] {
                        location});
            return ((outageEventStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutageEventStatusByOutageLocationAsync(outageLocation location) {
            this.GetOutageEventStatusByOutageLocationAsync(location, null);
        }
        
        /// <remarks/>
        public void GetOutageEventStatusByOutageLocationAsync(outageLocation location, object userState) {
            if ((this.GetOutageEventStatusByOutageLocationOperationCompleted == null)) {
                this.GetOutageEventStatusByOutageLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutageEventStatusByOutageLocationOperationCompleted);
            }
            this.InvokeAsync("GetOutageEventStatusByOutageLocation", new object[] {
                        location}, this.GetOutageEventStatusByOutageLocationOperationCompleted, userState);
        }
        
        private void OnGetOutageEventStatusByOutageLocationOperationCompleted(object arg) {
            if ((this.GetOutageEventStatusByOutageLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutageEventStatusByOutageLocationCompleted(this, new GetOutageEventStatusByOutageLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllElectricMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public electricMeter[] GetAllElectricMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllElectricMeters", new object[] {
                        lastReceived});
            return ((electricMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllElectricMetersAsync(string lastReceived) {
            this.GetAllElectricMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllElectricMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllElectricMetersOperationCompleted == null)) {
                this.GetAllElectricMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllElectricMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllElectricMeters", new object[] {
                        lastReceived}, this.GetAllElectricMetersOperationCompleted, userState);
        }
        
        private void OnGetAllElectricMetersOperationCompleted(object arg) {
            if ((this.GetAllElectricMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllElectricMetersCompleted(this, new GetAllElectricMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllGasMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public gasMeter[] GetAllGasMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllGasMeters", new object[] {
                        lastReceived});
            return ((gasMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGasMetersAsync(string lastReceived) {
            this.GetAllGasMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllGasMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllGasMetersOperationCompleted == null)) {
                this.GetAllGasMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGasMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllGasMeters", new object[] {
                        lastReceived}, this.GetAllGasMetersOperationCompleted, userState);
        }
        
        private void OnGetAllGasMetersOperationCompleted(object arg) {
            if ((this.GetAllGasMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGasMetersCompleted(this, new GetAllGasMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllWaterMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public waterMeter[] GetAllWaterMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllWaterMeters", new object[] {
                        lastReceived});
            return ((waterMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllWaterMetersAsync(string lastReceived) {
            this.GetAllWaterMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllWaterMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllWaterMetersOperationCompleted == null)) {
                this.GetAllWaterMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllWaterMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllWaterMeters", new object[] {
                        lastReceived}, this.GetAllWaterMetersOperationCompleted, userState);
        }
        
        private void OnGetAllWaterMetersOperationCompleted(object arg) {
            if ((this.GetAllWaterMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllWaterMetersCompleted(this, new GetAllWaterMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllPropaneMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public propaneMeter[] GetAllPropaneMeters(string lastReceived) {
            object[] results = this.Invoke("GetAllPropaneMeters", new object[] {
                        lastReceived});
            return ((propaneMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPropaneMetersAsync(string lastReceived) {
            this.GetAllPropaneMetersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllPropaneMetersAsync(string lastReceived, object userState) {
            if ((this.GetAllPropaneMetersOperationCompleted == null)) {
                this.GetAllPropaneMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropaneMetersOperationCompleted);
            }
            this.InvokeAsync("GetAllPropaneMeters", new object[] {
                        lastReceived}, this.GetAllPropaneMetersOperationCompleted, userState);
        }
        
        private void OnGetAllPropaneMetersOperationCompleted(object arg) {
            if ((this.GetAllPropaneMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPropaneMetersCompleted(this, new GetAllPropaneMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetElectricMetersByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public electricMeter[] GetElectricMetersByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetElectricMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((electricMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetElectricMetersByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetElectricMetersByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetElectricMetersByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetElectricMetersByAccountNumberOperationCompleted == null)) {
                this.GetElectricMetersByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetElectricMetersByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetElectricMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetElectricMetersByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetElectricMetersByAccountNumberOperationCompleted(object arg) {
            if ((this.GetElectricMetersByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetElectricMetersByAccountNumberCompleted(this, new GetElectricMetersByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetGasMetersByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public gasMeter[] GetGasMetersByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetGasMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((gasMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetGasMetersByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetGasMetersByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetGasMetersByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetGasMetersByAccountNumberOperationCompleted == null)) {
                this.GetGasMetersByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGasMetersByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetGasMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetGasMetersByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetGasMetersByAccountNumberOperationCompleted(object arg) {
            if ((this.GetGasMetersByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGasMetersByAccountNumberCompleted(this, new GetGasMetersByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetWaterMetersByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public waterMeter[] GetWaterMetersByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetWaterMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((waterMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWaterMetersByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetWaterMetersByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetWaterMetersByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetWaterMetersByAccountNumberOperationCompleted == null)) {
                this.GetWaterMetersByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaterMetersByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetWaterMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetWaterMetersByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetWaterMetersByAccountNumberOperationCompleted(object arg) {
            if ((this.GetWaterMetersByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaterMetersByAccountNumberCompleted(this, new GetWaterMetersByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetPropaneMetersByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public propaneMeter[] GetPropaneMetersByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetPropaneMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((propaneMeter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPropaneMetersByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetPropaneMetersByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetPropaneMetersByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetPropaneMetersByAccountNumberOperationCompleted == null)) {
                this.GetPropaneMetersByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropaneMetersByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetPropaneMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetPropaneMetersByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetPropaneMetersByAccountNumberOperationCompleted(object arg) {
            if ((this.GetPropaneMetersByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropaneMetersByAccountNumberCompleted(this, new GetPropaneMetersByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllCustomersByServiceType", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetAllCustomersByServiceType(serviceType serviceType, string lastReceived) {
            object[] results = this.Invoke("GetAllCustomersByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomersByServiceTypeAsync(serviceType serviceType, string lastReceived) {
            this.GetAllCustomersByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllCustomersByServiceTypeAsync(serviceType serviceType, string lastReceived, object userState) {
            if ((this.GetAllCustomersByServiceTypeOperationCompleted == null)) {
                this.GetAllCustomersByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomersByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomersByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetAllCustomersByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAllCustomersByServiceTypeOperationCompleted(object arg) {
            if ((this.GetAllCustomersByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomersByServiceTypeCompleted(this, new GetAllCustomersByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllMetersByServiceType", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetAllMetersByServiceType(serviceType serviceType, string lastReceived) {
            object[] results = this.Invoke("GetAllMetersByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMetersByServiceTypeAsync(serviceType serviceType, string lastReceived) {
            this.GetAllMetersByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllMetersByServiceTypeAsync(serviceType serviceType, string lastReceived, object userState) {
            if ((this.GetAllMetersByServiceTypeOperationCompleted == null)) {
                this.GetAllMetersByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMetersByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllMetersByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetAllMetersByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAllMetersByServiceTypeOperationCompleted(object arg) {
            if ((this.GetAllMetersByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMetersByServiceTypeCompleted(this, new GetAllMetersByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllServiceLocationsByServiceType" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetAllServiceLocationsByServiceType(serviceType serviceType, string lastReceived) {
            object[] results = this.Invoke("GetAllServiceLocationsByServiceType", new object[] {
                        serviceType,
                        lastReceived});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllServiceLocationsByServiceTypeAsync(serviceType serviceType, string lastReceived) {
            this.GetAllServiceLocationsByServiceTypeAsync(serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllServiceLocationsByServiceTypeAsync(serviceType serviceType, string lastReceived, object userState) {
            if ((this.GetAllServiceLocationsByServiceTypeOperationCompleted == null)) {
                this.GetAllServiceLocationsByServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllServiceLocationsByServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllServiceLocationsByServiceType", new object[] {
                        serviceType,
                        lastReceived}, this.GetAllServiceLocationsByServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetAllServiceLocationsByServiceTypeOperationCompleted(object arg) {
            if ((this.GetAllServiceLocationsByServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllServiceLocationsByServiceTypeCompleted(this, new GetAllServiceLocationsByServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersByAccountNumberAndServiceT" +
            "ype", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByAccountNumberAndServiceType(string accountNumber, serviceType serviceType, string lastReceived) {
            object[] results = this.Invoke("GetMetersByAccountNumberAndServiceType", new object[] {
                        accountNumber,
                        serviceType,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByAccountNumberAndServiceTypeAsync(string accountNumber, serviceType serviceType, string lastReceived) {
            this.GetMetersByAccountNumberAndServiceTypeAsync(accountNumber, serviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetMetersByAccountNumberAndServiceTypeAsync(string accountNumber, serviceType serviceType, string lastReceived, object userState) {
            if ((this.GetMetersByAccountNumberAndServiceTypeOperationCompleted == null)) {
                this.GetMetersByAccountNumberAndServiceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByAccountNumberAndServiceTypeOperationCompleted);
            }
            this.InvokeAsync("GetMetersByAccountNumberAndServiceType", new object[] {
                        accountNumber,
                        serviceType,
                        lastReceived}, this.GetMetersByAccountNumberAndServiceTypeOperationCompleted, userState);
        }
        
        private void OnGetMetersByAccountNumberAndServiceTypeOperationCompleted(object arg) {
            if ((this.GetMetersByAccountNumberAndServiceTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByAccountNumberAndServiceTypeCompleted(this, new GetMetersByAccountNumberAndServiceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllCustomers", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetAllCustomers(string lastReceived) {
            object[] results = this.Invoke("GetAllCustomers", new object[] {
                        lastReceived});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustomersAsync(string lastReceived) {
            this.GetAllCustomersAsync(lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllCustomersAsync(string lastReceived, object userState) {
            if ((this.GetAllCustomersOperationCompleted == null)) {
                this.GetAllCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustomersOperationCompleted);
            }
            this.InvokeAsync("GetAllCustomers", new object[] {
                        lastReceived}, this.GetAllCustomersOperationCompleted, userState);
        }
        
        private void OnGetAllCustomersOperationCompleted(object arg) {
            if ((this.GetAllCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustomersCompleted(this, new GetAllCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetModifiedCustomers", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetModifiedCustomers(string previousSessionID, string lastReceived) {
            object[] results = this.Invoke("GetModifiedCustomers", new object[] {
                        previousSessionID,
                        lastReceived});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedCustomersAsync(string previousSessionID, string lastReceived) {
            this.GetModifiedCustomersAsync(previousSessionID, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetModifiedCustomersAsync(string previousSessionID, string lastReceived, object userState) {
            if ((this.GetModifiedCustomersOperationCompleted == null)) {
                this.GetModifiedCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedCustomersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedCustomers", new object[] {
                        previousSessionID,
                        lastReceived}, this.GetModifiedCustomersOperationCompleted, userState);
        }
        
        private void OnGetModifiedCustomersOperationCompleted(object arg) {
            if ((this.GetModifiedCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedCustomersCompleted(this, new GetModifiedCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetModifiedServiceLocations", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetModifiedServiceLocations(string previousSessionID, string lastReceived, serviceType serviceType) {
            object[] results = this.Invoke("GetModifiedServiceLocations", new object[] {
                        previousSessionID,
                        lastReceived,
                        serviceType});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedServiceLocationsAsync(string previousSessionID, string lastReceived, serviceType serviceType) {
            this.GetModifiedServiceLocationsAsync(previousSessionID, lastReceived, serviceType, null);
        }
        
        /// <remarks/>
        public void GetModifiedServiceLocationsAsync(string previousSessionID, string lastReceived, serviceType serviceType, object userState) {
            if ((this.GetModifiedServiceLocationsOperationCompleted == null)) {
                this.GetModifiedServiceLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedServiceLocationsOperationCompleted);
            }
            this.InvokeAsync("GetModifiedServiceLocations", new object[] {
                        previousSessionID,
                        lastReceived,
                        serviceType}, this.GetModifiedServiceLocationsOperationCompleted, userState);
        }
        
        private void OnGetModifiedServiceLocationsOperationCompleted(object arg) {
            if ((this.GetModifiedServiceLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedServiceLocationsCompleted(this, new GetModifiedServiceLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCustomerByCustomerID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer GetCustomerByCustomerID(string customerId) {
            object[] results = this.Invoke("GetCustomerByCustomerID", new object[] {
                        customerId});
            return ((customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByCustomerIDAsync(string customerId) {
            this.GetCustomerByCustomerIDAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetCustomerByCustomerIDAsync(string customerId, object userState) {
            if ((this.GetCustomerByCustomerIDOperationCompleted == null)) {
                this.GetCustomerByCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByCustomerIDOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByCustomerID", new object[] {
                        customerId}, this.GetCustomerByCustomerIDOperationCompleted, userState);
        }
        
        private void OnGetCustomerByCustomerIDOperationCompleted(object arg) {
            if ((this.GetCustomerByCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByCustomerIDCompleted(this, new GetCustomerByCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCustomerByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer GetCustomerByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetCustomerByMeterID", new object[] {
                        meterID});
            return ((customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByMeterIDAsync(meterID meterID) {
            this.GetCustomerByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetCustomerByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetCustomerByMeterIDOperationCompleted == null)) {
                this.GetCustomerByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByMeterID", new object[] {
                        meterID}, this.GetCustomerByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetCustomerByMeterIDOperationCompleted(object arg) {
            if ((this.GetCustomerByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByMeterIDCompleted(this, new GetCustomerByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCustomerByName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer[] GetCustomerByName(string firstName, string lastName) {
            object[] results = this.Invoke("GetCustomerByName", new object[] {
                        firstName,
                        lastName});
            return ((customer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string firstName, string lastName) {
            this.GetCustomerByNameAsync(firstName, lastName, null);
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string firstName, string lastName, object userState) {
            if ((this.GetCustomerByNameOperationCompleted == null)) {
                this.GetCustomerByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByNameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByName", new object[] {
                        firstName,
                        lastName}, this.GetCustomerByNameOperationCompleted, userState);
        }
        
        private void OnGetCustomerByNameOperationCompleted(object arg) {
            if ((this.GetCustomerByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByNameCompleted(this, new GetCustomerByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetCustomerByDBAName", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public customer GetCustomerByDBAName(string dBAName) {
            object[] results = this.Invoke("GetCustomerByDBAName", new object[] {
                        dBAName});
            return ((customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByDBANameAsync(string dBAName) {
            this.GetCustomerByDBANameAsync(dBAName, null);
        }
        
        /// <remarks/>
        public void GetCustomerByDBANameAsync(string dBAName, object userState) {
            if ((this.GetCustomerByDBANameOperationCompleted == null)) {
                this.GetCustomerByDBANameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByDBANameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByDBAName", new object[] {
                        dBAName}, this.GetCustomerByDBANameOperationCompleted, userState);
        }
        
        private void OnGetCustomerByDBANameOperationCompleted(object arg) {
            if ((this.GetCustomerByDBANameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByDBANameCompleted(this, new GetCustomerByDBANameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetDeviceTreeConnectivity", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public circuitElement[] GetDeviceTreeConnectivity(string name, string noun) {
            object[] results = this.Invoke("GetDeviceTreeConnectivity", new object[] {
                        name,
                        noun});
            return ((circuitElement[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceTreeConnectivityAsync(string name, string noun) {
            this.GetDeviceTreeConnectivityAsync(name, noun, null);
        }
        
        /// <remarks/>
        public void GetDeviceTreeConnectivityAsync(string name, string noun, object userState) {
            if ((this.GetDeviceTreeConnectivityOperationCompleted == null)) {
                this.GetDeviceTreeConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceTreeConnectivityOperationCompleted);
            }
            this.InvokeAsync("GetDeviceTreeConnectivity", new object[] {
                        name,
                        noun}, this.GetDeviceTreeConnectivityOperationCompleted, userState);
        }
        
        private void OnGetDeviceTreeConnectivityOperationCompleted(object arg) {
            if ((this.GetDeviceTreeConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceTreeConnectivityCompleted(this, new GetDeviceTreeConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterConnectivityBySubstation", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterConnectivity[] GetMeterConnectivityBySubstation(string substationName) {
            object[] results = this.Invoke("GetMeterConnectivityBySubstation", new object[] {
                        substationName});
            return ((meterConnectivity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterConnectivityBySubstationAsync(string substationName) {
            this.GetMeterConnectivityBySubstationAsync(substationName, null);
        }
        
        /// <remarks/>
        public void GetMeterConnectivityBySubstationAsync(string substationName, object userState) {
            if ((this.GetMeterConnectivityBySubstationOperationCompleted == null)) {
                this.GetMeterConnectivityBySubstationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterConnectivityBySubstationOperationCompleted);
            }
            this.InvokeAsync("GetMeterConnectivityBySubstation", new object[] {
                        substationName}, this.GetMeterConnectivityBySubstationOperationCompleted, userState);
        }
        
        private void OnGetMeterConnectivityBySubstationOperationCompleted(object arg) {
            if ((this.GetMeterConnectivityBySubstationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterConnectivityBySubstationCompleted(this, new GetMeterConnectivityBySubstationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetEndDeviceShipmentByShipmentID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment GetEndDeviceShipmentByShipmentID(string shipmentID) {
            object[] results = this.Invoke("GetEndDeviceShipmentByShipmentID", new object[] {
                        shipmentID});
            return ((endDeviceShipment)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByShipmentIDAsync(string shipmentID) {
            this.GetEndDeviceShipmentByShipmentIDAsync(shipmentID, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByShipmentIDAsync(string shipmentID, object userState) {
            if ((this.GetEndDeviceShipmentByShipmentIDOperationCompleted == null)) {
                this.GetEndDeviceShipmentByShipmentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentByShipmentIDOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentByShipmentID", new object[] {
                        shipmentID}, this.GetEndDeviceShipmentByShipmentIDOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentByShipmentIDOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentByShipmentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentByShipmentIDCompleted(this, new GetEndDeviceShipmentByShipmentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetEndDeviceShipmentsByDateRange", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment[] GetEndDeviceShipmentsByDateRange(System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetEndDeviceShipmentsByDateRange", new object[] {
                        startDate,
                        endDate});
            return ((endDeviceShipment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetEndDeviceShipmentsByDateRangeAsync(startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentsByDateRangeAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetEndDeviceShipmentsByDateRangeOperationCompleted == null)) {
                this.GetEndDeviceShipmentsByDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentsByDateRangeOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentsByDateRange", new object[] {
                        startDate,
                        endDate}, this.GetEndDeviceShipmentsByDateRangeOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentsByDateRangeOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentsByDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentsByDateRangeCompleted(this, new GetEndDeviceShipmentsByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetEndDeviceShipmentByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment GetEndDeviceShipmentByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetEndDeviceShipmentByMeterID", new object[] {
                        meterID});
            return ((endDeviceShipment)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByMeterIDAsync(meterID meterID) {
            this.GetEndDeviceShipmentByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetEndDeviceShipmentByMeterIDOperationCompleted == null)) {
                this.GetEndDeviceShipmentByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentByMeterID", new object[] {
                        meterID}, this.GetEndDeviceShipmentByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentByMeterIDOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentByMeterIDCompleted(this, new GetEndDeviceShipmentByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetEndDeviceShipmentByTransponderID" +
            "", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public endDeviceShipment GetEndDeviceShipmentByTransponderID(string transponderID) {
            object[] results = this.Invoke("GetEndDeviceShipmentByTransponderID", new object[] {
                        transponderID});
            return ((endDeviceShipment)(results[0]));
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByTransponderIDAsync(string transponderID) {
            this.GetEndDeviceShipmentByTransponderIDAsync(transponderID, null);
        }
        
        /// <remarks/>
        public void GetEndDeviceShipmentByTransponderIDAsync(string transponderID, object userState) {
            if ((this.GetEndDeviceShipmentByTransponderIDOperationCompleted == null)) {
                this.GetEndDeviceShipmentByTransponderIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEndDeviceShipmentByTransponderIDOperationCompleted);
            }
            this.InvokeAsync("GetEndDeviceShipmentByTransponderID", new object[] {
                        transponderID}, this.GetEndDeviceShipmentByTransponderIDOperationCompleted, userState);
        }
        
        private void OnGetEndDeviceShipmentByTransponderIDOperationCompleted(object arg) {
            if ((this.GetEndDeviceShipmentByTransponderIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEndDeviceShipmentByTransponderIDCompleted(this, new GetEndDeviceShipmentByTransponderIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetLPDataByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public profileObject[] GetLPDataByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetLPDataByMeterID", new object[] {
                        meterID});
            return ((profileObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLPDataByMeterIDAsync(meterID meterID) {
            this.GetLPDataByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetLPDataByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetLPDataByMeterIDOperationCompleted == null)) {
                this.GetLPDataByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLPDataByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetLPDataByMeterID", new object[] {
                        meterID}, this.GetLPDataByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetLPDataByMeterIDOperationCompleted(object arg) {
            if ((this.GetLPDataByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLPDataByMeterIDCompleted(this, new GetLPDataByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMeterByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetMeterByMeterID", new object[] {
                        meterID});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByMeterIDAsync(meterID meterID) {
            this.GetMeterByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetMeterByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetMeterByMeterIDOperationCompleted == null)) {
                this.GetMeterByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterByMeterID", new object[] {
                        meterID}, this.GetMeterByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetMeterByMeterIDOperationCompleted(object arg) {
            if ((this.GetMeterByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByMeterIDCompleted(this, new GetMeterByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterByServiceLocationID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMeterByServiceLocationID(string serviceLocationID, serviceType serviceType) {
            object[] results = this.Invoke("GetMeterByServiceLocationID", new object[] {
                        serviceLocationID,
                        serviceType});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByServiceLocationIDAsync(string serviceLocationID, serviceType serviceType) {
            this.GetMeterByServiceLocationIDAsync(serviceLocationID, serviceType, null);
        }
        
        /// <remarks/>
        public void GetMeterByServiceLocationIDAsync(string serviceLocationID, serviceType serviceType, object userState) {
            if ((this.GetMeterByServiceLocationIDOperationCompleted == null)) {
                this.GetMeterByServiceLocationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByServiceLocationIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterByServiceLocationID", new object[] {
                        serviceLocationID,
                        serviceType}, this.GetMeterByServiceLocationIDOperationCompleted, userState);
        }
        
        private void OnGetMeterByServiceLocationIDOperationCompleted(object arg) {
            if ((this.GetMeterByServiceLocationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByServiceLocationIDCompleted(this, new GetMeterByServiceLocationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetAllMetersByAccountNumber", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetAllMetersByAccountNumber(string accountNumber, string lastReceived) {
            object[] results = this.Invoke("GetAllMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMetersByAccountNumberAsync(string accountNumber, string lastReceived) {
            this.GetAllMetersByAccountNumberAsync(accountNumber, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetAllMetersByAccountNumberAsync(string accountNumber, string lastReceived, object userState) {
            if ((this.GetAllMetersByAccountNumberOperationCompleted == null)) {
                this.GetAllMetersByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMetersByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("GetAllMetersByAccountNumber", new object[] {
                        accountNumber,
                        lastReceived}, this.GetAllMetersByAccountNumberOperationCompleted, userState);
        }
        
        private void OnGetAllMetersByAccountNumberOperationCompleted(object arg) {
            if ((this.GetAllMetersByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMetersByAccountNumberCompleted(this, new GetAllMetersByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterByCustomerID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMeterByCustomerID(string customerID) {
            object[] results = this.Invoke("GetMeterByCustomerID", new object[] {
                        customerID});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterByCustomerIDAsync(string customerID) {
            this.GetMeterByCustomerIDAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetMeterByCustomerIDAsync(string customerID, object userState) {
            if ((this.GetMeterByCustomerIDOperationCompleted == null)) {
                this.GetMeterByCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterByCustomerIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterByCustomerID", new object[] {
                        customerID}, this.GetMeterByCustomerIDOperationCompleted, userState);
        }
        
        private void OnGetMeterByCustomerIDOperationCompleted(object arg) {
            if ((this.GetMeterByCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterByCustomerIDCompleted(this, new GetMeterByCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMetersByAMRType", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetMetersByAMRType(string AMRVendor, string AMRDeviceType, string lastReceived) {
            object[] results = this.Invoke("GetMetersByAMRType", new object[] {
                        AMRVendor,
                        AMRDeviceType,
                        lastReceived});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetMetersByAMRTypeAsync(string AMRVendor, string AMRDeviceType, string lastReceived) {
            this.GetMetersByAMRTypeAsync(AMRVendor, AMRDeviceType, lastReceived, null);
        }
        
        /// <remarks/>
        public void GetMetersByAMRTypeAsync(string AMRVendor, string AMRDeviceType, string lastReceived, object userState) {
            if ((this.GetMetersByAMRTypeOperationCompleted == null)) {
                this.GetMetersByAMRTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetersByAMRTypeOperationCompleted);
            }
            this.InvokeAsync("GetMetersByAMRType", new object[] {
                        AMRVendor,
                        AMRDeviceType,
                        lastReceived}, this.GetMetersByAMRTypeOperationCompleted, userState);
        }
        
        private void OnGetMetersByAMRTypeOperationCompleted(object arg) {
            if ((this.GetMetersByAMRTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetersByAMRTypeCompleted(this, new GetMetersByAMRTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterGroupNames", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMeterGroupNames() {
            object[] results = this.Invoke("GetMeterGroupNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesAsync() {
            this.GetMeterGroupNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesAsync(object userState) {
            if ((this.GetMeterGroupNamesOperationCompleted == null)) {
                this.GetMeterGroupNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterGroupNamesOperationCompleted);
            }
            this.InvokeAsync("GetMeterGroupNames", new object[0], this.GetMeterGroupNamesOperationCompleted, userState);
        }
        
        private void OnGetMeterGroupNamesOperationCompleted(object arg) {
            if ((this.GetMeterGroupNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterGroupNamesCompleted(this, new GetMeterGroupNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterGroupNamesByMeterID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetMeterGroupNamesByMeterID(meterID meterID) {
            object[] results = this.Invoke("GetMeterGroupNamesByMeterID", new object[] {
                        meterID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesByMeterIDAsync(meterID meterID) {
            this.GetMeterGroupNamesByMeterIDAsync(meterID, null);
        }
        
        /// <remarks/>
        public void GetMeterGroupNamesByMeterIDAsync(meterID meterID, object userState) {
            if ((this.GetMeterGroupNamesByMeterIDOperationCompleted == null)) {
                this.GetMeterGroupNamesByMeterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterGroupNamesByMeterIDOperationCompleted);
            }
            this.InvokeAsync("GetMeterGroupNamesByMeterID", new object[] {
                        meterID}, this.GetMeterGroupNamesByMeterIDOperationCompleted, userState);
        }
        
        private void OnGetMeterGroupNamesByMeterIDOperationCompleted(object arg) {
            if ((this.GetMeterGroupNamesByMeterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterGroupNamesByMeterIDCompleted(this, new GetMeterGroupNamesByMeterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetMeterGroupMembers", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meterGroups GetMeterGroupMembers(string meterGroupName) {
            object[] results = this.Invoke("GetMeterGroupMembers", new object[] {
                        meterGroupName});
            return ((meterGroups)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeterGroupMembersAsync(string meterGroupName) {
            this.GetMeterGroupMembersAsync(meterGroupName, null);
        }
        
        /// <remarks/>
        public void GetMeterGroupMembersAsync(string meterGroupName, object userState) {
            if ((this.GetMeterGroupMembersOperationCompleted == null)) {
                this.GetMeterGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeterGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetMeterGroupMembers", new object[] {
                        meterGroupName}, this.GetMeterGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetMeterGroupMembersOperationCompleted(object arg) {
            if ((this.GetMeterGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeterGroupMembersCompleted(this, new GetMeterGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetModifiedMeters", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public meters GetModifiedMeters(string previousSessionID, string lastReceived, serviceType serviceType) {
            object[] results = this.Invoke("GetModifiedMeters", new object[] {
                        previousSessionID,
                        lastReceived,
                        serviceType});
            return ((meters)(results[0]));
        }
        
        /// <remarks/>
        public void GetModifiedMetersAsync(string previousSessionID, string lastReceived, serviceType serviceType) {
            this.GetModifiedMetersAsync(previousSessionID, lastReceived, serviceType, null);
        }
        
        /// <remarks/>
        public void GetModifiedMetersAsync(string previousSessionID, string lastReceived, serviceType serviceType, object userState) {
            if ((this.GetModifiedMetersOperationCompleted == null)) {
                this.GetModifiedMetersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetModifiedMetersOperationCompleted);
            }
            this.InvokeAsync("GetModifiedMeters", new object[] {
                        previousSessionID,
                        lastReceived,
                        serviceType}, this.GetModifiedMetersOperationCompleted, userState);
        }
        
        private void OnGetModifiedMetersOperationCompleted(object arg) {
            if ((this.GetModifiedMetersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetModifiedMetersCompleted(this, new GetModifiedMetersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByServiceStatus", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByServiceStatus(string servStatus, string lastReceived, serviceType serviceType) {
            object[] results = this.Invoke("GetServiceLocationByServiceStatus", new object[] {
                        servStatus,
                        lastReceived,
                        serviceType});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceStatusAsync(string servStatus, string lastReceived, serviceType serviceType) {
            this.GetServiceLocationByServiceStatusAsync(servStatus, lastReceived, serviceType, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceStatusAsync(string servStatus, string lastReceived, serviceType serviceType, object userState) {
            if ((this.GetServiceLocationByServiceStatusOperationCompleted == null)) {
                this.GetServiceLocationByServiceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByServiceStatusOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByServiceStatus", new object[] {
                        servStatus,
                        lastReceived,
                        serviceType}, this.GetServiceLocationByServiceStatusOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByServiceStatusOperationCompleted(object arg) {
            if ((this.GetServiceLocationByServiceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByServiceStatusCompleted(this, new GetServiceLocationByServiceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByServiceLocation" +
            "ID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByServiceLocationID(string serviceLocationId, serviceType serviceType) {
            object[] results = this.Invoke("GetServiceLocationByServiceLocationID", new object[] {
                        serviceLocationId,
                        serviceType});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceLocationIDAsync(string serviceLocationId, serviceType serviceType) {
            this.GetServiceLocationByServiceLocationIDAsync(serviceLocationId, serviceType, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByServiceLocationIDAsync(string serviceLocationId, serviceType serviceType, object userState) {
            if ((this.GetServiceLocationByServiceLocationIDOperationCompleted == null)) {
                this.GetServiceLocationByServiceLocationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByServiceLocationIDOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByServiceLocationID", new object[] {
                        serviceLocationId,
                        serviceType}, this.GetServiceLocationByServiceLocationIDOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByServiceLocationIDOperationCompleted(object arg) {
            if ((this.GetServiceLocationByServiceLocationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByServiceLocationIDCompleted(this, new GetServiceLocationByServiceLocationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MultiSpeakMsgHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.multispeak.org/Version_4.1_Release/GetServiceLocationByCustomerID", RequestNamespace="http://www.multispeak.org/Version_4.1_Release", ResponseNamespace="http://www.multispeak.org/Version_4.1_Release", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public serviceLocation[] GetServiceLocationByCustomerID(string customerId) {
            object[] results = this.Invoke("GetServiceLocationByCustomerID", new object[] {
                        customerId});
            return ((serviceLocation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceLocationByCustomerIDAsync(string customerId) {
            this.GetServiceLocationByCustomerIDAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetServiceLocationByCustomerIDAsync(string customerId, object userState) {
            if ((this.GetServiceLocationByCustomerIDOperationCompleted == null)) {
                this.GetServiceLocationByCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceLocationByCustomerIDOperationCompleted);
            }
            this.InvokeAsync("GetServiceLocationByCustomerID", new object[] {
                        customerId}, this.GetServiceLocationByCustomerIDOperationCompleted, userState);
        }
        
        private void OnGetServiceLocationByCustomerIDOperationCompleted(object arg) {
            if ((this.GetServiceLocationByCustomerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceLocationByCustomerIDCompleted(this, new GetServiceLocationByCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release", IsNullable=false)]
    public partial class MultiSpeakMsgHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string majorVersionField;
        
        private string minorVersionField;
        
        private string buildField;
        
        private string branchField;
        
        private BuildDescriptor buildStringField;
        
        private string userIDField;
        
        private string pwdField;
        
        private string appNameField;
        
        private string appVersionField;
        
        private string companyField;
        
        private DefaultCurrencyCode defaultCurrencyCodeField;
        
        private bool defaultCurrencyCodeFieldSpecified;
        
        private MessageHeaderCSUnits cSUnitsField;
        
        private string coordinateSystemNameField;
        
        private string coordinateSystemAuthorityField;
        
        private string coordinateSystemAuthorityCodeField;
        
        private string datumField;
        
        private string sessionIDField;
        
        private string previousSessionIDField;
        
        private string objectsRemainingField;
        
        private string lastSentField;
        
        private string registrationIDField;
        
        private string messageIDField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private MessageContext contextField;
        
        private bool contextFieldSpecified;
        
        private string auditIDField;
        
        private string auditPasswordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        public MultiSpeakMsgHeader() {
            this.cSUnitsField = MessageHeaderCSUnits.feet;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string MajorVersion {
            get {
                return this.majorVersionField;
            }
            set {
                this.majorVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string MinorVersion {
            get {
                return this.minorVersionField;
            }
            set {
                this.minorVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string Branch {
            get {
                return this.branchField;
            }
            set {
                this.branchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public BuildDescriptor BuildString {
            get {
                return this.buildStringField;
            }
            set {
                this.buildStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AppName {
            get {
                return this.appNameField;
            }
            set {
                this.appNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AppVersion {
            get {
                return this.appVersionField;
            }
            set {
                this.appVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DefaultCurrencyCode DefaultCurrencyCode {
            get {
                return this.defaultCurrencyCodeField;
            }
            set {
                this.defaultCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultCurrencyCodeSpecified {
            get {
                return this.defaultCurrencyCodeFieldSpecified;
            }
            set {
                this.defaultCurrencyCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(MessageHeaderCSUnits.feet)]
        public MessageHeaderCSUnits CSUnits {
            get {
                return this.cSUnitsField;
            }
            set {
                this.cSUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CoordinateSystemName {
            get {
                return this.coordinateSystemNameField;
            }
            set {
                this.coordinateSystemNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CoordinateSystemAuthority {
            get {
                return this.coordinateSystemAuthorityField;
            }
            set {
                this.coordinateSystemAuthorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CoordinateSystemAuthorityCode {
            get {
                return this.coordinateSystemAuthorityCodeField;
            }
            set {
                this.coordinateSystemAuthorityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Datum {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PreviousSessionID {
            get {
                return this.previousSessionIDField;
            }
            set {
                this.previousSessionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string ObjectsRemaining {
            get {
                return this.objectsRemainingField;
            }
            set {
                this.objectsRemainingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LastSent {
            get {
                return this.lastSentField;
            }
            set {
                this.lastSentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RegistrationID {
            get {
                return this.registrationIDField;
            }
            set {
                this.registrationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public MessageContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContextSpecified {
            get {
                return this.contextFieldSpecified;
            }
            set {
                this.contextFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AuditID {
            get {
                return this.auditIDField;
            }
            set {
                this.auditIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AuditPassword {
            get {
                return this.auditPasswordField;
            }
            set {
                this.auditPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum BuildDescriptor {
        
        /// <remarks/>
        PR,
        
        /// <remarks/>
        RC,
        
        /// <remarks/>
        Branch,
        
        /// <remarks/>
        Release,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum DefaultCurrencyCode {
        
        /// <remarks/>
        USD,
        
        /// <remarks/>
        EUR,
        
        /// <remarks/>
        AED,
        
        /// <remarks/>
        AFN,
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        AMD,
        
        /// <remarks/>
        ANG,
        
        /// <remarks/>
        AOA,
        
        /// <remarks/>
        ARS,
        
        /// <remarks/>
        AUD,
        
        /// <remarks/>
        AWG,
        
        /// <remarks/>
        AZN,
        
        /// <remarks/>
        BAM,
        
        /// <remarks/>
        BBD,
        
        /// <remarks/>
        BDT,
        
        /// <remarks/>
        BGN,
        
        /// <remarks/>
        BHD,
        
        /// <remarks/>
        BIF,
        
        /// <remarks/>
        BMD,
        
        /// <remarks/>
        BND,
        
        /// <remarks/>
        BOB,
        
        /// <remarks/>
        BOV,
        
        /// <remarks/>
        BRL,
        
        /// <remarks/>
        BSD,
        
        /// <remarks/>
        BTN,
        
        /// <remarks/>
        BWP,
        
        /// <remarks/>
        BYR,
        
        /// <remarks/>
        BZD,
        
        /// <remarks/>
        CAD,
        
        /// <remarks/>
        CDF,
        
        /// <remarks/>
        CHE,
        
        /// <remarks/>
        CHF,
        
        /// <remarks/>
        CHW,
        
        /// <remarks/>
        CLF,
        
        /// <remarks/>
        CLP,
        
        /// <remarks/>
        CNY,
        
        /// <remarks/>
        COP,
        
        /// <remarks/>
        COU,
        
        /// <remarks/>
        CRC,
        
        /// <remarks/>
        CUP,
        
        /// <remarks/>
        CVE,
        
        /// <remarks/>
        CZK,
        
        /// <remarks/>
        DJF,
        
        /// <remarks/>
        DKK,
        
        /// <remarks/>
        DOP,
        
        /// <remarks/>
        DZD,
        
        /// <remarks/>
        EEK,
        
        /// <remarks/>
        EGP,
        
        /// <remarks/>
        ERN,
        
        /// <remarks/>
        ETB,
        
        /// <remarks/>
        FJD,
        
        /// <remarks/>
        FKP,
        
        /// <remarks/>
        GBP,
        
        /// <remarks/>
        GEL,
        
        /// <remarks/>
        GHS,
        
        /// <remarks/>
        GIP,
        
        /// <remarks/>
        GMD,
        
        /// <remarks/>
        GNF,
        
        /// <remarks/>
        GTQ,
        
        /// <remarks/>
        GYD,
        
        /// <remarks/>
        HKD,
        
        /// <remarks/>
        HNL,
        
        /// <remarks/>
        HRK,
        
        /// <remarks/>
        HTG,
        
        /// <remarks/>
        HUF,
        
        /// <remarks/>
        IDR,
        
        /// <remarks/>
        ILS,
        
        /// <remarks/>
        INR,
        
        /// <remarks/>
        IQD,
        
        /// <remarks/>
        IRR,
        
        /// <remarks/>
        ISK,
        
        /// <remarks/>
        JMD,
        
        /// <remarks/>
        JOD,
        
        /// <remarks/>
        JPY,
        
        /// <remarks/>
        KES,
        
        /// <remarks/>
        KGS,
        
        /// <remarks/>
        KHR,
        
        /// <remarks/>
        KMF,
        
        /// <remarks/>
        KPW,
        
        /// <remarks/>
        KRW,
        
        /// <remarks/>
        KWD,
        
        /// <remarks/>
        KYD,
        
        /// <remarks/>
        KZT,
        
        /// <remarks/>
        LAK,
        
        /// <remarks/>
        LBP,
        
        /// <remarks/>
        LKR,
        
        /// <remarks/>
        LRD,
        
        /// <remarks/>
        LSL,
        
        /// <remarks/>
        LTL,
        
        /// <remarks/>
        LVL,
        
        /// <remarks/>
        LYD,
        
        /// <remarks/>
        MAD,
        
        /// <remarks/>
        MDL,
        
        /// <remarks/>
        MGA,
        
        /// <remarks/>
        MKD,
        
        /// <remarks/>
        MMK,
        
        /// <remarks/>
        MNT,
        
        /// <remarks/>
        MOP,
        
        /// <remarks/>
        MRO,
        
        /// <remarks/>
        MUR,
        
        /// <remarks/>
        MVR,
        
        /// <remarks/>
        MWK,
        
        /// <remarks/>
        MXN,
        
        /// <remarks/>
        MXV,
        
        /// <remarks/>
        MYR,
        
        /// <remarks/>
        MZN,
        
        /// <remarks/>
        NAD,
        
        /// <remarks/>
        NGN,
        
        /// <remarks/>
        NIO,
        
        /// <remarks/>
        NOK,
        
        /// <remarks/>
        NPR,
        
        /// <remarks/>
        NZD,
        
        /// <remarks/>
        OMR,
        
        /// <remarks/>
        PAB,
        
        /// <remarks/>
        PEN,
        
        /// <remarks/>
        PGK,
        
        /// <remarks/>
        PHP,
        
        /// <remarks/>
        PKR,
        
        /// <remarks/>
        PLN,
        
        /// <remarks/>
        PYG,
        
        /// <remarks/>
        QAR,
        
        /// <remarks/>
        RON,
        
        /// <remarks/>
        RSD,
        
        /// <remarks/>
        RUB,
        
        /// <remarks/>
        RWF,
        
        /// <remarks/>
        SAR,
        
        /// <remarks/>
        SBD,
        
        /// <remarks/>
        SCR,
        
        /// <remarks/>
        SDG,
        
        /// <remarks/>
        SEK,
        
        /// <remarks/>
        SGD,
        
        /// <remarks/>
        SHP,
        
        /// <remarks/>
        SKK,
        
        /// <remarks/>
        SLL,
        
        /// <remarks/>
        SOS,
        
        /// <remarks/>
        SRD,
        
        /// <remarks/>
        STD,
        
        /// <remarks/>
        SYP,
        
        /// <remarks/>
        SZL,
        
        /// <remarks/>
        THB,
        
        /// <remarks/>
        TJS,
        
        /// <remarks/>
        TMM,
        
        /// <remarks/>
        TND,
        
        /// <remarks/>
        TOP,
        
        /// <remarks/>
        TRY,
        
        /// <remarks/>
        TTD,
        
        /// <remarks/>
        TWD,
        
        /// <remarks/>
        TZS,
        
        /// <remarks/>
        UAH,
        
        /// <remarks/>
        UGX,
        
        /// <remarks/>
        USN,
        
        /// <remarks/>
        USS,
        
        /// <remarks/>
        UYU,
        
        /// <remarks/>
        UZS,
        
        /// <remarks/>
        VEF,
        
        /// <remarks/>
        VND,
        
        /// <remarks/>
        VUV,
        
        /// <remarks/>
        WST,
        
        /// <remarks/>
        XAF,
        
        /// <remarks/>
        XAG,
        
        /// <remarks/>
        XAU,
        
        /// <remarks/>
        XBA,
        
        /// <remarks/>
        XBB,
        
        /// <remarks/>
        XBC,
        
        /// <remarks/>
        XBD,
        
        /// <remarks/>
        XCD,
        
        /// <remarks/>
        XDR,
        
        /// <remarks/>
        XFU,
        
        /// <remarks/>
        XOF,
        
        /// <remarks/>
        XPD,
        
        /// <remarks/>
        XPF,
        
        /// <remarks/>
        XPT,
        
        /// <remarks/>
        XTS,
        
        /// <remarks/>
        XXX,
        
        /// <remarks/>
        YER,
        
        /// <remarks/>
        ZAR,
        
        /// <remarks/>
        ZMK,
        
        /// <remarks/>
        ZWD,
        
        /// <remarks/>
        ADF,
        
        /// <remarks/>
        ADP,
        
        /// <remarks/>
        ATS,
        
        /// <remarks/>
        BEF,
        
        /// <remarks/>
        CYP,
        
        /// <remarks/>
        DEM,
        
        /// <remarks/>
        ESP,
        
        /// <remarks/>
        FIM,
        
        /// <remarks/>
        FRF,
        
        /// <remarks/>
        GRD,
        
        /// <remarks/>
        IEP,
        
        /// <remarks/>
        ITL,
        
        /// <remarks/>
        LUF,
        
        /// <remarks/>
        MCF,
        
        /// <remarks/>
        MTL,
        
        /// <remarks/>
        NLG,
        
        /// <remarks/>
        PTE,
        
        /// <remarks/>
        SIT,
        
        /// <remarks/>
        SML,
        
        /// <remarks/>
        VAL,
        
        /// <remarks/>
        XEU,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum MessageHeaderCSUnits {
        
        /// <remarks/>
        feet,
        
        /// <remarks/>
        meters,
        
        /// <remarks/>
        USSurveyFeet,
        
        /// <remarks/>
        other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum MessageContext {
        
        /// <remarks/>
        Production,
        
        /// <remarks/>
        Testing,
        
        /// <remarks/>
        Development,
        
        /// <remarks/>
        Study,
        
        /// <remarks/>
        Training,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class domainNameChange {
        
        private string domainNameField;
        
        private string oldDomainNameField;
        
        private domainNameAction actionField;
        
        /// <remarks/>
        public string domainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public string oldDomainName {
            get {
                return this.oldDomainNameField;
            }
            set {
                this.oldDomainNameField = value;
            }
        }
        
        /// <remarks/>
        public domainNameAction action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum domainNameAction {
        
        /// <remarks/>
        Add,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Modify,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class registrationInfo {
        
        private string registrationIDField;
        
        private string responseURLField;
        
        private string responseUserIDField;
        
        private string responsePwdField;
        
        private string mSFunctionField;
        
        private string[] methodsListField;
        
        /// <remarks/>
        public string registrationID {
            get {
                return this.registrationIDField;
            }
            set {
                this.registrationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string responseURL {
            get {
                return this.responseURLField;
            }
            set {
                this.responseURLField = value;
            }
        }
        
        /// <remarks/>
        public string responseUserID {
            get {
                return this.responseUserIDField;
            }
            set {
                this.responseUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string responsePwd {
            get {
                return this.responsePwdField;
            }
            set {
                this.responsePwdField = value;
            }
        }
        
        /// <remarks/>
        public string MSFunction {
            get {
                return this.mSFunctionField;
            }
            set {
                this.mSFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("methodName", IsNullable=false)]
        public string[] methodsList {
            get {
                return this.methodsListField;
            }
            set {
                this.methodsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class domainMember {
        
        private string codeField;
        
        private string descriptionField;
        
        private domainMemberAction actionField;
        
        private bool actionFieldSpecified;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public domainMemberAction action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionSpecified {
            get {
                return this.actionFieldSpecified;
            }
            set {
                this.actionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum domainMemberAction {
        
        /// <remarks/>
        Add,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Modify,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class criticalPeakPriceEventStatus {
        
        private string eventIDField;
        
        private HANDeviceID deviceIDField;
        
        private string eventStatusField;
        
        private System.DateTime eventTimeField;
        
        /// <remarks/>
        public string eventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public HANDeviceID deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string eventStatus {
            get {
                return this.eventStatusField;
            }
            set {
                this.eventStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class HANDeviceID {
        
        private string deviceNameField;
        
        private string objectIDField;
        
        private string utilityField;
        
        private string deviceTypeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class criticalPeakPriceEvent {
        
        private string eventIDField;
        
        private System.DateTime eventStartTimeField;
        
        private duration eventDurationField;
        
        /// <remarks/>
        public string eventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventStartTime {
            get {
                return this.eventStartTimeField;
            }
            set {
                this.eventStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public duration eventDuration {
            get {
                return this.eventDurationField;
            }
            set {
                this.eventDurationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class duration {
        
        private timeUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public timeUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum timeUnits {
        
        /// <remarks/>
        Milliseconds,
        
        /// <remarks/>
        Seconds,
        
        /// <remarks/>
        Minutes,
        
        /// <remarks/>
        Hours,
        
        /// <remarks/>
        Days,
        
        /// <remarks/>
        Weeks,
        
        /// <remarks/>
        Months,
        
        /// <remarks/>
        Years,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingStatusCodeEntry {
        
        private string descriptionField;
        
        private readingStatusCode readingStatusCodeField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public readingStatusCode readingStatusCode {
            get {
                return this.readingStatusCodeField;
            }
            set {
                this.readingStatusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingStatusCode {
        
        private string originatingSystemIDField;
        
        private string codeCategoryField;
        
        private string codeIndexField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string originatingSystemID {
            get {
                return this.originatingSystemIDField;
            }
            set {
                this.originatingSystemIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string codeCategory {
            get {
                return this.codeCategoryField;
            }
            set {
                this.codeCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string codeIndex {
            get {
                return this.codeIndexField;
            }
            set {
                this.codeIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadCycleTier {
        
        private string rateIdentifierField;
        
        private float cycleRateField;
        
        private bool cycleRateFieldSpecified;
        
        /// <remarks/>
        public string rateIdentifier {
            get {
                return this.rateIdentifierField;
            }
            set {
                this.rateIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public float cycleRate {
            get {
                return this.cycleRateField;
            }
            set {
                this.cycleRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cycleRateSpecified {
            get {
                return this.cycleRateFieldSpecified;
            }
            set {
                this.cycleRateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadCycleTierStructure {
        
        private HANDeviceID loadManagementDeviceIDField;
        
        private loadCycleTier[] cycleTiersField;
        
        private duration cyclePeriodField;
        
        private bool randomizeStartField;
        
        private bool randomizeStartFieldSpecified;
        
        /// <remarks/>
        public HANDeviceID loadManagementDeviceID {
            get {
                return this.loadManagementDeviceIDField;
            }
            set {
                this.loadManagementDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("cycleTier", IsNullable=false)]
        public loadCycleTier[] cycleTiers {
            get {
                return this.cycleTiersField;
            }
            set {
                this.cycleTiersField = value;
            }
        }
        
        /// <remarks/>
        public duration cyclePeriod {
            get {
                return this.cyclePeriodField;
            }
            set {
                this.cyclePeriodField = value;
            }
        }
        
        /// <remarks/>
        public bool randomizeStart {
            get {
                return this.randomizeStartField;
            }
            set {
                this.randomizeStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool randomizeStartSpecified {
            get {
                return this.randomizeStartFieldSpecified;
            }
            set {
                this.randomizeStartFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class temperatureTier {
        
        private string rateIdentifierField;
        
        private temperature heatingOffsetField;
        
        private temperature coolingOffsetField;
        
        /// <remarks/>
        public string rateIdentifier {
            get {
                return this.rateIdentifierField;
            }
            set {
                this.rateIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public temperature heatingOffset {
            get {
                return this.heatingOffsetField;
            }
            set {
                this.heatingOffsetField = value;
            }
        }
        
        /// <remarks/>
        public temperature coolingOffset {
            get {
                return this.coolingOffsetField;
            }
            set {
                this.coolingOffsetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class temperature {
        
        private temperatureUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public temperatureUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum temperatureUnits {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("degrees C")]
        degreesC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("degrees K")]
        degreesK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("degrees F")]
        degreesF,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class temperatureTierStructure {
        
        private HANDeviceID thermostatIDField;
        
        private temperatureTier[] temperatureTiersField;
        
        private bool fanOnField;
        
        private bool fanOnFieldSpecified;
        
        /// <remarks/>
        public HANDeviceID thermostatID {
            get {
                return this.thermostatIDField;
            }
            set {
                this.thermostatIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public temperatureTier[] temperatureTiers {
            get {
                return this.temperatureTiersField;
            }
            set {
                this.temperatureTiersField = value;
            }
        }
        
        /// <remarks/>
        public bool fanOn {
            get {
                return this.fanOnField;
            }
            set {
                this.fanOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fanOnSpecified {
            get {
                return this.fanOnFieldSpecified;
            }
            set {
                this.fanOnFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ch {
        
        private int idxField;
        
        private string dField;
        
        /// <remarks/>
        public int idx {
            get {
                return this.idxField;
            }
            set {
                this.idxField = value;
            }
        }
        
        /// <remarks/>
        public string d {
            get {
                return this.dField;
            }
            set {
                this.dField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class dB {
        
        private ch[] chsField;
        
        private string csField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ch[] chs {
            get {
                return this.chsField;
            }
            set {
                this.chsField = value;
            }
        }
        
        /// <remarks/>
        public string cS {
            get {
                return this.csField;
            }
            set {
                this.csField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class endReading {
        
        private string channelIndexField;
        
        private float readingField;
        
        private bool readingFieldSpecified;
        
        private System.DateTime readingDateField;
        
        private bool readingDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string channelIndex {
            get {
                return this.channelIndexField;
            }
            set {
                this.channelIndexField = value;
            }
        }
        
        /// <remarks/>
        public float reading {
            get {
                return this.readingField;
            }
            set {
                this.readingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readingSpecified {
            get {
                return this.readingFieldSpecified;
            }
            set {
                this.readingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime readingDate {
            get {
                return this.readingDateField;
            }
            set {
                this.readingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readingDateSpecified {
            get {
                return this.readingDateFieldSpecified;
            }
            set {
                this.readingDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class intervalBlock {
        
        private string profileIDField;
        
        private meterID meterIDField;
        
        private endReading[] endReadingListField;
        
        private System.DateTime logTimeField;
        
        private bool logTimeFieldSpecified;
        
        private System.DateTime intervalStartField;
        
        private bool intervalStartFieldSpecified;
        
        private dB dbField;
        
        /// <remarks/>
        public string profileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public endReading[] endReadingList {
            get {
                return this.endReadingListField;
            }
            set {
                this.endReadingListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime logTime {
            get {
                return this.logTimeField;
            }
            set {
                this.logTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool logTimeSpecified {
            get {
                return this.logTimeFieldSpecified;
            }
            set {
                this.logTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime intervalStart {
            get {
                return this.intervalStartField;
            }
            set {
                this.intervalStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intervalStartSpecified {
            get {
                return this.intervalStartFieldSpecified;
            }
            set {
                this.intervalStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public dB dB {
            get {
                return this.dbField;
            }
            set {
                this.dbField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterID {
        
        private string meterNoField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string objectIDField;
        
        private string utilityField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum serviceType {
        
        /// <remarks/>
        Electric,
        
        /// <remarks/>
        Gas,
        
        /// <remarks/>
        Water,
        
        /// <remarks/>
        Propane,
        
        /// <remarks/>
        Refuse,
        
        /// <remarks/>
        Sewer,
        
        /// <remarks/>
        Telecom,
        
        /// <remarks/>
        TV,
        
        /// <remarks/>
        Cable,
        
        /// <remarks/>
        Heating,
        
        /// <remarks/>
        Steam,
        
        /// <remarks/>
        Transportation,
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class intervalChannel {
        
        private string indexField;
        
        private string fieldNameField;
        
        private string fieldDescriptionField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string fieldDescription {
            get {
                return this.fieldDescriptionField;
            }
            set {
                this.fieldDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum uom {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Acre ft")]
        Acreft,
        
        /// <remarks/>
        Amps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Amps RMS")]
        AmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Amps squared RMS")]
        AmpssquaredRMS,
        
        /// <remarks/>
        atmospheres,
        
        /// <remarks/>
        Bar,
        
        /// <remarks/>
        ccf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ccf per Hr")]
        ccfperHr,
        
        /// <remarks/>
        cm,
        
        /// <remarks/>
        Corrosion,
        
        /// <remarks/>
        Counter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet")]
        cubicfeet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet corrected")]
        cubicfeetcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr")]
        cubicfeetperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr corrected")]
        cubicfeetperHrcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr uncorrected")]
        cubicfeetperHruncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet uncorrected")]
        cubicfeetuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meter")]
        cubicmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meter per Hr")]
        cubicmeterperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters corrected")]
        cubicmeterscorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters per Hr corrected")]
        cubicmetersperHrcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters per Hr uncorrected")]
        cubicmetersperHruncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters uncorrected")]
        cubicmetersuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current phase angle")]
        Currentphaseangle,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Date time")]
        Datetime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg C")]
        degC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg F")]
        degF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg K")]
        degK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Differential pascal")]
        Differentialpascal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Differential pound per square inch")]
        Differentialpoundpersquareinch,
        
        /// <remarks/>
        dm,
        
        /// <remarks/>
        Dollar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("feet per second")]
        feetpersecond,
        
        /// <remarks/>
        Frequency,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft of water")]
        ftofwater,
        
        /// <remarks/>
        GQ,
        
        /// <remarks/>
        GQh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Gram square cm")]
        Gramsquarecm,
        
        /// <remarks/>
        GVA,
        
        /// <remarks/>
        GVAh,
        
        /// <remarks/>
        GVAR,
        
        /// <remarks/>
        GVARh,
        
        /// <remarks/>
        GW,
        
        /// <remarks/>
        GWh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IMP gl")]
        IMPgl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IMP gl per Hr")]
        IMPglperHr,
        
        /// <remarks/>
        inches,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inches H2O column")]
        InchesH2Ocolumn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inches HG column")]
        InchesHGcolumn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inches of water")]
        inchesofwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Interval timer")]
        Intervaltimer,
        
        /// <remarks/>
        Ionization,
        
        /// <remarks/>
        Joules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Joules per Hr")]
        JoulesperHr,
        
        /// <remarks/>
        kAmps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kAmps RMS")]
        kAmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kAmps squared RMS")]
        kAmpssquaredRMS,
        
        /// <remarks/>
        kJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kJoules per Hr")]
        kJoulesperHr,
        
        /// <remarks/>
        km,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km per hour")]
        kmperhour,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km per second")]
        kmpersecond,
        
        /// <remarks/>
        kQ,
        
        /// <remarks/>
        kQh,
        
        /// <remarks/>
        kV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kV RMS")]
        kVRMS,
        
        /// <remarks/>
        kVA,
        
        /// <remarks/>
        kVAh,
        
        /// <remarks/>
        kVAR,
        
        /// <remarks/>
        kVARh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kVsquared RMS")]
        kVsquaredRMS,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        kWh,
        
        /// <remarks/>
        liters,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m per second")]
        mpersecond,
        
        /// <remarks/>
        mAmps,
        
        /// <remarks/>
        Mamps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mAmps RMS")]
        mAmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mamps RMS")]
        MampsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mamps squared RMS")]
        MampssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mAmps squared RMS")]
        mAmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter HG column")]
        MeterHGcolumn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro m")]
        microm,
        
        /// <remarks/>
        microAmps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microAmps RMS")]
        microAmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microAmps squared RMS")]
        microAmpssquaredRMS,
        
        /// <remarks/>
        microJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microJoules per Hr")]
        microJoulesperHr,
        
        /// <remarks/>
        microQ,
        
        /// <remarks/>
        microQh,
        
        /// <remarks/>
        microV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microV RMS")]
        microVRMS,
        
        /// <remarks/>
        microVA,
        
        /// <remarks/>
        microVAh,
        
        /// <remarks/>
        microVAR,
        
        /// <remarks/>
        microVARh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microVsquared RMS")]
        microVsquaredRMS,
        
        /// <remarks/>
        microW,
        
        /// <remarks/>
        microWh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Minutes on battery")]
        Minutesonbattery,
        
        /// <remarks/>
        mJoules,
        
        /// <remarks/>
        MJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MJoules per Hr")]
        MJoulesperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mJoules per Hr")]
        mJoulesperHr,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        mph,
        
        /// <remarks/>
        MQ,
        
        /// <remarks/>
        mQ,
        
        /// <remarks/>
        MQh,
        
        /// <remarks/>
        mQh,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        mV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MV RMS")]
        MVRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mV RMS")]
        mVRMS,
        
        /// <remarks/>
        mVA,
        
        /// <remarks/>
        MVA,
        
        /// <remarks/>
        MVAh,
        
        /// <remarks/>
        mVAh,
        
        /// <remarks/>
        MVAR,
        
        /// <remarks/>
        mVAR,
        
        /// <remarks/>
        mVARh,
        
        /// <remarks/>
        MVARh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mVsquared RMS")]
        mVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MVsquared RMS")]
        MVsquaredRMS,
        
        /// <remarks/>
        MW,
        
        /// <remarks/>
        mW,
        
        /// <remarks/>
        mWh,
        
        /// <remarks/>
        MWh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of amps T.H.D. excess")]
        NbrofampsTHDexcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of demand resets")]
        Nbrofdemandresets,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of encoder tamper")]
        Nbrofencodertamper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of excursion high")]
        Nbrofexcursionhigh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of excursion low")]
        Nbrofexcursionlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of inversion")]
        Nbrofinversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of physical tamper")]
        Nbrofphysicaltamper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of power loss")]
        Nbrofpowerloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of power outage")]
        Nbrofpoweroutage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of pulse")]
        Nbrofpulse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of removal")]
        Nbrofremoval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of reprogramming")]
        Nbrofreprogramming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of reverse rotation")]
        Nbrofreverserotation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of sag")]
        Nbrofsag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of swells")]
        Nbrofswells,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of times programmed")]
        Nbroftimesprogrammed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of V T.H.D. excess")]
        NbrofVTHDexcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of voltage unbalance")]
        Nbrofvoltageunbalance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of watchdog")]
        Nbrofwatchdog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Normal voltage period")]
        Normalvoltageperiod,
        
        /// <remarks/>
        percent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("percent relative humidity")]
        percentrelativehumidity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PH factor")]
        PHfactor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pounds per square foot")]
        poundspersquarefoot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Power factor")]
        Powerfactor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM chlorine")]
        PPMchlorine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM lead")]
        PPMlead,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM odorant")]
        PPModorant,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM SO2")]
        PPMSO2,
        
        /// <remarks/>
        Q,
        
        /// <remarks/>
        Qh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sense input")]
        Senseinput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Static pascal")]
        Staticpascal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Static pound per square inch")]
        Staticpoundpersquareinch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("T.H.D. Current")]
        THDCurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("T.H.D. Voltage")]
        THDVoltage,
        
        /// <remarks/>
        Therm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Therm per Hr")]
        ThermperHr,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        turbidity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US gl")]
        USgl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US gl per Hr")]
        USglperHr,
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("V RMS")]
        VRMS,
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        VAh,
        
        /// <remarks/>
        VAR,
        
        /// <remarks/>
        VARh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Voltage phase angle")]
        Voltagephaseangle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Vsquared RMS")]
        VsquaredRMS,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        Wh,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class intervalProfile {
        
        private string nameField;
        
        private duration intervalLengthField;
        
        private intervalChannel[] channelsField;
        
        private string profileIDField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public duration intervalLength {
            get {
                return this.intervalLengthField;
            }
            set {
                this.intervalLengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("channel", IsNullable=false)]
        public intervalChannel[] channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string profileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class intervalData {
        
        private string statusDelimiterField;
        
        private string intervalDelimiterField;
        
        private string commentField;
        
        private intervalProfile[] profilesField;
        
        private intervalBlock[] blocksField;
        
        /// <remarks/>
        public string statusDelimiter {
            get {
                return this.statusDelimiterField;
            }
            set {
                this.statusDelimiterField = value;
            }
        }
        
        /// <remarks/>
        public string intervalDelimiter {
            get {
                return this.intervalDelimiterField;
            }
            set {
                this.intervalDelimiterField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("profile", IsNullable=false)]
        public intervalProfile[] profiles {
            get {
                return this.profilesField;
            }
            set {
                this.profilesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("block", IsNullable=false)]
        public intervalBlock[] blocks {
            get {
                return this.blocksField;
            }
            set {
                this.blocksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class HANRegistration {
        
        private HANDeviceID deviceIDField;
        
        private HANInterfaceID interfaceIDField;
        
        private HANRegistrationStatus registrationStatusField;
        
        /// <remarks/>
        public HANDeviceID deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public HANInterfaceID interfaceID {
            get {
                return this.interfaceIDField;
            }
            set {
                this.interfaceIDField = value;
            }
        }
        
        /// <remarks/>
        public HANRegistrationStatus registrationStatus {
            get {
                return this.registrationStatusField;
            }
            set {
                this.registrationStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class HANInterfaceID {
        
        private string deviceNameField;
        
        private string objectIDField;
        
        private string utilityField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum HANRegistrationStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Joining,
        
        /// <remarks/>
        Leaving,
        
        /// <remarks/>
        Connected,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        Registered,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class registrationStatus {
        
        private HANInterfaceID interfaceIDField;
        
        private HANDeviceID deviceIDField;
        
        /// <remarks/>
        public HANInterfaceID interfaceID {
            get {
                return this.interfaceIDField;
            }
            set {
                this.interfaceIDField = value;
            }
        }
        
        /// <remarks/>
        public HANDeviceID deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class HANSecurityToken {
        
        private string encodingField;
        
        private string tokenTypeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string tokenType {
            get {
                return this.tokenTypeField;
            }
            set {
                this.tokenTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingScheduleResult {
        
        private string readingScheduleIDField;
        
        private readingSchedulingResult resultField;
        
        private string reasonField;
        
        /// <remarks/>
        public string readingScheduleID {
            get {
                return this.readingScheduleIDField;
            }
            set {
                this.readingScheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public readingSchedulingResult result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum readingSchedulingResult {
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Rejected,
        
        /// <remarks/>
        RejectedInPart,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thermostatScheduleTime {
        
        private System.DateTime startTimeField;
        
        private temperature coolingSetPointField;
        
        private temperature heatingSetPointField;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public temperature coolingSetPoint {
            get {
                return this.coolingSetPointField;
            }
            set {
                this.coolingSetPointField = value;
            }
        }
        
        /// <remarks/>
        public temperature heatingSetPoint {
            get {
                return this.heatingSetPointField;
            }
            set {
                this.heatingSetPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thermostatScheduleDay {
        
        private dayLabel[] daysField;
        
        private thermostatScheduleTime[] setPointsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("day", IsNullable=false)]
        public dayLabel[] days {
            get {
                return this.daysField;
            }
            set {
                this.daysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("setPoint", IsNullable=false)]
        public thermostatScheduleTime[] setPoints {
            get {
                return this.setPointsField;
            }
            set {
                this.setPointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum dayLabel {
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        Th,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        Sa,
        
        /// <remarks/>
        Su,
        
        /// <remarks/>
        Weekdays,
        
        /// <remarks/>
        WeekendDays,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class tunnelCommandContent {
        
        private string commandContentField;
        
        private string commandEncodingField;
        
        /// <remarks/>
        public string commandContent {
            get {
                return this.commandContentField;
            }
            set {
                this.commandContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string commandEncoding {
            get {
                return this.commandEncodingField;
            }
            set {
                this.commandEncodingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class HANGroupID {
        
        private string groupNameField;
        
        private string deviceTypeField;
        
        private string objectIDField;
        
        private string utilityField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class capabilityActionCode {
        
        private string capabilityActionCodeNameField;
        
        private string capabilityActionCodeValueField;
        
        /// <remarks/>
        public string capabilityActionCodeName {
            get {
                return this.capabilityActionCodeNameField;
            }
            set {
                this.capabilityActionCodeNameField = value;
            }
        }
        
        /// <remarks/>
        public string capabilityActionCodeValue {
            get {
                return this.capabilityActionCodeValueField;
            }
            set {
                this.capabilityActionCodeValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class capabilityAction {
        
        private string conditionIdentifierField;
        
        private capabilityActionCode[] capabilityActionCodesField;
        
        /// <remarks/>
        public string conditionIdentifier {
            get {
                return this.conditionIdentifierField;
            }
            set {
                this.conditionIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public capabilityActionCode[] capabilityActionCodes {
            get {
                return this.capabilityActionCodesField;
            }
            set {
                this.capabilityActionCodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inHomeDisplayCapabilitySetting {
        
        private string capabilityCodeField;
        
        private string conditionCodeField;
        
        private capabilityAction[] capabilityActionsField;
        
        /// <remarks/>
        public string capabilityCode {
            get {
                return this.capabilityCodeField;
            }
            set {
                this.capabilityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string conditionCode {
            get {
                return this.conditionCodeField;
            }
            set {
                this.conditionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public capabilityAction[] capabilityActions {
            get {
                return this.capabilityActionsField;
            }
            set {
                this.capabilityActionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class priceBin {
        
        private string binIdentifierField;
        
        private string rateIdentifierField;
        
        /// <remarks/>
        public string binIdentifier {
            get {
                return this.binIdentifierField;
            }
            set {
                this.binIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string rateIdentifier {
            get {
                return this.rateIdentifierField;
            }
            set {
                this.rateIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class priceTier {
        
        private string rateIdentifierField;
        
        private string rateLabelField;
        
        private money priceField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private string registerField;
        
        /// <remarks/>
        public string rateIdentifier {
            get {
                return this.rateIdentifierField;
            }
            set {
                this.rateIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string rateLabel {
            get {
                return this.rateLabelField;
            }
            set {
                this.rateLabelField = value;
            }
        }
        
        /// <remarks/>
        public money price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string register {
            get {
                return this.registerField;
            }
            set {
                this.registerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class money {
        
        private currencyCode currencyCodeField;
        
        private bool currencyCodeFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public currencyCode currencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currencyCodeSpecified {
            get {
                return this.currencyCodeFieldSpecified;
            }
            set {
                this.currencyCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum currencyCode {
        
        /// <remarks/>
        USD,
        
        /// <remarks/>
        EUR,
        
        /// <remarks/>
        ADF,
        
        /// <remarks/>
        ADP,
        
        /// <remarks/>
        AED,
        
        /// <remarks/>
        AFN,
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        AMD,
        
        /// <remarks/>
        ANG,
        
        /// <remarks/>
        AOA,
        
        /// <remarks/>
        ARS,
        
        /// <remarks/>
        ATS,
        
        /// <remarks/>
        AUD,
        
        /// <remarks/>
        AWG,
        
        /// <remarks/>
        AZN,
        
        /// <remarks/>
        BAM,
        
        /// <remarks/>
        BBD,
        
        /// <remarks/>
        BDT,
        
        /// <remarks/>
        BEF,
        
        /// <remarks/>
        BGN,
        
        /// <remarks/>
        BHD,
        
        /// <remarks/>
        BIF,
        
        /// <remarks/>
        BMD,
        
        /// <remarks/>
        BND,
        
        /// <remarks/>
        BOB,
        
        /// <remarks/>
        BOV,
        
        /// <remarks/>
        BRL,
        
        /// <remarks/>
        BSD,
        
        /// <remarks/>
        BTN,
        
        /// <remarks/>
        BWP,
        
        /// <remarks/>
        BYR,
        
        /// <remarks/>
        BZD,
        
        /// <remarks/>
        CAD,
        
        /// <remarks/>
        CDF,
        
        /// <remarks/>
        CHE,
        
        /// <remarks/>
        CHF,
        
        /// <remarks/>
        CHW,
        
        /// <remarks/>
        CLF,
        
        /// <remarks/>
        CLP,
        
        /// <remarks/>
        CNY,
        
        /// <remarks/>
        COP,
        
        /// <remarks/>
        COU,
        
        /// <remarks/>
        CRC,
        
        /// <remarks/>
        CUP,
        
        /// <remarks/>
        CVE,
        
        /// <remarks/>
        CYP,
        
        /// <remarks/>
        CZK,
        
        /// <remarks/>
        DEM,
        
        /// <remarks/>
        DJF,
        
        /// <remarks/>
        DKK,
        
        /// <remarks/>
        DOP,
        
        /// <remarks/>
        DZD,
        
        /// <remarks/>
        EEK,
        
        /// <remarks/>
        EGP,
        
        /// <remarks/>
        ERN,
        
        /// <remarks/>
        ESP,
        
        /// <remarks/>
        ETB,
        
        /// <remarks/>
        FIM,
        
        /// <remarks/>
        FJD,
        
        /// <remarks/>
        FKP,
        
        /// <remarks/>
        FRF,
        
        /// <remarks/>
        GBP,
        
        /// <remarks/>
        GEL,
        
        /// <remarks/>
        GHS,
        
        /// <remarks/>
        GIP,
        
        /// <remarks/>
        GMD,
        
        /// <remarks/>
        GNF,
        
        /// <remarks/>
        GRD,
        
        /// <remarks/>
        GTQ,
        
        /// <remarks/>
        GYD,
        
        /// <remarks/>
        HKD,
        
        /// <remarks/>
        HNL,
        
        /// <remarks/>
        HRK,
        
        /// <remarks/>
        HTG,
        
        /// <remarks/>
        HUF,
        
        /// <remarks/>
        IDR,
        
        /// <remarks/>
        IEP,
        
        /// <remarks/>
        ILS,
        
        /// <remarks/>
        INR,
        
        /// <remarks/>
        IQD,
        
        /// <remarks/>
        IRR,
        
        /// <remarks/>
        ISK,
        
        /// <remarks/>
        ITL,
        
        /// <remarks/>
        JMD,
        
        /// <remarks/>
        JOD,
        
        /// <remarks/>
        JPY,
        
        /// <remarks/>
        KES,
        
        /// <remarks/>
        KGS,
        
        /// <remarks/>
        KHR,
        
        /// <remarks/>
        KMF,
        
        /// <remarks/>
        KPW,
        
        /// <remarks/>
        KRW,
        
        /// <remarks/>
        KWD,
        
        /// <remarks/>
        KYD,
        
        /// <remarks/>
        KZT,
        
        /// <remarks/>
        LAK,
        
        /// <remarks/>
        LBP,
        
        /// <remarks/>
        LKR,
        
        /// <remarks/>
        LRD,
        
        /// <remarks/>
        LSL,
        
        /// <remarks/>
        LTL,
        
        /// <remarks/>
        LUF,
        
        /// <remarks/>
        LVL,
        
        /// <remarks/>
        LYD,
        
        /// <remarks/>
        MAD,
        
        /// <remarks/>
        MCF,
        
        /// <remarks/>
        MDL,
        
        /// <remarks/>
        MGA,
        
        /// <remarks/>
        MKD,
        
        /// <remarks/>
        MMK,
        
        /// <remarks/>
        MNT,
        
        /// <remarks/>
        MOP,
        
        /// <remarks/>
        MRO,
        
        /// <remarks/>
        MTL,
        
        /// <remarks/>
        MUR,
        
        /// <remarks/>
        MVR,
        
        /// <remarks/>
        MWK,
        
        /// <remarks/>
        MXN,
        
        /// <remarks/>
        MXV,
        
        /// <remarks/>
        MYR,
        
        /// <remarks/>
        MZN,
        
        /// <remarks/>
        NAD,
        
        /// <remarks/>
        NGN,
        
        /// <remarks/>
        NIO,
        
        /// <remarks/>
        NLG,
        
        /// <remarks/>
        NOK,
        
        /// <remarks/>
        NPR,
        
        /// <remarks/>
        NZD,
        
        /// <remarks/>
        OMR,
        
        /// <remarks/>
        PAB,
        
        /// <remarks/>
        PEN,
        
        /// <remarks/>
        PGK,
        
        /// <remarks/>
        PHP,
        
        /// <remarks/>
        PKR,
        
        /// <remarks/>
        PLN,
        
        /// <remarks/>
        PTE,
        
        /// <remarks/>
        PYG,
        
        /// <remarks/>
        QAR,
        
        /// <remarks/>
        RON,
        
        /// <remarks/>
        RSD,
        
        /// <remarks/>
        RUB,
        
        /// <remarks/>
        RWF,
        
        /// <remarks/>
        SAR,
        
        /// <remarks/>
        SBD,
        
        /// <remarks/>
        SCR,
        
        /// <remarks/>
        SDG,
        
        /// <remarks/>
        SEK,
        
        /// <remarks/>
        SGD,
        
        /// <remarks/>
        SHP,
        
        /// <remarks/>
        SIT,
        
        /// <remarks/>
        SKK,
        
        /// <remarks/>
        SLL,
        
        /// <remarks/>
        SML,
        
        /// <remarks/>
        SOS,
        
        /// <remarks/>
        SRD,
        
        /// <remarks/>
        STD,
        
        /// <remarks/>
        SYP,
        
        /// <remarks/>
        SZL,
        
        /// <remarks/>
        THB,
        
        /// <remarks/>
        TJS,
        
        /// <remarks/>
        TMM,
        
        /// <remarks/>
        TND,
        
        /// <remarks/>
        TOP,
        
        /// <remarks/>
        TRY,
        
        /// <remarks/>
        TTD,
        
        /// <remarks/>
        TWD,
        
        /// <remarks/>
        TZS,
        
        /// <remarks/>
        UAH,
        
        /// <remarks/>
        UGX,
        
        /// <remarks/>
        USN,
        
        /// <remarks/>
        USS,
        
        /// <remarks/>
        UYU,
        
        /// <remarks/>
        UZS,
        
        /// <remarks/>
        VAL,
        
        /// <remarks/>
        VEF,
        
        /// <remarks/>
        VND,
        
        /// <remarks/>
        VUV,
        
        /// <remarks/>
        WST,
        
        /// <remarks/>
        XAF,
        
        /// <remarks/>
        XAG,
        
        /// <remarks/>
        XAU,
        
        /// <remarks/>
        XBA,
        
        /// <remarks/>
        XBB,
        
        /// <remarks/>
        XBC,
        
        /// <remarks/>
        XBD,
        
        /// <remarks/>
        XCD,
        
        /// <remarks/>
        XDR,
        
        /// <remarks/>
        XEU,
        
        /// <remarks/>
        XFU,
        
        /// <remarks/>
        XOF,
        
        /// <remarks/>
        XPD,
        
        /// <remarks/>
        XPF,
        
        /// <remarks/>
        XPT,
        
        /// <remarks/>
        XTS,
        
        /// <remarks/>
        XXX,
        
        /// <remarks/>
        YER,
        
        /// <remarks/>
        ZAR,
        
        /// <remarks/>
        ZMK,
        
        /// <remarks/>
        ZWD,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class priceTierStructure {
        
        private System.DateTime startTimeField;
        
        private priceTier[] priceTiersField;
        
        private priceBin[] priceBinsField;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public priceTier[] priceTiers {
            get {
                return this.priceTiersField;
            }
            set {
                this.priceTiersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public priceBin[] priceBins {
            get {
                return this.priceBinsField;
            }
            set {
                this.priceBinsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sampleRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(expirationTime))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class time {
        
        private timeUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public timeUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class sampleRate : time {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class expirationTime : time {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class configurationStatusItem {
        
        private meterID meterIDField;
        
        private string configurationStatusField;
        
        private string[] errorStringListField;
        
        private System.DateTime timeStampField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string configurationStatus {
            get {
                return this.configurationStatusField;
            }
            set {
                this.configurationStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("errorString", IsNullable=false)]
        public string[] errorStringList {
            get {
                return this.errorStringListField;
            }
            set {
                this.errorStringListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterConfigurationStatus {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string configurationGroupIDField;
        
        private configurationStatusItem[] configurationStatusListField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string configurationGroupID {
            get {
                return this.configurationGroupIDField;
            }
            set {
                this.configurationGroupIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configurationStatusItem[] configurationStatusList {
            get {
                return this.configurationStatusListField;
            }
            set {
                this.configurationStatusListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class extensions {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class extensionsItem {
        
        private string extNameField;
        
        private extValue extValueField;
        
        private extType extTypeField;
        
        private bool extTypeFieldSpecified;
        
        /// <remarks/>
        public string extName {
            get {
                return this.extNameField;
            }
            set {
                this.extNameField = value;
            }
        }
        
        /// <remarks/>
        public extValue extValue {
            get {
                return this.extValueField;
            }
            set {
                this.extValueField = value;
            }
        }
        
        /// <remarks/>
        public extType extType {
            get {
                return this.extTypeField;
            }
            set {
                this.extTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool extTypeSpecified {
            get {
                return this.extTypeFieldSpecified;
            }
            set {
                this.extTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class extValue {
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum extType {
        
        /// <remarks/>
        anySimpleType,
        
        /// <remarks/>
        anyType,
        
        /// <remarks/>
        anyURI,
        
        /// <remarks/>
        base64Binary,
        
        /// <remarks/>
        boolean,
        
        /// <remarks/>
        @byte,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        dateTime,
        
        /// <remarks/>
        @decimal,
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        duration,
        
        /// <remarks/>
        ENTITIES,
        
        /// <remarks/>
        ENTITY,
        
        /// <remarks/>
        @float,
        
        /// <remarks/>
        gDay,
        
        /// <remarks/>
        gMonth,
        
        /// <remarks/>
        gMonthDay,
        
        /// <remarks/>
        gYear,
        
        /// <remarks/>
        gYearMonth,
        
        /// <remarks/>
        hexBinary,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        IDREF,
        
        /// <remarks/>
        IDREFS,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        integer,
        
        /// <remarks/>
        language,
        
        /// <remarks/>
        @long,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        NCName,
        
        /// <remarks/>
        negativeInteger,
        
        /// <remarks/>
        NMTOKEN,
        
        /// <remarks/>
        NMTOKENS,
        
        /// <remarks/>
        nonNegativeInteger,
        
        /// <remarks/>
        nonPositiveInteger,
        
        /// <remarks/>
        normalizedString,
        
        /// <remarks/>
        NOTATION,
        
        /// <remarks/>
        positiveInteger,
        
        /// <remarks/>
        QName,
        
        /// <remarks/>
        @short,
        
        /// <remarks/>
        @string,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        token,
        
        /// <remarks/>
        unsignedByte,
        
        /// <remarks/>
        unsignedInt,
        
        /// <remarks/>
        unsignedLong,
        
        /// <remarks/>
        unsignedShort,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class remainingBalance {
        
        private money priorityBalanceField;
        
        private money sharedArrearsField;
        
        private money balanceField;
        
        private meterReading finalReadField;
        
        /// <remarks/>
        public money priorityBalance {
            get {
                return this.priorityBalanceField;
            }
            set {
                this.priorityBalanceField = value;
            }
        }
        
        /// <remarks/>
        public money sharedArrears {
            get {
                return this.sharedArrearsField;
            }
            set {
                this.sharedArrearsField = value;
            }
        }
        
        /// <remarks/>
        public money balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public meterReading finalRead {
            get {
                return this.finalReadField;
            }
            set {
                this.finalReadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterReading : mspObject {
        
        private meterID meterIDField;
        
        private string deviceIDField;
        
        private readingValue[] readingValuesField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public readingValue[] readingValues {
            get {
                return this.readingValuesField;
            }
            set {
                this.readingValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingValue {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private string valueField;
        
        private string ratePeriodField;
        
        private string readingTypeField;
        
        private string fieldNameField;
        
        private string nameField;
        
        private measurementPeriod measurementPeriodField;
        
        private bool measurementPeriodFieldSpecified;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private readingStatusCode readingStatusCodeField;
        
        private readingTypeCode readingTypeCodeField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string ratePeriod {
            get {
                return this.ratePeriodField;
            }
            set {
                this.ratePeriodField = value;
            }
        }
        
        /// <remarks/>
        public string readingType {
            get {
                return this.readingTypeField;
            }
            set {
                this.readingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public measurementPeriod measurementPeriod {
            get {
                return this.measurementPeriodField;
            }
            set {
                this.measurementPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measurementPeriodSpecified {
            get {
                return this.measurementPeriodFieldSpecified;
            }
            set {
                this.measurementPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public readingStatusCode readingStatusCode {
            get {
                return this.readingStatusCodeField;
            }
            set {
                this.readingStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public readingTypeCode readingTypeCode {
            get {
                return this.readingTypeCodeField;
            }
            set {
                this.readingTypeCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum measurementPeriod {
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Previous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Previous Season")]
        PreviousSeason,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingTypeCode {
        
        private string nameField;
        
        private string timeAttributeField;
        
        private string dataQualifierField;
        
        private string accumulationBehaviorField;
        
        private string flowDirectionField;
        
        private string uOMCategoryField;
        
        private string measurementCategoryField;
        
        private string phaseIndexField;
        
        private string unitsMultiplierField;
        
        private string displayableUOMField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string timeAttribute {
            get {
                return this.timeAttributeField;
            }
            set {
                this.timeAttributeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dataQualifier {
            get {
                return this.dataQualifierField;
            }
            set {
                this.dataQualifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string accumulationBehavior {
            get {
                return this.accumulationBehaviorField;
            }
            set {
                this.accumulationBehaviorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string flowDirection {
            get {
                return this.flowDirectionField;
            }
            set {
                this.flowDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UOMCategory {
            get {
                return this.uOMCategoryField;
            }
            set {
                this.uOMCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string measurementCategory {
            get {
                return this.measurementCategoryField;
            }
            set {
                this.measurementCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string phaseIndex {
            get {
                return this.phaseIndexField;
            }
            set {
                this.phaseIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string unitsMultiplier {
            get {
                return this.unitsMultiplierField;
            }
            set {
                this.unitsMultiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string displayableUOM {
            get {
                return this.displayableUOMField;
            }
            set {
                this.displayableUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZigBeeDisplayMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZigBeeCancelMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZigBeeCancelLoadControlEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(usage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(substationLoadControlStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerFactorManagementEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meters))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZigBeeLoadControlEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(endDeviceShipment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(maintenanceDataSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaAnalog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measurement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(accumulatedValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterConnectivity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(observationDefinition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(timesheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(employeeTimeRecord))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customerCall))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(materialManagementAssembly))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(laborCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(materialItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(historyLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(profileObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(voltageAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(blinkAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(demandResponseEventDeprecated))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadManagementEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customersAttachedToDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customersAffectedByOutage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(chargeableDeviceList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(chargeableDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(callBackList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inspection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterExchanges))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricMeterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterMeterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasMeterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneMeterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(otherMeterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmTransaction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmBalanceAdjustment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(rate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(connectDisconnectList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(connectDisconnectEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDStateChange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDState))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billingDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billingData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billingAccountLoad))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(billedUsage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(unassignment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(groupAssignment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(equipment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capability))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(vehicle))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(crew))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(resource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assignment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(project))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(crewActionEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageEventStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageReasonCodeList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assessment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(maintenanceOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(account))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspPerson))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(worker))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(backgroundGraphics))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(surgeArrestor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(feederObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(substation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerMonitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMultiGeometryObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(station))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(design))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(clearance))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(taskAggregation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(work))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(associatedMeters))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(otherService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspPolygonObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPolygonFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(parcel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspLineObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericLineFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spanGuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayBillingMessage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedWaterMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedPropaneMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedGasMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(testedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(otherMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(elbow))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(jumper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cut))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(@switch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspOverCurrentDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breaker))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspLoadGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(anchor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(module))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspPointObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspAssetHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assetHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermostat))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assessmentLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(load))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPointFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(secondaryJunctionBox))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(riser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(primaryCabinet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerSystemDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(pole))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(premise))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measurementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(guy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericAnnotationFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(equivalentSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(trafficLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(securityLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(streetLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inductionMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(synchronousMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spatialFeatureGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadManagementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaPoints))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(schedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterGroups))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TOUSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(configurationGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AVLPosition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(formattedBlockTemplate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterReadingC1219))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thresholdNotificationItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thresholdMonitoringItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(eventMonitoringItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(circuitElement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDurationEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(content))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(attachment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(message))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loggedOutageDetectionEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterReading))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ppmMeterExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AVLLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AVLState))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricalDefinition))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizerEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(synchronousMachineEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZsmImpedanceEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadMixEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloserEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuseEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breakerEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lineEnvironmentalAttributes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(materialAttributes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceDropEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(secondaryConductorEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lineConstructionEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(tapeShieldCableEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(concentricNeutralCableEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(conductorEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inductionMachineEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ROWAttributes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZigBeePublishPrice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBaseExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LMDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DRProgram))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspResultsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(shortCircuitAnalysisResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadFlowResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterEventList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(demandResponseEventStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(demandResponseEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(demandResponseParameters))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DRProgramEnrollment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HANCommission))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HANDeviceGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermostatConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermostatCurrentConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageReasonContainer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workTicket))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(workOrderSelection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(payableItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(tender))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspObject {
        
        private extensions extensionsField;
        
        private string commentsField;
        
        private extensionsItem[] extensionsListField;
        
        private string objectNameField;
        
        private IdentifiedObject identifiedObjectField;
        
        private string objectIDField;
        
        private action verbField;
        
        private string errorStringField;
        
        private string replaceIDField;
        
        private string utilityField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        public mspObject() {
            this.verbField = action.Change;
        }
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string objectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
        
        /// <remarks/>
        public IdentifiedObject identifiedObject {
            get {
                return this.identifiedObjectField;
            }
            set {
                this.identifiedObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(action.Change)]
        public action verb {
            get {
                return this.verbField;
            }
            set {
                this.verbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorString {
            get {
                return this.errorStringField;
            }
            set {
                this.errorStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string replaceID {
            get {
                return this.replaceIDField;
            }
            set {
                this.replaceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public abstract partial class IdentifiedObject {
        
        private string mRIDField;
        
        private string descriptionField;
        
        private Name[] namesField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string mRID {
            get {
                return this.mRIDField;
            }
            set {
                this.mRIDField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Name[] Names {
            get {
                return this.namesField;
            }
            set {
                this.namesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Name {
        
        private string nameStringField;
        
        private string descriptionField;
        
        private NameType nameTypeField;
        
        /// <remarks/>
        public string nameString {
            get {
                return this.nameStringField;
            }
            set {
                this.nameStringField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public NameType NameType {
            get {
                return this.nameTypeField;
            }
            set {
                this.nameTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class NameType {
        
        private string nameStringField;
        
        private string descriptionField;
        
        private NameTypeAuthority nameTypeAuthorityField;
        
        /// <remarks/>
        public string nameString {
            get {
                return this.nameStringField;
            }
            set {
                this.nameStringField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public NameTypeAuthority NameTypeAuthority {
            get {
                return this.nameTypeAuthorityField;
            }
            set {
                this.nameTypeAuthorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class NameTypeAuthority {
        
        private string nameStringField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string nameString {
            get {
                return this.nameStringField;
            }
            set {
                this.nameStringField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum action {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Change,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Replace,
        
        /// <remarks/>
        Link,
        
        /// <remarks/>
        Unlink,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ZigBeeDisplayMessage : mspObject {
        
        private uint messageIDField;
        
        private bool messageIDFieldSpecified;
        
        private byte[] messageControlField;
        
        private System.DateTime startTimeField;
        
        private integerDuration integerDurationField;
        
        private string messageField;
        
        /// <remarks/>
        public uint messageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool messageIDSpecified {
            get {
                return this.messageIDFieldSpecified;
            }
            set {
                this.messageIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")]
        public byte[] messageControl {
            get {
                return this.messageControlField;
            }
            set {
                this.messageControlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public integerDuration integerDuration {
            get {
                return this.integerDurationField;
            }
            set {
                this.integerDurationField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class integerDuration {
        
        private timeUnits timeUnitsField;
        
        private bool timeUnitsFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public timeUnits timeUnits {
            get {
                return this.timeUnitsField;
            }
            set {
                this.timeUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeUnitsSpecified {
            get {
                return this.timeUnitsFieldSpecified;
            }
            set {
                this.timeUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="integer")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ZigBeeCancelMessage : mspObject {
        
        private uint messageIDField;
        
        private bool messageIDFieldSpecified;
        
        private byte[] messageControlField;
        
        /// <remarks/>
        public uint messageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool messageIDSpecified {
            get {
                return this.messageIDFieldSpecified;
            }
            set {
                this.messageIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")]
        public byte[] messageControl {
            get {
                return this.messageControlField;
            }
            set {
                this.messageControlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ZigBeeCancelLoadControlEvent : mspObject {
        
        private string issuerEventIDField;
        
        private string deviceClassField;
        
        private string utilityEnrollmentGroupField;
        
        private byte[] cancelControlField;
        
        private System.DateTime effectiveTimeField;
        
        /// <remarks/>
        public string issuerEventID {
            get {
                return this.issuerEventIDField;
            }
            set {
                this.issuerEventIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string deviceClass {
            get {
                return this.deviceClassField;
            }
            set {
                this.deviceClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string utilityEnrollmentGroup {
            get {
                return this.utilityEnrollmentGroupField;
            }
            set {
                this.utilityEnrollmentGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")]
        public byte[] cancelControl {
            get {
                return this.cancelControlField;
            }
            set {
                this.cancelControlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime effectiveTime {
            get {
                return this.effectiveTimeField;
            }
            set {
                this.effectiveTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class usage : mspObject {
        
        private string serviceLocationIDField;
        
        private string customerIDField;
        
        private string gridLocationField;
        
        private string accountNumberField;
        
        private meterID meterIDField;
        
        private usageInstance[] usageListField;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public usageInstance[] usageList {
            get {
                return this.usageListField;
            }
            set {
                this.usageListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class usageInstance {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private string monthNumberField;
        
        private float valueField;
        
        private bool valueFieldSpecified;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        private string useDaysField;
        
        private qualityDescription1 qualityField;
        
        private bool qualityFieldSpecified;
        
        private unitPrefix1 unitPrefixField;
        
        private bool unitPrefixFieldSpecified;
        
        private string rateField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string monthNumber {
            get {
                return this.monthNumberField;
            }
            set {
                this.monthNumberField = value;
            }
        }
        
        /// <remarks/>
        public float value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string useDays {
            get {
                return this.useDaysField;
            }
            set {
                this.useDaysField = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription1 quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitPrefix1 unitPrefix {
            get {
                return this.unitPrefixField;
            }
            set {
                this.unitPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitPrefixSpecified {
            get {
                return this.unitPrefixFieldSpecified;
            }
            set {
                this.unitPrefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="qualityDescription", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum qualityDescription1 {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Measured,
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Estimated,
        
        /// <remarks/>
        Calculated,
        
        /// <remarks/>
        Initial,
        
        /// <remarks/>
        Last,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="unitPrefix", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum unitPrefix1 {
        
        /// <remarks/>
        Maximum,
        
        /// <remarks/>
        Minimum,
        
        /// <remarks/>
        Average,
        
        /// <remarks/>
        Instantaneous,
        
        /// <remarks/>
        Cumulative,
        
        /// <remarks/>
        Quantity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class substationLoadControlStatus : mspObject {
        
        private string substationNameField;
        
        private string statusField;
        
        private string modeField;
        
        private scadaAnalog scadaAnalogField;
        
        private controlItem[] controlledItemsField;
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public scadaAnalog scadaAnalog {
            get {
                return this.scadaAnalogField;
            }
            set {
                this.scadaAnalogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public controlItem[] controlledItems {
            get {
                return this.controlledItemsField;
            }
            set {
                this.controlledItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class scadaAnalog : mspObject {
        
        private value valueField;
        
        private unitPrefix1 unitPrefixField;
        
        private bool unitPrefixFieldSpecified;
        
        private qualityDescription1 qualityField;
        
        private bool qualityFieldSpecified;
        
        private analogCondition analogConditionField;
        
        private bool analogConditionFieldSpecified;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private AnalogValue[] scadaAnalogValuesField;
        
        private string unitIDField;
        
        private bool positiveFlowInField;
        
        private bool positiveFlowInFieldSpecified;
        
        private string analogLimitSetIDField;
        
        private string measurementTypeIDField;
        
        private objectRef powerSystemResourceIDField;
        
        private float maxValueField;
        
        private bool maxValueFieldSpecified;
        
        private float minValueField;
        
        private bool minValueFieldSpecified;
        
        private float nominalValueField;
        
        private bool nominalValueFieldSpecified;
        
        private string otherQualityCodeField;
        
        /// <remarks/>
        public value value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public unitPrefix1 unitPrefix {
            get {
                return this.unitPrefixField;
            }
            set {
                this.unitPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitPrefixSpecified {
            get {
                return this.unitPrefixFieldSpecified;
            }
            set {
                this.unitPrefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription1 quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public analogCondition analogCondition {
            get {
                return this.analogConditionField;
            }
            set {
                this.analogConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool analogConditionSpecified {
            get {
                return this.analogConditionFieldSpecified;
            }
            set {
                this.analogConditionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AnalogValue[] scadaAnalogValues {
            get {
                return this.scadaAnalogValuesField;
            }
            set {
                this.scadaAnalogValuesField = value;
            }
        }
        
        /// <remarks/>
        public string unitID {
            get {
                return this.unitIDField;
            }
            set {
                this.unitIDField = value;
            }
        }
        
        /// <remarks/>
        public bool positiveFlowIn {
            get {
                return this.positiveFlowInField;
            }
            set {
                this.positiveFlowInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positiveFlowInSpecified {
            get {
                return this.positiveFlowInFieldSpecified;
            }
            set {
                this.positiveFlowInFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string analogLimitSetID {
            get {
                return this.analogLimitSetIDField;
            }
            set {
                this.analogLimitSetIDField = value;
            }
        }
        
        /// <remarks/>
        public string measurementTypeID {
            get {
                return this.measurementTypeIDField;
            }
            set {
                this.measurementTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public objectRef powerSystemResourceID {
            get {
                return this.powerSystemResourceIDField;
            }
            set {
                this.powerSystemResourceIDField = value;
            }
        }
        
        /// <remarks/>
        public float maxValue {
            get {
                return this.maxValueField;
            }
            set {
                this.maxValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxValueSpecified {
            get {
                return this.maxValueFieldSpecified;
            }
            set {
                this.maxValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float minValue {
            get {
                return this.minValueField;
            }
            set {
                this.minValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool minValueSpecified {
            get {
                return this.minValueFieldSpecified;
            }
            set {
                this.minValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float nominalValue {
            get {
                return this.nominalValueField;
            }
            set {
                this.nominalValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nominalValueSpecified {
            get {
                return this.nominalValueFieldSpecified;
            }
            set {
                this.nominalValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string otherQualityCode {
            get {
                return this.otherQualityCodeField;
            }
            set {
                this.otherQualityCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class value {
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum analogCondition {
        
        /// <remarks/>
        L4,
        
        /// <remarks/>
        L3,
        
        /// <remarks/>
        L2,
        
        /// <remarks/>
        L1,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        H1,
        
        /// <remarks/>
        H2,
        
        /// <remarks/>
        H3,
        
        /// <remarks/>
        H4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum phaseCode {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        AB,
        
        /// <remarks/>
        AC,
        
        /// <remarks/>
        BC,
        
        /// <remarks/>
        ABC,
        
        /// <remarks/>
        AN,
        
        /// <remarks/>
        BN,
        
        /// <remarks/>
        CN,
        
        /// <remarks/>
        ABN,
        
        /// <remarks/>
        ACN,
        
        /// <remarks/>
        BCN,
        
        /// <remarks/>
        ABCN,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class AnalogValue : MeasurementValue {
        
        private string valueField;
        
        private string measurementValueSourceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string measurementValueSourceID {
            get {
                return this.measurementValueSourceIDField;
            }
            set {
                this.measurementValueSourceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringMeasurementValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccumulatorValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscreteValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AnalogValue))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class MeasurementValue : mspCIMObject {
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private PerCent sensorAccuracyField;
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PerCent sensorAccuracy {
            get {
                return this.sensorAccuracyField;
            }
            set {
                this.sensorAccuracyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class PerCent {
        
        private string unitsField;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConductingEquipment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegulatingCondEq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StaticVarCompensator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HydroGeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ThermalGeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Terminal))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TapChanger))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransformerWinding))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Connector))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BusbarSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentEquipment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentShunt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentBranch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Curve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReactiveCapabilityCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GrossToNetActivePowerCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegulatingControl))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrentLimit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActivePowerLimit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ControlAreaGeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ControlArea))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NonConformLoadGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConformLoadGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubLoadArea))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MeasurementValueSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MeasurementType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringMeasurement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Accumulator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Discrete))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConnectivityNode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Unit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseVoltage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PowerSystemResource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadArea))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VoltageLimit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquipmentContainer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Line))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VoltageLevel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentNetwork))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubGeographicalRegion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeographicalRegion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApparentPowerLimit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OperationalLimitSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MeasurementValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringMeasurementValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccumulatorValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiscreteValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AnalogValue))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DayType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BasicIntervalSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IrregularIntervalSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegularIntervalSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegulationSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SeasonDayTypeSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NonConformLoadSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConformLoadSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public abstract partial class mspCIMObject {
        
        private extensions1 extensionsField;
        
        private string commentsField;
        
        private extensionsItem1[] extensionsListField;
        
        private IdentifiedObject identifiedObjectField;
        
        private string objectIDField;
        
        private action1 verbField;
        
        private string errorStringField;
        
        private string replaceIDField;
        
        private string utilityField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        public mspCIMObject() {
            this.verbField = action1.Change;
        }
        
        /// <remarks/>
        public extensions1 extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem1[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public IdentifiedObject IdentifiedObject {
            get {
                return this.identifiedObjectField;
            }
            set {
                this.identifiedObjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(action1.Change)]
        public action1 verb {
            get {
                return this.verbField;
            }
            set {
                this.verbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorString {
            get {
                return this.errorStringField;
            }
            set {
                this.errorStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string replaceID {
            get {
                return this.replaceIDField;
            }
            set {
                this.replaceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="extensions", Namespace="cpsm_V4.1_Release")]
    public partial class extensions1 {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="extensionsItem", Namespace="cpsm_V4.1_Release")]
    public partial class extensionsItem1 {
        
        private string extNameField;
        
        private string extValueField;
        
        private extensionsItemExtType extTypeField;
        
        private bool extTypeFieldSpecified;
        
        /// <remarks/>
        public string extName {
            get {
                return this.extNameField;
            }
            set {
                this.extNameField = value;
            }
        }
        
        /// <remarks/>
        public string extValue {
            get {
                return this.extValueField;
            }
            set {
                this.extValueField = value;
            }
        }
        
        /// <remarks/>
        public extensionsItemExtType extType {
            get {
                return this.extTypeField;
            }
            set {
                this.extTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool extTypeSpecified {
            get {
                return this.extTypeFieldSpecified;
            }
            set {
                this.extTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="cpsm_V4.1_Release")]
    public enum extensionsItemExtType {
        
        /// <remarks/>
        anySimpleType,
        
        /// <remarks/>
        anyType,
        
        /// <remarks/>
        anyURI,
        
        /// <remarks/>
        base64Binary,
        
        /// <remarks/>
        boolean,
        
        /// <remarks/>
        @byte,
        
        /// <remarks/>
        date,
        
        /// <remarks/>
        dateTime,
        
        /// <remarks/>
        @decimal,
        
        /// <remarks/>
        @double,
        
        /// <remarks/>
        duration,
        
        /// <remarks/>
        ENTITIES,
        
        /// <remarks/>
        ENTITY,
        
        /// <remarks/>
        @float,
        
        /// <remarks/>
        gDay,
        
        /// <remarks/>
        gMonth,
        
        /// <remarks/>
        gMonthDay,
        
        /// <remarks/>
        gYear,
        
        /// <remarks/>
        gYearMonth,
        
        /// <remarks/>
        hexBinary,
        
        /// <remarks/>
        ID,
        
        /// <remarks/>
        IDREF,
        
        /// <remarks/>
        IDREFS,
        
        /// <remarks/>
        @int,
        
        /// <remarks/>
        integer,
        
        /// <remarks/>
        language,
        
        /// <remarks/>
        @long,
        
        /// <remarks/>
        Name,
        
        /// <remarks/>
        NCName,
        
        /// <remarks/>
        negativeInteger,
        
        /// <remarks/>
        NMTOKEN,
        
        /// <remarks/>
        NMTOKENS,
        
        /// <remarks/>
        nonNegativeInteger,
        
        /// <remarks/>
        nonPositiveInteger,
        
        /// <remarks/>
        normalizedString,
        
        /// <remarks/>
        NOTATION,
        
        /// <remarks/>
        positiveInteger,
        
        /// <remarks/>
        QName,
        
        /// <remarks/>
        @short,
        
        /// <remarks/>
        @string,
        
        /// <remarks/>
        time,
        
        /// <remarks/>
        token,
        
        /// <remarks/>
        unsignedByte,
        
        /// <remarks/>
        unsignedInt,
        
        /// <remarks/>
        unsignedLong,
        
        /// <remarks/>
        unsignedShort,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="action", Namespace="cpsm_V4.1_Release")]
    public enum action1 {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Change,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        Replace,
        
        /// <remarks/>
        Link,
        
        /// <remarks/>
        Unlink,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegulatingCondEq))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StaticVarCompensator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HydroGeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ThermalGeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Terminal))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TapChanger))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransformerWinding))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Connector))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BusbarSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentEquipment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentShunt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentBranch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public abstract partial class ConductingEquipment : mspCIMObject {
        
        private PointType gMLLocationField;
        
        private LineStringType gMLLineField;
        
        private ConnectivitySections connectivitySectionsField;
        
        private NodeFields[] connectivityNodesField;
        
        private phaseCode1 phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private bool normallyInServiceField;
        
        private bool normallyInServiceFieldSpecified;
        
        /// <remarks/>
        public PointType GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
        
        /// <remarks/>
        public LineStringType GMLLine {
            get {
                return this.gMLLineField;
            }
            set {
                this.gMLLineField = value;
            }
        }
        
        /// <remarks/>
        public ConnectivitySections connectivitySections {
            get {
                return this.connectivitySectionsField;
            }
            set {
                this.connectivitySectionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NodeFields[] connectivityNodes {
            get {
                return this.connectivityNodesField;
            }
            set {
                this.connectivityNodesField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode1 phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool normallyInService {
            get {
                return this.normallyInServiceField;
            }
            set {
                this.normallyInServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool normallyInServiceSpecified {
            get {
                return this.normallyInServiceFieldSpecified;
            }
            set {
                this.normallyInServiceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GMLLocation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class PointType : AbstractGeometryType {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class CoordType {
        
        private decimal xField;
        
        private decimal yField;
        
        private bool yFieldSpecified;
        
        private decimal zField;
        
        private bool zFieldSpecified;
        
        private float bulgeField;
        
        private bool bulgeFieldSpecified;
        
        /// <remarks/>
        public decimal X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public decimal Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YSpecified {
            get {
                return this.yFieldSpecified;
            }
            set {
                this.yFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ZSpecified {
            get {
                return this.zFieldSpecified;
            }
            set {
                this.zFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float Bulge {
            get {
                return this.bulgeField;
            }
            set {
                this.bulgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BulgeSpecified {
            get {
                return this.bulgeFieldSpecified;
            }
            set {
                this.bulgeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class CoordinatesType {
        
        private string decimalField;
        
        private string csField;
        
        private string tsField;
        
        private string valueField;
        
        public CoordinatesType() {
            this.decimalField = ".";
            this.csField = ",";
            this.tsField = " ";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(".")]
        public string @decimal {
            get {
                return this.decimalField;
            }
            set {
                this.decimalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(",")]
        public string cs {
            get {
                return this.csField;
            }
            set {
                this.csField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(" ")]
        public string ts {
            get {
                return this.tsField;
            }
            set {
                this.tsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractGeometryCollectionBaseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeometryCollectionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiLineStringType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPointType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPolygonType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinearRingType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GMLPolygon))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineStringType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GMLLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BoxType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GMLLocation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public abstract partial class AbstractGeometryType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GeometryCollectionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiLineStringType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPointType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPolygonType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public abstract partial class AbstractGeometryCollectionBaseType : AbstractGeometryType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiLineStringType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPointType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultiPolygonType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class GeometryCollectionType : AbstractGeometryCollectionBaseType {
        
        private GeometryAssociationType[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("geometryMember", typeof(GeometryAssociationType))]
        [System.Xml.Serialization.XmlElementAttribute("lineStringMember", typeof(LineStringMemberType))]
        [System.Xml.Serialization.XmlElementAttribute("pointMember", typeof(PointMemberType))]
        [System.Xml.Serialization.XmlElementAttribute("polygonMember", typeof(PolygonMemberType))]
        public GeometryAssociationType[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PointMemberType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinearRingMemberType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PolygonMemberType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LineStringMemberType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class GeometryAssociationType {
        
        private AbstractGeometryType itemField;
        
        private string typeField;
        
        private string hrefField;
        
        private string roleField;
        
        private string arcroleField;
        
        private string titleField;
        
        private GeometryAssociationTypeShow showField;
        
        private bool showFieldSpecified;
        
        private GeometryAssociationTypeActuate actuateField;
        
        private bool actuateFieldSpecified;
        
        private string remoteSchemaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LineString", typeof(LineStringType))]
        [System.Xml.Serialization.XmlElementAttribute("LinearRing", typeof(LinearRingType))]
        [System.Xml.Serialization.XmlElementAttribute("MultiGeometry", typeof(GeometryCollectionType))]
        [System.Xml.Serialization.XmlElementAttribute("MultiLineString", typeof(MultiLineStringType))]
        [System.Xml.Serialization.XmlElementAttribute("MultiPoint", typeof(MultiPointType))]
        [System.Xml.Serialization.XmlElementAttribute("MultiPolygon", typeof(MultiPolygonType))]
        [System.Xml.Serialization.XmlElementAttribute("Point", typeof(PointType))]
        [System.Xml.Serialization.XmlElementAttribute("Polygon", typeof(PolygonType))]
        public AbstractGeometryType Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink")]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string href {
            get {
                return this.hrefField;
            }
            set {
                this.hrefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string arcrole {
            get {
                return this.arcroleField;
            }
            set {
                this.arcroleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink")]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink")]
        public GeometryAssociationTypeShow show {
            get {
                return this.showField;
            }
            set {
                this.showField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool showSpecified {
            get {
                return this.showFieldSpecified;
            }
            set {
                this.showFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/1999/xlink")]
        public GeometryAssociationTypeActuate actuate {
            get {
                return this.actuateField;
            }
            set {
                this.actuateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actuateSpecified {
            get {
                return this.actuateFieldSpecified;
            }
            set {
                this.actuateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, DataType="anyURI")]
        public string remoteSchema {
            get {
                return this.remoteSchemaField;
            }
            set {
                this.remoteSchemaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GMLLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class LineStringType : AbstractGeometryType {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class GMLLine : LineStringType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class LinearRingType : AbstractGeometryType {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class MultiLineStringType : GeometryCollectionType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class MultiPointType : GeometryCollectionType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class MultiPolygonType : GeometryCollectionType {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GMLPolygon))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class PolygonType : AbstractGeometryType {
        
        private LinearRingType outerBoundaryIsField;
        
        private LinearRingType[] innerBoundaryIsField;
        
        /// <remarks/>
        public LinearRingType outerBoundaryIs {
            get {
                return this.outerBoundaryIsField;
            }
            set {
                this.outerBoundaryIsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("innerBoundaryIs")]
        public LinearRingType[] innerBoundaryIs {
            get {
                return this.innerBoundaryIsField;
            }
            set {
                this.innerBoundaryIsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class GMLPolygon : PolygonType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/1999/xlink")]
    public enum GeometryAssociationTypeShow {
        
        /// <remarks/>
        @new,
        
        /// <remarks/>
        replace,
        
        /// <remarks/>
        embed,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        none,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.w3.org/1999/xlink")]
    public enum GeometryAssociationTypeActuate {
        
        /// <remarks/>
        onLoad,
        
        /// <remarks/>
        onRequest,
        
        /// <remarks/>
        other,
        
        /// <remarks/>
        none,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class PointMemberType : GeometryAssociationType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class LinearRingMemberType : GeometryAssociationType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class PolygonMemberType : GeometryAssociationType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class LineStringMemberType : GeometryAssociationType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="gml_V4.1_Release")]
    public partial class BoxType : AbstractGeometryType {
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coord", typeof(CoordType))]
        [System.Xml.Serialization.XmlElementAttribute("coordinates", typeof(CoordinatesType))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class GMLLocation : PointType {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ConnectivitySections {
        
        private string sectionIDField;
        
        private objectRef1[] parentSectionIDField;
        
        /// <remarks/>
        public string sectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID")]
        public objectRef1[] parentSectionID {
            get {
                return this.parentSectionIDField;
            }
            set {
                this.parentSectionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="objectRef", Namespace="cpsm_V4.1_Release")]
    public partial class objectRef1 {
        
        private string nameField;
        
        private System.Xml.XmlQualifiedName nounField;
        
        private string objectIDField;
        
        private string utilityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName noun {
            get {
                return this.nounField;
            }
            set {
                this.nounField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class NodeFields {
        
        private nodeIdentifier connectivityNodeIDField;
        
        private string substationIDField;
        
        private string[] measurementsField;
        
        /// <remarks/>
        public nodeIdentifier connectivityNodeID {
            get {
                return this.connectivityNodeIDField;
            }
            set {
                this.connectivityNodeIDField = value;
            }
        }
        
        /// <remarks/>
        public string substationID {
            get {
                return this.substationIDField;
            }
            set {
                this.substationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("measurementID", IsNullable=false)]
        public string[] measurements {
            get {
                return this.measurementsField;
            }
            set {
                this.measurementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class nodeIdentifier {
        
        private string nameField;
        
        private string objectIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="phaseCode", Namespace="cpsm_V4.1_Release")]
    public enum phaseCode1 {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        AB,
        
        /// <remarks/>
        AC,
        
        /// <remarks/>
        BC,
        
        /// <remarks/>
        ABC,
        
        /// <remarks/>
        AN,
        
        /// <remarks/>
        BN,
        
        /// <remarks/>
        CN,
        
        /// <remarks/>
        ABN,
        
        /// <remarks/>
        ACN,
        
        /// <remarks/>
        BCN,
        
        /// <remarks/>
        ABCN,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StaticVarCompensator))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public abstract partial class RegulatingCondEq : ConductingEquipment {
        
        private objectRef1 equipmentContainerIDField;
        
        private string regulatingControlIDField;
        
        /// <remarks/>
        public objectRef1 equipmentContainerID {
            get {
                return this.equipmentContainerIDField;
            }
            set {
                this.equipmentContainerIDField = value;
            }
        }
        
        /// <remarks/>
        public string regulatingControlID {
            get {
                return this.regulatingControlIDField;
            }
            set {
                this.regulatingControlIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class StaticVarCompensator : RegulatingCondEq {
        
        private reactivePower1 capacitiveRatingField;
        
        private reactivePower1 inductiveRatingField;
        
        private StaticVarCompensatorSVCControlMode sVCControlModeField;
        
        private bool sVCControlModeFieldSpecified;
        
        private StaticVarCompensatorSlope slopeField;
        
        private voltage1 voltageSetPointField;
        
        /// <remarks/>
        public reactivePower1 capacitiveRating {
            get {
                return this.capacitiveRatingField;
            }
            set {
                this.capacitiveRatingField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower1 inductiveRating {
            get {
                return this.inductiveRatingField;
            }
            set {
                this.inductiveRatingField = value;
            }
        }
        
        /// <remarks/>
        public StaticVarCompensatorSVCControlMode sVCControlMode {
            get {
                return this.sVCControlModeField;
            }
            set {
                this.sVCControlModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sVCControlModeSpecified {
            get {
                return this.sVCControlModeFieldSpecified;
            }
            set {
                this.sVCControlModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public StaticVarCompensatorSlope slope {
            get {
                return this.slopeField;
            }
            set {
                this.slopeField = value;
            }
        }
        
        /// <remarks/>
        public voltage1 voltageSetPoint {
            get {
                return this.voltageSetPointField;
            }
            set {
                this.voltageSetPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="reactivePower", Namespace="cpsm_V4.1_Release")]
    public partial class reactivePower1 {
        
        private reactivePowerUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public reactivePowerUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="reactivePowerUnits", Namespace="cpsm_V4.1_Release")]
    public enum reactivePowerUnits1 {
        
        /// <remarks/>
        mVAr,
        
        /// <remarks/>
        VAr,
        
        /// <remarks/>
        kVAr,
        
        /// <remarks/>
        MVAr,
        
        /// <remarks/>
        GVAr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="cpsm_V4.1_Release")]
    public enum StaticVarCompensatorSVCControlMode {
        
        /// <remarks/>
        ReactivePower,
        
        /// <remarks/>
        Voltage,
        
        /// <remarks/>
        Off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="cpsm_V4.1_Release")]
    public partial class StaticVarCompensatorSlope {
        
        private StaticVarCompensatorSlopeUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public StaticVarCompensatorSlopeUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="cpsm_V4.1_Release")]
    public enum StaticVarCompensatorSlopeUnits {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kV/MVAr")]
        kVMVAr,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="voltage", Namespace="cpsm_V4.1_Release")]
    public partial class voltage1 {
        
        private voltageUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public voltageUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="voltageUnits", Namespace="cpsm_V4.1_Release")]
    public enum voltageUnits1 {
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        kV,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        mV,
        
        /// <remarks/>
        microV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HydroGeneratingUnit))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ThermalGeneratingUnit))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class GeneratingUnit : ConductingEquipment {
        
        private objectRef1 equipmentContainerIDField;
        
        private GrossToNetActivePowerCurve grossToNetActivePowerCurveField;
        
        private ReactiveCapabilityCurve reactiveCapabilityCurveField;
        
        private float efficiencyField;
        
        private bool efficiencyFieldSpecified;
        
        private activePower initialPField;
        
        private float longPFField;
        
        private bool longPFFieldSpecified;
        
        private activePower maxOperatingPField;
        
        private activePower minOperatingPField;
        
        private float normalPFField;
        
        private bool normalPFFieldSpecified;
        
        private GeneratorControlSource genControlSourceField;
        
        private bool genControlSourceFieldSpecified;
        
        private activePower ratedGrossMaxPField;
        
        private activePower ratedGrossMinPField;
        
        private activePower ratedNetMaxPField;
        
        private float shortPFField;
        
        private bool shortPFFieldSpecified;
        
        /// <remarks/>
        public objectRef1 equipmentContainerID {
            get {
                return this.equipmentContainerIDField;
            }
            set {
                this.equipmentContainerIDField = value;
            }
        }
        
        /// <remarks/>
        public GrossToNetActivePowerCurve GrossToNetActivePowerCurve {
            get {
                return this.grossToNetActivePowerCurveField;
            }
            set {
                this.grossToNetActivePowerCurveField = value;
            }
        }
        
        /// <remarks/>
        public ReactiveCapabilityCurve ReactiveCapabilityCurve {
            get {
                return this.reactiveCapabilityCurveField;
            }
            set {
                this.reactiveCapabilityCurveField = value;
            }
        }
        
        /// <remarks/>
        public float efficiency {
            get {
                return this.efficiencyField;
            }
            set {
                this.efficiencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool efficiencySpecified {
            get {
                return this.efficiencyFieldSpecified;
            }
            set {
                this.efficiencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public activePower initialP {
            get {
                return this.initialPField;
            }
            set {
                this.initialPField = value;
            }
        }
        
        /// <remarks/>
        public float longPF {
            get {
                return this.longPFField;
            }
            set {
                this.longPFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longPFSpecified {
            get {
                return this.longPFFieldSpecified;
            }
            set {
                this.longPFFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public activePower maxOperatingP {
            get {
                return this.maxOperatingPField;
            }
            set {
                this.maxOperatingPField = value;
            }
        }
        
        /// <remarks/>
        public activePower minOperatingP {
            get {
                return this.minOperatingPField;
            }
            set {
                this.minOperatingPField = value;
            }
        }
        
        /// <remarks/>
        public float normalPF {
            get {
                return this.normalPFField;
            }
            set {
                this.normalPFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool normalPFSpecified {
            get {
                return this.normalPFFieldSpecified;
            }
            set {
                this.normalPFFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GeneratorControlSource genControlSource {
            get {
                return this.genControlSourceField;
            }
            set {
                this.genControlSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool genControlSourceSpecified {
            get {
                return this.genControlSourceFieldSpecified;
            }
            set {
                this.genControlSourceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public activePower ratedGrossMaxP {
            get {
                return this.ratedGrossMaxPField;
            }
            set {
                this.ratedGrossMaxPField = value;
            }
        }
        
        /// <remarks/>
        public activePower ratedGrossMinP {
            get {
                return this.ratedGrossMinPField;
            }
            set {
                this.ratedGrossMinPField = value;
            }
        }
        
        /// <remarks/>
        public activePower ratedNetMaxP {
            get {
                return this.ratedNetMaxPField;
            }
            set {
                this.ratedNetMaxPField = value;
            }
        }
        
        /// <remarks/>
        public float shortPF {
            get {
                return this.shortPFField;
            }
            set {
                this.shortPFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shortPFSpecified {
            get {
                return this.shortPFFieldSpecified;
            }
            set {
                this.shortPFFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class GrossToNetActivePowerCurve : Curve {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReactiveCapabilityCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GrossToNetActivePowerCurve))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Curve : mspCIMObject {
        
        private CurveStyle curveStyleField;
        
        private bool curveStyleFieldSpecified;
        
        private string xUnitField;
        
        private string y1UnitField;
        
        private string y2UnitField;
        
        private CurveData[] dataPointsField;
        
        /// <remarks/>
        public CurveStyle curveStyle {
            get {
                return this.curveStyleField;
            }
            set {
                this.curveStyleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool curveStyleSpecified {
            get {
                return this.curveStyleFieldSpecified;
            }
            set {
                this.curveStyleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string xUnit {
            get {
                return this.xUnitField;
            }
            set {
                this.xUnitField = value;
            }
        }
        
        /// <remarks/>
        public string y1Unit {
            get {
                return this.y1UnitField;
            }
            set {
                this.y1UnitField = value;
            }
        }
        
        /// <remarks/>
        public string y2Unit {
            get {
                return this.y2UnitField;
            }
            set {
                this.y2UnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("curveData", IsNullable=false)]
        public CurveData[] dataPoints {
            get {
                return this.dataPointsField;
            }
            set {
                this.dataPointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum CurveStyle {
        
        /// <remarks/>
        constantYValue,
        
        /// <remarks/>
        straightLineYValues,
        
        /// <remarks/>
        rampYValues,
        
        /// <remarks/>
        formula,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class CurveData {
        
        private float xvalueField;
        
        private bool xvalueFieldSpecified;
        
        private float y1valueField;
        
        private bool y1valueFieldSpecified;
        
        private float y2valueField;
        
        private bool y2valueFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public float xvalue {
            get {
                return this.xvalueField;
            }
            set {
                this.xvalueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xvalueSpecified {
            get {
                return this.xvalueFieldSpecified;
            }
            set {
                this.xvalueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float y1value {
            get {
                return this.y1valueField;
            }
            set {
                this.y1valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool y1valueSpecified {
            get {
                return this.y1valueFieldSpecified;
            }
            set {
                this.y1valueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float y2value {
            get {
                return this.y2valueField;
            }
            set {
                this.y2valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool y2valueSpecified {
            get {
                return this.y2valueFieldSpecified;
            }
            set {
                this.y2valueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ReactiveCapabilityCurve : Curve {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class activePower {
        
        private realPowerUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public realPowerUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="realPowerUnits", Namespace="cpsm_V4.1_Release")]
    public enum realPowerUnits1 {
        
        /// <remarks/>
        mW,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        MW,
        
        /// <remarks/>
        GW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum GeneratorControlSource {
        
        /// <remarks/>
        Unavailable,
        
        /// <remarks/>
        offAGC,
        
        /// <remarks/>
        onAGC,
        
        /// <remarks/>
        PlantControl,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class HydroGeneratingUnit : GeneratingUnit {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ThermalGeneratingUnit : GeneratingUnit {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Terminal : ConductingEquipment {
        
        private string[] measurementsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("measurementID", IsNullable=false)]
        public string[] measurements {
            get {
                return this.measurementsField;
            }
            set {
                this.measurementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class TapChanger : ConductingEquipment {
        
        private RegulatingControl regulatingControlField;
        
        private voltage1 voltageBandwidthField;
        
        private string numberOfStepsField;
        
        private double ptRatioField;
        
        private bool ptRatioFieldSpecified;
        
        private current1 ctRatingField;
        
        private current1 ampacityField;
        
        private Seconds initialDelayField;
        
        private Seconds subsequentDelayField;
        
        private TapChangerNativeAttributes nativeAttributesField;
        
        private string terminalIDField;
        
        /// <remarks/>
        public RegulatingControl regulatingControl {
            get {
                return this.regulatingControlField;
            }
            set {
                this.regulatingControlField = value;
            }
        }
        
        /// <remarks/>
        public voltage1 voltageBandwidth {
            get {
                return this.voltageBandwidthField;
            }
            set {
                this.voltageBandwidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfSteps {
            get {
                return this.numberOfStepsField;
            }
            set {
                this.numberOfStepsField = value;
            }
        }
        
        /// <remarks/>
        public double ptRatio {
            get {
                return this.ptRatioField;
            }
            set {
                this.ptRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ptRatioSpecified {
            get {
                return this.ptRatioFieldSpecified;
            }
            set {
                this.ptRatioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public current1 ctRating {
            get {
                return this.ctRatingField;
            }
            set {
                this.ctRatingField = value;
            }
        }
        
        /// <remarks/>
        public current1 ampacity {
            get {
                return this.ampacityField;
            }
            set {
                this.ampacityField = value;
            }
        }
        
        /// <remarks/>
        public Seconds initialDelay {
            get {
                return this.initialDelayField;
            }
            set {
                this.initialDelayField = value;
            }
        }
        
        /// <remarks/>
        public Seconds subsequentDelay {
            get {
                return this.subsequentDelayField;
            }
            set {
                this.subsequentDelayField = value;
            }
        }
        
        /// <remarks/>
        public TapChangerNativeAttributes nativeAttributes {
            get {
                return this.nativeAttributesField;
            }
            set {
                this.nativeAttributesField = value;
            }
        }
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class RegulatingControl : mspCIMObject {
        
        private string terminalIDField;
        
        private RegulationSchedule regulationScheduleField;
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public RegulationSchedule regulationSchedule {
            get {
                return this.regulationScheduleField;
            }
            set {
                this.regulationScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class RegulationSchedule : RegularIntervalSchedule {
        
        private bool lineDropCompensationField;
        
        private bool lineDropCompensationFieldSpecified;
        
        private resistance1 lineDropRField;
        
        private reactance lineDropXField;
        
        /// <remarks/>
        public bool lineDropCompensation {
            get {
                return this.lineDropCompensationField;
            }
            set {
                this.lineDropCompensationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineDropCompensationSpecified {
            get {
                return this.lineDropCompensationFieldSpecified;
            }
            set {
                this.lineDropCompensationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public resistance1 lineDropR {
            get {
                return this.lineDropRField;
            }
            set {
                this.lineDropRField = value;
            }
        }
        
        /// <remarks/>
        public reactance lineDropX {
            get {
                return this.lineDropXField;
            }
            set {
                this.lineDropXField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="resistance", Namespace="cpsm_V4.1_Release")]
    public partial class resistance1 {
        
        private zUnit unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public zUnit units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum zUnit {
        
        /// <remarks/>
        Ohms,
        
        /// <remarks/>
        Percent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Total,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class reactance {
        
        private zUnit unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public zUnit units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegulationSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SeasonDayTypeSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NonConformLoadSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConformLoadSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class RegularIntervalSchedule : BasicIntervalSchedule {
        
        private Seconds timeStepField;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private RegularTimePoint[] timePointsField;
        
        /// <remarks/>
        public Seconds timeStep {
            get {
                return this.timeStepField;
            }
            set {
                this.timeStepField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("timePoint", IsNullable=false)]
        public RegularTimePoint[] timePoints {
            get {
                return this.timePointsField;
            }
            set {
                this.timePointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Seconds {
        
        private UnitSymbol unitField;
        
        private bool unitFieldSpecified;
        
        private UnitMultiplier multiplierField;
        
        private bool multiplierFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public UnitSymbol unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitSpecified {
            get {
                return this.unitFieldSpecified;
            }
            set {
                this.unitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public UnitMultiplier multiplier {
            get {
                return this.multiplierField;
            }
            set {
                this.multiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierSpecified {
            get {
                return this.multiplierFieldSpecified;
            }
            set {
                this.multiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum UnitSymbol {
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        VAr,
        
        /// <remarks/>
        VAh,
        
        /// <remarks/>
        Wh,
        
        /// <remarks/>
        VArh,
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        ohm,
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        H,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        s,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        h,
        
        /// <remarks/>
        deg,
        
        /// <remarks/>
        rad,
        
        /// <remarks/>
        J,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        S,
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        Hz,
        
        /// <remarks/>
        kg,
        
        /// <remarks/>
        Pa,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        m2,
        
        /// <remarks/>
        m3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("V/VAr")]
        VVAr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/Hz")]
        WHz,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("J/s")]
        Js,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("s-1")]
        s1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kg/J")]
        kgJ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("W/s")]
        Ws,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum UnitMultiplier {
        
        /// <remarks/>
        p,
        
        /// <remarks/>
        n,
        
        /// <remarks/>
        micro,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        c,
        
        /// <remarks/>
        d,
        
        /// <remarks/>
        k,
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        G,
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        none,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class RegularTimePoint {
        
        private string sequenceNumberField;
        
        private float value1Field;
        
        private bool value1FieldSpecified;
        
        private float value2Field;
        
        private bool value2FieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public float value1 {
            get {
                return this.value1Field;
            }
            set {
                this.value1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool value1Specified {
            get {
                return this.value1FieldSpecified;
            }
            set {
                this.value1FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool value2Specified {
            get {
                return this.value2FieldSpecified;
            }
            set {
                this.value2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IrregularIntervalSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegularIntervalSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadCurve))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegulationSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SeasonDayTypeSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NonConformLoadSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConformLoadSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class BasicIntervalSchedule : mspCIMObject {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private string value1UnitField;
        
        private string value2UnitField;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string value1Unit {
            get {
                return this.value1UnitField;
            }
            set {
                this.value1UnitField = value;
            }
        }
        
        /// <remarks/>
        public string value2Unit {
            get {
                return this.value2UnitField;
            }
            set {
                this.value2UnitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class IrregularIntervalSchedule : BasicIntervalSchedule {
        
        private IrregularTimePoint[] timePointsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public IrregularTimePoint[] TimePoints {
            get {
                return this.timePointsField;
            }
            set {
                this.timePointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class IrregularTimePoint {
        
        private Seconds timeField;
        
        private float value1Field;
        
        private bool value1FieldSpecified;
        
        private float value2Field;
        
        private bool value2FieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public Seconds time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public float value1 {
            get {
                return this.value1Field;
            }
            set {
                this.value1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool value1Specified {
            get {
                return this.value1FieldSpecified;
            }
            set {
                this.value1FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool value2Specified {
            get {
                return this.value2FieldSpecified;
            }
            set {
                this.value2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class LoadCurve : RegularIntervalSchedule {
        
        private string subLoadAreaIDField;
        
        private Season seasonField;
        
        /// <remarks/>
        public string subLoadAreaID {
            get {
                return this.subLoadAreaIDField;
            }
            set {
                this.subLoadAreaIDField = value;
            }
        }
        
        /// <remarks/>
        public Season season {
            get {
                return this.seasonField;
            }
            set {
                this.seasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Season {
        
        private SeasonName nameField;
        
        private bool nameFieldSpecified;
        
        private System.DateTime endDateField;
        
        private bool endDateFieldSpecified;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public SeasonName name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nameSpecified {
            get {
                return this.nameFieldSpecified;
            }
            set {
                this.nameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateSpecified {
            get {
                return this.endDateFieldSpecified;
            }
            set {
                this.endDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum SeasonName {
        
        /// <remarks/>
        winter,
        
        /// <remarks/>
        spring,
        
        /// <remarks/>
        summer,
        
        /// <remarks/>
        fall,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NonConformLoadSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConformLoadSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class SeasonDayTypeSchedule : RegularIntervalSchedule {
        
        private DayType dayTypeField;
        
        private Season seasonTypeField;
        
        /// <remarks/>
        public DayType dayType {
            get {
                return this.dayTypeField;
            }
            set {
                this.dayTypeField = value;
            }
        }
        
        /// <remarks/>
        public Season seasonType {
            get {
                return this.seasonTypeField;
            }
            set {
                this.seasonTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class DayType : mspCIMObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class NonConformLoadSchedule : SeasonDayTypeSchedule {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ConformLoadSchedule : SeasonDayTypeSchedule {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="current", Namespace="cpsm_V4.1_Release")]
    public partial class current1 {
        
        private currentUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public currentUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="currentUnits", Namespace="cpsm_V4.1_Release")]
    public enum currentUnits1 {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        mA,
        
        /// <remarks/>
        kA,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class TapChangerNativeAttributes {
        
        private string highStepField;
        
        private string lowStepField;
        
        private voltage1 neutralUField;
        
        private string neutralStepField;
        
        private string normalStepField;
        
        private angle stepPhaseShiftIncrementField;
        
        private PerCent stepVoltageIncrementField;
        
        private TapChangerKind typeField;
        
        private bool typeFieldSpecified;
        
        private TransformerControlMode tculControlModeField;
        
        private bool tculControlModeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string highStep {
            get {
                return this.highStepField;
            }
            set {
                this.highStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string lowStep {
            get {
                return this.lowStepField;
            }
            set {
                this.lowStepField = value;
            }
        }
        
        /// <remarks/>
        public voltage1 neutralU {
            get {
                return this.neutralUField;
            }
            set {
                this.neutralUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string neutralStep {
            get {
                return this.neutralStepField;
            }
            set {
                this.neutralStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string normalStep {
            get {
                return this.normalStepField;
            }
            set {
                this.normalStepField = value;
            }
        }
        
        /// <remarks/>
        public angle stepPhaseShiftIncrement {
            get {
                return this.stepPhaseShiftIncrementField;
            }
            set {
                this.stepPhaseShiftIncrementField = value;
            }
        }
        
        /// <remarks/>
        public PerCent stepVoltageIncrement {
            get {
                return this.stepVoltageIncrementField;
            }
            set {
                this.stepVoltageIncrementField = value;
            }
        }
        
        /// <remarks/>
        public TapChangerKind type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public TransformerControlMode tculControlMode {
            get {
                return this.tculControlModeField;
            }
            set {
                this.tculControlModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tculControlModeSpecified {
            get {
                return this.tculControlModeFieldSpecified;
            }
            set {
                this.tculControlModeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class angle {
        
        private angleUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public angleUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum angleUnits {
        
        /// <remarks/>
        Degrees,
        
        /// <remarks/>
        Minutes,
        
        /// <remarks/>
        Seconds,
        
        /// <remarks/>
        Radians,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum TapChangerKind {
        
        /// <remarks/>
        @fixed,
        
        /// <remarks/>
        voltageControl,
        
        /// <remarks/>
        phaseControl,
        
        /// <remarks/>
        voltageAndPhaseControl,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum TransformerControlMode {
        
        /// <remarks/>
        off,
        
        /// <remarks/>
        local,
        
        /// <remarks/>
        volt,
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        reactive,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class TransformerWinding : ConductingEquipment {
        
        private TapChanger[] tapChangersField;
        
        private string baseVoltageIDField;
        
        private WindingNativeAttributes windingNativeAttributesField;
        
        private string[] terminalListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TapChanger[] tapChangers {
            get {
                return this.tapChangersField;
            }
            set {
                this.tapChangersField = value;
            }
        }
        
        /// <remarks/>
        public string baseVoltageID {
            get {
                return this.baseVoltageIDField;
            }
            set {
                this.baseVoltageIDField = value;
            }
        }
        
        /// <remarks/>
        public WindingNativeAttributes windingNativeAttributes {
            get {
                return this.windingNativeAttributesField;
            }
            set {
                this.windingNativeAttributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("terminalID", IsNullable=false)]
        public string[] terminalList {
            get {
                return this.terminalListField;
            }
            set {
                this.terminalListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class WindingNativeAttributes {
        
        private voltage1 ratedUField;
        
        private apparentPower1 ratedSField;
        
        private WindingType windingTypeField;
        
        private bool windingTypeFieldSpecified;
        
        private susceptance bField;
        
        private resistance1 rField;
        
        private reactance xField;
        
        /// <remarks/>
        public voltage1 ratedU {
            get {
                return this.ratedUField;
            }
            set {
                this.ratedUField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower1 ratedS {
            get {
                return this.ratedSField;
            }
            set {
                this.ratedSField = value;
            }
        }
        
        /// <remarks/>
        public WindingType windingType {
            get {
                return this.windingTypeField;
            }
            set {
                this.windingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool windingTypeSpecified {
            get {
                return this.windingTypeFieldSpecified;
            }
            set {
                this.windingTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public susceptance b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public resistance1 r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="apparentPower", Namespace="cpsm_V4.1_Release")]
    public partial class apparentPower1 {
        
        private apparentPowerUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public apparentPowerUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="apparentPowerUnits", Namespace="cpsm_V4.1_Release")]
    public enum apparentPowerUnits1 {
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        kVA,
        
        /// <remarks/>
        MVA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum WindingType {
        
        /// <remarks/>
        Primary,
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        Tertiary,
        
        /// <remarks/>
        Quaternary,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class susceptance {
        
        private sUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum sUnits {
        
        /// <remarks/>
        microS,
        
        /// <remarks/>
        mS,
        
        /// <remarks/>
        S,
        
        /// <remarks/>
        kS,
        
        /// <remarks/>
        MS,
        
        /// <remarks/>
        Siemens,
        
        /// <remarks/>
        mho,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BusbarSection))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Connector : ConductingEquipment {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class BusbarSection : Connector {
        
        private string busbarTypeField;
        
        private objectRef1 eqipmentContainerIDField;
        
        private string bayIDField;
        
        /// <remarks/>
        public string busbarType {
            get {
                return this.busbarTypeField;
            }
            set {
                this.busbarTypeField = value;
            }
        }
        
        /// <remarks/>
        public objectRef1 eqipmentContainerID {
            get {
                return this.eqipmentContainerIDField;
            }
            set {
                this.eqipmentContainerIDField = value;
            }
        }
        
        /// <remarks/>
        public string bayID {
            get {
                return this.bayIDField;
            }
            set {
                this.bayIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentShunt))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EquivalentBranch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public abstract partial class EquivalentEquipment : ConductingEquipment {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class EquivalentShunt : EquivalentEquipment {
        
        private conductance gField;
        
        private susceptance bField;
        
        private string equivalentNetworkIDField;
        
        /// <remarks/>
        public conductance g {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
            }
        }
        
        /// <remarks/>
        public susceptance b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public string equivalentNetworkID {
            get {
                return this.equivalentNetworkIDField;
            }
            set {
                this.equivalentNetworkIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class conductance {
        
        private sUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class EquivalentBranch : EquivalentEquipment {
        
        private resistance1 rField;
        
        private reactance xField;
        
        private string equivalentNetworkIDField;
        
        /// <remarks/>
        public resistance1 r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public string equivalentNetworkID {
            get {
                return this.equivalentNetworkIDField;
            }
            set {
                this.equivalentNetworkIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class CurrentLimit : mspCIMObject {
        
        private activePower valueField;
        
        private string typeField;
        
        private string operationalLimitSetIDField;
        
        /// <remarks/>
        public activePower value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string operationalLimitSetID {
            get {
                return this.operationalLimitSetIDField;
            }
            set {
                this.operationalLimitSetIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ActivePowerLimit : mspCIMObject {
        
        private activePower valueField;
        
        private string typeField;
        
        private string operationalLimitSetIDField;
        
        /// <remarks/>
        public activePower value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string operationalLimitSetID {
            get {
                return this.operationalLimitSetIDField;
            }
            set {
                this.operationalLimitSetIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ControlAreaGeneratingUnit : mspCIMObject {
        
        private string controlAreaIDField;
        
        private string generatingUnitIDField;
        
        /// <remarks/>
        public string controlAreaID {
            get {
                return this.controlAreaIDField;
            }
            set {
                this.controlAreaIDField = value;
            }
        }
        
        /// <remarks/>
        public string generatingUnitID {
            get {
                return this.generatingUnitIDField;
            }
            set {
                this.generatingUnitIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ControlArea : mspCIMObject {
        
        private activePower netInterchangeField;
        
        private ControlAreaTieFlow tieFlowField;
        
        private ControlAreaType typeField;
        
        private bool typeFieldSpecified;
        
        private string energyAreaIDField;
        
        /// <remarks/>
        public activePower netInterchange {
            get {
                return this.netInterchangeField;
            }
            set {
                this.netInterchangeField = value;
            }
        }
        
        /// <remarks/>
        public ControlAreaTieFlow tieFlow {
            get {
                return this.tieFlowField;
            }
            set {
                this.tieFlowField = value;
            }
        }
        
        /// <remarks/>
        public ControlAreaType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string EnergyAreaID {
            get {
                return this.energyAreaIDField;
            }
            set {
                this.energyAreaIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="cpsm_V4.1_Release")]
    public partial class ControlAreaTieFlow {
        
        private bool positiveFlowInField;
        
        private bool positiveFlowInFieldSpecified;
        
        private string terminalIDField;
        
        /// <remarks/>
        public bool positiveFlowIn {
            get {
                return this.positiveFlowInField;
            }
            set {
                this.positiveFlowInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool positiveFlowInSpecified {
            get {
                return this.positiveFlowInFieldSpecified;
            }
            set {
                this.positiveFlowInFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="cpsm_V4.1_Release")]
    public enum ControlAreaType {
        
        /// <remarks/>
        AGC,
        
        /// <remarks/>
        Forecast,
        
        /// <remarks/>
        Interchange,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class NonConformLoadGroup : mspCIMObject {
        
        private string subLoadAreaIDField;
        
        private NonConformLoadSchedule nonConformLoadScheduleField;
        
        /// <remarks/>
        public string subLoadAreaID {
            get {
                return this.subLoadAreaIDField;
            }
            set {
                this.subLoadAreaIDField = value;
            }
        }
        
        /// <remarks/>
        public NonConformLoadSchedule nonConformLoadSchedule {
            get {
                return this.nonConformLoadScheduleField;
            }
            set {
                this.nonConformLoadScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ConformLoadGroup : mspCIMObject {
        
        private string subLoadAreaIDField;
        
        private ConformLoadSchedule conformLoadScheduleField;
        
        /// <remarks/>
        public string subLoadAreaID {
            get {
                return this.subLoadAreaIDField;
            }
            set {
                this.subLoadAreaIDField = value;
            }
        }
        
        /// <remarks/>
        public ConformLoadSchedule conformLoadSchedule {
            get {
                return this.conformLoadScheduleField;
            }
            set {
                this.conformLoadScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class SubLoadArea : mspCIMObject {
        
        private string loadAreaIDField;
        
        /// <remarks/>
        public string loadAreaID {
            get {
                return this.loadAreaIDField;
            }
            set {
                this.loadAreaIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class MeasurementValueSource : mspCIMObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class MeasurementType : mspCIMObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class StringMeasurement : mspCIMObject {
        
        private StringMeasurementValue stringMeasurementValueField;
        
        private string measurementTypeIDField;
        
        private string measurementValueSourceIDField;
        
        /// <remarks/>
        public StringMeasurementValue stringMeasurementValue {
            get {
                return this.stringMeasurementValueField;
            }
            set {
                this.stringMeasurementValueField = value;
            }
        }
        
        /// <remarks/>
        public string measurementTypeID {
            get {
                return this.measurementTypeIDField;
            }
            set {
                this.measurementTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string measurementValueSourceID {
            get {
                return this.measurementValueSourceIDField;
            }
            set {
                this.measurementValueSourceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class StringMeasurementValue : MeasurementValue {
        
        private string valueField;
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Accumulator : mspCIMObject {
        
        private string maxValueField;
        
        private AccumulatorValue[] accumulatorValuesField;
        
        private uom1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private string unitIDField;
        
        private qualityDescription qualityField;
        
        private bool qualityFieldSpecified;
        
        private AccumulatorTimeSpan timeSpanField;
        
        private phaseCode1 phaseField;
        
        private bool phaseFieldSpecified;
        
        private string harmonicField;
        
        private accountability quadrantField;
        
        private bool quadrantFieldSpecified;
        
        private string measurementTypeIDField;
        
        private string terminalIDField;
        
        private objectRef1 powerSystemResourceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string maxValue {
            get {
                return this.maxValueField;
            }
            set {
                this.maxValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AccumulatorValue[] accumulatorValues {
            get {
                return this.accumulatorValuesField;
            }
            set {
                this.accumulatorValuesField = value;
            }
        }
        
        /// <remarks/>
        public uom1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string unitID {
            get {
                return this.unitIDField;
            }
            set {
                this.unitIDField = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public AccumulatorTimeSpan timeSpan {
            get {
                return this.timeSpanField;
            }
            set {
                this.timeSpanField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode1 phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string harmonic {
            get {
                return this.harmonicField;
            }
            set {
                this.harmonicField = value;
            }
        }
        
        /// <remarks/>
        public accountability quadrant {
            get {
                return this.quadrantField;
            }
            set {
                this.quadrantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quadrantSpecified {
            get {
                return this.quadrantFieldSpecified;
            }
            set {
                this.quadrantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string measurementTypeID {
            get {
                return this.measurementTypeIDField;
            }
            set {
                this.measurementTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public objectRef1 powerSystemResourceID {
            get {
                return this.powerSystemResourceIDField;
            }
            set {
                this.powerSystemResourceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class AccumulatorValue : MeasurementValue {
        
        private string valueField;
        
        private string measurementValueSourceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string measurementValueSourceID {
            get {
                return this.measurementValueSourceIDField;
            }
            set {
                this.measurementValueSourceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="uom", Namespace="cpsm_V4.1_Release")]
    public enum uom1 {
        
        /// <remarks/>
        Wh,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        kWh,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        MWh,
        
        /// <remarks/>
        MW,
        
        /// <remarks/>
        GWh,
        
        /// <remarks/>
        GW,
        
        /// <remarks/>
        mWh,
        
        /// <remarks/>
        mW,
        
        /// <remarks/>
        microWh,
        
        /// <remarks/>
        microW,
        
        /// <remarks/>
        VARh,
        
        /// <remarks/>
        VAR,
        
        /// <remarks/>
        kVARh,
        
        /// <remarks/>
        kVAR,
        
        /// <remarks/>
        MVARh,
        
        /// <remarks/>
        MVAR,
        
        /// <remarks/>
        GVARh,
        
        /// <remarks/>
        GVAR,
        
        /// <remarks/>
        mVARh,
        
        /// <remarks/>
        mVAR,
        
        /// <remarks/>
        microVARh,
        
        /// <remarks/>
        microVAR,
        
        /// <remarks/>
        VAh,
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        kVAh,
        
        /// <remarks/>
        kVA,
        
        /// <remarks/>
        MVAh,
        
        /// <remarks/>
        MVA,
        
        /// <remarks/>
        GVAh,
        
        /// <remarks/>
        GVA,
        
        /// <remarks/>
        mVAh,
        
        /// <remarks/>
        mVA,
        
        /// <remarks/>
        microVAh,
        
        /// <remarks/>
        microVA,
        
        /// <remarks/>
        Qh,
        
        /// <remarks/>
        Q,
        
        /// <remarks/>
        kQh,
        
        /// <remarks/>
        kQ,
        
        /// <remarks/>
        MQh,
        
        /// <remarks/>
        MQ,
        
        /// <remarks/>
        GQh,
        
        /// <remarks/>
        GQ,
        
        /// <remarks/>
        mQh,
        
        /// <remarks/>
        mQ,
        
        /// <remarks/>
        microQh,
        
        /// <remarks/>
        microQ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("V RMS")]
        VRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kV RMS")]
        kVRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MV RMS")]
        MVRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mV RMS")]
        mVRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microV RMS")]
        microVRMS,
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        kV,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        mV,
        
        /// <remarks/>
        microV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Vsquared RMS")]
        VsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kVsquared RMS")]
        kVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MVsquared RMS")]
        MVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mVsquared RMS")]
        mVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microVsquared RMS")]
        microVsquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Amps RMS")]
        AmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kAmps RMS")]
        kAmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mamps RMS")]
        MampsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mAmps RMS")]
        mAmpsRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microAmps RMS")]
        microAmpsRMS,
        
        /// <remarks/>
        Amps,
        
        /// <remarks/>
        kAmps,
        
        /// <remarks/>
        Mamps,
        
        /// <remarks/>
        mAmps,
        
        /// <remarks/>
        microAmps,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Amps squared RMS")]
        AmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kAmps squared RMS")]
        kAmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mamps squared RMS")]
        MampssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mAmps squared RMS")]
        mAmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microAmps squared RMS")]
        microAmpssquaredRMS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("T.H.D. Voltage")]
        THDVoltage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("T.H.D. Current")]
        THDCurrent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Voltage phase angle")]
        Voltagephaseangle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Current phase angle")]
        Currentphaseangle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Power factor")]
        Powerfactor,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Date time")]
        Datetime,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Interval timer")]
        Intervaltimer,
        
        /// <remarks/>
        Frequency,
        
        /// <remarks/>
        Counter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sense input")]
        Senseinput,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of pulse")]
        Nbrofpulse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of sag")]
        Nbrofsag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of swells")]
        Nbrofswells,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of power outage")]
        Nbrofpoweroutage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of excursion low")]
        Nbrofexcursionlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of excursion high")]
        Nbrofexcursionhigh,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Normal voltage period")]
        Normalvoltageperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of voltage unbalance")]
        Nbrofvoltageunbalance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of V T.H.D. excess")]
        NbrofVTHDexcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of amps T.H.D. excess")]
        NbrofampsTHDexcess,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of demand resets")]
        Nbrofdemandresets,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of times programmed")]
        Nbroftimesprogrammed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Minutes on battery")]
        Minutesonbattery,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of inversion")]
        Nbrofinversion,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of removal")]
        Nbrofremoval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of reprogramming")]
        Nbrofreprogramming,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of power loss")]
        Nbrofpowerloss,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of reverse rotation")]
        Nbrofreverserotation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of physical tamper")]
        Nbrofphysicaltamper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of encoder tamper")]
        Nbrofencodertamper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nbr of watchdog")]
        Nbrofwatchdog,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters uncorrected")]
        cubicmetersuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters per Hr uncorrected")]
        cubicmetersperHruncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters corrected")]
        cubicmeterscorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meters per Hr corrected")]
        cubicmetersperHrcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet uncorrected")]
        cubicfeetuncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr uncorrected")]
        cubicfeetperHruncorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet corrected")]
        cubicfeetcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr corrected")]
        cubicfeetperHrcorrected,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg C")]
        degC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg F")]
        degF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("deg K")]
        degK,
        
        /// <remarks/>
        Joules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Joules per Hr")]
        JoulesperHr,
        
        /// <remarks/>
        kJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("kJoules per Hr")]
        kJoulesperHr,
        
        /// <remarks/>
        MJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("MJoules per Hr")]
        MJoulesperHr,
        
        /// <remarks/>
        mJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("mJoules per Hr")]
        mJoulesperHr,
        
        /// <remarks/>
        microJoules,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("microJoules per Hr")]
        microJoulesperHr,
        
        /// <remarks/>
        Therm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Therm per Hr")]
        ThermperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Static pascal")]
        Staticpascal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Differential pascal")]
        Differentialpascal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Static pound per square inch")]
        Staticpoundpersquareinch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Differential pound per square inch")]
        Differentialpoundpersquareinch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Gram square cm")]
        Gramsquarecm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Meter HG column")]
        MeterHGcolumn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inches HG column")]
        InchesHGcolumn,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inches H2O column")]
        InchesH2Ocolumn,
        
        /// <remarks/>
        Bar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("percent relative humidity")]
        percentrelativehumidity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM odorant")]
        PPModorant,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meter")]
        cubicmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic meter per Hr")]
        cubicmeterperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet")]
        cubicfeet,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("cubic feet per Hr")]
        cubicfeetperHr,
        
        /// <remarks/>
        ccf,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ccf per Hr")]
        ccfperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US gl")]
        USgl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("US gl per Hr")]
        USglperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IMP gl")]
        IMPgl,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IMP gl per Hr")]
        IMPglperHr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Acre ft")]
        Acreft,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM lead")]
        PPMlead,
        
        /// <remarks/>
        turbidity,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM chlorine")]
        PPMchlorine,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PH factor")]
        PHfactor,
        
        /// <remarks/>
        Corrosion,
        
        /// <remarks/>
        Ionization,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PPM SO2")]
        PPMSO2,
        
        /// <remarks/>
        liters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("pounds per square foot")]
        poundspersquarefoot,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("inches of water")]
        inchesofwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ft of water")]
        ftofwater,
        
        /// <remarks/>
        atmospheres,
        
        /// <remarks/>
        Dollar,
        
        /// <remarks/>
        inches,
        
        /// <remarks/>
        ft,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        dm,
        
        /// <remarks/>
        km,
        
        /// <remarks/>
        cm,
        
        /// <remarks/>
        mm,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("micro m")]
        microm,
        
        /// <remarks/>
        mph,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("feet per second")]
        feetpersecond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km per hour")]
        kmperhour,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km per second")]
        kmpersecond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m per second")]
        mpersecond,
        
        /// <remarks/>
        percent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum qualityDescription {
        
        /// <remarks/>
        Measured,
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Estimated,
        
        /// <remarks/>
        Calculated,
        
        /// <remarks/>
        Initial,
        
        /// <remarks/>
        Last,
        
        /// <remarks/>
        Failed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="cpsm_V4.1_Release")]
    public partial class AccumulatorTimeSpan {
        
        private System.DateTime startTimeField;
        
        private System.DateTime stopTimeField;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime stopTime {
            get {
                return this.stopTimeField;
            }
            set {
                this.stopTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum accountability {
        
        /// <remarks/>
        Q1,
        
        /// <remarks/>
        Q2,
        
        /// <remarks/>
        Q3,
        
        /// <remarks/>
        Q4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2")]
        Q12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3")]
        Q13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-4")]
        Q14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3")]
        Q23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-4")]
        Q24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q3-4")]
        Q34,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3")]
        Q123,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-4")]
        Q124,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-4")]
        Q134,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-4")]
        Q234,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-4")]
        Q1234,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-netFlow")]
        Q12netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-netFlow")]
        Q13netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-4-netFlow")]
        Q14netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-netFlow")]
        Q23netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-4-netFlow")]
        Q24netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q3-4-netFlow")]
        Q34netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-netFlow")]
        Q123netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-4-netFlow")]
        Q124netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-4-netFlow")]
        Q134netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-4-netFlow")]
        Q234netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-4-netFlow")]
        Q1234netFlow,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Discrete : mspCIMObject {
        
        private string maxValueField;
        
        private string minValueField;
        
        private string normalValueField;
        
        private DiscreteValue discreteValueField;
        
        private uom1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private string unitIDField;
        
        private qualityDescription qualityField;
        
        private bool qualityFieldSpecified;
        
        private phaseCode1 phaseField;
        
        private bool phaseFieldSpecified;
        
        private unitPrefix unitPrefixField;
        
        private bool unitPrefixFieldSpecified;
        
        private string harmonicField;
        
        private accountability quadrantField;
        
        private bool quadrantFieldSpecified;
        
        private string measurementTypeIDField;
        
        private string terminalIDField;
        
        private objectRef1 powerSystemResourceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string maxValue {
            get {
                return this.maxValueField;
            }
            set {
                this.maxValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string minValue {
            get {
                return this.minValueField;
            }
            set {
                this.minValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string normalValue {
            get {
                return this.normalValueField;
            }
            set {
                this.normalValueField = value;
            }
        }
        
        /// <remarks/>
        public DiscreteValue discreteValue {
            get {
                return this.discreteValueField;
            }
            set {
                this.discreteValueField = value;
            }
        }
        
        /// <remarks/>
        public uom1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string unitID {
            get {
                return this.unitIDField;
            }
            set {
                this.unitIDField = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCode1 phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitPrefix unitPrefix {
            get {
                return this.unitPrefixField;
            }
            set {
                this.unitPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitPrefixSpecified {
            get {
                return this.unitPrefixFieldSpecified;
            }
            set {
                this.unitPrefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string harmonic {
            get {
                return this.harmonicField;
            }
            set {
                this.harmonicField = value;
            }
        }
        
        /// <remarks/>
        public accountability quadrant {
            get {
                return this.quadrantField;
            }
            set {
                this.quadrantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quadrantSpecified {
            get {
                return this.quadrantFieldSpecified;
            }
            set {
                this.quadrantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string measurementTypeID {
            get {
                return this.measurementTypeIDField;
            }
            set {
                this.measurementTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string terminalID {
            get {
                return this.terminalIDField;
            }
            set {
                this.terminalIDField = value;
            }
        }
        
        /// <remarks/>
        public objectRef1 powerSystemResourceID {
            get {
                return this.powerSystemResourceIDField;
            }
            set {
                this.powerSystemResourceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class DiscreteValue : MeasurementValue {
        
        private string valueField;
        
        private string measurementValueSourceIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string measurementValueSourceID {
            get {
                return this.measurementValueSourceIDField;
            }
            set {
                this.measurementValueSourceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum unitPrefix {
        
        /// <remarks/>
        Maximum,
        
        /// <remarks/>
        Minimum,
        
        /// <remarks/>
        Average,
        
        /// <remarks/>
        Instantaneous,
        
        /// <remarks/>
        Cumulative,
        
        /// <remarks/>
        Quantity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ConnectivityNode : mspCIMObject {
        
        private string voltageLevelIDField;
        
        private string subControlAreaIDField;
        
        private string nominalVoltageField;
        
        private string substationIDField;
        
        private string[] measurementListField;
        
        /// <remarks/>
        public string voltageLevelID {
            get {
                return this.voltageLevelIDField;
            }
            set {
                this.voltageLevelIDField = value;
            }
        }
        
        /// <remarks/>
        public string subControlAreaID {
            get {
                return this.subControlAreaIDField;
            }
            set {
                this.subControlAreaIDField = value;
            }
        }
        
        /// <remarks/>
        public string nominalVoltage {
            get {
                return this.nominalVoltageField;
            }
            set {
                this.nominalVoltageField = value;
            }
        }
        
        /// <remarks/>
        public string substationID {
            get {
                return this.substationIDField;
            }
            set {
                this.substationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("measurementID", IsNullable=false)]
        public string[] measurementList {
            get {
                return this.measurementListField;
            }
            set {
                this.measurementListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Unit : mspCIMObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class BaseVoltage : mspCIMObject {
        
        private voltage1 nominalVoltageField;
        
        /// <remarks/>
        public voltage1 nominalVoltage {
            get {
                return this.nominalVoltageField;
            }
            set {
                this.nominalVoltageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadArea))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public abstract partial class PowerSystemResource : mspCIMObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class LoadArea : PowerSystemResource {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class VoltageLimit : mspCIMObject {
        
        private activePower valueField;
        
        private string typeField;
        
        private string operationalLimitSetIDField;
        
        /// <remarks/>
        public activePower value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string operationalLimitSetID {
            get {
                return this.operationalLimitSetIDField;
            }
            set {
                this.operationalLimitSetIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Line))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VoltageLevel))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public abstract partial class EquipmentContainer : mspCIMObject {
        
        private objectRef1[] contentsListField;
        
        private NodeFields[] connectivityNodesField;
        
        private ConnectivitySections connectivitySectionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("contentsItem", IsNullable=false)]
        public objectRef1[] contentsList {
            get {
                return this.contentsListField;
            }
            set {
                this.contentsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public NodeFields[] connectivityNodes {
            get {
                return this.connectivityNodesField;
            }
            set {
                this.connectivityNodesField = value;
            }
        }
        
        /// <remarks/>
        public ConnectivitySections connectivitySections {
            get {
                return this.connectivitySectionsField;
            }
            set {
                this.connectivitySectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Line : EquipmentContainer {
        
        private string regionIDField;
        
        /// <remarks/>
        public string regionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class Bay : EquipmentContainer {
        
        private string voltageLevelIDField;
        
        private BreakerConfiguration breakerConfigurationField;
        
        private bool breakerConfigurationFieldSpecified;
        
        private BusbarConfiguration busbarConfigurationField;
        
        private bool busbarConfigurationFieldSpecified;
        
        /// <remarks/>
        public string voltageLevelID {
            get {
                return this.voltageLevelIDField;
            }
            set {
                this.voltageLevelIDField = value;
            }
        }
        
        /// <remarks/>
        public BreakerConfiguration breakerConfiguration {
            get {
                return this.breakerConfigurationField;
            }
            set {
                this.breakerConfigurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool breakerConfigurationSpecified {
            get {
                return this.breakerConfigurationFieldSpecified;
            }
            set {
                this.breakerConfigurationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public BusbarConfiguration busbarConfiguration {
            get {
                return this.busbarConfigurationField;
            }
            set {
                this.busbarConfigurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool busbarConfigurationSpecified {
            get {
                return this.busbarConfigurationFieldSpecified;
            }
            set {
                this.busbarConfigurationFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum BreakerConfiguration {
        
        /// <remarks/>
        singleBreaker,
        
        /// <remarks/>
        breakerAndAHalf,
        
        /// <remarks/>
        doubleBreaker,
        
        /// <remarks/>
        noBreaker,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum BusbarConfiguration {
        
        /// <remarks/>
        singleBus,
        
        /// <remarks/>
        doubleBus,
        
        /// <remarks/>
        mainWithTransfer,
        
        /// <remarks/>
        ringBus,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class VoltageLevel : EquipmentContainer {
        
        private string baseVoltageIDField;
        
        private voltage1 highVoltageLimitField;
        
        private voltage1 lowVoltageLimitField;
        
        /// <remarks/>
        public string baseVoltageID {
            get {
                return this.baseVoltageIDField;
            }
            set {
                this.baseVoltageIDField = value;
            }
        }
        
        /// <remarks/>
        public voltage1 highVoltageLimit {
            get {
                return this.highVoltageLimitField;
            }
            set {
                this.highVoltageLimitField = value;
            }
        }
        
        /// <remarks/>
        public voltage1 lowVoltageLimit {
            get {
                return this.lowVoltageLimitField;
            }
            set {
                this.lowVoltageLimitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class EquivalentNetwork : mspCIMObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class SubGeographicalRegion : mspCIMObject {
        
        private string geographicalRegionIDField;
        
        /// <remarks/>
        public string geographicalRegionID {
            get {
                return this.geographicalRegionIDField;
            }
            set {
                this.geographicalRegionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class GeographicalRegion : mspCIMObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class ApparentPowerLimit : mspCIMObject {
        
        private activePower valueField;
        
        private string typeField;
        
        private string operationalLimitSetIDField;
        
        /// <remarks/>
        public activePower value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string operationalLimitSetID {
            get {
                return this.operationalLimitSetIDField;
            }
            set {
                this.operationalLimitSetIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public partial class OperationalLimitSet : mspCIMObject {
        
        private string equipmentIDField;
        
        private string[] limitsField;
        
        /// <remarks/>
        public string equipmentID {
            get {
                return this.equipmentIDField;
            }
            set {
                this.equipmentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("limitID", IsNullable=false)]
        public string[] limits {
            get {
                return this.limitsField;
            }
            set {
                this.limitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(eaLoc))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class objectRef {
        
        private string nameField;
        
        private System.Xml.XmlQualifiedName nounField;
        
        private string objectIDField;
        
        private string utilityField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName noun {
            get {
                return this.nounField;
            }
            set {
                this.nounField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string utility {
            get {
                return this.utilityField;
            }
            set {
                this.utilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class eaLoc : objectRef {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class controlItem {
        
        private string numberOfItemsField;
        
        private string numberOfControlledItemsField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfItems {
            get {
                return this.numberOfItemsField;
            }
            set {
                this.numberOfItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfControlledItems {
            get {
                return this.numberOfControlledItemsField;
            }
            set {
                this.numberOfControlledItemsField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class powerFactorManagementEvent : mspObject {
        
        private string switchIDField;
        
        private controlEventType controlEventTypeField;
        
        private bool controlEventTypeFieldSpecified;
        
        private string affectedRelayField;
        
        /// <remarks/>
        public string switchID {
            get {
                return this.switchIDField;
            }
            set {
                this.switchIDField = value;
            }
        }
        
        /// <remarks/>
        public controlEventType controlEventType {
            get {
                return this.controlEventTypeField;
            }
            set {
                this.controlEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlEventTypeSpecified {
            get {
                return this.controlEventTypeFieldSpecified;
            }
            set {
                this.controlEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string affectedRelay {
            get {
                return this.affectedRelayField;
            }
            set {
                this.affectedRelayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum controlEventType {
        
        /// <remarks/>
        Initiate,
        
        /// <remarks/>
        Restore,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meters : mspObject {
        
        private electricMeter[] electricMetersField;
        
        private waterMeter[] waterMetersField;
        
        private gasMeter[] gasMetersField;
        
        private propaneMeter[] propaneMetersField;
        
        private otherMeter[] otherMetersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public electricMeter[] electricMeters {
            get {
                return this.electricMetersField;
            }
            set {
                this.electricMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public waterMeter[] waterMeters {
            get {
                return this.waterMetersField;
            }
            set {
                this.waterMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public gasMeter[] gasMeters {
            get {
                return this.gasMetersField;
            }
            set {
                this.gasMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public propaneMeter[] propaneMeters {
            get {
                return this.propaneMetersField;
            }
            set {
                this.propaneMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public otherMeter[] otherMeters {
            get {
                return this.otherMetersField;
            }
            set {
                this.otherMetersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class electricMeter : mspMeter {
        
        private string meterBaseIDField;
        
        private electricNameplate electricNameplateField;
        
        private electricLocationFields electricLocationFieldsField;
        
        private string[] sealNumberListField;
        
        private meterID[] parentMeterListField;
        
        private meterID[] subMeterListField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private configuredReadingType[] configuredReadingTypesField;
        
        private string meterCommAddressField;
        
        private billingStatusItem[] billingStatusInformationField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public electricNameplate electricNameplate {
            get {
                return this.electricNameplateField;
            }
            set {
                this.electricNameplateField = value;
            }
        }
        
        /// <remarks/>
        public electricLocationFields electricLocationFields {
            get {
                return this.electricLocationFieldsField;
            }
            set {
                this.electricLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("sealNumber", IsNullable=false)]
        public string[] sealNumberList {
            get {
                return this.sealNumberListField;
            }
            set {
                this.sealNumberListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterID[] parentMeterList {
            get {
                return this.parentMeterListField;
            }
            set {
                this.parentMeterListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterID[] subMeterList {
            get {
                return this.subMeterListField;
            }
            set {
                this.subMeterListField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configuredReadingType[] configuredReadingTypes {
            get {
                return this.configuredReadingTypesField;
            }
            set {
                this.configuredReadingTypesField = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public billingStatusItem[] billingStatusInformation {
            get {
                return this.billingStatusInformationField;
            }
            set {
                this.billingStatusInformationField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class electricNameplate {
        
        private float khField;
        
        private bool khFieldSpecified;
        
        private float krField;
        
        private bool krFieldSpecified;
        
        private frequency frequencyField;
        
        private string numberOfElementsField;
        
        private baseType baseTypeField;
        
        private bool baseTypeFieldSpecified;
        
        private string accuracyClassField;
        
        private string elementsVoltageField;
        
        private string supplyVoltageField;
        
        private float maxAmperageField;
        
        private bool maxAmperageFieldSpecified;
        
        private float testAmperageField;
        
        private bool testAmperageFieldSpecified;
        
        private float regRatioField;
        
        private bool regRatioFieldSpecified;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private long wiresField;
        
        private bool wiresFieldSpecified;
        
        private long dialsField;
        
        private bool dialsFieldSpecified;
        
        private string formField;
        
        private float multiplierField;
        
        private bool multiplierFieldSpecified;
        
        private float demandMultField;
        
        private bool demandMultFieldSpecified;
        
        private string[] supportedReadingTypesField;
        
        /// <remarks/>
        public float kh {
            get {
                return this.khField;
            }
            set {
                this.khField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool khSpecified {
            get {
                return this.khFieldSpecified;
            }
            set {
                this.khFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kr {
            get {
                return this.krField;
            }
            set {
                this.krField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool krSpecified {
            get {
                return this.krFieldSpecified;
            }
            set {
                this.krFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public string numberOfElements {
            get {
                return this.numberOfElementsField;
            }
            set {
                this.numberOfElementsField = value;
            }
        }
        
        /// <remarks/>
        public baseType baseType {
            get {
                return this.baseTypeField;
            }
            set {
                this.baseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseTypeSpecified {
            get {
                return this.baseTypeFieldSpecified;
            }
            set {
                this.baseTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string accuracyClass {
            get {
                return this.accuracyClassField;
            }
            set {
                this.accuracyClassField = value;
            }
        }
        
        /// <remarks/>
        public string elementsVoltage {
            get {
                return this.elementsVoltageField;
            }
            set {
                this.elementsVoltageField = value;
            }
        }
        
        /// <remarks/>
        public string supplyVoltage {
            get {
                return this.supplyVoltageField;
            }
            set {
                this.supplyVoltageField = value;
            }
        }
        
        /// <remarks/>
        public float maxAmperage {
            get {
                return this.maxAmperageField;
            }
            set {
                this.maxAmperageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxAmperageSpecified {
            get {
                return this.maxAmperageFieldSpecified;
            }
            set {
                this.maxAmperageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float testAmperage {
            get {
                return this.testAmperageField;
            }
            set {
                this.testAmperageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testAmperageSpecified {
            get {
                return this.testAmperageFieldSpecified;
            }
            set {
                this.testAmperageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float regRatio {
            get {
                return this.regRatioField;
            }
            set {
                this.regRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool regRatioSpecified {
            get {
                return this.regRatioFieldSpecified;
            }
            set {
                this.regRatioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long wires {
            get {
                return this.wiresField;
            }
            set {
                this.wiresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wiresSpecified {
            get {
                return this.wiresFieldSpecified;
            }
            set {
                this.wiresFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long dials {
            get {
                return this.dialsField;
            }
            set {
                this.dialsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dialsSpecified {
            get {
                return this.dialsFieldSpecified;
            }
            set {
                this.dialsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        public float multiplier {
            get {
                return this.multiplierField;
            }
            set {
                this.multiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierSpecified {
            get {
                return this.multiplierFieldSpecified;
            }
            set {
                this.multiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float demandMult {
            get {
                return this.demandMultField;
            }
            set {
                this.demandMultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool demandMultSpecified {
            get {
                return this.demandMultFieldSpecified;
            }
            set {
                this.demandMultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("readingType", IsNullable=false)]
        public string[] supportedReadingTypes {
            get {
                return this.supportedReadingTypesField;
            }
            set {
                this.supportedReadingTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class frequency {
        
        private frequencyUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public frequencyUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum frequencyUnits {
        
        /// <remarks/>
        Hz,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cycles per second")]
        Cyclespersecond,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum baseType {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Base Type 1")]
        BaseType1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S-base")]
        Sbase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A-Base")]
        ABase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("B-Base")]
        BBase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("K-Base")]
        KBase,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("P-Base")]
        PBase,
        
        /// <remarks/>
        IECBottomConnected,
        
        /// <remarks/>
        switchboard,
        
        /// <remarks/>
        rackmount,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class electricLocationFields {
        
        private string substationCodeField;
        
        private string substationNameField;
        
        private string feederCodeField;
        
        private string busField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private eaLoc eaLocField;
        
        private string transformerBankIDField;
        
        private string linemenServiceAreaField;
        
        private string poleNoField;
        
        /// <remarks/>
        public string substationCode {
            get {
                return this.substationCodeField;
            }
            set {
                this.substationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederCode {
            get {
                return this.feederCodeField;
            }
            set {
                this.feederCodeField = value;
            }
        }
        
        /// <remarks/>
        public string bus {
            get {
                return this.busField;
            }
            set {
                this.busField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public string linemenServiceArea {
            get {
                return this.linemenServiceAreaField;
            }
            set {
                this.linemenServiceAreaField = value;
            }
        }
        
        /// <remarks/>
        public string poleNo {
            get {
                return this.poleNoField;
            }
            set {
                this.poleNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum meterConnectionStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Connected,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        DisconnectedNonPay,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class configuredReadingType {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private string readingTypeField;
        
        private string fieldNameField;
        
        private string nameField;
        
        private readingTypeCode readingTypeCodeField;
        
        private TOUSchedule[] tOUSchedulesField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string readingType {
            get {
                return this.readingTypeField;
            }
            set {
                this.readingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public readingTypeCode readingTypeCode {
            get {
                return this.readingTypeCodeField;
            }
            set {
                this.readingTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TOUSchedule[] TOUSchedules {
            get {
                return this.tOUSchedulesField;
            }
            set {
                this.tOUSchedulesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class TOUSchedule : mspObject {
        
        private string tOUScheduleVersionField;
        
        private effectiveDate effectiveDateField;
        
        private dayOfWeek[] daysOfWeekField;
        
        private exceptionDay[] exceptionDaysField;
        
        /// <remarks/>
        public string TOUScheduleVersion {
            get {
                return this.tOUScheduleVersionField;
            }
            set {
                this.tOUScheduleVersionField = value;
            }
        }
        
        /// <remarks/>
        public effectiveDate effectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public dayOfWeek[] daysOfWeek {
            get {
                return this.daysOfWeekField;
            }
            set {
                this.daysOfWeekField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public exceptionDay[] exceptionDays {
            get {
                return this.exceptionDaysField;
            }
            set {
                this.exceptionDaysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class effectiveDate {
        
        private monthNumber effectiveMonthField;
        
        private dayNumber effectiveDayField;
        
        /// <remarks/>
        public monthNumber effectiveMonth {
            get {
                return this.effectiveMonthField;
            }
            set {
                this.effectiveMonthField = value;
            }
        }
        
        /// <remarks/>
        public dayNumber effectiveDay {
            get {
                return this.effectiveDayField;
            }
            set {
                this.effectiveDayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum monthNumber {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum dayNumber {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21")]
        Item21,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24")]
        Item24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("25")]
        Item25,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("26")]
        Item26,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("27")]
        Item27,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("28")]
        Item28,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("29")]
        Item29,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("30")]
        Item30,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("31")]
        Item31,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class dayOfWeek {
        
        private dayLabel dayLabelField;
        
        private bin[] binsField;
        
        /// <remarks/>
        public dayLabel dayLabel {
            get {
                return this.dayLabelField;
            }
            set {
                this.dayLabelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public bin[] bins {
            get {
                return this.binsField;
            }
            set {
                this.binsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class bin {
        
        private string binIndexField;
        
        private string binNameField;
        
        private string descriptionField;
        
        private timePeriod[] timePeriodsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string binIndex {
            get {
                return this.binIndexField;
            }
            set {
                this.binIndexField = value;
            }
        }
        
        /// <remarks/>
        public string binName {
            get {
                return this.binNameField;
            }
            set {
                this.binNameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public timePeriod[] timePeriods {
            get {
                return this.timePeriodsField;
            }
            set {
                this.timePeriodsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class timePeriod {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class exceptionDay {
        
        private System.DateTime dateField;
        
        private bin[] binsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public bin[] bins {
            get {
                return this.binsField;
            }
            set {
                this.binsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class billingStatusItem {
        
        private string billingItemsTypeField;
        
        private money accountsReceivableField;
        
        private money accountsReceivableThisPeriodField;
        
        /// <remarks/>
        public string billingItemsType {
            get {
                return this.billingItemsTypeField;
            }
            set {
                this.billingItemsTypeField = value;
            }
        }
        
        /// <remarks/>
        public money accountsReceivable {
            get {
                return this.accountsReceivableField;
            }
            set {
                this.accountsReceivableField = value;
            }
        }
        
        /// <remarks/>
        public money accountsReceivableThisPeriod {
            get {
                return this.accountsReceivableThisPeriodField;
            }
            set {
                this.accountsReceivableThisPeriodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum remoteReconnectSetting {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Connect,
        
        /// <remarks/>
        Arm,
        
        /// <remarks/>
        PowerLimitation,
        
        /// <remarks/>
        CISAuthRequired,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedWaterMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedPropaneMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedGasMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(receivedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(testedElectricMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(gasMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(waterMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(otherMeter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(electricMeter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspMeter : mspObject {
        
        private string meterNoField;
        
        private System.DateTime installedDateField;
        
        private bool installedDateFieldSpecified;
        
        private System.DateTime removedDateField;
        
        private bool removedDateFieldSpecified;
        
        private string manufacturerField;
        
        private string catalogNumberField;
        
        private string serialNumberField;
        
        private string metrologyFirmwareVersionField;
        
        private string metrologyFirmwareRevisionField;
        
        private string meterTypeField;
        
        private string aMRDeviceTypeField;
        
        private string aMRVendorField;
        
        private string billingCycleField;
        
        private string[] meterStatusListField;
        
        private module[] moduleListField;
        
        private utilityInfo utilityInfoField;
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime installedDate {
            get {
                return this.installedDateField;
            }
            set {
                this.installedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool installedDateSpecified {
            get {
                return this.installedDateFieldSpecified;
            }
            set {
                this.installedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime removedDate {
            get {
                return this.removedDateField;
            }
            set {
                this.removedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool removedDateSpecified {
            get {
                return this.removedDateFieldSpecified;
            }
            set {
                this.removedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string catalogNumber {
            get {
                return this.catalogNumberField;
            }
            set {
                this.catalogNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string metrologyFirmwareVersion {
            get {
                return this.metrologyFirmwareVersionField;
            }
            set {
                this.metrologyFirmwareVersionField = value;
            }
        }
        
        /// <remarks/>
        public string metrologyFirmwareRevision {
            get {
                return this.metrologyFirmwareRevisionField;
            }
            set {
                this.metrologyFirmwareRevisionField = value;
            }
        }
        
        /// <remarks/>
        public string meterType {
            get {
                return this.meterTypeField;
            }
            set {
                this.meterTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRDeviceType {
            get {
                return this.aMRDeviceTypeField;
            }
            set {
                this.aMRDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRVendor {
            get {
                return this.aMRVendorField;
            }
            set {
                this.aMRVendorField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        public utilityInfo utilityInfo {
            get {
                return this.utilityInfoField;
            }
            set {
                this.utilityInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class module : mspDevice {
        
        private string descriptionField;
        
        private string moduleTypeField;
        
        private string firmwareVersionField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string moduleType {
            get {
                return this.moduleTypeField;
            }
            set {
                this.moduleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string firmwareVersion {
            get {
                return this.firmwareVersionField;
            }
            set {
                this.firmwareVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(module))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspDevice : mspObject {
        
        private string deviceClassField;
        
        private System.DateTime inServiceDateField;
        
        private bool inServiceDateFieldSpecified;
        
        private System.DateTime outServiceDateField;
        
        private bool outServiceDateFieldSpecified;
        
        private string facilityIDField;
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string deviceClass {
            get {
                return this.deviceClassField;
            }
            set {
                this.deviceClassField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime inServiceDate {
            get {
                return this.inServiceDateField;
            }
            set {
                this.inServiceDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inServiceDateSpecified {
            get {
                return this.inServiceDateFieldSpecified;
            }
            set {
                this.inServiceDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime outServiceDate {
            get {
                return this.outServiceDateField;
            }
            set {
                this.outServiceDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outServiceDateSpecified {
            get {
                return this.outServiceDateFieldSpecified;
            }
            set {
                this.outServiceDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class assetFields {
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private System.DateTime manufacturedDateField;
        
        private bool manufacturedDateFieldSpecified;
        
        private money priceField;
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime manufacturedDate {
            get {
                return this.manufacturedDateField;
            }
            set {
                this.manufacturedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool manufacturedDateSpecified {
            get {
                return this.manufacturedDateFieldSpecified;
            }
            set {
                this.manufacturedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CDDevice : mspDevice {
        
        private string meterBaseIDField;
        
        private voltage ratedVoltageField;
        
        private current ratedCurrentField;
        
        private module[] moduleListField;
        
        private string aMRVendorField;
        
        private string aMRDeviceTypeField;
        
        private meterID meterIDField;
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public current ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        public string AMRVendor {
            get {
                return this.aMRVendorField;
            }
            set {
                this.aMRVendorField = value;
            }
        }
        
        /// <remarks/>
        public string AMRDeviceType {
            get {
                return this.aMRDeviceTypeField;
            }
            set {
                this.aMRDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cumulativeDrop))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionDrop))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class voltage {
        
        private voltageUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public voltageUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum voltageUnits {
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        kV,
        
        /// <remarks/>
        MV,
        
        /// <remarks/>
        mV,
        
        /// <remarks/>
        microV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Percent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class cumulativeDrop : voltage {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class sectionDrop : voltage {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class current {
        
        private currentUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public currentUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum currentUnits {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        mA,
        
        /// <remarks/>
        kA,
        
        /// <remarks/>
        MA,
        
        /// <remarks/>
        microA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Percent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class utilityInfo {
        
        private string ownerField;
        
        private string districtField;
        
        private string serviceLocationIDField;
        
        private serviceID serviceIDField;
        
        private string accountNumberField;
        
        private string customerIDField;
        
        private GMLLocation gMLLocationField;
        
        private gpsPoint gpsPointField;
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public GMLLocation GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
        
        /// <remarks/>
        public gpsPoint gpsPoint {
            get {
                return this.gpsPointField;
            }
            set {
                this.gpsPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class serviceID {
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string objectIDField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gpsPoint {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private double altitudeField;
        
        private bool altitudeFieldSpecified;
        
        /// <remarks/>
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool altitudeSpecified {
            get {
                return this.altitudeFieldSpecified;
            }
            set {
                this.altitudeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class receivedWaterMeter : mspMeter {
        
        private waterNameplate waterNameplateField;
        
        private System.DateTime manufacturedDateField;
        
        private bool manufacturedDateFieldSpecified;
        
        private money purchasePriceField;
        
        /// <remarks/>
        public waterNameplate waterNameplate {
            get {
                return this.waterNameplateField;
            }
            set {
                this.waterNameplateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime manufacturedDate {
            get {
                return this.manufacturedDateField;
            }
            set {
                this.manufacturedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool manufacturedDateSpecified {
            get {
                return this.manufacturedDateFieldSpecified;
            }
            set {
                this.manufacturedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money purchasePrice {
            get {
                return this.purchasePriceField;
            }
            set {
                this.purchasePriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class waterNameplate {
        
        private installType installTypeField;
        
        private bool installTypeFieldSpecified;
        
        private fluidType fluidTypeField;
        
        private bool fluidTypeFieldSpecified;
        
        private driveType driveTypeField;
        
        private bool driveTypeFieldSpecified;
        
        private pipeSize pipeSizeField;
        
        private bool pipeSizeFieldSpecified;
        
        /// <remarks/>
        public installType installType {
            get {
                return this.installTypeField;
            }
            set {
                this.installTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool installTypeSpecified {
            get {
                return this.installTypeFieldSpecified;
            }
            set {
                this.installTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public fluidType fluidType {
            get {
                return this.fluidTypeField;
            }
            set {
                this.fluidTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fluidTypeSpecified {
            get {
                return this.fluidTypeFieldSpecified;
            }
            set {
                this.fluidTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public driveType driveType {
            get {
                return this.driveTypeField;
            }
            set {
                this.driveTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool driveTypeSpecified {
            get {
                return this.driveTypeFieldSpecified;
            }
            set {
                this.driveTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public pipeSize pipeSize {
            get {
                return this.pipeSizeField;
            }
            set {
                this.pipeSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pipeSizeSpecified {
            get {
                return this.pipeSizeFieldSpecified;
            }
            set {
                this.pipeSizeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum installType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum fluidType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum driveType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum pipeSize {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21")]
        Item21,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("24")]
        Item24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("25")]
        Item25,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class receivedPropaneMeter : mspMeter {
        
        private propaneNameplate propaneNameplateField;
        
        private System.DateTime manufacturedDateField;
        
        private bool manufacturedDateFieldSpecified;
        
        private money purchasePriceField;
        
        /// <remarks/>
        public propaneNameplate propaneNameplate {
            get {
                return this.propaneNameplateField;
            }
            set {
                this.propaneNameplateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime manufacturedDate {
            get {
                return this.manufacturedDateField;
            }
            set {
                this.manufacturedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool manufacturedDateSpecified {
            get {
                return this.manufacturedDateFieldSpecified;
            }
            set {
                this.manufacturedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money purchasePrice {
            get {
                return this.purchasePriceField;
            }
            set {
                this.purchasePriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class propaneNameplate : gasNameplate {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(propaneNameplate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gasNameplate {
        
        private mechanicalForm mechanicalFormField;
        
        private bool mechanicalFormFieldSpecified;
        
        private measurementSystem measurementSystemField;
        
        private bool measurementSystemFieldSpecified;
        
        private gasPressure gasPressureField;
        
        private gasFlow gasFlowField;
        
        private gearDriveSize gearDriveSizeField;
        
        private bool gearDriveSizeFieldSpecified;
        
        private internalPipeDiameter internalPipeDiameterField;
        
        private bool internalPipeDiameterFieldSpecified;
        
        private temperatureCompensationType temperatureCompensationTypeField;
        
        private bool temperatureCompensationTypeFieldSpecified;
        
        private pressureCompensationType pressureCompensationTypeField;
        
        private bool pressureCompensationTypeFieldSpecified;
        
        /// <remarks/>
        public mechanicalForm mechanicalForm {
            get {
                return this.mechanicalFormField;
            }
            set {
                this.mechanicalFormField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mechanicalFormSpecified {
            get {
                return this.mechanicalFormFieldSpecified;
            }
            set {
                this.mechanicalFormFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public measurementSystem measurementSystem {
            get {
                return this.measurementSystemField;
            }
            set {
                this.measurementSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measurementSystemSpecified {
            get {
                return this.measurementSystemFieldSpecified;
            }
            set {
                this.measurementSystemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gasPressure gasPressure {
            get {
                return this.gasPressureField;
            }
            set {
                this.gasPressureField = value;
            }
        }
        
        /// <remarks/>
        public gasFlow gasFlow {
            get {
                return this.gasFlowField;
            }
            set {
                this.gasFlowField = value;
            }
        }
        
        /// <remarks/>
        public gearDriveSize gearDriveSize {
            get {
                return this.gearDriveSizeField;
            }
            set {
                this.gearDriveSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool gearDriveSizeSpecified {
            get {
                return this.gearDriveSizeFieldSpecified;
            }
            set {
                this.gearDriveSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public internalPipeDiameter internalPipeDiameter {
            get {
                return this.internalPipeDiameterField;
            }
            set {
                this.internalPipeDiameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool internalPipeDiameterSpecified {
            get {
                return this.internalPipeDiameterFieldSpecified;
            }
            set {
                this.internalPipeDiameterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public temperatureCompensationType temperatureCompensationType {
            get {
                return this.temperatureCompensationTypeField;
            }
            set {
                this.temperatureCompensationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool temperatureCompensationTypeSpecified {
            get {
                return this.temperatureCompensationTypeFieldSpecified;
            }
            set {
                this.temperatureCompensationTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public pressureCompensationType pressureCompensationType {
            get {
                return this.pressureCompensationTypeField;
            }
            set {
                this.pressureCompensationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pressureCompensationTypeSpecified {
            get {
                return this.pressureCompensationTypeFieldSpecified;
            }
            set {
                this.pressureCompensationTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum mechanicalForm {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum measurementSystem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gasPressure {
        
        private pressureUnits maxPressureUOMField;
        
        private bool maxPressureUOMFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public pressureUnits maxPressureUOM {
            get {
                return this.maxPressureUOMField;
            }
            set {
                this.maxPressureUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxPressureUOMSpecified {
            get {
                return this.maxPressureUOMFieldSpecified;
            }
            set {
                this.maxPressureUOMFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum pressureUnits {
        
        /// <remarks/>
        Pascal,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Newton per square meter")]
        Newtonpersquaremeter,
        
        /// <remarks/>
        PSI,
        
        /// <remarks/>
        Bar,
        
        /// <remarks/>
        Barye,
        
        /// <remarks/>
        Atmosphere,
        
        /// <remarks/>
        Millibar,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inch of Hg")]
        InchofHg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Millimeter of Hg")]
        MillimeterofHg,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inch of water")]
        Inchofwater,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Millimeter of water")]
        Millimeterofwater,
        
        /// <remarks/>
        Kip,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pound-force")]
        Poundforce,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gasFlow {
        
        private uom maxFlowRateUOMField;
        
        private bool maxFlowRateUOMFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uom maxFlowRateUOM {
            get {
                return this.maxFlowRateUOMField;
            }
            set {
                this.maxFlowRateUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maxFlowRateUOMSpecified {
            get {
                return this.maxFlowRateUOMFieldSpecified;
            }
            set {
                this.maxFlowRateUOMFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum gearDriveSize {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum internalPipeDiameter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("21")]
        Item21,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("22")]
        Item22,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("23")]
        Item23,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum temperatureCompensationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum pressureCompensationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class receivedGasMeter : mspMeter {
        
        private gasNameplate gasNameplateField;
        
        private System.DateTime manufacturedDateField;
        
        private bool manufacturedDateFieldSpecified;
        
        private money purchasePriceField;
        
        /// <remarks/>
        public gasNameplate gasNameplate {
            get {
                return this.gasNameplateField;
            }
            set {
                this.gasNameplateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime manufacturedDate {
            get {
                return this.manufacturedDateField;
            }
            set {
                this.manufacturedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool manufacturedDateSpecified {
            get {
                return this.manufacturedDateFieldSpecified;
            }
            set {
                this.manufacturedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money purchasePrice {
            get {
                return this.purchasePriceField;
            }
            set {
                this.purchasePriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(testedElectricMeter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class receivedElectricMeter : mspMeter {
        
        private electricNameplate electricNameplateField;
        
        private System.DateTime manufacturedDateField;
        
        private bool manufacturedDateFieldSpecified;
        
        private money purchasePriceField;
        
        /// <remarks/>
        public electricNameplate electricNameplate {
            get {
                return this.electricNameplateField;
            }
            set {
                this.electricNameplateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime manufacturedDate {
            get {
                return this.manufacturedDateField;
            }
            set {
                this.manufacturedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool manufacturedDateSpecified {
            get {
                return this.manufacturedDateFieldSpecified;
            }
            set {
                this.manufacturedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money purchasePrice {
            get {
                return this.purchasePriceField;
            }
            set {
                this.purchasePriceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class testedElectricMeter : receivedElectricMeter {
        
        private meterTest[] meterTestListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterTest[] meterTestList {
            get {
                return this.meterTestListField;
            }
            set {
                this.meterTestListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterTest {
        
        private System.DateTime testDateField;
        
        private bool testDateFieldSpecified;
        
        private asFound asFoundField;
        
        private asLeft asLeftField;
        
        private string reasonField;
        
        private string testersInitialsField;
        
        private string testCompanyField;
        
        private string commentsField;
        
        private float revolutionsField;
        
        private bool revolutionsFieldSpecified;
        
        /// <remarks/>
        public System.DateTime testDate {
            get {
                return this.testDateField;
            }
            set {
                this.testDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testDateSpecified {
            get {
                return this.testDateFieldSpecified;
            }
            set {
                this.testDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public asFound asFound {
            get {
                return this.asFoundField;
            }
            set {
                this.asFoundField = value;
            }
        }
        
        /// <remarks/>
        public asLeft asLeft {
            get {
                return this.asLeftField;
            }
            set {
                this.asLeftField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string testersInitials {
            get {
                return this.testersInitialsField;
            }
            set {
                this.testersInitialsField = value;
            }
        }
        
        /// <remarks/>
        public string testCompany {
            get {
                return this.testCompanyField;
            }
            set {
                this.testCompanyField = value;
            }
        }
        
        /// <remarks/>
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public float revolutions {
            get {
                return this.revolutionsField;
            }
            set {
                this.revolutionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revolutionsSpecified {
            get {
                return this.revolutionsFieldSpecified;
            }
            set {
                this.revolutionsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class asFound : meterConditions {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(asLeft))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(asFound))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterConditions {
        
        private string kWhReadingField;
        
        private float kWReadingField;
        
        private bool kWReadingFieldSpecified;
        
        private float kVArReadingField;
        
        private bool kVArReadingFieldSpecified;
        
        private float powerFactorReadingField;
        
        private bool powerFactorReadingFieldSpecified;
        
        private float resultHighField;
        
        private bool resultHighFieldSpecified;
        
        private float resultLowField;
        
        private bool resultLowFieldSpecified;
        
        private float resultLLField;
        
        private bool resultLLFieldSpecified;
        
        private float kWResultField;
        
        private bool kWResultFieldSpecified;
        
        private float kVArResultField;
        
        private bool kVArResultFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string kWhReading {
            get {
                return this.kWhReadingField;
            }
            set {
                this.kWhReadingField = value;
            }
        }
        
        /// <remarks/>
        public float kWReading {
            get {
                return this.kWReadingField;
            }
            set {
                this.kWReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWReadingSpecified {
            get {
                return this.kWReadingFieldSpecified;
            }
            set {
                this.kWReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kVArReading {
            get {
                return this.kVArReadingField;
            }
            set {
                this.kVArReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kVArReadingSpecified {
            get {
                return this.kVArReadingFieldSpecified;
            }
            set {
                this.kVArReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float powerFactorReading {
            get {
                return this.powerFactorReadingField;
            }
            set {
                this.powerFactorReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerFactorReadingSpecified {
            get {
                return this.powerFactorReadingFieldSpecified;
            }
            set {
                this.powerFactorReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultHigh {
            get {
                return this.resultHighField;
            }
            set {
                this.resultHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultHighSpecified {
            get {
                return this.resultHighFieldSpecified;
            }
            set {
                this.resultHighFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultLow {
            get {
                return this.resultLowField;
            }
            set {
                this.resultLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultLowSpecified {
            get {
                return this.resultLowFieldSpecified;
            }
            set {
                this.resultLowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float resultLL {
            get {
                return this.resultLLField;
            }
            set {
                this.resultLLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultLLSpecified {
            get {
                return this.resultLLFieldSpecified;
            }
            set {
                this.resultLLFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kWResult {
            get {
                return this.kWResultField;
            }
            set {
                this.kWResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kWResultSpecified {
            get {
                return this.kWResultFieldSpecified;
            }
            set {
                this.kWResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kVArResult {
            get {
                return this.kVArResultField;
            }
            set {
                this.kVArResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kVArResultSpecified {
            get {
                return this.kVArResultFieldSpecified;
            }
            set {
                this.kVArResultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class asLeft : meterConditions {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class propaneMeter : mspMeter {
        
        private propaneNameplate propaneNameplateField;
        
        private propaneLocationFields propaneLocationFieldsField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private configuredReadingType[] configuredReadingTypesField;
        
        private string meterCommAddressField;
        
        private billingStatusItem[] billingStatusInformationField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public propaneNameplate propaneNameplate {
            get {
                return this.propaneNameplateField;
            }
            set {
                this.propaneNameplateField = value;
            }
        }
        
        /// <remarks/>
        public propaneLocationFields propaneLocationFields {
            get {
                return this.propaneLocationFieldsField;
            }
            set {
                this.propaneLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configuredReadingType[] configuredReadingTypes {
            get {
                return this.configuredReadingTypesField;
            }
            set {
                this.configuredReadingTypesField = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public billingStatusItem[] billingStatusInformation {
            get {
                return this.billingStatusInformationField;
            }
            set {
                this.billingStatusInformationField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class propaneLocationFields {
        
        private extensionsItem[] extensionsListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gasMeter : mspMeter {
        
        private gasNameplate gasNameplateField;
        
        private gasLocationFields gasLocationFieldsField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private configuredReadingType[] configuredReadingTypesField;
        
        private string meterCommAddressField;
        
        private billingStatusItem[] billingStatusInformationField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public gasNameplate gasNameplate {
            get {
                return this.gasNameplateField;
            }
            set {
                this.gasNameplateField = value;
            }
        }
        
        /// <remarks/>
        public gasLocationFields gasLocationFields {
            get {
                return this.gasLocationFieldsField;
            }
            set {
                this.gasLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configuredReadingType[] configuredReadingTypes {
            get {
                return this.configuredReadingTypesField;
            }
            set {
                this.configuredReadingTypesField = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public billingStatusItem[] billingStatusInformation {
            get {
                return this.billingStatusInformationField;
            }
            set {
                this.billingStatusInformationField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gasLocationFields {
        
        private extensionsItem[] extensionsListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class waterMeter : mspMeter {
        
        private waterNameplate waterNameplateField;
        
        private waterLocationFields waterLocationFieldsField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private configuredReadingType[] configuredReadingTypesField;
        
        private string meterCommAddressField;
        
        private billingStatusItem[] billingStatusInformationField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public waterNameplate waterNameplate {
            get {
                return this.waterNameplateField;
            }
            set {
                this.waterNameplateField = value;
            }
        }
        
        /// <remarks/>
        public waterLocationFields waterLocationFields {
            get {
                return this.waterLocationFieldsField;
            }
            set {
                this.waterLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configuredReadingType[] configuredReadingTypes {
            get {
                return this.configuredReadingTypesField;
            }
            set {
                this.configuredReadingTypesField = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public billingStatusItem[] billingStatusInformation {
            get {
                return this.billingStatusInformationField;
            }
            set {
                this.billingStatusInformationField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class waterLocationFields {
        
        private string serviceLocationIDField;
        
        private string waterServiceIDField;
        
        private extensionsItem[] extensionsListField;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string waterServiceID {
            get {
                return this.waterServiceIDField;
            }
            set {
                this.waterServiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class otherMeter : mspMeter {
        
        private otherNameplate otherNameplateField;
        
        private otherLocationFields otherLocationFieldsField;
        
        private meterConnectionStatus meterConnectionStatusField;
        
        private bool meterConnectionStatusFieldSpecified;
        
        private configuredReadingType[] configuredReadingTypesField;
        
        private string meterCommAddressField;
        
        private billingStatusItem[] billingStatusInformationField;
        
        private remoteReconnectSetting remoteReconnectSettingField;
        
        private bool remoteReconnectSettingFieldSpecified;
        
        /// <remarks/>
        public otherNameplate otherNameplate {
            get {
                return this.otherNameplateField;
            }
            set {
                this.otherNameplateField = value;
            }
        }
        
        /// <remarks/>
        public otherLocationFields otherLocationFields {
            get {
                return this.otherLocationFieldsField;
            }
            set {
                this.otherLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public meterConnectionStatus meterConnectionStatus {
            get {
                return this.meterConnectionStatusField;
            }
            set {
                this.meterConnectionStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterConnectionStatusSpecified {
            get {
                return this.meterConnectionStatusFieldSpecified;
            }
            set {
                this.meterConnectionStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configuredReadingType[] configuredReadingTypes {
            get {
                return this.configuredReadingTypesField;
            }
            set {
                this.configuredReadingTypesField = value;
            }
        }
        
        /// <remarks/>
        public string meterCommAddress {
            get {
                return this.meterCommAddressField;
            }
            set {
                this.meterCommAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public billingStatusItem[] billingStatusInformation {
            get {
                return this.billingStatusInformationField;
            }
            set {
                this.billingStatusInformationField = value;
            }
        }
        
        /// <remarks/>
        public remoteReconnectSetting remoteReconnectSetting {
            get {
                return this.remoteReconnectSettingField;
            }
            set {
                this.remoteReconnectSettingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool remoteReconnectSettingSpecified {
            get {
                return this.remoteReconnectSettingFieldSpecified;
            }
            set {
                this.remoteReconnectSettingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class otherNameplate {
        
        private extensionsItem[] extensionsListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class otherLocationFields {
        
        private extensionsItem[] extensionsListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ZigBeeLoadControlEvent : mspObject {
        
        private string issuerEventIDField;
        
        private string deviceClassField;
        
        private string utilityEnrollmentGroupField;
        
        private System.DateTime startTimeField;
        
        private integerDuration integerDurationField;
        
        private uint criticalityLevelField;
        
        private uint coolingTemperatureOffsetField;
        
        private bool coolingTemperatureOffsetFieldSpecified;
        
        private uint heatingTemperatureOffsetField;
        
        private bool heatingTemperatureOffsetFieldSpecified;
        
        private uint coolingTemperatureSetPointField;
        
        private bool coolingTemperatureSetPointFieldSpecified;
        
        private uint heatingTemperatureSetPointField;
        
        private bool heatingTemperatureSetPointFieldSpecified;
        
        private uint avgLoadAdjustmentField;
        
        private bool avgLoadAdjustmentFieldSpecified;
        
        private uint dutyCycleField;
        
        private bool dutyCycleFieldSpecified;
        
        private byte[] eventControlField;
        
        /// <remarks/>
        public string issuerEventID {
            get {
                return this.issuerEventIDField;
            }
            set {
                this.issuerEventIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string deviceClass {
            get {
                return this.deviceClassField;
            }
            set {
                this.deviceClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string utilityEnrollmentGroup {
            get {
                return this.utilityEnrollmentGroupField;
            }
            set {
                this.utilityEnrollmentGroupField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public integerDuration integerDuration {
            get {
                return this.integerDurationField;
            }
            set {
                this.integerDurationField = value;
            }
        }
        
        /// <remarks/>
        public uint criticalityLevel {
            get {
                return this.criticalityLevelField;
            }
            set {
                this.criticalityLevelField = value;
            }
        }
        
        /// <remarks/>
        public uint coolingTemperatureOffset {
            get {
                return this.coolingTemperatureOffsetField;
            }
            set {
                this.coolingTemperatureOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool coolingTemperatureOffsetSpecified {
            get {
                return this.coolingTemperatureOffsetFieldSpecified;
            }
            set {
                this.coolingTemperatureOffsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint heatingTemperatureOffset {
            get {
                return this.heatingTemperatureOffsetField;
            }
            set {
                this.heatingTemperatureOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heatingTemperatureOffsetSpecified {
            get {
                return this.heatingTemperatureOffsetFieldSpecified;
            }
            set {
                this.heatingTemperatureOffsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint coolingTemperatureSetPoint {
            get {
                return this.coolingTemperatureSetPointField;
            }
            set {
                this.coolingTemperatureSetPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool coolingTemperatureSetPointSpecified {
            get {
                return this.coolingTemperatureSetPointFieldSpecified;
            }
            set {
                this.coolingTemperatureSetPointFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint heatingTemperatureSetPoint {
            get {
                return this.heatingTemperatureSetPointField;
            }
            set {
                this.heatingTemperatureSetPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool heatingTemperatureSetPointSpecified {
            get {
                return this.heatingTemperatureSetPointFieldSpecified;
            }
            set {
                this.heatingTemperatureSetPointFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint avgLoadAdjustment {
            get {
                return this.avgLoadAdjustmentField;
            }
            set {
                this.avgLoadAdjustmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgLoadAdjustmentSpecified {
            get {
                return this.avgLoadAdjustmentFieldSpecified;
            }
            set {
                this.avgLoadAdjustmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint dutyCycle {
            get {
                return this.dutyCycleField;
            }
            set {
                this.dutyCycleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dutyCycleSpecified {
            get {
                return this.dutyCycleFieldSpecified;
            }
            set {
                this.dutyCycleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="hexBinary")]
        public byte[] eventControl {
            get {
                return this.eventControlField;
            }
            set {
                this.eventControlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class endDeviceShipment : mspObject {
        
        private string utility1Field;
        
        private string manufacturerField;
        
        private string poReferenceNumberField;
        
        private string shippingTicketNumberField;
        
        private string recipientField;
        
        private System.DateTime shippedDateField;
        
        private bool shippedDateFieldSpecified;
        
        private address shippedToAddressField;
        
        private System.DateTime receivedDateField;
        
        private bool receivedDateFieldSpecified;
        
        private transponderIDRange transponderIDRangeField;
        
        private receivedElectricMeter[] receivedElectricMetersField;
        
        private module[] receivedModulesField;
        
        private loadManagementDevice[] receivedLoadManagementDevicesField;
        
        private CDDevice[] receivedCDDevicesField;
        
        private receivedGasMeter[] receivedGasMetersField;
        
        private receivedWaterMeter[] receivedWaterMetersField;
        
        private receivedPropaneMeter[] receivedPropaneMetersField;
        
        private inHomeDisplay[] receivedIHDsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("utility")]
        public string utility1 {
            get {
                return this.utility1Field;
            }
            set {
                this.utility1Field = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string poReferenceNumber {
            get {
                return this.poReferenceNumberField;
            }
            set {
                this.poReferenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string shippingTicketNumber {
            get {
                return this.shippingTicketNumberField;
            }
            set {
                this.shippingTicketNumberField = value;
            }
        }
        
        /// <remarks/>
        public string recipient {
            get {
                return this.recipientField;
            }
            set {
                this.recipientField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shippedDate {
            get {
                return this.shippedDateField;
            }
            set {
                this.shippedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shippedDateSpecified {
            get {
                return this.shippedDateFieldSpecified;
            }
            set {
                this.shippedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public address shippedToAddress {
            get {
                return this.shippedToAddressField;
            }
            set {
                this.shippedToAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime receivedDate {
            get {
                return this.receivedDateField;
            }
            set {
                this.receivedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool receivedDateSpecified {
            get {
                return this.receivedDateFieldSpecified;
            }
            set {
                this.receivedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public transponderIDRange transponderIDRange {
            get {
                return this.transponderIDRangeField;
            }
            set {
                this.transponderIDRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public receivedElectricMeter[] receivedElectricMeters {
            get {
                return this.receivedElectricMetersField;
            }
            set {
                this.receivedElectricMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] receivedModules {
            get {
                return this.receivedModulesField;
            }
            set {
                this.receivedModulesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public loadManagementDevice[] receivedLoadManagementDevices {
            get {
                return this.receivedLoadManagementDevicesField;
            }
            set {
                this.receivedLoadManagementDevicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CDDevice[] receivedCDDevices {
            get {
                return this.receivedCDDevicesField;
            }
            set {
                this.receivedCDDevicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public receivedGasMeter[] receivedGasMeters {
            get {
                return this.receivedGasMetersField;
            }
            set {
                this.receivedGasMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public receivedWaterMeter[] receivedWaterMeters {
            get {
                return this.receivedWaterMetersField;
            }
            set {
                this.receivedWaterMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public receivedPropaneMeter[] receivedPropaneMeters {
            get {
                return this.receivedPropaneMetersField;
            }
            set {
                this.receivedPropaneMetersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public inHomeDisplay[] receivedIHDs {
            get {
                return this.receivedIHDsField;
            }
            set {
                this.receivedIHDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class address {
        
        private string address1Field;
        
        private string address2Field;
        
        private detailedAddressFields detailedAddressFieldsField;
        
        private string townCodeField;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        /// <remarks/>
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public detailedAddressFields detailedAddressFields {
            get {
                return this.detailedAddressFieldsField;
            }
            set {
                this.detailedAddressFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string townCode {
            get {
                return this.townCodeField;
            }
            set {
                this.townCodeField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class detailedAddressFields {
        
        private string streetPrefixField;
        
        private string streetNumberField;
        
        private string streetSuffixField;
        
        private string streetTypeField;
        
        private string buildingNumberField;
        
        private string suiteNumberField;
        
        private string addressGeneralField;
        
        private string postOfficeBoxField;
        
        private string regionField;
        
        /// <remarks/>
        public string streetPrefix {
            get {
                return this.streetPrefixField;
            }
            set {
                this.streetPrefixField = value;
            }
        }
        
        /// <remarks/>
        public string streetNumber {
            get {
                return this.streetNumberField;
            }
            set {
                this.streetNumberField = value;
            }
        }
        
        /// <remarks/>
        public string streetSuffix {
            get {
                return this.streetSuffixField;
            }
            set {
                this.streetSuffixField = value;
            }
        }
        
        /// <remarks/>
        public string streetType {
            get {
                return this.streetTypeField;
            }
            set {
                this.streetTypeField = value;
            }
        }
        
        /// <remarks/>
        public string buildingNumber {
            get {
                return this.buildingNumberField;
            }
            set {
                this.buildingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string suiteNumber {
            get {
                return this.suiteNumberField;
            }
            set {
                this.suiteNumberField = value;
            }
        }
        
        /// <remarks/>
        public string addressGeneral {
            get {
                return this.addressGeneralField;
            }
            set {
                this.addressGeneralField = value;
            }
        }
        
        /// <remarks/>
        public string postOfficeBox {
            get {
                return this.postOfficeBoxField;
            }
            set {
                this.postOfficeBoxField = value;
            }
        }
        
        /// <remarks/>
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class transponderIDRange {
        
        private string startField;
        
        private string endField;
        
        /// <remarks/>
        public string start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public string end {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadManagementDevice : mspPointObject {
        
        private string serialNumberField;
        
        private string deviceTypeField;
        
        private string manufacturerField;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private deviceStatus statusField;
        
        private bool statusFieldSpecified;
        
        private float powerLimitField;
        
        private bool powerLimitFieldSpecified;
        
        private meterID meterIDField;
        
        private module[] moduleListField;
        
        private string numberOfRelaysField;
        
        private voltage ratedVoltageField;
        
        private current ratedCurrentField;
        
        private assetFields assetFieldsField;
        
        private loadManagementDeviceRelay[] loadManagementDeviceRelaysField;
        
        private string aMRDeviceTypeField;
        
        private string aMRVendorField;
        
        private utilityInfo utilityInfoField;
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public deviceStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float powerLimit {
            get {
                return this.powerLimitField;
            }
            set {
                this.powerLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerLimitSpecified {
            get {
                return this.powerLimitFieldSpecified;
            }
            set {
                this.powerLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfRelays {
            get {
                return this.numberOfRelaysField;
            }
            set {
                this.numberOfRelaysField = value;
            }
        }
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public current ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public loadManagementDeviceRelay[] loadManagementDeviceRelays {
            get {
                return this.loadManagementDeviceRelaysField;
            }
            set {
                this.loadManagementDeviceRelaysField = value;
            }
        }
        
        /// <remarks/>
        public string AMRDeviceType {
            get {
                return this.aMRDeviceTypeField;
            }
            set {
                this.aMRDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AMRVendor {
            get {
                return this.aMRVendorField;
            }
            set {
                this.aMRVendorField = value;
            }
        }
        
        /// <remarks/>
        public utilityInfo utilityInfo {
            get {
                return this.utilityInfoField;
            }
            set {
                this.utilityInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum deviceStatus {
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        PowerLimitation,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadManagementDeviceRelay {
        
        private string relayNumberField;
        
        private connectorStatus connectorStatusField;
        
        private bool connectorStatusFieldSpecified;
        
        private string demandResponseDeviceClassField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string relayNumber {
            get {
                return this.relayNumberField;
            }
            set {
                this.relayNumberField = value;
            }
        }
        
        /// <remarks/>
        public connectorStatus connectorStatus {
            get {
                return this.connectorStatusField;
            }
            set {
                this.connectorStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectorStatusSpecified {
            get {
                return this.connectorStatusFieldSpecified;
            }
            set {
                this.connectorStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string demandResponseDeviceClass {
            get {
                return this.demandResponseDeviceClassField;
            }
            set {
                this.demandResponseDeviceClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum connectorStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        OutOfService,
        
        /// <remarks/>
        Wired,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspAssetHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assetHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermostat))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assessmentLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(load))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPointFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(secondaryJunctionBox))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(riser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(primaryCabinet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(powerSystemDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(pole))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceLocation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(premise))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(outageDetectionDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(measurementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplay))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(guy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericAnnotationFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(equivalentSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(trafficLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(securityLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(streetLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inductionMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(synchronousMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spatialFeatureGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadManagementDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(scadaPoint))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspPointObject : mspObject {
        
        private PointType gMLLocationField;
        
        private gpsPoint gpsPointField;
        
        private GPSLocation gPSLocationField;
        
        private string gridLocationField;
        
        private float rotationField;
        
        private bool rotationFieldSpecified;
        
        private string facilityIDField;
        
        private timeZone timeZoneField;
        
        /// <remarks/>
        public PointType GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
        
        /// <remarks/>
        public gpsPoint gpsPoint {
            get {
                return this.gpsPointField;
            }
            set {
                this.gpsPointField = value;
            }
        }
        
        /// <remarks/>
        public GPSLocation GPSLocation {
            get {
                return this.gPSLocationField;
            }
            set {
                this.gPSLocationField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public float rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotationSpecified {
            get {
                return this.rotationFieldSpecified;
            }
            set {
                this.rotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public timeZone timeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class GPSLocation {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private double altitudeField;
        
        private bool altitudeFieldSpecified;
        
        private GPSMetadata gPSMetadataField;
        
        private bool gPSValidityField;
        
        private bool gPSValidityFieldSpecified;
        
        /// <remarks/>
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public double altitude {
            get {
                return this.altitudeField;
            }
            set {
                this.altitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool altitudeSpecified {
            get {
                return this.altitudeFieldSpecified;
            }
            set {
                this.altitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public GPSMetadata GPSMetadata {
            get {
                return this.gPSMetadataField;
            }
            set {
                this.gPSMetadataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool GPSValidity {
            get {
                return this.gPSValidityField;
            }
            set {
                this.gPSValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GPSValiditySpecified {
            get {
                return this.gPSValidityFieldSpecified;
            }
            set {
                this.gPSValidityFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class GPSMetadata {
        
        private double eastingField;
        
        private bool eastingFieldSpecified;
        
        private double northingField;
        
        private bool northingFieldSpecified;
        
        private string sourceField;
        
        private long numberField;
        
        private bool numberFieldSpecified;
        
        private bool isRealTimeDiffCorrectionField;
        
        private bool isRealTimeDiffCorrectionFieldSpecified;
        
        private float hdopField;
        
        private bool hdopFieldSpecified;
        
        private float vdopField;
        
        private bool vdopFieldSpecified;
        
        private string diffIDField;
        
        private System.DateTime collectedField;
        
        private bool collectedFieldSpecified;
        
        private long numSatField;
        
        private bool numSatFieldSpecified;
        
        /// <remarks/>
        public double easting {
            get {
                return this.eastingField;
            }
            set {
                this.eastingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eastingSpecified {
            get {
                return this.eastingFieldSpecified;
            }
            set {
                this.eastingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double northing {
            get {
                return this.northingField;
            }
            set {
                this.northingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool northingSpecified {
            get {
                return this.northingFieldSpecified;
            }
            set {
                this.northingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public long number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberSpecified {
            get {
                return this.numberFieldSpecified;
            }
            set {
                this.numberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRealTimeDiffCorrection {
            get {
                return this.isRealTimeDiffCorrectionField;
            }
            set {
                this.isRealTimeDiffCorrectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRealTimeDiffCorrectionSpecified {
            get {
                return this.isRealTimeDiffCorrectionFieldSpecified;
            }
            set {
                this.isRealTimeDiffCorrectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hdop {
            get {
                return this.hdopField;
            }
            set {
                this.hdopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hdopSpecified {
            get {
                return this.hdopFieldSpecified;
            }
            set {
                this.hdopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float vdop {
            get {
                return this.vdopField;
            }
            set {
                this.vdopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool vdopSpecified {
            get {
                return this.vdopFieldSpecified;
            }
            set {
                this.vdopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string diffID {
            get {
                return this.diffIDField;
            }
            set {
                this.diffIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime collected {
            get {
                return this.collectedField;
            }
            set {
                this.collectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool collectedSpecified {
            get {
                return this.collectedFieldSpecified;
            }
            set {
                this.collectedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long numSat {
            get {
                return this.numSatField;
            }
            set {
                this.numSatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numSatSpecified {
            get {
                return this.numSatFieldSpecified;
            }
            set {
                this.numSatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class timeZone {
        
        private bool dSTEnabledField;
        
        private bool dSTEnabledFieldSpecified;
        
        private decimal uTCOffsetField;
        
        private string nameField;
        
        private string commentField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool DSTEnabled {
            get {
                return this.dSTEnabledField;
            }
            set {
                this.dSTEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DSTEnabledSpecified {
            get {
                return this.dSTEnabledFieldSpecified;
            }
            set {
                this.dSTEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public decimal UTCOffset {
            get {
                return this.uTCOffsetField;
            }
            set {
                this.uTCOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterHistoryEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(assetHistoryEvent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspAssetHistoryEvent : mspPointObject {
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private actionTaken[] actionTakenField;
        
        private string[] informationListField;
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("actionTaken")]
        public actionTaken[] actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("informationItem", IsNullable=false)]
        public string[] informationList {
            get {
                return this.informationListField;
            }
            set {
                this.informationListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum actionTaken {
        
        /// <remarks/>
        Installed,
        
        /// <remarks/>
        PlacedIntoService,
        
        /// <remarks/>
        Connected,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        Removed,
        
        /// <remarks/>
        Inspected,
        
        /// <remarks/>
        Tested,
        
        /// <remarks/>
        Repaired,
        
        /// <remarks/>
        Calibrated,
        
        /// <remarks/>
        Checked,
        
        /// <remarks/>
        ReturnedToInventory,
        
        /// <remarks/>
        Retired,
        
        /// <remarks/>
        Destroyed,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterHistoryEvent : mspAssetHistoryEvent {
        
        private meterID meterIDField;
        
        private string customerIDField;
        
        private string accountIDField;
        
        private string serviceLocationIDField;
        
        private serviceID serviceIDField;
        
        private string meterBaseIDField;
        
        private string[] meterStatusListField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterStatus", IsNullable=false)]
        public string[] meterStatusList {
            get {
                return this.meterStatusListField;
            }
            set {
                this.meterStatusListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class assetHistoryEvent : mspAssetHistoryEvent {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thermostat : mspPointObject {
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private string deviceTypeField;
        
        private module[] moduleListField;
        
        private utilityInfo utilityInfoField;
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        public utilityInfo utilityInfo {
            get {
                return this.utilityInfoField;
            }
            set {
                this.utilityInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageEvent : mspPointObject {
        
        private string areaField;
        
        private string problemLocationField;
        
        private objectRef deviceIDField;
        
        private string deviceTypeField;
        
        private phaseCode outagedPhaseField;
        
        private bool outagedPhaseFieldSpecified;
        
        private string substationCodeField;
        
        private string feederField;
        
        private string actualFaultField;
        
        private string faultTypeField;
        
        private bool isCustomerResponsibleField;
        
        private bool isCustomerResponsibleFieldSpecified;
        
        private bool isPlannedField;
        
        private bool isPlannedFieldSpecified;
        
        private string outageDescriptionField;
        
        private outageStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private string priorityField;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime outageDefinedField;
        
        private bool outageDefinedFieldSpecified;
        
        private System.DateTime firstDispatchField;
        
        private bool firstDispatchFieldSpecified;
        
        private System.DateTime firstETAField;
        
        private bool firstETAFieldSpecified;
        
        private System.DateTime firstArrivalField;
        
        private bool firstArrivalFieldSpecified;
        
        private System.DateTime eTORField;
        
        private bool eTORFieldSpecified;
        
        private System.DateTime completedField;
        
        private bool completedFieldSpecified;
        
        private message messageField;
        
        private string[] crewsDispatchedField;
        
        private string customersAffectedField;
        
        private string priorityCustomersCountField;
        
        private string oDEventCountField;
        
        private string customersRestoredField;
        
        private outageReasonCodeList outageReasonCodeListField;
        
        private outageEventStatus outageEventStatusField;
        
        private outageCustomer[] outageCustomerListField;
        
        private crewActionEvent[] crewActionEventsField;
        
        /// <remarks/>
        public string area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string problemLocation {
            get {
                return this.problemLocationField;
            }
            set {
                this.problemLocationField = value;
            }
        }
        
        /// <remarks/>
        public objectRef deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode outagedPhase {
            get {
                return this.outagedPhaseField;
            }
            set {
                this.outagedPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outagedPhaseSpecified {
            get {
                return this.outagedPhaseFieldSpecified;
            }
            set {
                this.outagedPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string substationCode {
            get {
                return this.substationCodeField;
            }
            set {
                this.substationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public string actualFault {
            get {
                return this.actualFaultField;
            }
            set {
                this.actualFaultField = value;
            }
        }
        
        /// <remarks/>
        public string faultType {
            get {
                return this.faultTypeField;
            }
            set {
                this.faultTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool isCustomerResponsible {
            get {
                return this.isCustomerResponsibleField;
            }
            set {
                this.isCustomerResponsibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCustomerResponsibleSpecified {
            get {
                return this.isCustomerResponsibleFieldSpecified;
            }
            set {
                this.isCustomerResponsibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isPlanned {
            get {
                return this.isPlannedField;
            }
            set {
                this.isPlannedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isPlannedSpecified {
            get {
                return this.isPlannedFieldSpecified;
            }
            set {
                this.isPlannedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string outageDescription {
            get {
                return this.outageDescriptionField;
            }
            set {
                this.outageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public outageStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime outageDefined {
            get {
                return this.outageDefinedField;
            }
            set {
                this.outageDefinedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDefinedSpecified {
            get {
                return this.outageDefinedFieldSpecified;
            }
            set {
                this.outageDefinedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstDispatch {
            get {
                return this.firstDispatchField;
            }
            set {
                this.firstDispatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstDispatchSpecified {
            get {
                return this.firstDispatchFieldSpecified;
            }
            set {
                this.firstDispatchFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstETA {
            get {
                return this.firstETAField;
            }
            set {
                this.firstETAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstETASpecified {
            get {
                return this.firstETAFieldSpecified;
            }
            set {
                this.firstETAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime firstArrival {
            get {
                return this.firstArrivalField;
            }
            set {
                this.firstArrivalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool firstArrivalSpecified {
            get {
                return this.firstArrivalFieldSpecified;
            }
            set {
                this.firstArrivalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ETOR {
            get {
                return this.eTORField;
            }
            set {
                this.eTORField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ETORSpecified {
            get {
                return this.eTORFieldSpecified;
            }
            set {
                this.eTORFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool completedSpecified {
            get {
                return this.completedFieldSpecified;
            }
            set {
                this.completedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public message message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("crewID", IsNullable=false)]
        public string[] crewsDispatched {
            get {
                return this.crewsDispatchedField;
            }
            set {
                this.crewsDispatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string customersAffected {
            get {
                return this.customersAffectedField;
            }
            set {
                this.customersAffectedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityCustomersCount {
            get {
                return this.priorityCustomersCountField;
            }
            set {
                this.priorityCustomersCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string ODEventCount {
            get {
                return this.oDEventCountField;
            }
            set {
                this.oDEventCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string customersRestored {
            get {
                return this.customersRestoredField;
            }
            set {
                this.customersRestoredField = value;
            }
        }
        
        /// <remarks/>
        public outageReasonCodeList outageReasonCodeList {
            get {
                return this.outageReasonCodeListField;
            }
            set {
                this.outageReasonCodeListField = value;
            }
        }
        
        /// <remarks/>
        public outageEventStatus outageEventStatus {
            get {
                return this.outageEventStatusField;
            }
            set {
                this.outageEventStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageCustomer[] outageCustomerList {
            get {
                return this.outageCustomerListField;
            }
            set {
                this.outageCustomerListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public crewActionEvent[] crewActionEvents {
            get {
                return this.crewActionEventsField;
            }
            set {
                this.crewActionEventsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum outageStatus {
        
        /// <remarks/>
        Assumed,
        
        /// <remarks/>
        Confirmed,
        
        /// <remarks/>
        Restored,
        
        /// <remarks/>
        Scheduled,
        
        /// <remarks/>
        StillOut,
        
        /// <remarks/>
        NonPay,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class message : mspObject {
        
        private string recordIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private System.DateTime listenedOnField;
        
        private bool listenedOnFieldSpecified;
        
        private string listenedByField;
        
        private string transcriptionField;
        
        private attachment[] attachmentsField;
        
        /// <remarks/>
        public string recordID {
            get {
                return this.recordIDField;
            }
            set {
                this.recordIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime listenedOn {
            get {
                return this.listenedOnField;
            }
            set {
                this.listenedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool listenedOnSpecified {
            get {
                return this.listenedOnFieldSpecified;
            }
            set {
                this.listenedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string listenedBy {
            get {
                return this.listenedByField;
            }
            set {
                this.listenedByField = value;
            }
        }
        
        /// <remarks/>
        public string transcription {
            get {
                return this.transcriptionField;
            }
            set {
                this.transcriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public attachment[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class attachment : mspObject {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("content", typeof(content))]
        [System.Xml.Serialization.XmlElementAttribute("contentReference", typeof(contentReference))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class content : mspObject {
        
        private byte[] contentBinaryField;
        
        private string contentEncodingField;
        
        private contentType contentTypeField;
        
        private string fileNameField;
        
        private string sourceFilePathField;
        
        private System.DateTime attachDateTimeField;
        
        private bool attachDateTimeFieldSpecified;
        
        private string captionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] contentBinary {
            get {
                return this.contentBinaryField;
            }
            set {
                this.contentBinaryField = value;
            }
        }
        
        /// <remarks/>
        public string contentEncoding {
            get {
                return this.contentEncodingField;
            }
            set {
                this.contentEncodingField = value;
            }
        }
        
        /// <remarks/>
        public contentType contentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string sourceFilePath {
            get {
                return this.sourceFilePathField;
            }
            set {
                this.sourceFilePathField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime attachDateTime {
            get {
                return this.attachDateTimeField;
            }
            set {
                this.attachDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool attachDateTimeSpecified {
            get {
                return this.attachDateTimeFieldSpecified;
            }
            set {
                this.attachDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class contentType {
        
        private binaryType typeField;
        
        private bool typeFieldSpecified;
        
        private string subTypeField;
        
        private string charsetField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public binaryType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string subType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string charset {
            get {
                return this.charsetField;
            }
            set {
                this.charsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum binaryType {
        
        /// <remarks/>
        text,
        
        /// <remarks/>
        image,
        
        /// <remarks/>
        audio,
        
        /// <remarks/>
        video,
        
        /// <remarks/>
        application,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class contentReference {
        
        private string uRIField;
        
        private string nameField;
        
        private string categoryField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="anyURI")]
        public string URI {
            get {
                return this.uRIField;
            }
            set {
                this.uRIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageReasonCodeList : mspObject {
        
        private outageReason outageCauseField;
        
        private outageReason equipmentFailureField;
        
        private outageReason voltageLevelField;
        
        private outageReason weatherConditionField;
        
        private outageReason systemCharacterizationField;
        
        private outageReason responsibleSystemField;
        
        private outageReason outageConditionField;
        
        private outageReason interruptingDeviceField;
        
        private outageReason interruptingDeviceInitiationField;
        
        private outageReason customerResorationField;
        
        /// <remarks/>
        public outageReason outageCause {
            get {
                return this.outageCauseField;
            }
            set {
                this.outageCauseField = value;
            }
        }
        
        /// <remarks/>
        public outageReason equipmentFailure {
            get {
                return this.equipmentFailureField;
            }
            set {
                this.equipmentFailureField = value;
            }
        }
        
        /// <remarks/>
        public outageReason voltageLevel {
            get {
                return this.voltageLevelField;
            }
            set {
                this.voltageLevelField = value;
            }
        }
        
        /// <remarks/>
        public outageReason weatherCondition {
            get {
                return this.weatherConditionField;
            }
            set {
                this.weatherConditionField = value;
            }
        }
        
        /// <remarks/>
        public outageReason systemCharacterization {
            get {
                return this.systemCharacterizationField;
            }
            set {
                this.systemCharacterizationField = value;
            }
        }
        
        /// <remarks/>
        public outageReason responsibleSystem {
            get {
                return this.responsibleSystemField;
            }
            set {
                this.responsibleSystemField = value;
            }
        }
        
        /// <remarks/>
        public outageReason outageCondition {
            get {
                return this.outageConditionField;
            }
            set {
                this.outageConditionField = value;
            }
        }
        
        /// <remarks/>
        public outageReason interruptingDevice {
            get {
                return this.interruptingDeviceField;
            }
            set {
                this.interruptingDeviceField = value;
            }
        }
        
        /// <remarks/>
        public outageReason interruptingDeviceInitiation {
            get {
                return this.interruptingDeviceInitiationField;
            }
            set {
                this.interruptingDeviceInitiationField = value;
            }
        }
        
        /// <remarks/>
        public outageReason customerResoration {
            get {
                return this.customerResorationField;
            }
            set {
                this.customerResorationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageReason {
        
        private string descriptionField;
        
        private outageReportingCode[] outageReportingCodeListField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageReportingCode[] outageReportingCodeList {
            get {
                return this.outageReportingCodeListField;
            }
            set {
                this.outageReportingCodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageReportingCode {
        
        private string reportingBodyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string reportingBody {
            get {
                return this.reportingBodyField;
            }
            set {
                this.reportingBodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageEventStatus : mspObject {
        
        private outageStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private bool crewDispatchedField;
        
        private bool crewDispatchedFieldSpecified;
        
        private bool crewOnSiteField;
        
        private bool crewOnSiteFieldSpecified;
        
        private System.DateTime eTORField;
        
        private bool eTORFieldSpecified;
        
        private bool customerFoundField;
        
        private bool customerFoundFieldSpecified;
        
        private outageAttachment[] outageAttachmentsField;
        
        /// <remarks/>
        public outageStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool crewDispatched {
            get {
                return this.crewDispatchedField;
            }
            set {
                this.crewDispatchedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crewDispatchedSpecified {
            get {
                return this.crewDispatchedFieldSpecified;
            }
            set {
                this.crewDispatchedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool crewOnSite {
            get {
                return this.crewOnSiteField;
            }
            set {
                this.crewOnSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crewOnSiteSpecified {
            get {
                return this.crewOnSiteFieldSpecified;
            }
            set {
                this.crewOnSiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ETOR {
            get {
                return this.eTORField;
            }
            set {
                this.eTORField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ETORSpecified {
            get {
                return this.eTORFieldSpecified;
            }
            set {
                this.eTORFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool customerFound {
            get {
                return this.customerFoundField;
            }
            set {
                this.customerFoundField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool customerFoundSpecified {
            get {
                return this.customerFoundFieldSpecified;
            }
            set {
                this.customerFoundFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageAttachment[] outageAttachments {
            get {
                return this.outageAttachmentsField;
            }
            set {
                this.outageAttachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageAttachment {
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attachmentID", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("transcription", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        attachmentID,
        
        /// <remarks/>
        transcription,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageCustomer {
        
        private string customerIDField;
        
        private telephoneNumber callBackPhoneField;
        
        private timeToCall timeToCallField;
        
        private bool callBackFlagField;
        
        private bool callBackFlagFieldSpecified;
        
        private string callBackContactFirstNameField;
        
        private string callBackContactLastNameField;
        
        private string callBackContactMNameField;
        
        private callBackStatus callBackStatusField;
        
        private bool callBackStatusFieldSpecified;
        
        private System.DateTime callBackCompletedTimeField;
        
        private bool callBackCompletedTimeFieldSpecified;
        
        private callBackType callBackTypeField;
        
        private bool callBackTypeFieldSpecified;
        
        private string callRecordIDField;
        
        private string outageEventIDField;
        
        private telephoneNumber callerIDField;
        
        private string serviceLocationIDField;
        
        private serviceID serviceIDField;
        
        private meterID meterIDField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public telephoneNumber callBackPhone {
            get {
                return this.callBackPhoneField;
            }
            set {
                this.callBackPhoneField = value;
            }
        }
        
        /// <remarks/>
        public timeToCall timeToCall {
            get {
                return this.timeToCallField;
            }
            set {
                this.timeToCallField = value;
            }
        }
        
        /// <remarks/>
        public bool callBackFlag {
            get {
                return this.callBackFlagField;
            }
            set {
                this.callBackFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackFlagSpecified {
            get {
                return this.callBackFlagFieldSpecified;
            }
            set {
                this.callBackFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string callBackContactFirstName {
            get {
                return this.callBackContactFirstNameField;
            }
            set {
                this.callBackContactFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string callBackContactLastName {
            get {
                return this.callBackContactLastNameField;
            }
            set {
                this.callBackContactLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string callBackContactMName {
            get {
                return this.callBackContactMNameField;
            }
            set {
                this.callBackContactMNameField = value;
            }
        }
        
        /// <remarks/>
        public callBackStatus callBackStatus {
            get {
                return this.callBackStatusField;
            }
            set {
                this.callBackStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackStatusSpecified {
            get {
                return this.callBackStatusFieldSpecified;
            }
            set {
                this.callBackStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime callBackCompletedTime {
            get {
                return this.callBackCompletedTimeField;
            }
            set {
                this.callBackCompletedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackCompletedTimeSpecified {
            get {
                return this.callBackCompletedTimeFieldSpecified;
            }
            set {
                this.callBackCompletedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public callBackType callBackType {
            get {
                return this.callBackTypeField;
            }
            set {
                this.callBackTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callBackTypeSpecified {
            get {
                return this.callBackTypeFieldSpecified;
            }
            set {
                this.callBackTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string callRecordID {
            get {
                return this.callRecordIDField;
            }
            set {
                this.callRecordIDField = value;
            }
        }
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public telephoneNumber callerID {
            get {
                return this.callerIDField;
            }
            set {
                this.callerIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class telephoneNumber {
        
        private string areaCodeField;
        
        private string cityCodeField;
        
        private string countryCodeField;
        
        private string localNumberField;
        
        private string extensionField;
        
        /// <remarks/>
        public string areaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string cityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string localNumber {
            get {
                return this.localNumberField;
            }
            set {
                this.localNumberField = value;
            }
        }
        
        /// <remarks/>
        public string extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class timeToCall {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum callBackStatus {
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        StillOff,
        
        /// <remarks/>
        Undialable,
        
        /// <remarks/>
        MaxDial,
        
        /// <remarks/>
        NoResponse,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum callBackType {
        
        /// <remarks/>
        IVR,
        
        /// <remarks/>
        Manual,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class crewActionEvent : mspObject {
        
        private string outageEventIDField;
        
        private string requestedCrewIDField;
        
        private string assignedCrewIDField;
        
        private crewAction crewActionField;
        
        private bool crewActionFieldSpecified;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public string requestedCrewID {
            get {
                return this.requestedCrewIDField;
            }
            set {
                this.requestedCrewIDField = value;
            }
        }
        
        /// <remarks/>
        public string assignedCrewID {
            get {
                return this.assignedCrewIDField;
            }
            set {
                this.assignedCrewIDField = value;
            }
        }
        
        /// <remarks/>
        public crewAction crewAction {
            get {
                return this.crewActionField;
            }
            set {
                this.crewActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crewActionSpecified {
            get {
                return this.crewActionFieldSpecified;
            }
            set {
                this.crewActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum crewAction {
        
        /// <remarks/>
        Request,
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Declined,
        
        /// <remarks/>
        Released,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class assessmentLocation : mspPointObject {
        
        private address addressField;
        
        private string locationOffsetField;
        
        private assessment[] assessmentListField;
        
        private attachment[] attachmentsField;
        
        /// <remarks/>
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string locationOffset {
            get {
                return this.locationOffsetField;
            }
            set {
                this.locationOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public assessment[] assessmentList {
            get {
                return this.assessmentListField;
            }
            set {
                this.assessmentListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public attachment[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class assessment : mspObject {
        
        private string categoryField;
        
        private System.DateTime createdOnField;
        
        private bool createdOnFieldSpecified;
        
        private string createdByField;
        
        private System.DateTime closedOnField;
        
        private bool closedOnFieldSpecified;
        
        private string closedByField;
        
        private string elementIDField;
        
        private string elementNameField;
        
        private string elementTypeField;
        
        private float estimatedField;
        
        private bool estimatedFieldSpecified;
        
        private string eventIDField;
        
        private string jobNumberField;
        
        private attachment[] attachmentsField;
        
        private System.DateTime expiresOnField;
        
        private bool expiresOnFieldSpecified;
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdOnSpecified {
            get {
                return this.createdOnFieldSpecified;
            }
            set {
                this.createdOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime closedOn {
            get {
                return this.closedOnField;
            }
            set {
                this.closedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closedOnSpecified {
            get {
                return this.closedOnFieldSpecified;
            }
            set {
                this.closedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string closedBy {
            get {
                return this.closedByField;
            }
            set {
                this.closedByField = value;
            }
        }
        
        /// <remarks/>
        public string elementID {
            get {
                return this.elementIDField;
            }
            set {
                this.elementIDField = value;
            }
        }
        
        /// <remarks/>
        public string elementName {
            get {
                return this.elementNameField;
            }
            set {
                this.elementNameField = value;
            }
        }
        
        /// <remarks/>
        public string elementType {
            get {
                return this.elementTypeField;
            }
            set {
                this.elementTypeField = value;
            }
        }
        
        /// <remarks/>
        public float estimated {
            get {
                return this.estimatedField;
            }
            set {
                this.estimatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estimatedSpecified {
            get {
                return this.estimatedFieldSpecified;
            }
            set {
                this.estimatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string eventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public attachment[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expiresOn {
            get {
                return this.expiresOnField;
            }
            set {
                this.expiresOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expiresOnSpecified {
            get {
                return this.expiresOnFieldSpecified;
            }
            set {
                this.expiresOnFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class load : mspPointObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class genericPointFeature : mspPointObject {
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        private graphicSymbol graphicSymbolField;
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
        
        /// <remarks/>
        public graphicSymbol graphicSymbol {
            get {
                return this.graphicSymbolField;
            }
            set {
                this.graphicSymbolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class graphicSymbol {
        
        private float rotationField;
        
        private bool rotationFieldSpecified;
        
        private float scaleField;
        
        private bool scaleFieldSpecified;
        
        private PointType gMLLocationField;
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        /// <remarks/>
        public float rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotationSpecified {
            get {
                return this.rotationFieldSpecified;
            }
            set {
                this.rotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scaleSpecified {
            get {
                return this.scaleFieldSpecified;
            }
            set {
                this.scaleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PointType GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class secondaryJunctionBox : mspPointObject {
        
        private string junctionBoxTypeField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string junctionBoxType {
            get {
                return this.junctionBoxTypeField;
            }
            set {
                this.junctionBoxTypeField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class riser : mspPointObject {
        
        private string constTypeField;
        
        private height riserHeightField;
        
        private string materialField;
        
        /// <remarks/>
        public string constType {
            get {
                return this.constTypeField;
            }
            set {
                this.constTypeField = value;
            }
        }
        
        /// <remarks/>
        public height riserHeight {
            get {
                return this.riserHeightField;
            }
            set {
                this.riserHeightField = value;
            }
        }
        
        /// <remarks/>
        public string material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class height {
        
        private lengthUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lengthUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum lengthUnits {
        
        /// <remarks/>
        Mils,
        
        /// <remarks/>
        Inches,
        
        /// <remarks/>
        Feet,
        
        /// <remarks/>
        Yards,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Thousand feet")]
        Thousandfeet,
        
        /// <remarks/>
        Miles,
        
        /// <remarks/>
        Micrometers,
        
        /// <remarks/>
        Millimeters,
        
        /// <remarks/>
        Decimeters,
        
        /// <remarks/>
        Centimeters,
        
        /// <remarks/>
        Meters,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("100 Meters")]
        Item100Meters,
        
        /// <remarks/>
        Kilometers,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class primaryCabinet : mspPointObject {
        
        private string structTypeField;
        
        private objectRef[] cabinetContentsListField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string structType {
            get {
                return this.structTypeField;
            }
            set {
                this.structTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("cabinetContentsItem", IsNullable=false)]
        public objectRef[] cabinetContentsList {
            get {
                return this.cabinetContentsListField;
            }
            set {
                this.cabinetContentsListField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class powerSystemDevice : mspPointObject {
        
        private string deviceDescriptionField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class pole : mspPointObject {
        
        private System.DateTime inspDateField;
        
        private bool inspDateFieldSpecified;
        
        private string manufacturerField;
        
        private System.DateTime mfgDateField;
        
        private bool mfgDateFieldSpecified;
        
        private string ownerField;
        
        private height poleHeightField;
        
        private string poleNumberField;
        
        private poleClass poleClassField;
        
        private bool poleClassFieldSpecified;
        
        private poleType poleTypeField;
        
        private bool poleTypeFieldSpecified;
        
        private treatment poleTreatmentField;
        
        private bool poleTreatmentFieldSpecified;
        
        private poleUse poleUseField;
        
        private bool poleUseFieldSpecified;
        
        private jointUse[] jointUseListField;
        
        private guy[] guyListField;
        
        /// <remarks/>
        public System.DateTime inspDate {
            get {
                return this.inspDateField;
            }
            set {
                this.inspDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inspDateSpecified {
            get {
                return this.inspDateFieldSpecified;
            }
            set {
                this.inspDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime mfgDate {
            get {
                return this.mfgDateField;
            }
            set {
                this.mfgDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mfgDateSpecified {
            get {
                return this.mfgDateFieldSpecified;
            }
            set {
                this.mfgDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public height poleHeight {
            get {
                return this.poleHeightField;
            }
            set {
                this.poleHeightField = value;
            }
        }
        
        /// <remarks/>
        public string poleNumber {
            get {
                return this.poleNumberField;
            }
            set {
                this.poleNumberField = value;
            }
        }
        
        /// <remarks/>
        public poleClass poleClass {
            get {
                return this.poleClassField;
            }
            set {
                this.poleClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleClassSpecified {
            get {
                return this.poleClassFieldSpecified;
            }
            set {
                this.poleClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleType poleType {
            get {
                return this.poleTypeField;
            }
            set {
                this.poleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleTypeSpecified {
            get {
                return this.poleTypeFieldSpecified;
            }
            set {
                this.poleTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public treatment poleTreatment {
            get {
                return this.poleTreatmentField;
            }
            set {
                this.poleTreatmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleTreatmentSpecified {
            get {
                return this.poleTreatmentFieldSpecified;
            }
            set {
                this.poleTreatmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleUse poleUse {
            get {
                return this.poleUseField;
            }
            set {
                this.poleUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleUseSpecified {
            get {
                return this.poleUseFieldSpecified;
            }
            set {
                this.poleUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public jointUse[] jointUseList {
            get {
                return this.jointUseListField;
            }
            set {
                this.jointUseListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public guy[] guyList {
            get {
                return this.guyListField;
            }
            set {
                this.guyListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum poleClass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 1")]
        Class1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 2")]
        Class2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 3")]
        Class3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 4")]
        Class4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 5")]
        Class5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 6")]
        Class6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 7")]
        Class7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 8")]
        Class8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 9")]
        Class9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Class 10")]
        Class10,
        
        /// <remarks/>
        H1,
        
        /// <remarks/>
        H2,
        
        /// <remarks/>
        H3,
        
        /// <remarks/>
        H4,
        
        /// <remarks/>
        H5,
        
        /// <remarks/>
        H6,
        
        /// <remarks/>
        H7,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum poleType {
        
        /// <remarks/>
        Aluminum,
        
        /// <remarks/>
        Concrete,
        
        /// <remarks/>
        Fiberglass,
        
        /// <remarks/>
        Galvanized,
        
        /// <remarks/>
        Steel,
        
        /// <remarks/>
        Wood,
        
        /// <remarks/>
        WoodTreated,
        
        /// <remarks/>
        WoodUntreated,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum treatment {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Butt,
        
        /// <remarks/>
        Natural,
        
        /// <remarks/>
        Penta,
        
        /// <remarks/>
        Creosote,
        
        /// <remarks/>
        CCA,
        
        /// <remarks/>
        Chemonite,
        
        /// <remarks/>
        Napthena,
        
        /// <remarks/>
        Cellon,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum poleUse {
        
        /// <remarks/>
        Distribution,
        
        /// <remarks/>
        Transmission,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Guy Stub")]
        GuyStub,
        
        /// <remarks/>
        Stub,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class jointUse {
        
        private string companyIDField;
        
        private string jUseTypeField;
        
        private height jUseHeightField;
        
        private bool isGuyedField;
        
        private bool isGuyedFieldSpecified;
        
        /// <remarks/>
        public string companyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public string jUseType {
            get {
                return this.jUseTypeField;
            }
            set {
                this.jUseTypeField = value;
            }
        }
        
        /// <remarks/>
        public height jUseHeight {
            get {
                return this.jUseHeightField;
            }
            set {
                this.jUseHeightField = value;
            }
        }
        
        /// <remarks/>
        public bool isGuyed {
            get {
                return this.isGuyedField;
            }
            set {
                this.isGuyedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGuyedSpecified {
            get {
                return this.isGuyedFieldSpecified;
            }
            set {
                this.isGuyedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class guy : mspPointObject {
        
        private featureStatus statusField;
        
        private bool statusFieldSpecified;
        
        private anchor[] anchorListField;
        
        private guyType guyTypeField;
        
        private bool guyTypeFieldSpecified;
        
        private guyAgainst guyAgainstField;
        
        private bool guyAgainstFieldSpecified;
        
        private height attachmentHeightField;
        
        /// <remarks/>
        public featureStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public anchor[] anchorList {
            get {
                return this.anchorListField;
            }
            set {
                this.anchorListField = value;
            }
        }
        
        /// <remarks/>
        public guyType guyType {
            get {
                return this.guyTypeField;
            }
            set {
                this.guyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guyTypeSpecified {
            get {
                return this.guyTypeFieldSpecified;
            }
            set {
                this.guyTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public guyAgainst guyAgainst {
            get {
                return this.guyAgainstField;
            }
            set {
                this.guyAgainstField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool guyAgainstSpecified {
            get {
                return this.guyAgainstFieldSpecified;
            }
            set {
                this.guyAgainstFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public height attachmentHeight {
            get {
                return this.attachmentHeightField;
            }
            set {
                this.attachmentHeightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum featureStatus {
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        R,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class anchor : mspObject {
        
        private lead leadField;
        
        private featureStatus statusField;
        
        private bool statusFieldSpecified;
        
        /// <remarks/>
        public lead lead {
            get {
                return this.leadField;
            }
            set {
                this.leadField = value;
            }
        }
        
        /// <remarks/>
        public featureStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class lead {
        
        private lengthUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lengthUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum guyType {
        
        /// <remarks/>
        Down,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Double down")]
        Doubledown,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum guyAgainst {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Dead-end")]
        Deadend,
        
        /// <remarks/>
        Angle,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Storm-right")]
        Stormright,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Storm-left")]
        Stormleft,
        
        /// <remarks/>
        Unkonown,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class serviceLocation : mspPointObject {
        
        private string customerIDField;
        
        private string descriptionField;
        
        private string facilityNameField;
        
        private address serviceAddressField;
        
        private string sICField;
        
        private string siteIDField;
        
        private graphicSymbol[] graphicSymbolListField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private network networkField;
        
        private electricService[] electricServiceListField;
        
        private waterService[] waterServiceListField;
        
        private gasService[] gasServiceListField;
        
        private propaneService[] propaneServiceListField;
        
        private otherService[] otherServiceListField;
        
        private phoneNumber[] phoneListField;
        
        private string specialNeedsField;
        
        private serviceOrder[] serviceOrderListField;
        
        private workList workListField;
        
        private workOrder[] workOrderListField;
        
        private maintenanceOrder[] maintenanceOrderListField;
        
        private contactInfo contactInfoField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string facilityName {
            get {
                return this.facilityNameField;
            }
            set {
                this.facilityNameField = value;
            }
        }
        
        /// <remarks/>
        public address serviceAddress {
            get {
                return this.serviceAddressField;
            }
            set {
                this.serviceAddressField = value;
            }
        }
        
        /// <remarks/>
        public string SIC {
            get {
                return this.sICField;
            }
            set {
                this.sICField = value;
            }
        }
        
        /// <remarks/>
        public string siteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public graphicSymbol[] graphicSymbolList {
            get {
                return this.graphicSymbolListField;
            }
            set {
                this.graphicSymbolListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        public network network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public electricService[] electricServiceList {
            get {
                return this.electricServiceListField;
            }
            set {
                this.electricServiceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public waterService[] waterServiceList {
            get {
                return this.waterServiceListField;
            }
            set {
                this.waterServiceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public gasService[] gasServiceList {
            get {
                return this.gasServiceListField;
            }
            set {
                this.gasServiceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public propaneService[] propaneServiceList {
            get {
                return this.propaneServiceListField;
            }
            set {
                this.propaneServiceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public otherService[] otherServiceList {
            get {
                return this.otherServiceListField;
            }
            set {
                this.otherServiceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public phoneNumber[] phoneList {
            get {
                return this.phoneListField;
            }
            set {
                this.phoneListField = value;
            }
        }
        
        /// <remarks/>
        public string specialNeeds {
            get {
                return this.specialNeedsField;
            }
            set {
                this.specialNeedsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public serviceOrder[] serviceOrderList {
            get {
                return this.serviceOrderListField;
            }
            set {
                this.serviceOrderListField = value;
            }
        }
        
        /// <remarks/>
        public workList workList {
            get {
                return this.workListField;
            }
            set {
                this.workListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public workOrder[] workOrderList {
            get {
                return this.workOrderListField;
            }
            set {
                this.workOrderListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public maintenanceOrder[] maintenanceOrderList {
            get {
                return this.maintenanceOrderListField;
            }
            set {
                this.maintenanceOrderListField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class genericAnnotationFeature : mspPointObject {
        
        private string annotationField;
        
        private string featureTypeField;
        
        private float scaleField;
        
        private bool scaleFieldSpecified;
        
        private string styleNameField;
        
        private string featureSubtypeField;
        
        /// <remarks/>
        public string annotation {
            get {
                return this.annotationField;
            }
            set {
                this.annotationField = value;
            }
        }
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public float scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scaleSpecified {
            get {
                return this.scaleFieldSpecified;
            }
            set {
                this.scaleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string styleName {
            get {
                return this.styleNameField;
            }
            set {
                this.styleNameField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class network {
        
        private string boardDistField;
        
        private string taxDistField;
        
        private string franchiseDistField;
        
        private string schoolDistField;
        
        private string districtField;
        
        private string countyField;
        
        private string cityCodeField;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        private string sectionField;
        
        private string townshipField;
        
        private string rangeField;
        
        private string subdivisionField;
        
        private string blockField;
        
        private string lotField;
        
        /// <remarks/>
        public string boardDist {
            get {
                return this.boardDistField;
            }
            set {
                this.boardDistField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string franchiseDist {
            get {
                return this.franchiseDistField;
            }
            set {
                this.franchiseDistField = value;
            }
        }
        
        /// <remarks/>
        public string schoolDist {
            get {
                return this.schoolDistField;
            }
            set {
                this.schoolDistField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string cityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public string subdivision {
            get {
                return this.subdivisionField;
            }
            set {
                this.subdivisionField = value;
            }
        }
        
        /// <remarks/>
        public string block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        public string lot {
            get {
                return this.lotField;
            }
            set {
                this.lotField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class electricService : mspObject {
        
        private string sectionIDField;
        
        private objectRef[] parentSectionIDField;
        
        private nodeIdentifier1 fromNodeIDField;
        
        private nodeIdentifier1 toNodeIDField;
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private string serviceLocationIDField;
        
        private string meterBaseIDField;
        
        private string electricMeterIDField;
        
        private electricLocationFields electricLocationFieldsField;
        
        private powerStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private string specialNeedsField;
        
        private string connectionField;
        
        private string loadMgmtField;
        
        private bool isCogenerationSiteField;
        
        private bool isCogenerationSiteFieldSpecified;
        
        private mspLoadGroup loadField;
        
        private string woNumberField;
        
        private string soNumberField;
        
        private string revenueClassField;
        
        private string serviceStatusField;
        
        private string billingCycleField;
        
        private string routeField;
        
        private string budgetBillField;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private meterBase meterBaseField;
        
        private string rateCodeField;
        
        private string serviceSubTypeField;
        
        /// <remarks/>
        public string sectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID")]
        public objectRef[] parentSectionID {
            get {
                return this.parentSectionIDField;
            }
            set {
                this.parentSectionIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 fromNodeID {
            get {
                return this.fromNodeIDField;
            }
            set {
                this.fromNodeIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 toNodeID {
            get {
                return this.toNodeIDField;
            }
            set {
                this.toNodeIDField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public string electricMeterID {
            get {
                return this.electricMeterIDField;
            }
            set {
                this.electricMeterIDField = value;
            }
        }
        
        /// <remarks/>
        public electricLocationFields electricLocationFields {
            get {
                return this.electricLocationFieldsField;
            }
            set {
                this.electricLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public powerStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string specialNeeds {
            get {
                return this.specialNeedsField;
            }
            set {
                this.specialNeedsField = value;
            }
        }
        
        /// <remarks/>
        public string connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        public string loadMgmt {
            get {
                return this.loadMgmtField;
            }
            set {
                this.loadMgmtField = value;
            }
        }
        
        /// <remarks/>
        public bool isCogenerationSite {
            get {
                return this.isCogenerationSiteField;
            }
            set {
                this.isCogenerationSiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCogenerationSiteSpecified {
            get {
                return this.isCogenerationSiteFieldSpecified;
            }
            set {
                this.isCogenerationSiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspLoadGroup load {
            get {
                return this.loadField;
            }
            set {
                this.loadField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public string serviceStatus {
            get {
                return this.serviceStatusField;
            }
            set {
                this.serviceStatusField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string budgetBill {
            get {
                return this.budgetBillField;
            }
            set {
                this.budgetBillField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterBase meterBase {
            get {
                return this.meterBaseField;
            }
            set {
                this.meterBaseField = value;
            }
        }
        
        /// <remarks/>
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceSubType {
            get {
                return this.serviceSubTypeField;
            }
            set {
                this.serviceSubTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="nodeIdentifier", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class nodeIdentifier1 {
        
        private string nameField;
        
        private string objectIDField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum powerStatus {
        
        /// <remarks/>
        PowerOff,
        
        /// <remarks/>
        PowerOn,
        
        /// <remarks/>
        StatusUnknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspLoadGroup : mspObject {
        
        private string billRefField;
        
        private loadSection[] loadSectionsField;
        
        /// <remarks/>
        public string billRef {
            get {
                return this.billRefField;
            }
            set {
                this.billRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public loadSection[] loadSections {
            get {
                return this.loadSectionsField;
            }
            set {
                this.loadSectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadSection {
        
        private eaEquipID loadMixField;
        
        private string loadGroupField;
        
        private string loadClassField;
        
        private string loadZoneField;
        
        private loadDistr loadDistrField;
        
        private bool loadDistrFieldSpecified;
        
        private float loadGrowthField;
        
        private bool loadGrowthFieldSpecified;
        
        private loadInterruptibleType interruptibleTypeField;
        
        private bool interruptibleTypeFieldSpecified;
        
        private allocatedLoad[] allocatedField;
        
        private LoadCurve loadCurveField;
        
        private string loadGroupIDField;
        
        /// <remarks/>
        public eaEquipID loadMix {
            get {
                return this.loadMixField;
            }
            set {
                this.loadMixField = value;
            }
        }
        
        /// <remarks/>
        public string loadGroup {
            get {
                return this.loadGroupField;
            }
            set {
                this.loadGroupField = value;
            }
        }
        
        /// <remarks/>
        public string loadClass {
            get {
                return this.loadClassField;
            }
            set {
                this.loadClassField = value;
            }
        }
        
        /// <remarks/>
        public string loadZone {
            get {
                return this.loadZoneField;
            }
            set {
                this.loadZoneField = value;
            }
        }
        
        /// <remarks/>
        public loadDistr loadDistr {
            get {
                return this.loadDistrField;
            }
            set {
                this.loadDistrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadDistrSpecified {
            get {
                return this.loadDistrFieldSpecified;
            }
            set {
                this.loadDistrFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float loadGrowth {
            get {
                return this.loadGrowthField;
            }
            set {
                this.loadGrowthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadGrowthSpecified {
            get {
                return this.loadGrowthFieldSpecified;
            }
            set {
                this.loadGrowthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public loadInterruptibleType interruptibleType {
            get {
                return this.interruptibleTypeField;
            }
            set {
                this.interruptibleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool interruptibleTypeSpecified {
            get {
                return this.interruptibleTypeFieldSpecified;
            }
            set {
                this.interruptibleTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public allocatedLoad[] allocated {
            get {
                return this.allocatedField;
            }
            set {
                this.allocatedField = value;
            }
        }
        
        /// <remarks/>
        public LoadCurve loadCurve {
            get {
                return this.loadCurveField;
            }
            set {
                this.loadCurveField = value;
            }
        }
        
        /// <remarks/>
        public string loadGroupID {
            get {
                return this.loadGroupIDField;
            }
            set {
                this.loadGroupIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class eaEquipID {
        
        private string objectIDField;
        
        private equipmentType equipmentTypeField;
        
        private bool equipmentTypeFieldSpecified;
        
        private string entryNameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public equipmentType equipmentType {
            get {
                return this.equipmentTypeField;
            }
            set {
                this.equipmentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool equipmentTypeSpecified {
            get {
                return this.equipmentTypeFieldSpecified;
            }
            set {
                this.equipmentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string entryName {
            get {
                return this.entryNameField;
            }
            set {
                this.entryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum equipmentType {
        
        /// <remarks/>
        Conductor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Concentric neutral cable")]
        Concentricneutralcable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Tape shield cable")]
        Tapeshieldcable,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Line construction")]
        Lineconstruction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Secondary conductor")]
        Secondaryconductor,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Service drop")]
        Servicedrop,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Material attributes")]
        Materialattributes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Line environmental attributes")]
        Lineenvironmentalattributes,
        
        /// <remarks/>
        ROWAttributes,
        
        /// <remarks/>
        Material,
        
        /// <remarks/>
        Transformer,
        
        /// <remarks/>
        Regulator,
        
        /// <remarks/>
        Breaker,
        
        /// <remarks/>
        Fuse,
        
        /// <remarks/>
        Recloser,
        
        /// <remarks/>
        Sectionalizer,
        
        /// <remarks/>
        Switch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Load mix")]
        Loadmix,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Zsm impedance")]
        Zsmimpedance,
        
        /// <remarks/>
        InductionMachine,
        
        /// <remarks/>
        SynchronousMachine,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum loadDistr {
        
        /// <remarks/>
        Uniform,
        
        /// <remarks/>
        LoadEnd,
        
        /// <remarks/>
        SourceEnd,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum loadInterruptibleType {
        
        /// <remarks/>
        General,
        
        /// <remarks/>
        Interruptible,
        
        /// <remarks/>
        Noninterruptible,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class allocatedLoad {
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private realPower realPowerField;
        
        private reactivePower reactivePowerField;
        
        private string noOfCustomersField;
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public realPower realPower {
            get {
                return this.realPowerField;
            }
            set {
                this.realPowerField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower reactivePower {
            get {
                return this.reactivePowerField;
            }
            set {
                this.reactivePowerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string noOfCustomers {
            get {
                return this.noOfCustomersField;
            }
            set {
                this.noOfCustomersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class realPower {
        
        private realPowerUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public realPowerUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum realPowerUnits {
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        MW,
        
        /// <remarks/>
        GW,
        
        /// <remarks/>
        mW,
        
        /// <remarks/>
        microW,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Percent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class reactivePower {
        
        private reactivePowerUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public reactivePowerUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum reactivePowerUnits {
        
        /// <remarks/>
        mVAr,
        
        /// <remarks/>
        VAr,
        
        /// <remarks/>
        kVAr,
        
        /// <remarks/>
        MVAr,
        
        /// <remarks/>
        GVAr,
        
        /// <remarks/>
        microVAr,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Percent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterBase : mspPointObject {
        
        private meterID meterIDField;
        
        private string serviceLocationIDField;
        
        private string electricServiceIDField;
        
        private string premiseIDField;
        
        private string formField;
        
        private string classField;
        
        private baseType baseTypeField;
        
        private bool baseTypeFieldSpecified;
        
        private instrumentTransformers instrumentTransformersField;
        
        private deviceList deviceListField;
        
        private electricMeter electricMeterField;
        
        private inHomeDisplay[] inHomeDisplaysField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string electricServiceID {
            get {
                return this.electricServiceIDField;
            }
            set {
                this.electricServiceIDField = value;
            }
        }
        
        /// <remarks/>
        public string premiseID {
            get {
                return this.premiseIDField;
            }
            set {
                this.premiseIDField = value;
            }
        }
        
        /// <remarks/>
        public string form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        public string @class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public baseType baseType {
            get {
                return this.baseTypeField;
            }
            set {
                this.baseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool baseTypeSpecified {
            get {
                return this.baseTypeFieldSpecified;
            }
            set {
                this.baseTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public instrumentTransformers instrumentTransformers {
            get {
                return this.instrumentTransformersField;
            }
            set {
                this.instrumentTransformersField = value;
            }
        }
        
        /// <remarks/>
        public deviceList deviceList {
            get {
                return this.deviceListField;
            }
            set {
                this.deviceListField = value;
            }
        }
        
        /// <remarks/>
        public electricMeter electricMeter {
            get {
                return this.electricMeterField;
            }
            set {
                this.electricMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public inHomeDisplay[] inHomeDisplays {
            get {
                return this.inHomeDisplaysField;
            }
            set {
                this.inHomeDisplaysField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class instrumentTransformers {
        
        private double ctField;
        
        private bool ctFieldSpecified;
        
        private double ptField;
        
        private bool ptFieldSpecified;
        
        /// <remarks/>
        public double ct {
            get {
                return this.ctField;
            }
            set {
                this.ctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ctSpecified {
            get {
                return this.ctFieldSpecified;
            }
            set {
                this.ctFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double pt {
            get {
                return this.ptField;
            }
            set {
                this.ptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ptSpecified {
            get {
                return this.ptFieldSpecified;
            }
            set {
                this.ptFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class deviceList {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string cdDeviceIDField;
        
        private string[] loadManagementDeviceListField;
        
        private string[] inHomeDisplayListField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string cdDeviceID {
            get {
                return this.cdDeviceIDField;
            }
            set {
                this.cdDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("loadManagementDeviceID", IsNullable=false)]
        public string[] loadManagementDeviceList {
            get {
                return this.loadManagementDeviceListField;
            }
            set {
                this.loadManagementDeviceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("inHomeDisplayID", IsNullable=false)]
        public string[] inHomeDisplayList {
            get {
                return this.inHomeDisplayListField;
            }
            set {
                this.inHomeDisplayListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inHomeDisplay : mspPointObject {
        
        private string manufacturerField;
        
        private string serialNumberField;
        
        private string deviceTypeField;
        
        private string meterBaseIDField;
        
        private module[] moduleListField;
        
        private utilityInfo utilityInfoField;
        
        private inHomeDisplayBillingMessage[] inHomeDisplayBillingMessageListField;
        
        private inHomeDisplayMessage[] inHomeDisplayMessageListField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string deviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public module[] moduleList {
            get {
                return this.moduleListField;
            }
            set {
                this.moduleListField = value;
            }
        }
        
        /// <remarks/>
        public utilityInfo utilityInfo {
            get {
                return this.utilityInfoField;
            }
            set {
                this.utilityInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public inHomeDisplayBillingMessage[] inHomeDisplayBillingMessageList {
            get {
                return this.inHomeDisplayBillingMessageListField;
            }
            set {
                this.inHomeDisplayBillingMessageListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public inHomeDisplayMessage[] inHomeDisplayMessageList {
            get {
                return this.inHomeDisplayMessageListField;
            }
            set {
                this.inHomeDisplayMessageListField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inHomeDisplayBillingMessage : mspObject {
        
        private string inHomeDisplayIDField;
        
        private money currentBalanceField;
        
        private string currentRateField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private string priorityOrderField;
        
        private money averageDailyUsageField;
        
        private money usedYesterdayField;
        
        private money usedThisMonthField;
        
        private money usedLastMonthField;
        
        private money usedFourWeeksAgoField;
        
        private money usedThisMonthLastYearField;
        
        private usageOtherPeriod[] usageOtherPeriodListField;
        
        private string daysRemainingField;
        
        /// <remarks/>
        public string inHomeDisplayID {
            get {
                return this.inHomeDisplayIDField;
            }
            set {
                this.inHomeDisplayIDField = value;
            }
        }
        
        /// <remarks/>
        public money currentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                this.currentBalanceField = value;
            }
        }
        
        /// <remarks/>
        public string currentRate {
            get {
                return this.currentRateField;
            }
            set {
                this.currentRateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
        
        /// <remarks/>
        public money averageDailyUsage {
            get {
                return this.averageDailyUsageField;
            }
            set {
                this.averageDailyUsageField = value;
            }
        }
        
        /// <remarks/>
        public money usedYesterday {
            get {
                return this.usedYesterdayField;
            }
            set {
                this.usedYesterdayField = value;
            }
        }
        
        /// <remarks/>
        public money usedThisMonth {
            get {
                return this.usedThisMonthField;
            }
            set {
                this.usedThisMonthField = value;
            }
        }
        
        /// <remarks/>
        public money usedLastMonth {
            get {
                return this.usedLastMonthField;
            }
            set {
                this.usedLastMonthField = value;
            }
        }
        
        /// <remarks/>
        public money usedFourWeeksAgo {
            get {
                return this.usedFourWeeksAgoField;
            }
            set {
                this.usedFourWeeksAgoField = value;
            }
        }
        
        /// <remarks/>
        public money usedThisMonthLastYear {
            get {
                return this.usedThisMonthLastYearField;
            }
            set {
                this.usedThisMonthLastYearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public usageOtherPeriod[] usageOtherPeriodList {
            get {
                return this.usageOtherPeriodListField;
            }
            set {
                this.usageOtherPeriodListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string daysRemaining {
            get {
                return this.daysRemainingField;
            }
            set {
                this.daysRemainingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class usageOtherPeriod {
        
        private money usageThisPeriodField;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private System.DateTime endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private string periodDescriptionField;
        
        /// <remarks/>
        public money usageThisPeriod {
            get {
                return this.usageThisPeriodField;
            }
            set {
                this.usageThisPeriodField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string periodDescription {
            get {
                return this.periodDescriptionField;
            }
            set {
                this.periodDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inHomeDisplayMessage : mspObject {
        
        private string inHomeDisplayIDField;
        
        private msgLine[] msgLineListField;
        
        private duration durationField;
        
        private string priorityOrderField;
        
        private bool isAlertField;
        
        private bool isAlertFieldSpecified;
        
        private string alertLevelField;
        
        private string reasonField;
        
        private string priorityField;
        
        private string transmissionModeField;
        
        private bool confirmationRequiredField;
        
        private bool confirmationRequiredFieldSpecified;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        /// <remarks/>
        public string inHomeDisplayID {
            get {
                return this.inHomeDisplayIDField;
            }
            set {
                this.inHomeDisplayIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public msgLine[] msgLineList {
            get {
                return this.msgLineListField;
            }
            set {
                this.msgLineListField = value;
            }
        }
        
        /// <remarks/>
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool isAlert {
            get {
                return this.isAlertField;
            }
            set {
                this.isAlertField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isAlertSpecified {
            get {
                return this.isAlertFieldSpecified;
            }
            set {
                this.isAlertFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string alertLevel {
            get {
                return this.alertLevelField;
            }
            set {
                this.alertLevelField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string transmissionMode {
            get {
                return this.transmissionModeField;
            }
            set {
                this.transmissionModeField = value;
            }
        }
        
        /// <remarks/>
        public bool confirmationRequired {
            get {
                return this.confirmationRequiredField;
            }
            set {
                this.confirmationRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool confirmationRequiredSpecified {
            get {
                return this.confirmationRequiredFieldSpecified;
            }
            set {
                this.confirmationRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class msgLine {
        
        private string sequenceNumberField;
        
        private string textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class waterService : mspObject {
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private string serviceLocationIDField;
        
        private string waterMeterIDField;
        
        private waterLocationFields waterLocationFieldsField;
        
        private string woNumberField;
        
        private string soNumberField;
        
        private string revenueClassField;
        
        private string serviceStatusField;
        
        private string billingCycleField;
        
        private string routeField;
        
        private string budgetbillField;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private waterMeter waterMeterField;
        
        private string rateCodeField;
        
        private string serviceSubTypeField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string waterMeterID {
            get {
                return this.waterMeterIDField;
            }
            set {
                this.waterMeterIDField = value;
            }
        }
        
        /// <remarks/>
        public waterLocationFields waterLocationFields {
            get {
                return this.waterLocationFieldsField;
            }
            set {
                this.waterLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public string serviceStatus {
            get {
                return this.serviceStatusField;
            }
            set {
                this.serviceStatusField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string budgetbill {
            get {
                return this.budgetbillField;
            }
            set {
                this.budgetbillField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public waterMeter waterMeter {
            get {
                return this.waterMeterField;
            }
            set {
                this.waterMeterField = value;
            }
        }
        
        /// <remarks/>
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceSubType {
            get {
                return this.serviceSubTypeField;
            }
            set {
                this.serviceSubTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gasService : mspObject {
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private string serviceLocationIDField;
        
        private string gasMeterIDField;
        
        private gasLocationFields gasLocationFieldsField;
        
        private string woNumberField;
        
        private string soNumberField;
        
        private string revenueClassField;
        
        private string serviceStatusField;
        
        private string billingCycleField;
        
        private string routeField;
        
        private string budgetBillField;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private gasMeter gasMeterField;
        
        private string rateCodeField;
        
        private string serviceSubTypeField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string gasMeterID {
            get {
                return this.gasMeterIDField;
            }
            set {
                this.gasMeterIDField = value;
            }
        }
        
        /// <remarks/>
        public gasLocationFields gasLocationFields {
            get {
                return this.gasLocationFieldsField;
            }
            set {
                this.gasLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public string serviceStatus {
            get {
                return this.serviceStatusField;
            }
            set {
                this.serviceStatusField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string budgetBill {
            get {
                return this.budgetBillField;
            }
            set {
                this.budgetBillField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public gasMeter gasMeter {
            get {
                return this.gasMeterField;
            }
            set {
                this.gasMeterField = value;
            }
        }
        
        /// <remarks/>
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceSubType {
            get {
                return this.serviceSubTypeField;
            }
            set {
                this.serviceSubTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class propaneService : mspObject {
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private string serviceLocationIDField;
        
        private string propaneMeterIDField;
        
        private propaneLocationFields propaneLocationFieldsField;
        
        private string woNumberField;
        
        private string soNumberField;
        
        private string revenueClassField;
        
        private string serviceStatusField;
        
        private string billingCycleField;
        
        private string routeField;
        
        private string budgetBillField;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private propaneMeter propaneMeterField;
        
        private string rateCodeField;
        
        private string serviceSubTypeField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string propaneMeterID {
            get {
                return this.propaneMeterIDField;
            }
            set {
                this.propaneMeterIDField = value;
            }
        }
        
        /// <remarks/>
        public propaneLocationFields propaneLocationFields {
            get {
                return this.propaneLocationFieldsField;
            }
            set {
                this.propaneLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public string serviceStatus {
            get {
                return this.serviceStatusField;
            }
            set {
                this.serviceStatusField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string budgetBill {
            get {
                return this.budgetBillField;
            }
            set {
                this.budgetBillField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public propaneMeter propaneMeter {
            get {
                return this.propaneMeterField;
            }
            set {
                this.propaneMeterField = value;
            }
        }
        
        /// <remarks/>
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceSubType {
            get {
                return this.serviceSubTypeField;
            }
            set {
                this.serviceSubTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class otherService : mspObject {
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private string serviceLocationIDField;
        
        private string otherMeterIDField;
        
        private otherLocationFields otherLocationFieldsField;
        
        private string woNumberField;
        
        private string soNumberField;
        
        private string revenueClassField;
        
        private string serviceStatusField;
        
        private string billingCycleField;
        
        private string routeField;
        
        private string budgetBillField;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private otherMeter otherMeterField;
        
        private string rateCodeField;
        
        private string serviceSubTypeField;
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string otherMeterID {
            get {
                return this.otherMeterIDField;
            }
            set {
                this.otherMeterIDField = value;
            }
        }
        
        /// <remarks/>
        public otherLocationFields otherLocationFields {
            get {
                return this.otherLocationFieldsField;
            }
            set {
                this.otherLocationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public string serviceStatus {
            get {
                return this.serviceStatusField;
            }
            set {
                this.serviceStatusField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string budgetBill {
            get {
                return this.budgetBillField;
            }
            set {
                this.budgetBillField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public otherMeter otherMeter {
            get {
                return this.otherMeterField;
            }
            set {
                this.otherMeterField = value;
            }
        }
        
        /// <remarks/>
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceSubType {
            get {
                return this.serviceSubTypeField;
            }
            set {
                this.serviceSubTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class phoneNumber {
        
        private telephoneNumber phoneField;
        
        private phoneType phoneTypeField;
        
        private bool phoneTypeFieldSpecified;
        
        private string priorityOrderField;
        
        /// <remarks/>
        public telephoneNumber phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public phoneType phoneType {
            get {
                return this.phoneTypeField;
            }
            set {
                this.phoneTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phoneTypeSpecified {
            get {
                return this.phoneTypeFieldSpecified;
            }
            set {
                this.phoneTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum phoneType {
        
        /// <remarks/>
        Home,
        
        /// <remarks/>
        Business,
        
        /// <remarks/>
        Mobile,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Business mobile")]
        Businessmobile,
        
        /// <remarks/>
        Pager,
        
        /// <remarks/>
        Fax,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class serviceOrder : mspObject {
        
        private string projectIDField;
        
        private string woNumberField;
        
        private string soNumberField;
        
        private soStatusCode soStatusCodeField;
        
        private bool soStatusCodeFieldSpecified;
        
        private string soTypeField;
        
        private string soDescriptionField;
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private string serviceLocationIDField;
        
        private network networkField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime closeDateField;
        
        private bool closeDateFieldSpecified;
        
        private string crewIDField;
        
        private string workedByField;
        
        private associatedMeters[] associatedMetersListField;
        
        private securityLight[] securityLightsField;
        
        private statusOfService[] serviceStatusesField;
        
        private equipmentStatus[] equipmentStatusesField;
        
        private otherIdentificationFields otherIdentificationFieldsField;
        
        /// <remarks/>
        public string projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
        
        /// <remarks/>
        public soStatusCode soStatusCode {
            get {
                return this.soStatusCodeField;
            }
            set {
                this.soStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool soStatusCodeSpecified {
            get {
                return this.soStatusCodeFieldSpecified;
            }
            set {
                this.soStatusCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string soType {
            get {
                return this.soTypeField;
            }
            set {
                this.soTypeField = value;
            }
        }
        
        /// <remarks/>
        public string soDescription {
            get {
                return this.soDescriptionField;
            }
            set {
                this.soDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public network network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime closeDate {
            get {
                return this.closeDateField;
            }
            set {
                this.closeDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closeDateSpecified {
            get {
                return this.closeDateFieldSpecified;
            }
            set {
                this.closeDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string crewID {
            get {
                return this.crewIDField;
            }
            set {
                this.crewIDField = value;
            }
        }
        
        /// <remarks/>
        public string workedBy {
            get {
                return this.workedByField;
            }
            set {
                this.workedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public associatedMeters[] associatedMetersList {
            get {
                return this.associatedMetersListField;
            }
            set {
                this.associatedMetersListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public securityLight[] securityLights {
            get {
                return this.securityLightsField;
            }
            set {
                this.securityLightsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public statusOfService[] serviceStatuses {
            get {
                return this.serviceStatusesField;
            }
            set {
                this.serviceStatusesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public equipmentStatus[] equipmentStatuses {
            get {
                return this.equipmentStatusesField;
            }
            set {
                this.equipmentStatusesField = value;
            }
        }
        
        /// <remarks/>
        public otherIdentificationFields otherIdentificationFields {
            get {
                return this.otherIdentificationFieldsField;
            }
            set {
                this.otherIdentificationFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum soStatusCode {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        OnHold,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Enroute,
        
        /// <remarks/>
        Onsite,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class associatedMeters : mspObject {
        
        private existingMeter existingMeterField;
        
        private replacementMeter replacementMeterField;
        
        /// <remarks/>
        public existingMeter existingMeter {
            get {
                return this.existingMeterField;
            }
            set {
                this.existingMeterField = value;
            }
        }
        
        /// <remarks/>
        public replacementMeter replacementMeter {
            get {
                return this.replacementMeterField;
            }
            set {
                this.replacementMeterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class existingMeter {
        
        private meterID meterIDField;
        
        private string meterTypeField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private readingValue[] readingValuesField;
        
        private string actionTakenField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterType {
            get {
                return this.meterTypeField;
            }
            set {
                this.meterTypeField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public readingValue[] readingValues {
            get {
                return this.readingValuesField;
            }
            set {
                this.readingValuesField = value;
            }
        }
        
        /// <remarks/>
        public string actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class replacementMeter {
        
        private meterID meterIDField;
        
        private string meterTypeField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private readingValue[] readingValuesField;
        
        private string actionTakenField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterType {
            get {
                return this.meterTypeField;
            }
            set {
                this.meterTypeField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public readingValue[] readingValues {
            get {
                return this.readingValuesField;
            }
            set {
                this.readingValuesField = value;
            }
        }
        
        /// <remarks/>
        public string actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class securityLight : mspElectricPoint {
        
        private string lightTypeField;
        
        private long wattageField;
        
        private bool wattageFieldSpecified;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private string sequenceField;
        
        private securityLightStatus statusField;
        
        private bool statusFieldSpecified;
        
        private string actionTakenField;
        
        private string transformerBankIDField;
        
        private string descriptionField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string lightType {
            get {
                return this.lightTypeField;
            }
            set {
                this.lightTypeField = value;
            }
        }
        
        /// <remarks/>
        public long wattage {
            get {
                return this.wattageField;
            }
            set {
                this.wattageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wattageSpecified {
            get {
                return this.wattageFieldSpecified;
            }
            set {
                this.wattageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool brightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public securityLightStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum securityLightStatus {
        
        /// <remarks/>
        NewConnect,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(equivalentSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(trafficLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(securityLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(streetLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inductionMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(synchronousMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspElectricPoint : mspConnectivityPoint {
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private mspLoadGroup loadField;
        
        private string equipmentContainerIDField;
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspLoadGroup load {
            get {
                return this.loadField;
            }
            set {
                this.loadField = value;
            }
        }
        
        /// <remarks/>
        public string equipmentContainerID {
            get {
                return this.equipmentContainerIDField;
            }
            set {
                this.equipmentContainerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricPoint))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(equivalentSource))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fakeNodeSection))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(trafficLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(securityLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(streetLight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspMotorGenerator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inductionMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(synchronousMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspBankObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspConnectivityPoint : mspPointObject {
        
        private graphicSymbol[] graphicSymbolListField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private string sectionIDField;
        
        private objectRef[] parentSectionIDField;
        
        private nodeIdentifier1 fromNodeIDField;
        
        private nodeIdentifier1 toNodeIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public graphicSymbol[] graphicSymbolList {
            get {
                return this.graphicSymbolListField;
            }
            set {
                this.graphicSymbolListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        public string sectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID")]
        public objectRef[] parentSectionID {
            get {
                return this.parentSectionIDField;
            }
            set {
                this.parentSectionIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 fromNodeID {
            get {
                return this.fromNodeIDField;
            }
            set {
                this.fromNodeIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 toNodeID {
            get {
                return this.toNodeIDField;
            }
            set {
                this.toNodeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class equivalentSource : mspElectricPoint {
        
        private string nameField;
        
        private apparentPower basePowerField;
        
        private voltage baseVoltageField;
        
        private complexImpedance zMinField;
        
        private complexImpedance zMaxField;
        
        private complexImpedance posSeqZField;
        
        private complexImpedance zeroSeqZField;
        
        private complexImpedance negSeqZField;
        
        private voltage voltageMagnitudeField;
        
        private angle1 voltageAngleField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower basePower {
            get {
                return this.basePowerField;
            }
            set {
                this.basePowerField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltage {
            get {
                return this.baseVoltageField;
            }
            set {
                this.baseVoltageField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance zMin {
            get {
                return this.zMinField;
            }
            set {
                this.zMinField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance zMax {
            get {
                return this.zMaxField;
            }
            set {
                this.zMaxField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance posSeqZ {
            get {
                return this.posSeqZField;
            }
            set {
                this.posSeqZField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance zeroSeqZ {
            get {
                return this.zeroSeqZField;
            }
            set {
                this.zeroSeqZField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance negSeqZ {
            get {
                return this.negSeqZField;
            }
            set {
                this.negSeqZField = value;
            }
        }
        
        /// <remarks/>
        public voltage voltageMagnitude {
            get {
                return this.voltageMagnitudeField;
            }
            set {
                this.voltageMagnitudeField = value;
            }
        }
        
        /// <remarks/>
        public angle1 voltageAngle {
            get {
                return this.voltageAngleField;
            }
            set {
                this.voltageAngleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class apparentPower {
        
        private apparentPowerUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public apparentPowerUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum apparentPowerUnits {
        
        /// <remarks/>
        VA,
        
        /// <remarks/>
        kVA,
        
        /// <remarks/>
        MVA,
        
        /// <remarks/>
        GVA,
        
        /// <remarks/>
        mVA,
        
        /// <remarks/>
        microVA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Percent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class complexImpedance {
        
        private float rField;
        
        private bool rFieldSpecified;
        
        private string xField;
        
        private zUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        /// <remarks/>
        public float r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rSpecified {
            get {
                return this.rFieldSpecified;
            }
            set {
                this.rFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public zUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum zUnits {
        
        /// <remarks/>
        Ohms,
        
        /// <remarks/>
        Percent,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Per Unit")]
        PerUnit,
        
        /// <remarks/>
        Total,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="angle", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class angle1 {
        
        private angleUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public angleUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="angleUnits", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum angleUnits1 {
        
        /// <remarks/>
        Degrees,
        
        /// <remarks/>
        Minutes,
        
        /// <remarks/>
        Seconds,
        
        /// <remarks/>
        Radians,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class fakeNodeSection : mspElectricPoint {
        
        private bool isAllocatedField;
        
        private bool isAllocatedFieldSpecified;
        
        private bool isRequiredField;
        
        private bool isRequiredFieldSpecified;
        
        private string cktLvlField;
        
        private bool isMultiParentField;
        
        private bool isMultiParentFieldSpecified;
        
        /// <remarks/>
        public bool isAllocated {
            get {
                return this.isAllocatedField;
            }
            set {
                this.isAllocatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isAllocatedSpecified {
            get {
                return this.isAllocatedFieldSpecified;
            }
            set {
                this.isAllocatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRequiredSpecified {
            get {
                return this.isRequiredFieldSpecified;
            }
            set {
                this.isRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string cktLvl {
            get {
                return this.cktLvlField;
            }
            set {
                this.cktLvlField = value;
            }
        }
        
        /// <remarks/>
        public bool isMultiParent {
            get {
                return this.isMultiParentField;
            }
            set {
                this.isMultiParentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isMultiParentSpecified {
            get {
                return this.isMultiParentFieldSpecified;
            }
            set {
                this.isMultiParentFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class trafficLight : mspElectricPoint {
        
        private string transformerBankIDField;
        
        private streetLocation streetLocationField;
        
        private string ownerField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public streetLocation streetLocation {
            get {
                return this.streetLocationField;
            }
            set {
                this.streetLocationField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class streetLocation {
        
        private string streetField;
        
        private string crossStreetField;
        
        private string cityField;
        
        private string countyField;
        
        private string stateField;
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class streetLight : mspElectricPoint {
        
        private string lightTypeField;
        
        private long wattageField;
        
        private bool wattageFieldSpecified;
        
        private float brightnessField;
        
        private bool brightnessFieldSpecified;
        
        private string transformerBankIDField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string lightType {
            get {
                return this.lightTypeField;
            }
            set {
                this.lightTypeField = value;
            }
        }
        
        /// <remarks/>
        public long wattage {
            get {
                return this.wattageField;
            }
            set {
                this.wattageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool wattageSpecified {
            get {
                return this.wattageFieldSpecified;
            }
            set {
                this.wattageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float brightness {
            get {
                return this.brightnessField;
            }
            set {
                this.brightnessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool brightnessSpecified {
            get {
                return this.brightnessFieldSpecified;
            }
            set {
                this.brightnessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string transformerBankID {
            get {
                return this.transformerBankIDField;
            }
            set {
                this.transformerBankIDField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inductionMachine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(synchronousMachine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspMotorGenerator : mspElectricPoint {
        
        private eaEquipID eaEquipmentField;
        
        private voltage ratedVoltageField;
        
        /// <remarks/>
        public eaEquipID eaEquipment {
            get {
                return this.eaEquipmentField;
            }
            set {
                this.eaEquipmentField = value;
            }
        }
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inductionMachine : mspMotorGenerator {
        
        private string statusField;
        
        private machineType typeField;
        
        private bool typeFieldSpecified;
        
        private float operatingSlipField;
        
        private bool operatingSlipFieldSpecified;
        
        private float hpField;
        
        private bool hpFieldSpecified;
        
        private float pfField;
        
        private bool pfFieldSpecified;
        
        private float efficiencyField;
        
        private bool efficiencyFieldSpecified;
        
        private voltage lgVoltsField;
        
        private float dropoutField;
        
        private bool dropoutFieldSpecified;
        
        private nemaType nemaTypeField;
        
        private bool nemaTypeFieldSpecified;
        
        private float limitVoltageField;
        
        private bool limitVoltageFieldSpecified;
        
        private string softStartTypeField;
        
        private resistance softStartRField;
        
        private reactance1 softStartXField;
        
        private float softStartTapField;
        
        private bool softStartTapFieldSpecified;
        
        private float lockedRotorPFField;
        
        private bool lockedRotorPFFieldSpecified;
        
        private float lockedRotorMultiplierField;
        
        private bool lockedRotorMultiplierFieldSpecified;
        
        private inductionMachineImpedances impedancesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public machineType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float operatingSlip {
            get {
                return this.operatingSlipField;
            }
            set {
                this.operatingSlipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatingSlipSpecified {
            get {
                return this.operatingSlipFieldSpecified;
            }
            set {
                this.operatingSlipFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hp {
            get {
                return this.hpField;
            }
            set {
                this.hpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hpSpecified {
            get {
                return this.hpFieldSpecified;
            }
            set {
                this.hpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pf {
            get {
                return this.pfField;
            }
            set {
                this.pfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pfSpecified {
            get {
                return this.pfFieldSpecified;
            }
            set {
                this.pfFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float efficiency {
            get {
                return this.efficiencyField;
            }
            set {
                this.efficiencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool efficiencySpecified {
            get {
                return this.efficiencyFieldSpecified;
            }
            set {
                this.efficiencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage lgVolts {
            get {
                return this.lgVoltsField;
            }
            set {
                this.lgVoltsField = value;
            }
        }
        
        /// <remarks/>
        public float dropout {
            get {
                return this.dropoutField;
            }
            set {
                this.dropoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dropoutSpecified {
            get {
                return this.dropoutFieldSpecified;
            }
            set {
                this.dropoutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public nemaType nemaType {
            get {
                return this.nemaTypeField;
            }
            set {
                this.nemaTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nemaTypeSpecified {
            get {
                return this.nemaTypeFieldSpecified;
            }
            set {
                this.nemaTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float limitVoltage {
            get {
                return this.limitVoltageField;
            }
            set {
                this.limitVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool limitVoltageSpecified {
            get {
                return this.limitVoltageFieldSpecified;
            }
            set {
                this.limitVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string softStartType {
            get {
                return this.softStartTypeField;
            }
            set {
                this.softStartTypeField = value;
            }
        }
        
        /// <remarks/>
        public resistance softStartR {
            get {
                return this.softStartRField;
            }
            set {
                this.softStartRField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 softStartX {
            get {
                return this.softStartXField;
            }
            set {
                this.softStartXField = value;
            }
        }
        
        /// <remarks/>
        public float softStartTap {
            get {
                return this.softStartTapField;
            }
            set {
                this.softStartTapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool softStartTapSpecified {
            get {
                return this.softStartTapFieldSpecified;
            }
            set {
                this.softStartTapFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lockedRotorPF {
            get {
                return this.lockedRotorPFField;
            }
            set {
                this.lockedRotorPFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lockedRotorPFSpecified {
            get {
                return this.lockedRotorPFFieldSpecified;
            }
            set {
                this.lockedRotorPFFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lockedRotorMultiplier {
            get {
                return this.lockedRotorMultiplierField;
            }
            set {
                this.lockedRotorMultiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lockedRotorMultiplierSpecified {
            get {
                return this.lockedRotorMultiplierFieldSpecified;
            }
            set {
                this.lockedRotorMultiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public inductionMachineImpedances impedances {
            get {
                return this.impedancesField;
            }
            set {
                this.impedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum machineType {
        
        /// <remarks/>
        Motor,
        
        /// <remarks/>
        Generator,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum nemaType {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        D,
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        G,
        
        /// <remarks/>
        H,
        
        /// <remarks/>
        J,
        
        /// <remarks/>
        K,
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        P,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        S,
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        U,
        
        /// <remarks/>
        V,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class resistance {
        
        private zUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public zUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="reactance", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class reactance1 {
        
        private zUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public zUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inductionMachineImpedances {
        
        private apparentPower basePowerField;
        
        private voltage baseVoltageField;
        
        private complexImpedance statorImpedanceField;
        
        private complexImpedance rotorImpedanceField;
        
        private complexImpedance magnetizingImpedanceField;
        
        /// <remarks/>
        public apparentPower basePower {
            get {
                return this.basePowerField;
            }
            set {
                this.basePowerField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltage {
            get {
                return this.baseVoltageField;
            }
            set {
                this.baseVoltageField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance statorImpedance {
            get {
                return this.statorImpedanceField;
            }
            set {
                this.statorImpedanceField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance rotorImpedance {
            get {
                return this.rotorImpedanceField;
            }
            set {
                this.rotorImpedanceField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance magnetizingImpedance {
            get {
                return this.magnetizingImpedanceField;
            }
            set {
                this.magnetizingImpedanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class synchronousMachine : mspMotorGenerator {
        
        private eaEquipID ssImpedanceIDField;
        
        private eaEquipID tranImpedanceIDField;
        
        private eaEquipID stImpedanceIDField;
        
        private string modelField;
        
        private SynchronousMachineType typeField;
        
        private bool typeFieldSpecified;
        
        private SynchronousMachineOperatingMode operatingModeField;
        
        private bool operatingModeFieldSpecified;
        
        private complexVoltage holdVoltsZField;
        
        private realPower poutField;
        
        private reactivePower maxLeadQField;
        
        private reactivePower maxLagQField;
        
        private loadConnection connectionField;
        
        private bool connectionFieldSpecified;
        
        private voltage maximumVoltageField;
        
        private voltage minimumVoltageField;
        
        private reactivePower baseQField;
        
        private reactivePower maxQField;
        
        private reactivePower minQField;
        
        private apparentPower ratedMVAField;
        
        private string generatingUnitIDField;
        
        private string regulatingControlIDField;
        
        private ReactiveCapabilityCurve initialReactiveCapabilityCurveField;
        
        private synchronousMachineImpedances impedancesField;
        
        /// <remarks/>
        public eaEquipID ssImpedanceID {
            get {
                return this.ssImpedanceIDField;
            }
            set {
                this.ssImpedanceIDField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID tranImpedanceID {
            get {
                return this.tranImpedanceIDField;
            }
            set {
                this.tranImpedanceIDField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID stImpedanceID {
            get {
                return this.stImpedanceIDField;
            }
            set {
                this.stImpedanceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public SynchronousMachineType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public SynchronousMachineOperatingMode operatingMode {
            get {
                return this.operatingModeField;
            }
            set {
                this.operatingModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatingModeSpecified {
            get {
                return this.operatingModeFieldSpecified;
            }
            set {
                this.operatingModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public complexVoltage holdVoltsZ {
            get {
                return this.holdVoltsZField;
            }
            set {
                this.holdVoltsZField = value;
            }
        }
        
        /// <remarks/>
        public realPower Pout {
            get {
                return this.poutField;
            }
            set {
                this.poutField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower maxLeadQ {
            get {
                return this.maxLeadQField;
            }
            set {
                this.maxLeadQField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower maxLagQ {
            get {
                return this.maxLagQField;
            }
            set {
                this.maxLagQField = value;
            }
        }
        
        /// <remarks/>
        public loadConnection connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionSpecified {
            get {
                return this.connectionFieldSpecified;
            }
            set {
                this.connectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage maximumVoltage {
            get {
                return this.maximumVoltageField;
            }
            set {
                this.maximumVoltageField = value;
            }
        }
        
        /// <remarks/>
        public voltage minimumVoltage {
            get {
                return this.minimumVoltageField;
            }
            set {
                this.minimumVoltageField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower baseQ {
            get {
                return this.baseQField;
            }
            set {
                this.baseQField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower maxQ {
            get {
                return this.maxQField;
            }
            set {
                this.maxQField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower minQ {
            get {
                return this.minQField;
            }
            set {
                this.minQField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedMVA {
            get {
                return this.ratedMVAField;
            }
            set {
                this.ratedMVAField = value;
            }
        }
        
        /// <remarks/>
        public string generatingUnitID {
            get {
                return this.generatingUnitIDField;
            }
            set {
                this.generatingUnitIDField = value;
            }
        }
        
        /// <remarks/>
        public string regulatingControlID {
            get {
                return this.regulatingControlIDField;
            }
            set {
                this.regulatingControlIDField = value;
            }
        }
        
        /// <remarks/>
        public ReactiveCapabilityCurve initialReactiveCapabilityCurve {
            get {
                return this.initialReactiveCapabilityCurveField;
            }
            set {
                this.initialReactiveCapabilityCurveField = value;
            }
        }
        
        /// <remarks/>
        public synchronousMachineImpedances impedances {
            get {
                return this.impedancesField;
            }
            set {
                this.impedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum SynchronousMachineType {
        
        /// <remarks/>
        generator,
        
        /// <remarks/>
        condenser,
        
        /// <remarks/>
        generator_or_condenser,
        
        /// <remarks/>
        motor,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="cpsm_V4.1_Release")]
    public enum SynchronousMachineOperatingMode {
        
        /// <remarks/>
        generator,
        
        /// <remarks/>
        condenser,
        
        /// <remarks/>
        motor,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class complexVoltage {
        
        private float rField;
        
        private bool rFieldSpecified;
        
        private float xField;
        
        private bool xFieldSpecified;
        
        private voltageUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        /// <remarks/>
        public float r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rSpecified {
            get {
                return this.rFieldSpecified;
            }
            set {
                this.rFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xSpecified {
            get {
                return this.xFieldSpecified;
            }
            set {
                this.xFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public voltageUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum loadConnection {
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        D,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class synchronousMachineImpedances {
        
        private apparentPower basePowerField;
        
        private voltage baseVoltageField;
        
        private resistance rField;
        
        private resistance r0Field;
        
        private reactance1 xField;
        
        private reactance1 x0Field;
        
        private reactance1 xDirectSyncField;
        
        private reactance1 xDirectTransField;
        
        private reactance1 xDirectSubtransField;
        
        private reactance1 xQuadSyncField;
        
        private reactance1 xQuadTransField;
        
        private reactance1 xQuadSubtransField;
        
        /// <remarks/>
        public apparentPower basePower {
            get {
                return this.basePowerField;
            }
            set {
                this.basePowerField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltage {
            get {
                return this.baseVoltageField;
            }
            set {
                this.baseVoltageField = value;
            }
        }
        
        /// <remarks/>
        public resistance r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public resistance r0 {
            get {
                return this.r0Field;
            }
            set {
                this.r0Field = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x0 {
            get {
                return this.x0Field;
            }
            set {
                this.x0Field = value;
            }
        }
        
        /// <remarks/>
        public reactance1 xDirectSync {
            get {
                return this.xDirectSyncField;
            }
            set {
                this.xDirectSyncField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 xDirectTrans {
            get {
                return this.xDirectTransField;
            }
            set {
                this.xDirectTransField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 xDirectSubtrans {
            get {
                return this.xDirectSubtransField;
            }
            set {
                this.xDirectSubtransField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 xQuadSync {
            get {
                return this.xQuadSyncField;
            }
            set {
                this.xQuadSyncField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 xQuadTrans {
            get {
                return this.xQuadTransField;
            }
            set {
                this.xQuadTransField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 xQuadSubtrans {
            get {
                return this.xQuadSubtransField;
            }
            set {
                this.xQuadSubtransField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspSwitchingBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(capacitorBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspBankObject : mspElectricPoint {
        
        private bool isGroundedField;
        
        private bool isGroundedFieldSpecified;
        
        private complexImpedance groundingImpedanceField;
        
        /// <remarks/>
        public bool isGrounded {
            get {
                return this.isGroundedField;
            }
            set {
                this.isGroundedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGroundedSpecified {
            get {
                return this.isGroundedFieldSpecified;
            }
            set {
                this.isGroundedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance groundingImpedance {
            get {
                return this.groundingImpedanceField;
            }
            set {
                this.groundingImpedanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class regulatorBank : mspBankObject {
        
        private regulatorBankConnectionCode regulatorBankConnectionCodeField;
        
        private bool regulatorBankConnectionCodeFieldSpecified;
        
        private mspPhase crlPhaseField;
        
        private bool crlPhaseFieldSpecified;
        
        private regulator[] regulatorListField;
        
        /// <remarks/>
        public regulatorBankConnectionCode regulatorBankConnectionCode {
            get {
                return this.regulatorBankConnectionCodeField;
            }
            set {
                this.regulatorBankConnectionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool regulatorBankConnectionCodeSpecified {
            get {
                return this.regulatorBankConnectionCodeFieldSpecified;
            }
            set {
                this.regulatorBankConnectionCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspPhase crlPhase {
            get {
                return this.crlPhaseField;
            }
            set {
                this.crlPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool crlPhaseSpecified {
            get {
                return this.crlPhaseFieldSpecified;
            }
            set {
                this.crlPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public regulator[] regulatorList {
            get {
                return this.regulatorListField;
            }
            set {
                this.regulatorListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum regulatorBankConnectionCode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Wye 3ph")]
        Wye3ph,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Delta 3ph")]
        Delta3ph,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Line-neutral")]
        Lineneutral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Open delta")]
        Opendelta,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Closed delta")]
        Closeddelta,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Uknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum mspPhase {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        N,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class regulator : mspObject {
        
        private eaEquipID eaEquipmentField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private voltage vOutField;
        
        private voltage voltageBandwidthField;
        
        private seconds initialDelayField;
        
        private seconds subsequentDelayField;
        
        private voltage ldcRField;
        
        private voltage ldcXField;
        
        private voltage fhHiField;
        
        private voltage fhLoField;
        
        private voltage reverseFlowRField;
        
        private voltage reverseFlowXField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public eaEquipID eaEquipment {
            get {
                return this.eaEquipmentField;
            }
            set {
                this.eaEquipmentField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage vOut {
            get {
                return this.vOutField;
            }
            set {
                this.vOutField = value;
            }
        }
        
        /// <remarks/>
        public voltage voltageBandwidth {
            get {
                return this.voltageBandwidthField;
            }
            set {
                this.voltageBandwidthField = value;
            }
        }
        
        /// <remarks/>
        public seconds initialDelay {
            get {
                return this.initialDelayField;
            }
            set {
                this.initialDelayField = value;
            }
        }
        
        /// <remarks/>
        public seconds subsequentDelay {
            get {
                return this.subsequentDelayField;
            }
            set {
                this.subsequentDelayField = value;
            }
        }
        
        /// <remarks/>
        public voltage ldcR {
            get {
                return this.ldcRField;
            }
            set {
                this.ldcRField = value;
            }
        }
        
        /// <remarks/>
        public voltage ldcX {
            get {
                return this.ldcXField;
            }
            set {
                this.ldcXField = value;
            }
        }
        
        /// <remarks/>
        public voltage fhHi {
            get {
                return this.fhHiField;
            }
            set {
                this.fhHiField = value;
            }
        }
        
        /// <remarks/>
        public voltage fhLo {
            get {
                return this.fhLoField;
            }
            set {
                this.fhLoField = value;
            }
        }
        
        /// <remarks/>
        public voltage reverseFlowR {
            get {
                return this.reverseFlowRField;
            }
            set {
                this.reverseFlowRField = value;
            }
        }
        
        /// <remarks/>
        public voltage reverseFlowX {
            get {
                return this.reverseFlowXField;
            }
            set {
                this.reverseFlowXField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class seconds {
        
        private string unitsField;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class transformerBank : mspBankObject {
        
        private bankRatings bankRatingsField;
        
        private wdgCode windingCodeField;
        
        private bool windingCodeFieldSpecified;
        
        private mspPhase centerTapPhaseField;
        
        private bool centerTapPhaseFieldSpecified;
        
        private string descriptionField;
        
        private mounting mountingField;
        
        private bool mountingFieldSpecified;
        
        private objectRef tertiarySectionIDField;
        
        private string secondaryProtectionField;
        
        private string primaryProtectionField;
        
        private transformer[] transformerListField;
        
        private electricLocationFields electricLocationFieldsField;
        
        /// <remarks/>
        public bankRatings bankRatings {
            get {
                return this.bankRatingsField;
            }
            set {
                this.bankRatingsField = value;
            }
        }
        
        /// <remarks/>
        public wdgCode windingCode {
            get {
                return this.windingCodeField;
            }
            set {
                this.windingCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool windingCodeSpecified {
            get {
                return this.windingCodeFieldSpecified;
            }
            set {
                this.windingCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public mspPhase centerTapPhase {
            get {
                return this.centerTapPhaseField;
            }
            set {
                this.centerTapPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool centerTapPhaseSpecified {
            get {
                return this.centerTapPhaseFieldSpecified;
            }
            set {
                this.centerTapPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public mounting mounting {
            get {
                return this.mountingField;
            }
            set {
                this.mountingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mountingSpecified {
            get {
                return this.mountingFieldSpecified;
            }
            set {
                this.mountingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef tertiarySectionID {
            get {
                return this.tertiarySectionIDField;
            }
            set {
                this.tertiarySectionIDField = value;
            }
        }
        
        /// <remarks/>
        public string secondaryProtection {
            get {
                return this.secondaryProtectionField;
            }
            set {
                this.secondaryProtectionField = value;
            }
        }
        
        /// <remarks/>
        public string primaryProtection {
            get {
                return this.primaryProtectionField;
            }
            set {
                this.primaryProtectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public transformer[] transformerList {
            get {
                return this.transformerListField;
            }
            set {
                this.transformerListField = value;
            }
        }
        
        /// <remarks/>
        public electricLocationFields electricLocationFields {
            get {
                return this.electricLocationFieldsField;
            }
            set {
                this.electricLocationFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class bankRatings {
        
        private apparentPower bankPowerRatingField;
        
        private apparentPower nLLossField;
        
        private apparentPower fLLossField;
        
        private voltage primaryVoltageHighField;
        
        private voltage primaryVoltageLowField;
        
        private voltage secondaryVoltageHighField;
        
        private voltage secondaryVoltageLowField;
        
        private voltage tertiaryVoltageField;
        
        /// <remarks/>
        public apparentPower bankPowerRating {
            get {
                return this.bankPowerRatingField;
            }
            set {
                this.bankPowerRatingField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower nLLoss {
            get {
                return this.nLLossField;
            }
            set {
                this.nLLossField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower fLLoss {
            get {
                return this.fLLossField;
            }
            set {
                this.fLLossField = value;
            }
        }
        
        /// <remarks/>
        public voltage primaryVoltageHigh {
            get {
                return this.primaryVoltageHighField;
            }
            set {
                this.primaryVoltageHighField = value;
            }
        }
        
        /// <remarks/>
        public voltage primaryVoltageLow {
            get {
                return this.primaryVoltageLowField;
            }
            set {
                this.primaryVoltageLowField = value;
            }
        }
        
        /// <remarks/>
        public voltage secondaryVoltageHigh {
            get {
                return this.secondaryVoltageHighField;
            }
            set {
                this.secondaryVoltageHighField = value;
            }
        }
        
        /// <remarks/>
        public voltage secondaryVoltageLow {
            get {
                return this.secondaryVoltageLowField;
            }
            set {
                this.secondaryVoltageLowField = value;
            }
        }
        
        /// <remarks/>
        public voltage tertiaryVoltage {
            get {
                return this.tertiaryVoltageField;
            }
            set {
                this.tertiaryVoltageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum wdgCode {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-Y one")]
        DYone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y")]
        YY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-Y")]
        DY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Grounded Y-D")]
        GroundedYD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ungrounded Y-D")]
        UngroundedYD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Open Y-D")]
        OpenYD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-D")]
        DD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y Grounded Imp")]
        YYGroundedImp,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y 3ph core type")]
        YY3phcoretype,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-D one")]
        DDone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-D open")]
        DDopen,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-Y-D Ground")]
        YYDGround,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Y-D one")]
        YDone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("D-Y open")]
        DYopen,
        
        /// <remarks/>
        CenterTapSecondary,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum mounting {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Bus-mounted")]
        Busmounted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pole-mounted")]
        Polemounted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pad-mounted")]
        Padmounted,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Vault-mounted")]
        Vaultmounted,
        
        /// <remarks/>
        Substation,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class transformer : mspObject {
        
        private string facilityIDField;
        
        private eaEquipID eaEquipmentField;
        
        private assetFields assetFieldsField;
        
        private apparentPower unitRatedPowerField;
        
        private string transformerTypeField;
        
        private string statusField;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private string pcbField;
        
        private testInstance[] pcbTestListField;
        
        private TransformerWinding[] windingsField;
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID eaEquipment {
            get {
                return this.eaEquipmentField;
            }
            set {
                this.eaEquipmentField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower unitRatedPower {
            get {
                return this.unitRatedPowerField;
            }
            set {
                this.unitRatedPowerField = value;
            }
        }
        
        /// <remarks/>
        public string transformerType {
            get {
                return this.transformerTypeField;
            }
            set {
                this.transformerTypeField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pcb {
            get {
                return this.pcbField;
            }
            set {
                this.pcbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public testInstance[] pcbTestList {
            get {
                return this.pcbTestListField;
            }
            set {
                this.pcbTestListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TransformerWinding[] windings {
            get {
                return this.windingsField;
            }
            set {
                this.windingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class testInstance {
        
        private System.DateTime testDateField;
        
        private bool testDateFieldSpecified;
        
        private string pcbClassField;
        
        private string sampleNumberField;
        
        private string commentField;
        
        /// <remarks/>
        public System.DateTime testDate {
            get {
                return this.testDateField;
            }
            set {
                this.testDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool testDateSpecified {
            get {
                return this.testDateFieldSpecified;
            }
            set {
                this.testDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pcbClass {
            get {
                return this.pcbClassField;
            }
            set {
                this.pcbClassField = value;
            }
        }
        
        /// <remarks/>
        public string sampleNumber {
            get {
                return this.sampleNumberField;
            }
            set {
                this.sampleNumberField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchingDeviceBank))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(overcurrentDeviceBank))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspSwitchingBank : mspBankObject {
        
        private bool isGangedField;
        
        private bool isGangedFieldSpecified;
        
        private bool isRemotelyOperableField;
        
        private bool isRemotelyOperableFieldSpecified;
        
        private objectRef partnerField;
        
        private bool ldPointField;
        
        private bool ldPointFieldSpecified;
        
        /// <remarks/>
        public bool isGanged {
            get {
                return this.isGangedField;
            }
            set {
                this.isGangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGangedSpecified {
            get {
                return this.isGangedFieldSpecified;
            }
            set {
                this.isGangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRemotelyOperable {
            get {
                return this.isRemotelyOperableField;
            }
            set {
                this.isRemotelyOperableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRemotelyOperableSpecified {
            get {
                return this.isRemotelyOperableFieldSpecified;
            }
            set {
                this.isRemotelyOperableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef partner {
            get {
                return this.partnerField;
            }
            set {
                this.partnerField = value;
            }
        }
        
        /// <remarks/>
        public bool ldPoint {
            get {
                return this.ldPointField;
            }
            set {
                this.ldPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ldPointSpecified {
            get {
                return this.ldPointFieldSpecified;
            }
            set {
                this.ldPointFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class switchingDeviceBank : mspSwitchingBank {
        
        private switchingDevice[] switchingDeviceListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public switchingDevice[] switchingDeviceList {
            get {
                return this.switchingDeviceListField;
            }
            set {
                this.switchingDeviceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class switchingDevice {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("breaker", typeof(breaker))]
        [System.Xml.Serialization.XmlElementAttribute("cut", typeof(cut))]
        [System.Xml.Serialization.XmlElementAttribute("elbow", typeof(elbow))]
        [System.Xml.Serialization.XmlElementAttribute("extensions", typeof(extensions))]
        [System.Xml.Serialization.XmlElementAttribute("extensionsList", typeof(extensionsList1))]
        [System.Xml.Serialization.XmlElementAttribute("fuse", typeof(fuse))]
        [System.Xml.Serialization.XmlElementAttribute("jumper", typeof(jumper))]
        [System.Xml.Serialization.XmlElementAttribute("recloser", typeof(recloser))]
        [System.Xml.Serialization.XmlElementAttribute("sectionalizer", typeof(sectionalizer))]
        [System.Xml.Serialization.XmlElementAttribute("switch", typeof(@switch))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class breaker : mspOverCurrentDevice {
        
        private current phaseTripRatingField;
        
        private breakerImpedances breakerImpedancesField;
        
        /// <remarks/>
        public current phaseTripRating {
            get {
                return this.phaseTripRatingField;
            }
            set {
                this.phaseTripRatingField = value;
            }
        }
        
        /// <remarks/>
        public breakerImpedances breakerImpedances {
            get {
                return this.breakerImpedancesField;
            }
            set {
                this.breakerImpedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class breakerImpedances {
        
        private resistance rField;
        
        private reactance1 xField;
        
        private resistance r0Field;
        
        private reactance1 x0Field;
        
        private susceptance1 bField;
        
        private susceptance1 b0Field;
        
        private conductance1 gField;
        
        private conductance1 g0Field;
        
        /// <remarks/>
        public resistance r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public resistance r0 {
            get {
                return this.r0Field;
            }
            set {
                this.r0Field = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x0 {
            get {
                return this.x0Field;
            }
            set {
                this.x0Field = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b0 {
            get {
                return this.b0Field;
            }
            set {
                this.b0Field = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g0 {
            get {
                return this.g0Field;
            }
            set {
                this.g0Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="susceptance", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class susceptance1 {
        
        private sUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="sUnits", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum sUnits1 {
        
        /// <remarks/>
        microS,
        
        /// <remarks/>
        mS,
        
        /// <remarks/>
        S,
        
        /// <remarks/>
        kS,
        
        /// <remarks/>
        MS,
        
        /// <remarks/>
        Siemens,
        
        /// <remarks/>
        mho,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="conductance", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class conductance1 {
        
        private sUnits1 unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sUnits1 units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breaker))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloser))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspOverCurrentDevice : mspSwitchingDevice {
        
        private bool bypassExistsField;
        
        private bool bypassExistsFieldSpecified;
        
        private System.DateTime lastServiceField;
        
        private bool lastServiceFieldSpecified;
        
        /// <remarks/>
        public bool bypassExists {
            get {
                return this.bypassExistsField;
            }
            set {
                this.bypassExistsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bypassExistsSpecified {
            get {
                return this.bypassExistsFieldSpecified;
            }
            set {
                this.bypassExistsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastService {
            get {
                return this.lastServiceField;
            }
            set {
                this.lastServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastServiceSpecified {
            get {
                return this.lastServiceFieldSpecified;
            }
            set {
                this.lastServiceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(elbow))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(jumper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(cut))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(@switch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspOverCurrentDevice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breaker))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloser))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspSwitchingDevice : mspObject {
        
        private eaEquipID eaEquipmentField;
        
        private string facilityIDField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private position normalPositionField;
        
        private bool normalPositionFieldSpecified;
        
        private voltage operatingVoltageField;
        
        private mounting mountingField;
        
        private bool mountingFieldSpecified;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public eaEquipID eaEquipment {
            get {
                return this.eaEquipmentField;
            }
            set {
                this.eaEquipmentField = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public position normalPosition {
            get {
                return this.normalPositionField;
            }
            set {
                this.normalPositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool normalPositionSpecified {
            get {
                return this.normalPositionFieldSpecified;
            }
            set {
                this.normalPositionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage operatingVoltage {
            get {
                return this.operatingVoltageField;
            }
            set {
                this.operatingVoltageField = value;
            }
        }
        
        /// <remarks/>
        public mounting mounting {
            get {
                return this.mountingField;
            }
            set {
                this.mountingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mountingSpecified {
            get {
                return this.mountingFieldSpecified;
            }
            set {
                this.mountingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum position {
        
        /// <remarks/>
        NO,
        
        /// <remarks/>
        NC,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class elbow : mspSwitchingDevice {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class jumper : mspSwitchingDevice {
        
        private System.DateTime dateInstalledField;
        
        private bool dateInstalledFieldSpecified;
        
        /// <remarks/>
        public System.DateTime dateInstalled {
            get {
                return this.dateInstalledField;
            }
            set {
                this.dateInstalledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateInstalledSpecified {
            get {
                return this.dateInstalledFieldSpecified;
            }
            set {
                this.dateInstalledFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class cut : mspSwitchingDevice {
        
        private eaLoc lineSectionAffectedField;
        
        private cutAction actionTakenField;
        
        private bool actionTakenFieldSpecified;
        
        private System.DateTime timeOfActionField;
        
        private bool timeOfActionFieldSpecified;
        
        /// <remarks/>
        public eaLoc lineSectionAffected {
            get {
                return this.lineSectionAffectedField;
            }
            set {
                this.lineSectionAffectedField = value;
            }
        }
        
        /// <remarks/>
        public cutAction actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionTakenSpecified {
            get {
                return this.actionTakenFieldSpecified;
            }
            set {
                this.actionTakenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfAction {
            get {
                return this.timeOfActionField;
            }
            set {
                this.timeOfActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfActionSpecified {
            get {
                return this.timeOfActionFieldSpecified;
            }
            set {
                this.timeOfActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum cutAction {
        
        /// <remarks/>
        InitiateCut,
        
        /// <remarks/>
        RestoreCut,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class @switch : mspSwitchingDevice {
        
        private switchImpedances switchImpedancesField;
        
        /// <remarks/>
        public switchImpedances switchImpedances {
            get {
                return this.switchImpedancesField;
            }
            set {
                this.switchImpedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class switchImpedances {
        
        private resistance rField;
        
        private reactance1 xField;
        
        private resistance r0Field;
        
        private reactance1 x0Field;
        
        private susceptance1 bField;
        
        private susceptance1 b0Field;
        
        private conductance1 gField;
        
        private conductance1 g0Field;
        
        /// <remarks/>
        public resistance r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public resistance r0 {
            get {
                return this.r0Field;
            }
            set {
                this.r0Field = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x0 {
            get {
                return this.x0Field;
            }
            set {
                this.x0Field = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b0 {
            get {
                return this.b0Field;
            }
            set {
                this.b0Field = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g0 {
            get {
                return this.g0Field;
            }
            set {
                this.g0Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class fuse : mspOverCurrentDevice {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class sectionalizer : mspOverCurrentDevice {
        
        private string countsField;
        
        private sectionalizerImpedances sectionalizerImpedancesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string counts {
            get {
                return this.countsField;
            }
            set {
                this.countsField = value;
            }
        }
        
        /// <remarks/>
        public sectionalizerImpedances sectionalizerImpedances {
            get {
                return this.sectionalizerImpedancesField;
            }
            set {
                this.sectionalizerImpedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class sectionalizerImpedances {
        
        private resistance rField;
        
        private reactance1 xField;
        
        private resistance r0Field;
        
        private reactance1 x0Field;
        
        private susceptance1 bField;
        
        private susceptance1 b0Field;
        
        private conductance1 gField;
        
        private conductance1 g0Field;
        
        /// <remarks/>
        public resistance r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public resistance r0 {
            get {
                return this.r0Field;
            }
            set {
                this.r0Field = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x0 {
            get {
                return this.x0Field;
            }
            set {
                this.x0Field = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b0 {
            get {
                return this.b0Field;
            }
            set {
                this.b0Field = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g0 {
            get {
                return this.g0Field;
            }
            set {
                this.g0Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class recloser : mspOverCurrentDevice {
        
        private current phaseTripRatingField;
        
        private current groundTripRatingField;
        
        private bool groundTripNormalEnabledField;
        
        private bool groundTripNormalEnabledFieldSpecified;
        
        private recloserImpedances recloserImpedancesField;
        
        /// <remarks/>
        public current phaseTripRating {
            get {
                return this.phaseTripRatingField;
            }
            set {
                this.phaseTripRatingField = value;
            }
        }
        
        /// <remarks/>
        public current groundTripRating {
            get {
                return this.groundTripRatingField;
            }
            set {
                this.groundTripRatingField = value;
            }
        }
        
        /// <remarks/>
        public bool groundTripNormalEnabled {
            get {
                return this.groundTripNormalEnabledField;
            }
            set {
                this.groundTripNormalEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool groundTripNormalEnabledSpecified {
            get {
                return this.groundTripNormalEnabledFieldSpecified;
            }
            set {
                this.groundTripNormalEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public recloserImpedances recloserImpedances {
            get {
                return this.recloserImpedancesField;
            }
            set {
                this.recloserImpedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class recloserImpedances {
        
        private resistance rField;
        
        private reactance1 xField;
        
        private resistance r0Field;
        
        private reactance1 x0Field;
        
        private susceptance1 bField;
        
        private susceptance1 b0Field;
        
        private conductance1 gField;
        
        private conductance1 g0Field;
        
        /// <remarks/>
        public resistance r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public resistance r0 {
            get {
                return this.r0Field;
            }
            set {
                this.r0Field = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x0 {
            get {
                return this.x0Field;
            }
            set {
                this.x0Field = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public susceptance1 b0 {
            get {
                return this.b0Field;
            }
            set {
                this.b0Field = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
            }
        }
        
        /// <remarks/>
        public conductance1 g0 {
            get {
                return this.g0Field;
            }
            set {
                this.g0Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="extensionsList", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class extensionsList1 {
        
        private extensionsItem[] extensionsItemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("extensionsItem")]
        public extensionsItem[] extensionsItem {
            get {
                return this.extensionsItemField;
            }
            set {
                this.extensionsItemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class overcurrentDeviceBank : mspSwitchingBank {
        
        private overcurrentDevice[] overcurrentDeviceListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public overcurrentDevice[] overcurrentDeviceList {
            get {
                return this.overcurrentDeviceListField;
            }
            set {
                this.overcurrentDeviceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class overcurrentDevice {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("breaker", typeof(breaker))]
        [System.Xml.Serialization.XmlElementAttribute("extensions", typeof(extensions))]
        [System.Xml.Serialization.XmlElementAttribute("extensionsList", typeof(extensionsList1))]
        [System.Xml.Serialization.XmlElementAttribute("fuse", typeof(fuse))]
        [System.Xml.Serialization.XmlElementAttribute("recloser", typeof(recloser))]
        [System.Xml.Serialization.XmlElementAttribute("sectionalizer", typeof(sectionalizer))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class capacitorBank : mspBankObject {
        
        private capacitorConnectionCode capacitorConnectionCodeField;
        
        private bool capacitorConnectionCodeFieldSpecified;
        
        private swType switchTypeField;
        
        private bool switchTypeFieldSpecified;
        
        private swStatus switchStatusField;
        
        private bool switchStatusFieldSpecified;
        
        private float switchOnField;
        
        private bool switchOnFieldSpecified;
        
        private float switchOffField;
        
        private bool switchOffFieldSpecified;
        
        private seconds switchTimeDelayField;
        
        private objectRef controlCircuitIDField;
        
        private reactivePower bankRatingField;
        
        private voltage nominalVoltageField;
        
        private capacitor[] capacitorListField;
        
        private string regulatingControlIDField;
        
        private impedances impedancesField;
        
        /// <remarks/>
        public capacitorConnectionCode capacitorConnectionCode {
            get {
                return this.capacitorConnectionCodeField;
            }
            set {
                this.capacitorConnectionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool capacitorConnectionCodeSpecified {
            get {
                return this.capacitorConnectionCodeFieldSpecified;
            }
            set {
                this.capacitorConnectionCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public swType switchType {
            get {
                return this.switchTypeField;
            }
            set {
                this.switchTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool switchTypeSpecified {
            get {
                return this.switchTypeFieldSpecified;
            }
            set {
                this.switchTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public swStatus switchStatus {
            get {
                return this.switchStatusField;
            }
            set {
                this.switchStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool switchStatusSpecified {
            get {
                return this.switchStatusFieldSpecified;
            }
            set {
                this.switchStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float switchOn {
            get {
                return this.switchOnField;
            }
            set {
                this.switchOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool switchOnSpecified {
            get {
                return this.switchOnFieldSpecified;
            }
            set {
                this.switchOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float switchOff {
            get {
                return this.switchOffField;
            }
            set {
                this.switchOffField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool switchOffSpecified {
            get {
                return this.switchOffFieldSpecified;
            }
            set {
                this.switchOffFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public seconds switchTimeDelay {
            get {
                return this.switchTimeDelayField;
            }
            set {
                this.switchTimeDelayField = value;
            }
        }
        
        /// <remarks/>
        public objectRef controlCircuitID {
            get {
                return this.controlCircuitIDField;
            }
            set {
                this.controlCircuitIDField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower bankRating {
            get {
                return this.bankRatingField;
            }
            set {
                this.bankRatingField = value;
            }
        }
        
        /// <remarks/>
        public voltage nominalVoltage {
            get {
                return this.nominalVoltageField;
            }
            set {
                this.nominalVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public capacitor[] capacitorList {
            get {
                return this.capacitorListField;
            }
            set {
                this.capacitorListField = value;
            }
        }
        
        /// <remarks/>
        public string regulatingControlID {
            get {
                return this.regulatingControlIDField;
            }
            set {
                this.regulatingControlIDField = value;
            }
        }
        
        /// <remarks/>
        public impedances impedances {
            get {
                return this.impedancesField;
            }
            set {
                this.impedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum capacitorConnectionCode {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        ShuntWye,
        
        /// <remarks/>
        ShuntUngroundedWye,
        
        /// <remarks/>
        ShuntDelta,
        
        /// <remarks/>
        ShuntSameAsParent,
        
        /// <remarks/>
        Series,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum swType {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Manual,
        
        /// <remarks/>
        Voltage,
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        ReactiveAmps,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        Temperature,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum swStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Disconnected,
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class capacitor : mspObject {
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private reactivePower reactiveRatingField;
        
        private reactivePower reactivePerSectionField;
        
        private string maximumSectionsField;
        
        private string normalSectionsField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public reactivePower reactiveRating {
            get {
                return this.reactiveRatingField;
            }
            set {
                this.reactiveRatingField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower reactivePerSection {
            get {
                return this.reactivePerSectionField;
            }
            set {
                this.reactivePerSectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string maximumSections {
            get {
                return this.maximumSectionsField;
            }
            set {
                this.maximumSectionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string normalSections {
            get {
                return this.normalSectionsField;
            }
            set {
                this.normalSectionsField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class impedances {
        
        private resistance rField;
        
        private reactance1 xField;
        
        /// <remarks/>
        public resistance r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class statusOfService {
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private actionTaken actionTakenField;
        
        private bool actionTakenFieldSpecified;
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public actionTaken actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionTakenSpecified {
            get {
                return this.actionTakenFieldSpecified;
            }
            set {
                this.actionTakenFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class equipmentStatus {
        
        private string equipmentTypeField;
        
        private actionTaken actionTakenField;
        
        private bool actionTakenFieldSpecified;
        
        /// <remarks/>
        public string equipmentType {
            get {
                return this.equipmentTypeField;
            }
            set {
                this.equipmentTypeField = value;
            }
        }
        
        /// <remarks/>
        public actionTaken actionTaken {
            get {
                return this.actionTakenField;
            }
            set {
                this.actionTakenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionTakenSpecified {
            get {
                return this.actionTakenFieldSpecified;
            }
            set {
                this.actionTakenFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class otherIdentificationFields {
        
        private long deptCodeField;
        
        private bool deptCodeFieldSpecified;
        
        private string actCodeField;
        
        private long acNoField;
        
        private bool acNoFieldSpecified;
        
        private long budgetCodeField;
        
        private bool budgetCodeFieldSpecified;
        
        private string warehouseIDField;
        
        private long grpCodeField;
        
        private bool grpCodeFieldSpecified;
        
        /// <remarks/>
        public long deptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deptCodeSpecified {
            get {
                return this.deptCodeFieldSpecified;
            }
            set {
                this.deptCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string actCode {
            get {
                return this.actCodeField;
            }
            set {
                this.actCodeField = value;
            }
        }
        
        /// <remarks/>
        public long acNo {
            get {
                return this.acNoField;
            }
            set {
                this.acNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acNoSpecified {
            get {
                return this.acNoFieldSpecified;
            }
            set {
                this.acNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long budgetCode {
            get {
                return this.budgetCodeField;
            }
            set {
                this.budgetCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetCodeSpecified {
            get {
                return this.budgetCodeFieldSpecified;
            }
            set {
                this.budgetCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string warehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public long grpCode {
            get {
                return this.grpCodeField;
            }
            set {
                this.grpCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool grpCodeSpecified {
            get {
                return this.grpCodeFieldSpecified;
            }
            set {
                this.grpCodeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workList {
        
        private string[] workIDField;
        
        private work[] workField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("workID")]
        public string[] workID {
            get {
                return this.workIDField;
            }
            set {
                this.workIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("work")]
        public work[] work {
            get {
                return this.workField;
            }
            set {
                this.workField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class work : mspObject {
        
        private string projectIDField;
        
        private string descriptionField;
        
        private string statusCodeField;
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private taskListItem[] taskListField;
        
        private locationFields locationFieldsField;
        
        private workTask[] tasksField;
        
        private switchingSchedule[] switchingScheduleListField;
        
        private switchingStep[] switchingStepListField;
        
        /// <remarks/>
        public string projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public taskListItem[] taskList {
            get {
                return this.taskListField;
            }
            set {
                this.taskListField = value;
            }
        }
        
        /// <remarks/>
        public locationFields locationFields {
            get {
                return this.locationFieldsField;
            }
            set {
                this.locationFieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public workTask[] tasks {
            get {
                return this.tasksField;
            }
            set {
                this.tasksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public switchingSchedule[] switchingScheduleList {
            get {
                return this.switchingScheduleListField;
            }
            set {
                this.switchingScheduleListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public switchingStep[] switchingStepList {
            get {
                return this.switchingStepListField;
            }
            set {
                this.switchingStepListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class taskListItem {
        
        private string sequenceNumberField;
        
        private string workTaskIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string workTaskID {
            get {
                return this.workTaskIDField;
            }
            set {
                this.workTaskIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class locationFields {
        
        private string countyField;
        
        private string sectionField;
        
        private string townshipField;
        
        private string rangeField;
        
        private string townshipNameField;
        
        private string subdivisionField;
        
        private string blockField;
        
        private string lotField;
        
        private string boardDistField;
        
        private string taxDistField;
        
        private string franchiseDistField;
        
        private string schoolDistField;
        
        private string districtField;
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public string townshipName {
            get {
                return this.townshipNameField;
            }
            set {
                this.townshipNameField = value;
            }
        }
        
        /// <remarks/>
        public string subdivision {
            get {
                return this.subdivisionField;
            }
            set {
                this.subdivisionField = value;
            }
        }
        
        /// <remarks/>
        public string block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        public string lot {
            get {
                return this.lotField;
            }
            set {
                this.lotField = value;
            }
        }
        
        /// <remarks/>
        public string boardDist {
            get {
                return this.boardDistField;
            }
            set {
                this.boardDistField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string franchiseDist {
            get {
                return this.franchiseDistField;
            }
            set {
                this.franchiseDistField = value;
            }
        }
        
        /// <remarks/>
        public string schoolDist {
            get {
                return this.schoolDistField;
            }
            set {
                this.schoolDistField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workTask : mspObject {
        
        private multiPartIdentifier taskIdentifierField;
        
        private System.DateTime createdDateField;
        
        private bool createdDateFieldSpecified;
        
        private string actionField;
        
        private string priorityField;
        
        private string descriptionField;
        
        private scheduleRequest[] scheduleRequestsField;
        
        private workLocation workLocationField;
        
        private taskAggregation taskAggregationField;
        
        /// <remarks/>
        public multiPartIdentifier taskIdentifier {
            get {
                return this.taskIdentifierField;
            }
            set {
                this.taskIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateSpecified {
            get {
                return this.createdDateFieldSpecified;
            }
            set {
                this.createdDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public scheduleRequest[] scheduleRequests {
            get {
                return this.scheduleRequestsField;
            }
            set {
                this.scheduleRequestsField = value;
            }
        }
        
        /// <remarks/>
        public workLocation workLocation {
            get {
                return this.workLocationField;
            }
            set {
                this.workLocationField = value;
            }
        }
        
        /// <remarks/>
        public taskAggregation taskAggregation {
            get {
                return this.taskAggregationField;
            }
            set {
                this.taskAggregationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class multiPartIdentifier {
        
        private objectRef taskIDField;
        
        private string primaryIdentifierField;
        
        private string secondaryIdentifierField;
        
        private string identifierTypeField;
        
        /// <remarks/>
        public objectRef taskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        public string primaryIdentifier {
            get {
                return this.primaryIdentifierField;
            }
            set {
                this.primaryIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string secondaryIdentifier {
            get {
                return this.secondaryIdentifierField;
            }
            set {
                this.secondaryIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string identifierType {
            get {
                return this.identifierTypeField;
            }
            set {
                this.identifierTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class scheduleRequest {
        
        private requestByType requestByTypeField;
        
        private bool requestByTypeFieldSpecified;
        
        private System.DateTime requestByValueField;
        
        private bool requestByValueFieldSpecified;
        
        /// <remarks/>
        public requestByType requestByType {
            get {
                return this.requestByTypeField;
            }
            set {
                this.requestByTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requestByTypeSpecified {
            get {
                return this.requestByTypeFieldSpecified;
            }
            set {
                this.requestByTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime requestByValue {
            get {
                return this.requestByValueField;
            }
            set {
                this.requestByValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requestByValueSpecified {
            get {
                return this.requestByValueFieldSpecified;
            }
            set {
                this.requestByValueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum requestByType {
        
        /// <remarks/>
        Before,
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        After,
        
        /// <remarks/>
        Immediate,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workLocation {
        
        private address addressField;
        
        private geometry geometryField;
        
        private string serviceLocationIDField;
        
        private serviceID serviceIDField;
        
        private string gridLocationField;
        
        private string locationCommentField;
        
        private objectRef[] locationReferencesField;
        
        /// <remarks/>
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public geometry geometry {
            get {
                return this.geometryField;
            }
            set {
                this.geometryField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public string locationComment {
            get {
                return this.locationCommentField;
            }
            set {
                this.locationCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("locationReference", IsNullable=false)]
        public objectRef[] locationReferences {
            get {
                return this.locationReferencesField;
            }
            set {
                this.locationReferencesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class geometry {
        
        private GMLLocation gMLLocationField;
        
        private GMLLine[] gMLLinesField;
        
        private GMLPolygon[] gMLPolygonsField;
        
        /// <remarks/>
        public GMLLocation GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public GMLLine[] GMLLines {
            get {
                return this.gMLLinesField;
            }
            set {
                this.gMLLinesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public GMLPolygon[] GMLPolygons {
            get {
                return this.gMLPolygonsField;
            }
            set {
                this.gMLPolygonsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class taskAggregation : mspObject {
        
        private string workTaskIDField;
        
        private string[] skillsListField;
        
        private string[] equipmentListField;
        
        private string[] vehicleListField;
        
        private pickList pickListField;
        
        /// <remarks/>
        public string workTaskID {
            get {
                return this.workTaskIDField;
            }
            set {
                this.workTaskIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("skillID", IsNullable=false)]
        public string[] skillsList {
            get {
                return this.skillsListField;
            }
            set {
                this.skillsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("equipmentID", IsNullable=false)]
        public string[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                this.equipmentListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("vehicleID", IsNullable=false)]
        public string[] vehicleList {
            get {
                return this.vehicleListField;
            }
            set {
                this.vehicleListField = value;
            }
        }
        
        /// <remarks/>
        public pickList pickList {
            get {
                return this.pickListField;
            }
            set {
                this.pickListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class pickList {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private pickListItem[] pickListItemsField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public pickListItem[] pickListItems {
            get {
                return this.pickListItemsField;
            }
            set {
                this.pickListItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class pickListItem {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string materialItemIDField;
        
        private string stockNumberField;
        
        private float quantityField;
        
        private bool quantityFieldSpecified;
        
        private unitActn unitActionField;
        
        private bool unitActionFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string materialItemID {
            get {
                return this.materialItemIDField;
            }
            set {
                this.materialItemIDField = value;
            }
        }
        
        /// <remarks/>
        public string stockNumber {
            get {
                return this.stockNumberField;
            }
            set {
                this.stockNumberField = value;
            }
        }
        
        /// <remarks/>
        public float quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitAction {
            get {
                return this.unitActionField;
            }
            set {
                this.unitActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActionSpecified {
            get {
                return this.unitActionFieldSpecified;
            }
            set {
                this.unitActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum unitActn {
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        E,
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        S,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class switchingSchedule : mspObject {
        
        private string workIDField;
        
        private string resourceIDField;
        
        private System.DateTime startDateTimeField;
        
        private bool startDateTimeFieldSpecified;
        
        private System.DateTime endDateTimeField;
        
        private bool endDateTimeFieldSpecified;
        
        private switchingStep[] switchingStepsField;
        
        /// <remarks/>
        public string workID {
            get {
                return this.workIDField;
            }
            set {
                this.workIDField = value;
            }
        }
        
        /// <remarks/>
        public string resourceID {
            get {
                return this.resourceIDField;
            }
            set {
                this.resourceIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateTimeSpecified {
            get {
                return this.startDateTimeFieldSpecified;
            }
            set {
                this.startDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endDateTimeSpecified {
            get {
                return this.endDateTimeFieldSpecified;
            }
            set {
                this.endDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public switchingStep[] switchingSteps {
            get {
                return this.switchingStepsField;
            }
            set {
                this.switchingStepsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class switchingStep {
        
        private string stepNumberField;
        
        private string operationField;
        
        private string deviceDescriptionField;
        
        private objectRef deviceIDField;
        
        private workLocation workLocationField;
        
        private string desiredEndStateField;
        
        private string resourceIDField;
        
        private string workIDField;
        
        private string instructedByField;
        
        private System.DateTime instructedDateTimeField;
        
        private bool instructedDateTimeFieldSpecified;
        
        private string completedByField;
        
        private System.DateTime completedDateTimeField;
        
        private bool completedDateTimeFieldSpecified;
        
        private string stepStatusField;
        
        private clearance[] clearanceListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string stepNumber {
            get {
                return this.stepNumberField;
            }
            set {
                this.stepNumberField = value;
            }
        }
        
        /// <remarks/>
        public string operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public objectRef deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public workLocation workLocation {
            get {
                return this.workLocationField;
            }
            set {
                this.workLocationField = value;
            }
        }
        
        /// <remarks/>
        public string desiredEndState {
            get {
                return this.desiredEndStateField;
            }
            set {
                this.desiredEndStateField = value;
            }
        }
        
        /// <remarks/>
        public string resourceID {
            get {
                return this.resourceIDField;
            }
            set {
                this.resourceIDField = value;
            }
        }
        
        /// <remarks/>
        public string workID {
            get {
                return this.workIDField;
            }
            set {
                this.workIDField = value;
            }
        }
        
        /// <remarks/>
        public string instructedBy {
            get {
                return this.instructedByField;
            }
            set {
                this.instructedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime instructedDateTime {
            get {
                return this.instructedDateTimeField;
            }
            set {
                this.instructedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool instructedDateTimeSpecified {
            get {
                return this.instructedDateTimeFieldSpecified;
            }
            set {
                this.instructedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string completedBy {
            get {
                return this.completedByField;
            }
            set {
                this.completedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime completedDateTime {
            get {
                return this.completedDateTimeField;
            }
            set {
                this.completedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool completedDateTimeSpecified {
            get {
                return this.completedDateTimeFieldSpecified;
            }
            set {
                this.completedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string stepStatus {
            get {
                return this.stepStatusField;
            }
            set {
                this.stepStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public clearance[] clearanceList {
            get {
                return this.clearanceListField;
            }
            set {
                this.clearanceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class clearance : mspObject {
        
        private string purposeField;
        
        private string clearanceGivenToField;
        
        private System.DateTime issuedDateTimeField;
        
        private bool issuedDateTimeFieldSpecified;
        
        private System.DateTime releasedDateTimeField;
        
        private bool releasedDateTimeFieldSpecified;
        
        /// <remarks/>
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        public string clearanceGivenTo {
            get {
                return this.clearanceGivenToField;
            }
            set {
                this.clearanceGivenToField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime issuedDateTime {
            get {
                return this.issuedDateTimeField;
            }
            set {
                this.issuedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool issuedDateTimeSpecified {
            get {
                return this.issuedDateTimeFieldSpecified;
            }
            set {
                this.issuedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime releasedDateTime {
            get {
                return this.releasedDateTimeField;
            }
            set {
                this.releasedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool releasedDateTimeSpecified {
            get {
                return this.releasedDateTimeFieldSpecified;
            }
            set {
                this.releasedDateTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workOrder : mspObject {
        
        private string projectIDField;
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string jobDescrField;
        
        private string workflowStatusField;
        
        private design[] designsField;
        
        private customer customerField;
        
        private string accountNumberField;
        
        private locationFields locationFieldsField;
        
        private voltage systemVoltsField;
        
        private string contractorField;
        
        private telephoneNumber contractorPhoneField;
        
        private string electricianField;
        
        private telephoneNumber electricianPhoneField;
        
        private string woTypeField;
        
        private string cd740cField;
        
        private string ext740cField;
        
        private string loanNoField;
        
        private string cwpYrField;
        
        private string cwpCdField;
        
        private string budgetPurField;
        
        private string engrAsndField;
        
        private long cfmsCodeField;
        
        private bool cfmsCodeFieldSpecified;
        
        private long acNoField;
        
        private bool acNoFieldSpecified;
        
        private long budgetCodeField;
        
        private bool budgetCodeFieldSpecified;
        
        private string actCodeField;
        
        private long deptCodeField;
        
        private bool deptCodeFieldSpecified;
        
        private string warehouseIDField;
        
        private long grpCodeField;
        
        private bool grpCodeFieldSpecified;
        
        private string crewIDField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime clsDateField;
        
        private bool clsDateFieldSpecified;
        
        private System.DateTime estDateField;
        
        private bool estDateFieldSpecified;
        
        private actionCode actionCodeField;
        
        private bool actionCodeFieldSpecified;
        
        private string laborCategoryIDField;
        
        private money atcField;
        
        private loadDistrict loadDistrictField;
        
        private bool loadDistrictFieldSpecified;
        
        private constGrade constGradeField;
        
        private bool constGradeFieldSpecified;
        
        private duration durationField;
        
        private attachment[] attachmentsField;
        
        private locationAssociation[] locationAssociationsField;
        
        private workHistoryEvent[] workHistoryEventsField;
        
        private serviceOrderNumber[] serviceOrderNumbersField;
        
        private string gridLocationField;
        
        /// <remarks/>
        public string projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobDescr {
            get {
                return this.jobDescrField;
            }
            set {
                this.jobDescrField = value;
            }
        }
        
        /// <remarks/>
        public string workflowStatus {
            get {
                return this.workflowStatusField;
            }
            set {
                this.workflowStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public design[] designs {
            get {
                return this.designsField;
            }
            set {
                this.designsField = value;
            }
        }
        
        /// <remarks/>
        public customer customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public locationFields locationFields {
            get {
                return this.locationFieldsField;
            }
            set {
                this.locationFieldsField = value;
            }
        }
        
        /// <remarks/>
        public voltage systemVolts {
            get {
                return this.systemVoltsField;
            }
            set {
                this.systemVoltsField = value;
            }
        }
        
        /// <remarks/>
        public string contractor {
            get {
                return this.contractorField;
            }
            set {
                this.contractorField = value;
            }
        }
        
        /// <remarks/>
        public telephoneNumber contractorPhone {
            get {
                return this.contractorPhoneField;
            }
            set {
                this.contractorPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string electrician {
            get {
                return this.electricianField;
            }
            set {
                this.electricianField = value;
            }
        }
        
        /// <remarks/>
        public telephoneNumber electricianPhone {
            get {
                return this.electricianPhoneField;
            }
            set {
                this.electricianPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string woType {
            get {
                return this.woTypeField;
            }
            set {
                this.woTypeField = value;
            }
        }
        
        /// <remarks/>
        public string cd740c {
            get {
                return this.cd740cField;
            }
            set {
                this.cd740cField = value;
            }
        }
        
        /// <remarks/>
        public string ext740c {
            get {
                return this.ext740cField;
            }
            set {
                this.ext740cField = value;
            }
        }
        
        /// <remarks/>
        public string loanNo {
            get {
                return this.loanNoField;
            }
            set {
                this.loanNoField = value;
            }
        }
        
        /// <remarks/>
        public string cwpYr {
            get {
                return this.cwpYrField;
            }
            set {
                this.cwpYrField = value;
            }
        }
        
        /// <remarks/>
        public string cwpCd {
            get {
                return this.cwpCdField;
            }
            set {
                this.cwpCdField = value;
            }
        }
        
        /// <remarks/>
        public string budgetPur {
            get {
                return this.budgetPurField;
            }
            set {
                this.budgetPurField = value;
            }
        }
        
        /// <remarks/>
        public string engrAsnd {
            get {
                return this.engrAsndField;
            }
            set {
                this.engrAsndField = value;
            }
        }
        
        /// <remarks/>
        public long cfmsCode {
            get {
                return this.cfmsCodeField;
            }
            set {
                this.cfmsCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cfmsCodeSpecified {
            get {
                return this.cfmsCodeFieldSpecified;
            }
            set {
                this.cfmsCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long acNo {
            get {
                return this.acNoField;
            }
            set {
                this.acNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acNoSpecified {
            get {
                return this.acNoFieldSpecified;
            }
            set {
                this.acNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long budgetCode {
            get {
                return this.budgetCodeField;
            }
            set {
                this.budgetCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetCodeSpecified {
            get {
                return this.budgetCodeFieldSpecified;
            }
            set {
                this.budgetCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string actCode {
            get {
                return this.actCodeField;
            }
            set {
                this.actCodeField = value;
            }
        }
        
        /// <remarks/>
        public long deptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deptCodeSpecified {
            get {
                return this.deptCodeFieldSpecified;
            }
            set {
                this.deptCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string warehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public long grpCode {
            get {
                return this.grpCodeField;
            }
            set {
                this.grpCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool grpCodeSpecified {
            get {
                return this.grpCodeFieldSpecified;
            }
            set {
                this.grpCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string crewID {
            get {
                return this.crewIDField;
            }
            set {
                this.crewIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime clsDate {
            get {
                return this.clsDateField;
            }
            set {
                this.clsDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clsDateSpecified {
            get {
                return this.clsDateFieldSpecified;
            }
            set {
                this.clsDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime estDate {
            get {
                return this.estDateField;
            }
            set {
                this.estDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estDateSpecified {
            get {
                return this.estDateFieldSpecified;
            }
            set {
                this.estDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public actionCode actionCode {
            get {
                return this.actionCodeField;
            }
            set {
                this.actionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionCodeSpecified {
            get {
                return this.actionCodeFieldSpecified;
            }
            set {
                this.actionCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string laborCategoryID {
            get {
                return this.laborCategoryIDField;
            }
            set {
                this.laborCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public money atc {
            get {
                return this.atcField;
            }
            set {
                this.atcField = value;
            }
        }
        
        /// <remarks/>
        public loadDistrict loadDistrict {
            get {
                return this.loadDistrictField;
            }
            set {
                this.loadDistrictField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadDistrictSpecified {
            get {
                return this.loadDistrictFieldSpecified;
            }
            set {
                this.loadDistrictFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public constGrade constGrade {
            get {
                return this.constGradeField;
            }
            set {
                this.constGradeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constGradeSpecified {
            get {
                return this.constGradeFieldSpecified;
            }
            set {
                this.constGradeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public attachment[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public locationAssociation[] locationAssociations {
            get {
                return this.locationAssociationsField;
            }
            set {
                this.locationAssociationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public workHistoryEvent[] workHistoryEvents {
            get {
                return this.workHistoryEventsField;
            }
            set {
                this.workHistoryEventsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public serviceOrderNumber[] serviceOrderNumbers {
            get {
                return this.serviceOrderNumbersField;
            }
            set {
                this.serviceOrderNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class design : mspObject {
        
        private designIdentifier designIdentifierField;
        
        private string designRoleField;
        
        private string workflowStatusField;
        
        private station[] stationListField;
        
        private backgroundGraphics backgroundGraphicsField;
        
        private attachment[] attachmentsField;
        
        /// <remarks/>
        public designIdentifier designIdentifier {
            get {
                return this.designIdentifierField;
            }
            set {
                this.designIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string designRole {
            get {
                return this.designRoleField;
            }
            set {
                this.designRoleField = value;
            }
        }
        
        /// <remarks/>
        public string workflowStatus {
            get {
                return this.workflowStatusField;
            }
            set {
                this.workflowStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public station[] stationList {
            get {
                return this.stationListField;
            }
            set {
                this.stationListField = value;
            }
        }
        
        /// <remarks/>
        public backgroundGraphics backgroundGraphics {
            get {
                return this.backgroundGraphicsField;
            }
            set {
                this.backgroundGraphicsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public attachment[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class designIdentifier {
        
        private string designNumberField;
        
        private string extensionField;
        
        /// <remarks/>
        public string designNumber {
            get {
                return this.designNumberField;
            }
            set {
                this.designNumberField = value;
            }
        }
        
        /// <remarks/>
        public string extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class station : mspMultiGeometryObject {
        
        private graphicSymbol graphicSymbolField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private string substationCodeField;
        
        private string feederField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private poleUse poleUseField;
        
        private bool poleUseFieldSpecified;
        
        private backSpan[] backSpanListField;
        
        private constTypeCode constTypField;
        
        private bool constTypFieldSpecified;
        
        private staStatus staStatusField;
        
        private bool staStatusFieldSpecified;
        
        private constGrade constGradeField;
        
        private bool constGradeFieldSpecified;
        
        private float angleField;
        
        private bool angleFieldSpecified;
        
        private bool isTapField;
        
        private bool isTapFieldSpecified;
        
        private string terrainField;
        
        private GPSLocation gPSLocationField;
        
        private assembly[] assemblyListField;
        
        private CPR[] cPRListField;
        
        private physicalObjectList objectListField;
        
        private pickList pickListField;
        
        private attachment[] attachmentsField;
        
        /// <remarks/>
        public graphicSymbol graphicSymbol {
            get {
                return this.graphicSymbolField;
            }
            set {
                this.graphicSymbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        public string substationCode {
            get {
                return this.substationCodeField;
            }
            set {
                this.substationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleUse poleUse {
            get {
                return this.poleUseField;
            }
            set {
                this.poleUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleUseSpecified {
            get {
                return this.poleUseFieldSpecified;
            }
            set {
                this.poleUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public backSpan[] backSpanList {
            get {
                return this.backSpanListField;
            }
            set {
                this.backSpanListField = value;
            }
        }
        
        /// <remarks/>
        public constTypeCode constTyp {
            get {
                return this.constTypField;
            }
            set {
                this.constTypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constTypSpecified {
            get {
                return this.constTypFieldSpecified;
            }
            set {
                this.constTypFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public staStatus staStatus {
            get {
                return this.staStatusField;
            }
            set {
                this.staStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool staStatusSpecified {
            get {
                return this.staStatusFieldSpecified;
            }
            set {
                this.staStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public constGrade constGrade {
            get {
                return this.constGradeField;
            }
            set {
                this.constGradeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constGradeSpecified {
            get {
                return this.constGradeFieldSpecified;
            }
            set {
                this.constGradeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float angle {
            get {
                return this.angleField;
            }
            set {
                this.angleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool angleSpecified {
            get {
                return this.angleFieldSpecified;
            }
            set {
                this.angleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isTap {
            get {
                return this.isTapField;
            }
            set {
                this.isTapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isTapSpecified {
            get {
                return this.isTapFieldSpecified;
            }
            set {
                this.isTapFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string terrain {
            get {
                return this.terrainField;
            }
            set {
                this.terrainField = value;
            }
        }
        
        /// <remarks/>
        public GPSLocation GPSLocation {
            get {
                return this.gPSLocationField;
            }
            set {
                this.gPSLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public assembly[] assemblyList {
            get {
                return this.assemblyListField;
            }
            set {
                this.assemblyListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CPR[] CPRList {
            get {
                return this.cPRListField;
            }
            set {
                this.cPRListField = value;
            }
        }
        
        /// <remarks/>
        public physicalObjectList objectList {
            get {
                return this.objectListField;
            }
            set {
                this.objectListField = value;
            }
        }
        
        /// <remarks/>
        public pickList pickList {
            get {
                return this.pickListField;
            }
            set {
                this.pickListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public attachment[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class backSpan {
        
        private length lengthField;
        
        private string stationIDField;
        
        private unitActn unitActionField;
        
        private bool unitActionFieldSpecified;
        
        /// <remarks/>
        public length length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public string stationID {
            get {
                return this.stationIDField;
            }
            set {
                this.stationIDField = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitAction {
            get {
                return this.unitActionField;
            }
            set {
                this.unitActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActionSpecified {
            get {
                return this.unitActionFieldSpecified;
            }
            set {
                this.unitActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class length {
        
        private lengthUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lengthUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum constTypeCode {
        
        /// <remarks/>
        Hot,
        
        /// <remarks/>
        Cold,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum staStatus {
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        E,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum constGrade {
        
        /// <remarks/>
        GradeB,
        
        /// <remarks/>
        GradeC,
        
        /// <remarks/>
        GradeN,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class assembly {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string featureTypeField;
        
        private string featureIDField;
        
        private string unitCodeField;
        
        private unitActn unitActionField;
        
        private bool unitActionFieldSpecified;
        
        private spanTyp spanTypeField;
        
        private bool spanTypeFieldSpecified;
        
        private length unitLengthField;
        
        private string poleVarField;
        
        private string wireVarField;
        
        private string neutVarField;
        
        private string miscVarField;
        
        private float quantityField;
        
        private bool quantityFieldSpecified;
        
        private height poleHeightField;
        
        private poleClass poleClassField;
        
        private bool poleClassFieldSpecified;
        
        private poleType poleTypeField;
        
        private bool poleTypeFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureID {
            get {
                return this.featureIDField;
            }
            set {
                this.featureIDField = value;
            }
        }
        
        /// <remarks/>
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitAction {
            get {
                return this.unitActionField;
            }
            set {
                this.unitActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActionSpecified {
            get {
                return this.unitActionFieldSpecified;
            }
            set {
                this.unitActionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public spanTyp spanType {
            get {
                return this.spanTypeField;
            }
            set {
                this.spanTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool spanTypeSpecified {
            get {
                return this.spanTypeFieldSpecified;
            }
            set {
                this.spanTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public length unitLength {
            get {
                return this.unitLengthField;
            }
            set {
                this.unitLengthField = value;
            }
        }
        
        /// <remarks/>
        public string poleVar {
            get {
                return this.poleVarField;
            }
            set {
                this.poleVarField = value;
            }
        }
        
        /// <remarks/>
        public string wireVar {
            get {
                return this.wireVarField;
            }
            set {
                this.wireVarField = value;
            }
        }
        
        /// <remarks/>
        public string neutVar {
            get {
                return this.neutVarField;
            }
            set {
                this.neutVarField = value;
            }
        }
        
        /// <remarks/>
        public string miscVar {
            get {
                return this.miscVarField;
            }
            set {
                this.miscVarField = value;
            }
        }
        
        /// <remarks/>
        public float quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public height poleHeight {
            get {
                return this.poleHeightField;
            }
            set {
                this.poleHeightField = value;
            }
        }
        
        /// <remarks/>
        public poleClass poleClass {
            get {
                return this.poleClassField;
            }
            set {
                this.poleClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleClassSpecified {
            get {
                return this.poleClassFieldSpecified;
            }
            set {
                this.poleClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public poleType poleType {
            get {
                return this.poleTypeField;
            }
            set {
                this.poleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool poleTypeSpecified {
            get {
                return this.poleTypeFieldSpecified;
            }
            set {
                this.poleTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum spanTyp {
        
        /// <remarks/>
        Primary,
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        Underbuild,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CPR {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string acctCodeField;
        
        private float quantityField;
        
        private bool quantityFieldSpecified;
        
        private length lengthField;
        
        private unitActn unitActionField;
        
        private bool unitActionFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string acctCode {
            get {
                return this.acctCodeField;
            }
            set {
                this.acctCodeField = value;
            }
        }
        
        /// <remarks/>
        public float quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public length length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public unitActn unitAction {
            get {
                return this.unitActionField;
            }
            set {
                this.unitActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitActionSpecified {
            get {
                return this.unitActionFieldSpecified;
            }
            set {
                this.unitActionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class physicalObjectList {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private anchor[] anchorField;
        
        private breaker[] breakerField;
        
        private capacitor[] capacitorField;
        
        private capacitorBank[] capacitorBankField;
        
        private CDDevice[] cDDeviceField;
        
        private cut[] cutField;
        
        private elbow[] elbowField;
        
        private electricMeter[] electricMeterField;
        
        private fuse[] fuseField;
        
        private gasMeter[] gasMeterField;
        
        private guy[] guyField;
        
        private inductionMachine[] inductionMachineField;
        
        private inHomeDisplay[] inHomeDisplayField;
        
        private jumper[] jumperField;
        
        private loadManagementDevice[] loadManagementDeviceField;
        
        private measurementDevice[] measurementDeviceField;
        
        private meterBase[] meterBaseField;
        
        private module[] moduleField;
        
        private ohPrimaryLine[] ohPrimaryLineField;
        
        private ohSecondaryLine[] ohSecondaryLineField;
        
        private ohTransmissionLine[] ohTransmissionLineField;
        
        private outageDetectionDevice[] outageDetectionDeviceField;
        
        private overcurrentDeviceBank[] overcurrentDeviceBankField;
        
        private parcel[] parcelField;
        
        private pole[] poleField;
        
        private powerMonitor[] powerMonitorField;
        
        private powerSystemDevice[] powerSystemDeviceField;
        
        private premise[] premiseField;
        
        private primaryCabinet[] primaryCabinetField;
        
        private propaneMeter[] propaneMeterField;
        
        private recloser[] recloserField;
        
        private regulator[] regulatorField;
        
        private regulatorBank[] regulatorBankField;
        
        private riser[] riserField;
        
        private secondaryJunctionBox[] secondaryJunctionBoxField;
        
        private sectionalizer[] sectionalizerField;
        
        private securityLight[] securityLightField;
        
        private serviceLocation[] serviceLocationField;
        
        private spanGuy[] spanGuyField;
        
        private streetLight[] streetLightField;
        
        private substation[] substationField;
        
        private surgeArrestor[] surgeArrestorField;
        
        private @switch[] switchField;
        
        private switchingDeviceBank[] switchingDeviceBankField;
        
        private synchronousMachine[] synchronousMachineField;
        
        private trafficLight[] trafficLightField;
        
        private transformer[] transformerField;
        
        private transformerBank[] transformerBankField;
        
        private ugPrimaryLine[] ugPrimaryLineField;
        
        private ugSecondaryLine[] ugSecondaryLineField;
        
        private ugTransmissionLine[] ugTransmissionLineField;
        
        private waterMeter[] waterMeterField;
        
        private CIMObjectList cIMObjectListField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anchor")]
        public anchor[] anchor {
            get {
                return this.anchorField;
            }
            set {
                this.anchorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("breaker")]
        public breaker[] breaker {
            get {
                return this.breakerField;
            }
            set {
                this.breakerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("capacitor")]
        public capacitor[] capacitor {
            get {
                return this.capacitorField;
            }
            set {
                this.capacitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("capacitorBank")]
        public capacitorBank[] capacitorBank {
            get {
                return this.capacitorBankField;
            }
            set {
                this.capacitorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CDDevice")]
        public CDDevice[] CDDevice {
            get {
                return this.cDDeviceField;
            }
            set {
                this.cDDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cut")]
        public cut[] cut {
            get {
                return this.cutField;
            }
            set {
                this.cutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("elbow")]
        public elbow[] elbow {
            get {
                return this.elbowField;
            }
            set {
                this.elbowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("electricMeter")]
        public electricMeter[] electricMeter {
            get {
                return this.electricMeterField;
            }
            set {
                this.electricMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("fuse")]
        public fuse[] fuse {
            get {
                return this.fuseField;
            }
            set {
                this.fuseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gasMeter")]
        public gasMeter[] gasMeter {
            get {
                return this.gasMeterField;
            }
            set {
                this.gasMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("guy")]
        public guy[] guy {
            get {
                return this.guyField;
            }
            set {
                this.guyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inductionMachine")]
        public inductionMachine[] inductionMachine {
            get {
                return this.inductionMachineField;
            }
            set {
                this.inductionMachineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inHomeDisplay")]
        public inHomeDisplay[] inHomeDisplay {
            get {
                return this.inHomeDisplayField;
            }
            set {
                this.inHomeDisplayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("jumper")]
        public jumper[] jumper {
            get {
                return this.jumperField;
            }
            set {
                this.jumperField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("loadManagementDevice")]
        public loadManagementDevice[] loadManagementDevice {
            get {
                return this.loadManagementDeviceField;
            }
            set {
                this.loadManagementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("measurementDevice")]
        public measurementDevice[] measurementDevice {
            get {
                return this.measurementDeviceField;
            }
            set {
                this.measurementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("meterBase")]
        public meterBase[] meterBase {
            get {
                return this.meterBaseField;
            }
            set {
                this.meterBaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("module")]
        public module[] module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohPrimaryLine")]
        public ohPrimaryLine[] ohPrimaryLine {
            get {
                return this.ohPrimaryLineField;
            }
            set {
                this.ohPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohSecondaryLine")]
        public ohSecondaryLine[] ohSecondaryLine {
            get {
                return this.ohSecondaryLineField;
            }
            set {
                this.ohSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohTransmissionLine")]
        public ohTransmissionLine[] ohTransmissionLine {
            get {
                return this.ohTransmissionLineField;
            }
            set {
                this.ohTransmissionLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("outageDetectionDevice")]
        public outageDetectionDevice[] outageDetectionDevice {
            get {
                return this.outageDetectionDeviceField;
            }
            set {
                this.outageDetectionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("overcurrentDeviceBank")]
        public overcurrentDeviceBank[] overcurrentDeviceBank {
            get {
                return this.overcurrentDeviceBankField;
            }
            set {
                this.overcurrentDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parcel")]
        public parcel[] parcel {
            get {
                return this.parcelField;
            }
            set {
                this.parcelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pole")]
        public pole[] pole {
            get {
                return this.poleField;
            }
            set {
                this.poleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("powerMonitor")]
        public powerMonitor[] powerMonitor {
            get {
                return this.powerMonitorField;
            }
            set {
                this.powerMonitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("powerSystemDevice")]
        public powerSystemDevice[] powerSystemDevice {
            get {
                return this.powerSystemDeviceField;
            }
            set {
                this.powerSystemDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("premise")]
        public premise[] premise {
            get {
                return this.premiseField;
            }
            set {
                this.premiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("primaryCabinet")]
        public primaryCabinet[] primaryCabinet {
            get {
                return this.primaryCabinetField;
            }
            set {
                this.primaryCabinetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("propaneMeter")]
        public propaneMeter[] propaneMeter {
            get {
                return this.propaneMeterField;
            }
            set {
                this.propaneMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("recloser")]
        public recloser[] recloser {
            get {
                return this.recloserField;
            }
            set {
                this.recloserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("regulator")]
        public regulator[] regulator {
            get {
                return this.regulatorField;
            }
            set {
                this.regulatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("regulatorBank")]
        public regulatorBank[] regulatorBank {
            get {
                return this.regulatorBankField;
            }
            set {
                this.regulatorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("riser")]
        public riser[] riser {
            get {
                return this.riserField;
            }
            set {
                this.riserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("secondaryJunctionBox")]
        public secondaryJunctionBox[] secondaryJunctionBox {
            get {
                return this.secondaryJunctionBoxField;
            }
            set {
                this.secondaryJunctionBoxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("sectionalizer")]
        public sectionalizer[] sectionalizer {
            get {
                return this.sectionalizerField;
            }
            set {
                this.sectionalizerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityLight")]
        public securityLight[] securityLight {
            get {
                return this.securityLightField;
            }
            set {
                this.securityLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceLocation")]
        public serviceLocation[] serviceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("spanGuy")]
        public spanGuy[] spanGuy {
            get {
                return this.spanGuyField;
            }
            set {
                this.spanGuyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("streetLight")]
        public streetLight[] streetLight {
            get {
                return this.streetLightField;
            }
            set {
                this.streetLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("substation")]
        public substation[] substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("surgeArrestor")]
        public surgeArrestor[] surgeArrestor {
            get {
                return this.surgeArrestorField;
            }
            set {
                this.surgeArrestorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("switch")]
        public @switch[] @switch {
            get {
                return this.switchField;
            }
            set {
                this.switchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("switchingDeviceBank")]
        public switchingDeviceBank[] switchingDeviceBank {
            get {
                return this.switchingDeviceBankField;
            }
            set {
                this.switchingDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("synchronousMachine")]
        public synchronousMachine[] synchronousMachine {
            get {
                return this.synchronousMachineField;
            }
            set {
                this.synchronousMachineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("trafficLight")]
        public trafficLight[] trafficLight {
            get {
                return this.trafficLightField;
            }
            set {
                this.trafficLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transformer")]
        public transformer[] transformer {
            get {
                return this.transformerField;
            }
            set {
                this.transformerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transformerBank")]
        public transformerBank[] transformerBank {
            get {
                return this.transformerBankField;
            }
            set {
                this.transformerBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugPrimaryLine")]
        public ugPrimaryLine[] ugPrimaryLine {
            get {
                return this.ugPrimaryLineField;
            }
            set {
                this.ugPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugSecondaryLine")]
        public ugSecondaryLine[] ugSecondaryLine {
            get {
                return this.ugSecondaryLineField;
            }
            set {
                this.ugSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugTransmissionLine")]
        public ugTransmissionLine[] ugTransmissionLine {
            get {
                return this.ugTransmissionLineField;
            }
            set {
                this.ugTransmissionLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("waterMeter")]
        public waterMeter[] waterMeter {
            get {
                return this.waterMeterField;
            }
            set {
                this.waterMeterField = value;
            }
        }
        
        /// <remarks/>
        public CIMObjectList CIMObjectList {
            get {
                return this.cIMObjectListField;
            }
            set {
                this.cIMObjectListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class measurementDevice : mspPointObject {
        
        private measurementDeviceType measurementDeviceTypeField;
        
        private bool measurementDeviceTypeFieldSpecified;
        
        private eaLoc eaLocField;
        
        private string substationField;
        
        private string feederField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private measurementDeviceStatus measuremrentDeviceStatusField;
        
        private bool measuremrentDeviceStatusFieldSpecified;
        
        private string pointIDField;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public measurementDeviceType measurementDeviceType {
            get {
                return this.measurementDeviceTypeField;
            }
            set {
                this.measurementDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measurementDeviceTypeSpecified {
            get {
                return this.measurementDeviceTypeFieldSpecified;
            }
            set {
                this.measurementDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public measurementDeviceStatus measuremrentDeviceStatus {
            get {
                return this.measuremrentDeviceStatusField;
            }
            set {
                this.measuremrentDeviceStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool measuremrentDeviceStatusSpecified {
            get {
                return this.measuremrentDeviceStatusFieldSpecified;
            }
            set {
                this.measuremrentDeviceStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pointID {
            get {
                return this.pointIDField;
            }
            set {
                this.pointIDField = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum measurementDeviceType {
        
        /// <remarks/>
        Emeter,
        
        /// <remarks/>
        Gmeter,
        
        /// <remarks/>
        Wmeter,
        
        /// <remarks/>
        Demand,
        
        /// <remarks/>
        Harmonic,
        
        /// <remarks/>
        Phaseangle,
        
        /// <remarks/>
        BusV,
        
        /// <remarks/>
        BusI,
        
        /// <remarks/>
        BkrV,
        
        /// <remarks/>
        BkrI,
        
        /// <remarks/>
        LineV,
        
        /// <remarks/>
        LineI,
        
        /// <remarks/>
        GPSClock,
        
        /// <remarks/>
        Temp,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum measurementDeviceStatus {
        
        /// <remarks/>
        InService,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ohPrimaryLine : mspElectricLine {
        
        private string lengthSrcField;
        
        private voltage operatingVoltageField;
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
        
        /// <remarks/>
        public voltage operatingVoltage {
            get {
                return this.operatingVoltageField;
            }
            set {
                this.operatingVoltageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspElectricLine : mspConnectivityLine {
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private phaseItem[] phaseListField;
        
        private length condLengthField;
        
        private eaEquipID constructionField;
        
        private mspLoadGroup loadField;
        
        private objectRef equipmentContainerIDField;
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public phaseItem[] phaseList {
            get {
                return this.phaseListField;
            }
            set {
                this.phaseListField = value;
            }
        }
        
        /// <remarks/>
        public length condLength {
            get {
                return this.condLengthField;
            }
            set {
                this.condLengthField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID construction {
            get {
                return this.constructionField;
            }
            set {
                this.constructionField = value;
            }
        }
        
        /// <remarks/>
        public mspLoadGroup load {
            get {
                return this.loadField;
            }
            set {
                this.loadField = value;
            }
        }
        
        /// <remarks/>
        public objectRef equipmentContainerID {
            get {
                return this.equipmentContainerIDField;
            }
            set {
                this.equipmentContainerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class phaseItem {
        
        private mspPhase phaseField;
        
        private bool phaseFieldSpecified;
        
        private eaEquipID conductorTypeField;
        
        private string positionNumberField;
        
        /// <remarks/>
        public mspPhase phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID conductorType {
            get {
                return this.conductorTypeField;
            }
            set {
                this.conductorTypeField = value;
            }
        }
        
        /// <remarks/>
        public string positionNumber {
            get {
                return this.positionNumberField;
            }
            set {
                this.positionNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspConnectivityLine : mspLineObject {
        
        private string gridLocationField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private string sectionIDField;
        
        private objectRef[] parentSectionIDField;
        
        private nodeIdentifier1 fromNodeIDField;
        
        private nodeIdentifier1 toNodeIDField;
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        public string sectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID")]
        public objectRef[] parentSectionID {
            get {
                return this.parentSectionIDField;
            }
            set {
                this.parentSectionIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 fromNodeID {
            get {
                return this.fromNodeIDField;
            }
            set {
                this.fromNodeIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 toNodeID {
            get {
                return this.toNodeIDField;
            }
            set {
                this.toNodeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericLineFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(spanGuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspConnectivityLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(mspElectricLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ugPrimaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohTransmissionLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohSecondaryLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ohPrimaryLine))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspLineObject : mspObject {
        
        private LineStringType gMLLineField;
        
        /// <remarks/>
        public LineStringType GMLLine {
            get {
                return this.gMLLineField;
            }
            set {
                this.gMLLineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class genericLineFeature : mspLineObject {
        
        private string featureTypeField;
        
        private string featureSubtypeField;
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class spanGuy : mspLineObject {
        
        private height attachmentHeightField;
        
        /// <remarks/>
        public height attachmentHeight {
            get {
                return this.attachmentHeightField;
            }
            set {
                this.attachmentHeightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ugTransmissionLine : mspElectricLine {
        
        private voltage operatingVoltageField;
        
        private apparentPower ratingField;
        
        private string lengthSrcField;
        
        private string baseVoltageIDField;
        
        private lineImpedances lineImpedancesField;
        
        private string lineIDField;
        
        /// <remarks/>
        public voltage operatingVoltage {
            get {
                return this.operatingVoltageField;
            }
            set {
                this.operatingVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
        
        /// <remarks/>
        public string baseVoltageID {
            get {
                return this.baseVoltageIDField;
            }
            set {
                this.baseVoltageIDField = value;
            }
        }
        
        /// <remarks/>
        public lineImpedances lineImpedances {
            get {
                return this.lineImpedancesField;
            }
            set {
                this.lineImpedancesField = value;
            }
        }
        
        /// <remarks/>
        public string lineID {
            get {
                return this.lineIDField;
            }
            set {
                this.lineIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class lineImpedances {
        
        private susceptance1 bchField;
        
        private resistance rField;
        
        private reactance1 xField;
        
        /// <remarks/>
        public susceptance1 bch {
            get {
                return this.bchField;
            }
            set {
                this.bchField = value;
            }
        }
        
        /// <remarks/>
        public resistance r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public reactance1 x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ugSecondaryLine : mspElectricLine {
        
        private voltage operatingVOltageField;
        
        private uGSecType uGSecTypeField;
        
        private bool uGSecTypeFieldSpecified;
        
        private bool isInConduitField;
        
        private bool isInConduitFieldSpecified;
        
        private string manufacturerField;
        
        private string lengthSrcField;
        
        /// <remarks/>
        public voltage operatingVOltage {
            get {
                return this.operatingVOltageField;
            }
            set {
                this.operatingVOltageField = value;
            }
        }
        
        /// <remarks/>
        public uGSecType uGSecType {
            get {
                return this.uGSecTypeField;
            }
            set {
                this.uGSecTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uGSecTypeSpecified {
            get {
                return this.uGSecTypeFieldSpecified;
            }
            set {
                this.uGSecTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isInConduit {
            get {
                return this.isInConduitField;
            }
            set {
                this.isInConduitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isInConduitSpecified {
            get {
                return this.isInConduitFieldSpecified;
            }
            set {
                this.isInConduitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum uGSecType {
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ugPrimaryLine : mspElectricLine {
        
        private voltage operatingVoltageField;
        
        private bool isInConduitField;
        
        private bool isInConduitFieldSpecified;
        
        private string manufacturerField;
        
        private string lengthSrcField;
        
        /// <remarks/>
        public voltage operatingVoltage {
            get {
                return this.operatingVoltageField;
            }
            set {
                this.operatingVoltageField = value;
            }
        }
        
        /// <remarks/>
        public bool isInConduit {
            get {
                return this.isInConduitField;
            }
            set {
                this.isInConduitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isInConduitSpecified {
            get {
                return this.isInConduitFieldSpecified;
            }
            set {
                this.isInConduitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ohTransmissionLine : mspElectricLine {
        
        private voltage operatingVoltageField;
        
        private apparentPower ratingField;
        
        private string lengthSrcField;
        
        private string baseVoltageIDField;
        
        private lineImpedances lineImpedancesField;
        
        private string lineIDField;
        
        /// <remarks/>
        public voltage operatingVoltage {
            get {
                return this.operatingVoltageField;
            }
            set {
                this.operatingVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
        
        /// <remarks/>
        public string baseVoltageID {
            get {
                return this.baseVoltageIDField;
            }
            set {
                this.baseVoltageIDField = value;
            }
        }
        
        /// <remarks/>
        public lineImpedances lineImpedances {
            get {
                return this.lineImpedancesField;
            }
            set {
                this.lineImpedancesField = value;
            }
        }
        
        /// <remarks/>
        public string lineID {
            get {
                return this.lineIDField;
            }
            set {
                this.lineIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ohSecondaryLine : mspElectricLine {
        
        private secondaryType secondaryTypeField;
        
        private bool secondaryTypeFieldSpecified;
        
        private voltage operatingVoltageField;
        
        private string lengthSrcField;
        
        /// <remarks/>
        public secondaryType secondaryType {
            get {
                return this.secondaryTypeField;
            }
            set {
                this.secondaryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool secondaryTypeSpecified {
            get {
                return this.secondaryTypeFieldSpecified;
            }
            set {
                this.secondaryTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage operatingVoltage {
            get {
                return this.operatingVoltageField;
            }
            set {
                this.operatingVoltageField = value;
            }
        }
        
        /// <remarks/>
        public string lengthSrc {
            get {
                return this.lengthSrcField;
            }
            set {
                this.lengthSrcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum secondaryType {
        
        /// <remarks/>
        Underbuild,
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageDetectionDevice : mspPointObject {
        
        private string serialNumberField;
        
        private outageDetectDeviceType outageDetectDeviceTypeField;
        
        private bool outageDetectDeviceTypeFieldSpecified;
        
        private string manufacturerField;
        
        private long phasesField;
        
        private bool phasesFieldSpecified;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private meterID meterIDField;
        
        private outageDetectDeviceStatus outageDetectDeviceStatusField;
        
        private bool outageDetectDeviceStatusFieldSpecified;
        
        private assetFields assetFieldsField;
        
        /// <remarks/>
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceType outageDetectDeviceType {
            get {
                return this.outageDetectDeviceTypeField;
            }
            set {
                this.outageDetectDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectDeviceTypeSpecified {
            get {
                return this.outageDetectDeviceTypeFieldSpecified;
            }
            set {
                this.outageDetectDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public long phases {
            get {
                return this.phasesField;
            }
            set {
                this.phasesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phasesSpecified {
            get {
                return this.phasesFieldSpecified;
            }
            set {
                this.phasesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceStatus outageDetectDeviceStatus {
            get {
                return this.outageDetectDeviceStatusField;
            }
            set {
                this.outageDetectDeviceStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectDeviceStatusSpecified {
            get {
                return this.outageDetectDeviceStatusFieldSpecified;
            }
            set {
                this.outageDetectDeviceStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum outageDetectDeviceType {
        
        /// <remarks/>
        Call,
        
        /// <remarks/>
        CustomerServiceRep,
        
        /// <remarks/>
        InboundTelephoneDevice,
        
        /// <remarks/>
        Meter,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum outageDetectDeviceStatus {
        
        /// <remarks/>
        InService,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        Defective,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class parcel : mspPolygonObject {
        
        private string descriptionField;
        
        private string ownerField;
        
        private string sectionField;
        
        private string townshipField;
        
        private string rangeField;
        
        private string legalDescriptionField;
        
        private string[] premiseListField;
        
        private premise[] premiseObjectListField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string township {
            get {
                return this.townshipField;
            }
            set {
                this.townshipField = value;
            }
        }
        
        /// <remarks/>
        public string range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
            }
        }
        
        /// <remarks/>
        public string legalDescription {
            get {
                return this.legalDescriptionField;
            }
            set {
                this.legalDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("premiseID", IsNullable=false)]
        public string[] premiseList {
            get {
                return this.premiseListField;
            }
            set {
                this.premiseListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public premise[] premiseObjectList {
            get {
                return this.premiseObjectListField;
            }
            set {
                this.premiseObjectListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class premise : mspPointObject {
        
        private string descriptionField;
        
        private string ownerField;
        
        private string parcelIDField;
        
        private premiseService[] premiseServiceListField;
        
        private serviceLocation[] serviceLocationsField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public string parcelID {
            get {
                return this.parcelIDField;
            }
            set {
                this.parcelIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public premiseService[] premiseServiceList {
            get {
                return this.premiseServiceListField;
            }
            set {
                this.premiseServiceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public serviceLocation[] serviceLocations {
            get {
                return this.serviceLocationsField;
            }
            set {
                this.serviceLocationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class premiseService {
        
        private serviceID serviceIDField;
        
        private string serviceLocationIDField;
        
        private string accountNumberField;
        
        private string customerIDField;
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericPolygonFeature))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(parcel))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspPolygonObject : mspObject {
        
        private GMLPolygon gMLPolygonField;
        
        /// <remarks/>
        public GMLPolygon GMLPolygon {
            get {
                return this.gMLPolygonField;
            }
            set {
                this.gMLPolygonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class genericPolygonFeature : mspPolygonObject {
        
        private string featureSubtypeField;
        
        private string featureTypeField;
        
        /// <remarks/>
        public string featureSubtype {
            get {
                return this.featureSubtypeField;
            }
            set {
                this.featureSubtypeField = value;
            }
        }
        
        /// <remarks/>
        public string featureType {
            get {
                return this.featureTypeField;
            }
            set {
                this.featureTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class powerMonitor : mspObject {
        
        private System.DateTime callTimeField;
        
        private bool callTimeFieldSpecified;
        
        private telephoneNumber telephoneNumberField;
        
        private string recordNumField;
        
        private pmEventCode eventCodeField;
        
        private bool eventCodeFieldSpecified;
        
        private voltage voltageField;
        
        private bool ackField;
        
        private bool ackFieldSpecified;
        
        private string ackByField;
        
        private System.DateTime ackTimeField;
        
        private bool ackTimeFieldSpecified;
        
        /// <remarks/>
        public System.DateTime callTime {
            get {
                return this.callTimeField;
            }
            set {
                this.callTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callTimeSpecified {
            get {
                return this.callTimeFieldSpecified;
            }
            set {
                this.callTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public telephoneNumber telephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                this.telephoneNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string recordNum {
            get {
                return this.recordNumField;
            }
            set {
                this.recordNumField = value;
            }
        }
        
        /// <remarks/>
        public pmEventCode eventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventCodeSpecified {
            get {
                return this.eventCodeFieldSpecified;
            }
            set {
                this.eventCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage voltage {
            get {
                return this.voltageField;
            }
            set {
                this.voltageField = value;
            }
        }
        
        /// <remarks/>
        public bool ack {
            get {
                return this.ackField;
            }
            set {
                this.ackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ackSpecified {
            get {
                return this.ackFieldSpecified;
            }
            set {
                this.ackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ackBy {
            get {
                return this.ackByField;
            }
            set {
                this.ackByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ackTime {
            get {
                return this.ackTimeField;
            }
            set {
                this.ackTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ackTimeSpecified {
            get {
                return this.ackTimeFieldSpecified;
            }
            set {
                this.ackTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum pmEventCode {
        
        /// <remarks/>
        LowBattery,
        
        /// <remarks/>
        Event1,
        
        /// <remarks/>
        Event2,
        
        /// <remarks/>
        Event3,
        
        /// <remarks/>
        LockOut,
        
        /// <remarks/>
        PowerRestored,
        
        /// <remarks/>
        UndeterminedOn,
        
        /// <remarks/>
        UndeterminedOff,
        
        /// <remarks/>
        BrownOut,
        
        /// <remarks/>
        HighVoltage,
        
        /// <remarks/>
        NormalVoltage,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class substation : mspObject {
        
        private PolygonType gMLPolygonField;
        
        private PointType gMLLocationField;
        
        private genericAnnotationFeature[] annotationListField;
        
        private string facilityIDField;
        
        private string nameField;
        
        private voltage busVoltsField;
        
        private voltage nominalVoltsField;
        
        private feederObject[] feederListField;
        
        private objectRef[] contentsListField;
        
        private Bay[] bayListField;
        
        private VoltageLevel[] voltageLevelsField;
        
        private objectRef regionIDField;
        
        /// <remarks/>
        public PolygonType GMLPolygon {
            get {
                return this.gMLPolygonField;
            }
            set {
                this.gMLPolygonField = value;
            }
        }
        
        /// <remarks/>
        public PointType GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericAnnotationFeature[] annotationList {
            get {
                return this.annotationListField;
            }
            set {
                this.annotationListField = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public voltage busVolts {
            get {
                return this.busVoltsField;
            }
            set {
                this.busVoltsField = value;
            }
        }
        
        /// <remarks/>
        public voltage nominalVolts {
            get {
                return this.nominalVoltsField;
            }
            set {
                this.nominalVoltsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public feederObject[] feederList {
            get {
                return this.feederListField;
            }
            set {
                this.feederListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("contentsItem", IsNullable=false)]
        public objectRef[] contentsList {
            get {
                return this.contentsListField;
            }
            set {
                this.contentsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Bay[] bayList {
            get {
                return this.bayListField;
            }
            set {
                this.bayListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public VoltageLevel[] voltageLevels {
            get {
                return this.voltageLevelsField;
            }
            set {
                this.voltageLevelsField = value;
            }
        }
        
        /// <remarks/>
        public objectRef regionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class feederObject : mspObject {
        
        private string substationNameField;
        
        private string feederNameField;
        
        private string feederNoField;
        
        private string facilityIDField;
        
        private string feederColorField;
        
        private string busField;
        
        private objectRef[] contentsListField;
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederName {
            get {
                return this.feederNameField;
            }
            set {
                this.feederNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederNo {
            get {
                return this.feederNoField;
            }
            set {
                this.feederNoField = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public string feederColor {
            get {
                return this.feederColorField;
            }
            set {
                this.feederColorField = value;
            }
        }
        
        /// <remarks/>
        public string bus {
            get {
                return this.busField;
            }
            set {
                this.busField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("contentsItem", IsNullable=false)]
        public objectRef[] contentsList {
            get {
                return this.contentsListField;
            }
            set {
                this.contentsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class surgeArrestor : mspObject {
        
        private assetFields assetFieldsField;
        
        private voltage ratedVoltageField;
        
        private voltage continuousOperatingVoltageField;
        
        private current nominalDischargeCurrentField;
        
        private lineDischargeClass lineDischargeClassField;
        
        private bool lineDischargeClassFieldSpecified;
        
        private voltage impulseWithstandField;
        
        private length creepageDistanceField;
        
        private length flashOverDistanceField;
        
        private current leakageCurrentField;
        
        /// <remarks/>
        public assetFields assetFields {
            get {
                return this.assetFieldsField;
            }
            set {
                this.assetFieldsField = value;
            }
        }
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public voltage continuousOperatingVoltage {
            get {
                return this.continuousOperatingVoltageField;
            }
            set {
                this.continuousOperatingVoltageField = value;
            }
        }
        
        /// <remarks/>
        public current nominalDischargeCurrent {
            get {
                return this.nominalDischargeCurrentField;
            }
            set {
                this.nominalDischargeCurrentField = value;
            }
        }
        
        /// <remarks/>
        public lineDischargeClass lineDischargeClass {
            get {
                return this.lineDischargeClassField;
            }
            set {
                this.lineDischargeClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lineDischargeClassSpecified {
            get {
                return this.lineDischargeClassFieldSpecified;
            }
            set {
                this.lineDischargeClassFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage impulseWithstand {
            get {
                return this.impulseWithstandField;
            }
            set {
                this.impulseWithstandField = value;
            }
        }
        
        /// <remarks/>
        public length creepageDistance {
            get {
                return this.creepageDistanceField;
            }
            set {
                this.creepageDistanceField = value;
            }
        }
        
        /// <remarks/>
        public length flashOverDistance {
            get {
                return this.flashOverDistanceField;
            }
            set {
                this.flashOverDistanceField = value;
            }
        }
        
        /// <remarks/>
        public current leakageCurrent {
            get {
                return this.leakageCurrentField;
            }
            set {
                this.leakageCurrentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum lineDischargeClass {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CIMObjectList {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private Bay[] bayField;
        
        private BusbarSection[] busbarSectionField;
        
        private Connector[] connectorField;
        
        private GeneratingUnit[] generatingUnitField;
        
        private HydroGeneratingUnit[] hydroGeneratingUnitField;
        
        private ThermalGeneratingUnit[] thermalGeneratingUnitField;
        
        private StaticVarCompensator[] staticVarCompensatorField;
        
        private TapChanger[] tapChangerField;
        
        private TransformerWinding[] transformerWindingField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Bay")]
        public Bay[] Bay {
            get {
                return this.bayField;
            }
            set {
                this.bayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BusbarSection")]
        public BusbarSection[] BusbarSection {
            get {
                return this.busbarSectionField;
            }
            set {
                this.busbarSectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Connector")]
        public Connector[] Connector {
            get {
                return this.connectorField;
            }
            set {
                this.connectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeneratingUnit")]
        public GeneratingUnit[] GeneratingUnit {
            get {
                return this.generatingUnitField;
            }
            set {
                this.generatingUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HydroGeneratingUnit")]
        public HydroGeneratingUnit[] HydroGeneratingUnit {
            get {
                return this.hydroGeneratingUnitField;
            }
            set {
                this.hydroGeneratingUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ThermalGeneratingUnit")]
        public ThermalGeneratingUnit[] ThermalGeneratingUnit {
            get {
                return this.thermalGeneratingUnitField;
            }
            set {
                this.thermalGeneratingUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StaticVarCompensator")]
        public StaticVarCompensator[] StaticVarCompensator {
            get {
                return this.staticVarCompensatorField;
            }
            set {
                this.staticVarCompensatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TapChanger")]
        public TapChanger[] TapChanger {
            get {
                return this.tapChangerField;
            }
            set {
                this.tapChangerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TransformerWinding")]
        public TransformerWinding[] TransformerWinding {
            get {
                return this.transformerWindingField;
            }
            set {
                this.transformerWindingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(station))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspMultiGeometryObject : mspObject {
        
        private geometry geometryField;
        
        private string gridLocationField;
        
        private float rotationField;
        
        private bool rotationFieldSpecified;
        
        private string facilityIDField;
        
        private string sectionIDField;
        
        private objectRef[] parentSectionIDField;
        
        private nodeIdentifier1 fromNodeIDField;
        
        private nodeIdentifier1 toNodeIDField;
        
        /// <remarks/>
        public geometry geometry {
            get {
                return this.geometryField;
            }
            set {
                this.geometryField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public float rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rotationSpecified {
            get {
                return this.rotationFieldSpecified;
            }
            set {
                this.rotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string facilityID {
            get {
                return this.facilityIDField;
            }
            set {
                this.facilityIDField = value;
            }
        }
        
        /// <remarks/>
        public string sectionID {
            get {
                return this.sectionIDField;
            }
            set {
                this.sectionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parentSectionID")]
        public objectRef[] parentSectionID {
            get {
                return this.parentSectionIDField;
            }
            set {
                this.parentSectionIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 fromNodeID {
            get {
                return this.fromNodeIDField;
            }
            set {
                this.fromNodeIDField = value;
            }
        }
        
        /// <remarks/>
        public nodeIdentifier1 toNodeID {
            get {
                return this.toNodeIDField;
            }
            set {
                this.toNodeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class backgroundGraphics : mspObject {
        
        private genericAnnotationFeature[] genericAnnotationFeatureListField;
        
        private genericPointFeature[] genericPointFeatureListField;
        
        private genericLineFeature[] genericLineFeatureListField;
        
        private graphicSymbol[] graphicSymbolListField;
        
        private genericPolygonFeature[] genericPolygonFeatureListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericAnnotationFeature[] genericAnnotationFeatureList {
            get {
                return this.genericAnnotationFeatureListField;
            }
            set {
                this.genericAnnotationFeatureListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericPointFeature[] genericPointFeatureList {
            get {
                return this.genericPointFeatureListField;
            }
            set {
                this.genericPointFeatureListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericLineFeature[] genericLineFeatureList {
            get {
                return this.genericLineFeatureListField;
            }
            set {
                this.genericLineFeatureListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public graphicSymbol[] graphicSymbolList {
            get {
                return this.graphicSymbolListField;
            }
            set {
                this.graphicSymbolListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public genericPolygonFeature[] genericPolygonFeatureList {
            get {
                return this.genericPolygonFeatureListField;
            }
            set {
                this.genericPolygonFeatureListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class customer : mspPerson {
        
        private string dBANameField;
        
        private string specialNeedsField;
        
        private account[] accountsField;
        
        private serviceOrder[] serviceOrderListField;
        
        private workList workListField;
        
        private workOrder[] workOrderListField;
        
        private maintenanceOrder[] maintenanceOrderListField;
        
        private alternateContact[] alternateContactListField;
        
        /// <remarks/>
        public string dBAName {
            get {
                return this.dBANameField;
            }
            set {
                this.dBANameField = value;
            }
        }
        
        /// <remarks/>
        public string specialNeeds {
            get {
                return this.specialNeedsField;
            }
            set {
                this.specialNeedsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public account[] accounts {
            get {
                return this.accountsField;
            }
            set {
                this.accountsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public serviceOrder[] serviceOrderList {
            get {
                return this.serviceOrderListField;
            }
            set {
                this.serviceOrderListField = value;
            }
        }
        
        /// <remarks/>
        public workList workList {
            get {
                return this.workListField;
            }
            set {
                this.workListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public workOrder[] workOrderList {
            get {
                return this.workOrderListField;
            }
            set {
                this.workOrderListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public maintenanceOrder[] maintenanceOrderList {
            get {
                return this.maintenanceOrderListField;
            }
            set {
                this.maintenanceOrderListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public alternateContact[] alternateContactList {
            get {
                return this.alternateContactListField;
            }
            set {
                this.alternateContactListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class account : mspObject {
        
        private string customerIDField;
        
        private acctsReceivable[] accountsReceivableField;
        
        private string billingCycleField;
        
        private string budgetBillField;
        
        private System.DateTime paymentDueDateField;
        
        private bool paymentDueDateFieldSpecified;
        
        private System.DateTime lastPaymentDateField;
        
        private bool lastPaymentDateFieldSpecified;
        
        private money lastPaymentAmountField;
        
        private System.DateTime billDateField;
        
        private bool billDateFieldSpecified;
        
        private System.DateTime shutOffDateField;
        
        private bool shutOffDateFieldSpecified;
        
        private bool isPrePayField;
        
        private bool isPrePayFieldSpecified;
        
        private string billingTermsField;
        
        private money calculatedCurrentBillAmountField;
        
        private System.DateTime calculatedCurrentBillDateTimeField;
        
        private bool calculatedCurrentBillDateTimeFieldSpecified;
        
        private meterReading[] calculatedCurrentBillReadingsField;
        
        private money lastBillAmountField;
        
        private money calculatedUsedYesterdayField;
        
        private serviceLocation[] serviceLocationsField;
        
        private serviceOrder[] serviceOrderListField;
        
        private workList workListField;
        
        private workOrder[] workOrderListField;
        
        private maintenanceOrder[] maintenanceOrderListField;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public acctsReceivable[] accountsReceivable {
            get {
                return this.accountsReceivableField;
            }
            set {
                this.accountsReceivableField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string budgetBill {
            get {
                return this.budgetBillField;
            }
            set {
                this.budgetBillField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime paymentDueDate {
            get {
                return this.paymentDueDateField;
            }
            set {
                this.paymentDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool paymentDueDateSpecified {
            get {
                return this.paymentDueDateFieldSpecified;
            }
            set {
                this.paymentDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastPaymentDate {
            get {
                return this.lastPaymentDateField;
            }
            set {
                this.lastPaymentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentDateSpecified {
            get {
                return this.lastPaymentDateFieldSpecified;
            }
            set {
                this.lastPaymentDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money lastPaymentAmount {
            get {
                return this.lastPaymentAmountField;
            }
            set {
                this.lastPaymentAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billDate {
            get {
                return this.billDateField;
            }
            set {
                this.billDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billDateSpecified {
            get {
                return this.billDateFieldSpecified;
            }
            set {
                this.billDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime shutOffDate {
            get {
                return this.shutOffDateField;
            }
            set {
                this.shutOffDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool shutOffDateSpecified {
            get {
                return this.shutOffDateFieldSpecified;
            }
            set {
                this.shutOffDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isPrePay {
            get {
                return this.isPrePayField;
            }
            set {
                this.isPrePayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isPrePaySpecified {
            get {
                return this.isPrePayFieldSpecified;
            }
            set {
                this.isPrePayFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingTerms {
            get {
                return this.billingTermsField;
            }
            set {
                this.billingTermsField = value;
            }
        }
        
        /// <remarks/>
        public money calculatedCurrentBillAmount {
            get {
                return this.calculatedCurrentBillAmountField;
            }
            set {
                this.calculatedCurrentBillAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime calculatedCurrentBillDateTime {
            get {
                return this.calculatedCurrentBillDateTimeField;
            }
            set {
                this.calculatedCurrentBillDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool calculatedCurrentBillDateTimeSpecified {
            get {
                return this.calculatedCurrentBillDateTimeFieldSpecified;
            }
            set {
                this.calculatedCurrentBillDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterReading[] calculatedCurrentBillReadings {
            get {
                return this.calculatedCurrentBillReadingsField;
            }
            set {
                this.calculatedCurrentBillReadingsField = value;
            }
        }
        
        /// <remarks/>
        public money lastBillAmount {
            get {
                return this.lastBillAmountField;
            }
            set {
                this.lastBillAmountField = value;
            }
        }
        
        /// <remarks/>
        public money calculatedUsedYesterday {
            get {
                return this.calculatedUsedYesterdayField;
            }
            set {
                this.calculatedUsedYesterdayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public serviceLocation[] serviceLocations {
            get {
                return this.serviceLocationsField;
            }
            set {
                this.serviceLocationsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public serviceOrder[] serviceOrderList {
            get {
                return this.serviceOrderListField;
            }
            set {
                this.serviceOrderListField = value;
            }
        }
        
        /// <remarks/>
        public workList workList {
            get {
                return this.workListField;
            }
            set {
                this.workListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public workOrder[] workOrderList {
            get {
                return this.workOrderListField;
            }
            set {
                this.workOrderListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public maintenanceOrder[] maintenanceOrderList {
            get {
                return this.maintenanceOrderListField;
            }
            set {
                this.maintenanceOrderListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class acctsReceivable {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string descriptionField;
        
        private money receivableAmountField;
        
        private System.DateTime dueDateField;
        
        private bool dueDateFieldSpecified;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private receivableType receivableTypeField;
        
        private string serviceLocationIDField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public money receivableAmount {
            get {
                return this.receivableAmountField;
            }
            set {
                this.receivableAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dueDateSpecified {
            get {
                return this.dueDateFieldSpecified;
            }
            set {
                this.dueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public receivableType receivableType {
            get {
                return this.receivableTypeField;
            }
            set {
                this.receivableTypeField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum receivableType {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Balance,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("30")]
        Item30,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("60")]
        Item60,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("90")]
        Item90,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class maintenanceOrder : mspObject {
        
        private string projectIDField;
        
        private soStatusCode moStatusCodeField;
        
        private bool moStatusCodeFieldSpecified;
        
        private string moTypeField;
        
        private string moDescriptionField;
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private string serviceLocationIDField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime closeDateField;
        
        private bool closeDateFieldSpecified;
        
        private string crewIDField;
        
        private string workedByField;
        
        private equipmentStatus[] equipmentStatusesField;
        
        private otherIdentificationFields otherIdentificationFieldsField;
        
        /// <remarks/>
        public string projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public soStatusCode moStatusCode {
            get {
                return this.moStatusCodeField;
            }
            set {
                this.moStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool moStatusCodeSpecified {
            get {
                return this.moStatusCodeFieldSpecified;
            }
            set {
                this.moStatusCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string moType {
            get {
                return this.moTypeField;
            }
            set {
                this.moTypeField = value;
            }
        }
        
        /// <remarks/>
        public string moDescription {
            get {
                return this.moDescriptionField;
            }
            set {
                this.moDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime closeDate {
            get {
                return this.closeDateField;
            }
            set {
                this.closeDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closeDateSpecified {
            get {
                return this.closeDateFieldSpecified;
            }
            set {
                this.closeDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string crewID {
            get {
                return this.crewIDField;
            }
            set {
                this.crewIDField = value;
            }
        }
        
        /// <remarks/>
        public string workedBy {
            get {
                return this.workedByField;
            }
            set {
                this.workedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public equipmentStatus[] equipmentStatuses {
            get {
                return this.equipmentStatusesField;
            }
            set {
                this.equipmentStatusesField = value;
            }
        }
        
        /// <remarks/>
        public otherIdentificationFields otherIdentificationFields {
            get {
                return this.otherIdentificationFieldsField;
            }
            set {
                this.otherIdentificationFieldsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class alternateContact {
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string mNameField;
        
        private string prefixField;
        
        private string suffixField;
        
        private contactInfo contactInfoField;
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string mName {
            get {
                return this.mNameField;
            }
            set {
                this.mNameField = value;
            }
        }
        
        /// <remarks/>
        public string prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        public string suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class contactInfo {
        
        private phoneNumber[] phoneListField;
        
        private eMailAddress[] eMailListField;
        
        private addressItem[] addressListField;
        
        private otherContactItem[] otherContactInformationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public phoneNumber[] phoneList {
            get {
                return this.phoneListField;
            }
            set {
                this.phoneListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public eMailAddress[] eMailList {
            get {
                return this.eMailListField;
            }
            set {
                this.eMailListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public addressItem[] addressList {
            get {
                return this.addressListField;
            }
            set {
                this.addressListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public otherContactItem[] otherContactInformation {
            get {
                return this.otherContactInformationField;
            }
            set {
                this.otherContactInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class eMailAddress {
        
        private string eMailField;
        
        private eMailType eMailTypeField;
        
        private bool eMailTypeFieldSpecified;
        
        private string priorityOrderField;
        
        /// <remarks/>
        public string eMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public eMailType eMailType {
            get {
                return this.eMailTypeField;
            }
            set {
                this.eMailTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eMailTypeSpecified {
            get {
                return this.eMailTypeFieldSpecified;
            }
            set {
                this.eMailTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum eMailType {
        
        /// <remarks/>
        Personal,
        
        /// <remarks/>
        Business,
        
        /// <remarks/>
        Alternate,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class addressItem {
        
        private address addressField;
        
        private string addressTypeField;
        
        private string priorityOrderField;
        
        /// <remarks/>
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string addressType {
            get {
                return this.addressTypeField;
            }
            set {
                this.addressTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string priorityOrder {
            get {
                return this.priorityOrderField;
            }
            set {
                this.priorityOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class otherContactItem {
        
        private string detailsField;
        
        private string infoTypeField;
        
        /// <remarks/>
        public string details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        public string infoType {
            get {
                return this.infoTypeField;
            }
            set {
                this.infoTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(worker))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspPerson : mspObject {
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string mNameField;
        
        private string prefixField;
        
        private string suffixField;
        
        private string governmentIDField;
        
        private contactInfo contactInfoField;
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string mName {
            get {
                return this.mNameField;
            }
            set {
                this.mNameField = value;
            }
        }
        
        /// <remarks/>
        public string prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        public string suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string governmentID {
            get {
                return this.governmentIDField;
            }
            set {
                this.governmentIDField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class worker : mspPerson {
        
        private bool isEmplyeeField;
        
        private bool isEmplyeeFieldSpecified;
        
        private string[] skillsListField;
        
        private skill[] skillsField;
        
        /// <remarks/>
        public bool isEmplyee {
            get {
                return this.isEmplyeeField;
            }
            set {
                this.isEmplyeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isEmplyeeSpecified {
            get {
                return this.isEmplyeeFieldSpecified;
            }
            set {
                this.isEmplyeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("skillID", IsNullable=false)]
        public string[] skillsList {
            get {
                return this.skillsListField;
            }
            set {
                this.skillsListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public skill[] skills {
            get {
                return this.skillsField;
            }
            set {
                this.skillsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class skill {
        
        private string categoryField;
        
        private string descriptionField;
        
        private System.DateTime certifiedDateField;
        
        private bool certifiedDateFieldSpecified;
        
        private System.DateTime effectiveDateField;
        
        private bool effectiveDateFieldSpecified;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string levelField;
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime certifiedDate {
            get {
                return this.certifiedDateField;
            }
            set {
                this.certifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool certifiedDateSpecified {
            get {
                return this.certifiedDateFieldSpecified;
            }
            set {
                this.certifiedDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime effectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool effectiveDateSpecified {
            get {
                return this.effectiveDateFieldSpecified;
            }
            set {
                this.effectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum actionCode {
        
        /// <remarks/>
        estimate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CPR only")]
        CPRonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("material only")]
        materialonly,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CPR and material")]
        CPRandmaterial,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum loadDistrict {
        
        /// <remarks/>
        Light,
        
        /// <remarks/>
        Medium,
        
        /// <remarks/>
        Heavy,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class locationAssociation {
        
        private string locationAssociationNameField;
        
        private string descriptionField;
        
        private string locationAssociationValueField;
        
        /// <remarks/>
        public string locationAssociationName {
            get {
                return this.locationAssociationNameField;
            }
            set {
                this.locationAssociationNameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string locationAssociationValue {
            get {
                return this.locationAssociationValueField;
            }
            set {
                this.locationAssociationValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workHistoryEvent {
        
        private string workHistoryEventNameField;
        
        private string descriptionField;
        
        private System.DateTime workHistoryEventTimeField;
        
        private bool workHistoryEventTimeFieldSpecified;
        
        private string responsiblePartyField;
        
        /// <remarks/>
        public string workHistoryEventName {
            get {
                return this.workHistoryEventNameField;
            }
            set {
                this.workHistoryEventNameField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime workHistoryEventTime {
            get {
                return this.workHistoryEventTimeField;
            }
            set {
                this.workHistoryEventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool workHistoryEventTimeSpecified {
            get {
                return this.workHistoryEventTimeFieldSpecified;
            }
            set {
                this.workHistoryEventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string responsibleParty {
            get {
                return this.responsiblePartyField;
            }
            set {
                this.responsiblePartyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class serviceOrderNumber {
        
        private string soNumberField;
        
        /// <remarks/>
        public string soNumber {
            get {
                return this.soNumberField;
            }
            set {
                this.soNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class spatialFeatureGroup : mspPointObject {
        
        private anchor[] anchorField;
        
        private capacitorBank[] capacitorBankField;
        
        private CDDevice[] cDDeviceField;
        
        private electricMeter[] electricMeterField;
        
        private gasMeter[] gasMeterField;
        
        private guy[] guyField;
        
        private inductionMachine[] inductionMachineField;
        
        private inHomeDisplay[] inHomeDisplayField;
        
        private loadManagementDevice[] loadManagementDeviceField;
        
        private measurementDevice[] measurementDeviceField;
        
        private meterBase[] meterBaseField;
        
        private module[] moduleField;
        
        private ohPrimaryLine[] ohPrimaryLineField;
        
        private ohSecondaryLine[] ohSecondaryLineField;
        
        private ohTransmissionLine[] ohTransmissionLineField;
        
        private outageDetectionDevice[] outageDetectionDeviceField;
        
        private overcurrentDeviceBank[] overCurrentDeviceBankField;
        
        private parcel[] parcelField;
        
        private pole[] poleField;
        
        private powerMonitor[] powerMonitorField;
        
        private powerSystemDevice[] powerSystemDeviceField;
        
        private premise[] premiseField;
        
        private primaryCabinet[] primaryCabinetField;
        
        private propaneMeter[] propaneMeterField;
        
        private regulatorBank[] regulatorBankField;
        
        private riser[] riserField;
        
        private secondaryJunctionBox[] secondaryJunctionBoxField;
        
        private securityLight[] securityLightField;
        
        private serviceLocation[] serviceLocationField;
        
        private spanGuy[] spanGuyField;
        
        private streetLight[] streetLightField;
        
        private substation[] substationField;
        
        private surgeArrestor[] surgeArrestorField;
        
        private switchingDeviceBank[] switchingDeviceBankField;
        
        private synchronousMachine[] synchronousMachineField;
        
        private trafficLight[] trafficLightField;
        
        private transformerBank[] transformerBankField;
        
        private ugPrimaryLine[] ugPrimaryLineField;
        
        private ugSecondaryLine[] ugSecondaryLineField;
        
        private ugTransmissionLine[] ugTransmissionLineField;
        
        private waterMeter[] waterMeterField;
        
        private CIMObjectList cIMObjectListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("anchor")]
        public anchor[] anchor {
            get {
                return this.anchorField;
            }
            set {
                this.anchorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("capacitorBank")]
        public capacitorBank[] capacitorBank {
            get {
                return this.capacitorBankField;
            }
            set {
                this.capacitorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CDDevice")]
        public CDDevice[] CDDevice {
            get {
                return this.cDDeviceField;
            }
            set {
                this.cDDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("electricMeter")]
        public electricMeter[] electricMeter {
            get {
                return this.electricMeterField;
            }
            set {
                this.electricMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("gasMeter")]
        public gasMeter[] gasMeter {
            get {
                return this.gasMeterField;
            }
            set {
                this.gasMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("guy")]
        public guy[] guy {
            get {
                return this.guyField;
            }
            set {
                this.guyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inductionMachine")]
        public inductionMachine[] inductionMachine {
            get {
                return this.inductionMachineField;
            }
            set {
                this.inductionMachineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("inHomeDisplay")]
        public inHomeDisplay[] inHomeDisplay {
            get {
                return this.inHomeDisplayField;
            }
            set {
                this.inHomeDisplayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("loadManagementDevice")]
        public loadManagementDevice[] loadManagementDevice {
            get {
                return this.loadManagementDeviceField;
            }
            set {
                this.loadManagementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("measurementDevice")]
        public measurementDevice[] measurementDevice {
            get {
                return this.measurementDeviceField;
            }
            set {
                this.measurementDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("meterBase")]
        public meterBase[] meterBase {
            get {
                return this.meterBaseField;
            }
            set {
                this.meterBaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("module")]
        public module[] module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohPrimaryLine")]
        public ohPrimaryLine[] ohPrimaryLine {
            get {
                return this.ohPrimaryLineField;
            }
            set {
                this.ohPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohSecondaryLine")]
        public ohSecondaryLine[] ohSecondaryLine {
            get {
                return this.ohSecondaryLineField;
            }
            set {
                this.ohSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ohTransmissionLine")]
        public ohTransmissionLine[] ohTransmissionLine {
            get {
                return this.ohTransmissionLineField;
            }
            set {
                this.ohTransmissionLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("outageDetectionDevice")]
        public outageDetectionDevice[] outageDetectionDevice {
            get {
                return this.outageDetectionDeviceField;
            }
            set {
                this.outageDetectionDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("overCurrentDeviceBank")]
        public overcurrentDeviceBank[] overCurrentDeviceBank {
            get {
                return this.overCurrentDeviceBankField;
            }
            set {
                this.overCurrentDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("parcel")]
        public parcel[] parcel {
            get {
                return this.parcelField;
            }
            set {
                this.parcelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pole")]
        public pole[] pole {
            get {
                return this.poleField;
            }
            set {
                this.poleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("powerMonitor")]
        public powerMonitor[] powerMonitor {
            get {
                return this.powerMonitorField;
            }
            set {
                this.powerMonitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("powerSystemDevice")]
        public powerSystemDevice[] powerSystemDevice {
            get {
                return this.powerSystemDeviceField;
            }
            set {
                this.powerSystemDeviceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("premise")]
        public premise[] premise {
            get {
                return this.premiseField;
            }
            set {
                this.premiseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("primaryCabinet")]
        public primaryCabinet[] primaryCabinet {
            get {
                return this.primaryCabinetField;
            }
            set {
                this.primaryCabinetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("propaneMeter")]
        public propaneMeter[] propaneMeter {
            get {
                return this.propaneMeterField;
            }
            set {
                this.propaneMeterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("regulatorBank")]
        public regulatorBank[] regulatorBank {
            get {
                return this.regulatorBankField;
            }
            set {
                this.regulatorBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("riser")]
        public riser[] riser {
            get {
                return this.riserField;
            }
            set {
                this.riserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("secondaryJunctionBox")]
        public secondaryJunctionBox[] secondaryJunctionBox {
            get {
                return this.secondaryJunctionBoxField;
            }
            set {
                this.secondaryJunctionBoxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("securityLight")]
        public securityLight[] securityLight {
            get {
                return this.securityLightField;
            }
            set {
                this.securityLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceLocation")]
        public serviceLocation[] serviceLocation {
            get {
                return this.serviceLocationField;
            }
            set {
                this.serviceLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("spanGuy")]
        public spanGuy[] spanGuy {
            get {
                return this.spanGuyField;
            }
            set {
                this.spanGuyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("streetLight")]
        public streetLight[] streetLight {
            get {
                return this.streetLightField;
            }
            set {
                this.streetLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("substation")]
        public substation[] substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("surgeArrestor")]
        public surgeArrestor[] surgeArrestor {
            get {
                return this.surgeArrestorField;
            }
            set {
                this.surgeArrestorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("switchingDeviceBank")]
        public switchingDeviceBank[] switchingDeviceBank {
            get {
                return this.switchingDeviceBankField;
            }
            set {
                this.switchingDeviceBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("synchronousMachine")]
        public synchronousMachine[] synchronousMachine {
            get {
                return this.synchronousMachineField;
            }
            set {
                this.synchronousMachineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("trafficLight")]
        public trafficLight[] trafficLight {
            get {
                return this.trafficLightField;
            }
            set {
                this.trafficLightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transformerBank")]
        public transformerBank[] transformerBank {
            get {
                return this.transformerBankField;
            }
            set {
                this.transformerBankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugPrimaryLine")]
        public ugPrimaryLine[] ugPrimaryLine {
            get {
                return this.ugPrimaryLineField;
            }
            set {
                this.ugPrimaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugSecondaryLine")]
        public ugSecondaryLine[] ugSecondaryLine {
            get {
                return this.ugSecondaryLineField;
            }
            set {
                this.ugSecondaryLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ugTransmissionLine")]
        public ugTransmissionLine[] ugTransmissionLine {
            get {
                return this.ugTransmissionLineField;
            }
            set {
                this.ugTransmissionLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("waterMeter")]
        public waterMeter[] waterMeter {
            get {
                return this.waterMeterField;
            }
            set {
                this.waterMeterField = value;
            }
        }
        
        /// <remarks/>
        public CIMObjectList CIMObjectList {
            get {
                return this.cIMObjectListField;
            }
            set {
                this.cIMObjectListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class scadaPoint : mspPointObject {
        
        private string descriptionField;
        
        private scadaPointType scadaPointTypeField;
        
        private bool scadaPointTypeFieldSpecified;
        
        private objectRef gISFeatureIDField;
        
        private string gISFeatureTypeField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public scadaPointType scadaPointType {
            get {
                return this.scadaPointTypeField;
            }
            set {
                this.scadaPointTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scadaPointTypeSpecified {
            get {
                return this.scadaPointTypeFieldSpecified;
            }
            set {
                this.scadaPointTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef GISFeatureID {
            get {
                return this.gISFeatureIDField;
            }
            set {
                this.gISFeatureIDField = value;
            }
        }
        
        /// <remarks/>
        public string GISFeatureType {
            get {
                return this.gISFeatureTypeField;
            }
            set {
                this.gISFeatureTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum scadaPointType {
        
        /// <remarks/>
        status,
        
        /// <remarks/>
        analog,
        
        /// <remarks/>
        accumulator,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class maintenanceDataSet : mspObject {
        
        private System.DateTime maintenanceDateField;
        
        private bool maintenanceDateFieldSpecified;
        
        private string descriptionField;
        
        private itemMaintained[] itemsMaintainedField;
        
        /// <remarks/>
        public System.DateTime maintenanceDate {
            get {
                return this.maintenanceDateField;
            }
            set {
                this.maintenanceDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool maintenanceDateSpecified {
            get {
                return this.maintenanceDateFieldSpecified;
            }
            set {
                this.maintenanceDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public itemMaintained[] itemsMaintained {
            get {
                return this.itemsMaintainedField;
            }
            set {
                this.itemsMaintainedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class itemMaintained {
        
        private objectRef itemIdentifierField;
        
        private string maintenanceCodeField;
        
        private string conditionBeforeField;
        
        private string conditionAfterField;
        
        private string remarksField;
        
        private measurement[] measurementListField;
        
        /// <remarks/>
        public objectRef itemIdentifier {
            get {
                return this.itemIdentifierField;
            }
            set {
                this.itemIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string maintenanceCode {
            get {
                return this.maintenanceCodeField;
            }
            set {
                this.maintenanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string conditionBefore {
            get {
                return this.conditionBeforeField;
            }
            set {
                this.conditionBeforeField = value;
            }
        }
        
        /// <remarks/>
        public string conditionAfter {
            get {
                return this.conditionAfterField;
            }
            set {
                this.conditionAfterField = value;
            }
        }
        
        /// <remarks/>
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public measurement[] measurementList {
            get {
                return this.measurementListField;
            }
            set {
                this.measurementListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class measurement : mspObject {
        
        private objectRef measurementDeviceIDField;
        
        private measurementItems measurementItemsField;
        
        /// <remarks/>
        public objectRef measurementDeviceID {
            get {
                return this.measurementDeviceIDField;
            }
            set {
                this.measurementDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        public measurementItems measurementItems {
            get {
                return this.measurementItemsField;
            }
            set {
                this.measurementItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class measurementItems {
        
        private scadaAnalog[] analogField;
        
        private accumulatedValue[] accumulatorField;
        
        private Discrete[] discreteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("analog")]
        public scadaAnalog[] analog {
            get {
                return this.analogField;
            }
            set {
                this.analogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("accumulator")]
        public accumulatedValue[] accumulator {
            get {
                return this.accumulatorField;
            }
            set {
                this.accumulatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("discrete")]
        public Discrete[] discrete {
            get {
                return this.discreteField;
            }
            set {
                this.discreteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class accumulatedValue : mspObject {
        
        private string countedValueField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private string ceilingValueField;
        
        private bool latchesAtMaximumField;
        
        private bool latchesAtMaximumFieldSpecified;
        
        private string measurementIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string countedValue {
            get {
                return this.countedValueField;
            }
            set {
                this.countedValueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string ceilingValue {
            get {
                return this.ceilingValueField;
            }
            set {
                this.ceilingValueField = value;
            }
        }
        
        /// <remarks/>
        public bool latchesAtMaximum {
            get {
                return this.latchesAtMaximumField;
            }
            set {
                this.latchesAtMaximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latchesAtMaximumSpecified {
            get {
                return this.latchesAtMaximumFieldSpecified;
            }
            set {
                this.latchesAtMaximumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string measurementID {
            get {
                return this.measurementIDField;
            }
            set {
                this.measurementIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inHomeDisplayGroup : mspObject {
        
        private string groupNameField;
        
        private string[] inHomeDisplayListField;
        
        private inHomeDisplay[] inHomeDisplaysField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("inHomeDisplayID", IsNullable=false)]
        public string[] inHomeDisplayList {
            get {
                return this.inHomeDisplayListField;
            }
            set {
                this.inHomeDisplayListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public inHomeDisplay[] inHomeDisplays {
            get {
                return this.inHomeDisplaysField;
            }
            set {
                this.inHomeDisplaysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterConnectivity : mspObject {
        
        private string outageRecordIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string serviceLocationIDField;
        
        private meterID meterIDField;
        
        private string oldSubstationField;
        
        private string oldFeederNameField;
        
        private phaseCode oldPhaseField;
        
        private bool oldPhaseFieldSpecified;
        
        private string newSubstationField;
        
        private string newFeederNameField;
        
        private phaseCode newPhaseField;
        
        private bool newPhaseFieldSpecified;
        
        private string oldSubstationCodeField;
        
        private string oldFeederCodeField;
        
        private string newSubstationCodeField;
        
        private string newFeederCodeField;
        
        /// <remarks/>
        public string outageRecordID {
            get {
                return this.outageRecordIDField;
            }
            set {
                this.outageRecordIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string oldSubstation {
            get {
                return this.oldSubstationField;
            }
            set {
                this.oldSubstationField = value;
            }
        }
        
        /// <remarks/>
        public string oldFeederName {
            get {
                return this.oldFeederNameField;
            }
            set {
                this.oldFeederNameField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode oldPhase {
            get {
                return this.oldPhaseField;
            }
            set {
                this.oldPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool oldPhaseSpecified {
            get {
                return this.oldPhaseFieldSpecified;
            }
            set {
                this.oldPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string newSubstation {
            get {
                return this.newSubstationField;
            }
            set {
                this.newSubstationField = value;
            }
        }
        
        /// <remarks/>
        public string newFeederName {
            get {
                return this.newFeederNameField;
            }
            set {
                this.newFeederNameField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode newPhase {
            get {
                return this.newPhaseField;
            }
            set {
                this.newPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool newPhaseSpecified {
            get {
                return this.newPhaseFieldSpecified;
            }
            set {
                this.newPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string oldSubstationCode {
            get {
                return this.oldSubstationCodeField;
            }
            set {
                this.oldSubstationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string oldFeederCode {
            get {
                return this.oldFeederCodeField;
            }
            set {
                this.oldFeederCodeField = value;
            }
        }
        
        /// <remarks/>
        public string newSubstationCode {
            get {
                return this.newSubstationCodeField;
            }
            set {
                this.newSubstationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string newFeederCode {
            get {
                return this.newFeederCodeField;
            }
            set {
                this.newFeederCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class observationDefinition : mspObject {
        
        private System.Xml.XmlQualifiedName domainField;
        
        private string conditionItemField;
        
        private string itemStatusField;
        
        private string itemConditionField;
        
        private string commentField;
        
        private observedValue valueField;
        
        /// <remarks/>
        public System.Xml.XmlQualifiedName domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string conditionItem {
            get {
                return this.conditionItemField;
            }
            set {
                this.conditionItemField = value;
            }
        }
        
        /// <remarks/>
        public string itemStatus {
            get {
                return this.itemStatusField;
            }
            set {
                this.itemStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string itemCondition {
            get {
                return this.itemConditionField;
            }
            set {
                this.itemConditionField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public observedValue value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class observedValue {
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class timesheet : mspObject {
        
        private timePeriod timePeriodField;
        
        private employeeTimeRecord[] employeeTimeRecordListField;
        
        private jobWorked[] jobWorkedListField;
        
        /// <remarks/>
        public timePeriod timePeriod {
            get {
                return this.timePeriodField;
            }
            set {
                this.timePeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public employeeTimeRecord[] employeeTimeRecordList {
            get {
                return this.employeeTimeRecordListField;
            }
            set {
                this.employeeTimeRecordListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public jobWorked[] jobWorkedList {
            get {
                return this.jobWorkedListField;
            }
            set {
                this.jobWorkedListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class employeeTimeRecord : mspObject {
        
        private string employeeIDField;
        
        private string employeeNameField;
        
        private float hoursWorkedField;
        
        private bool hoursWorkedFieldSpecified;
        
        /// <remarks/>
        public string employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                this.employeeIDField = value;
            }
        }
        
        /// <remarks/>
        public string employeeName {
            get {
                return this.employeeNameField;
            }
            set {
                this.employeeNameField = value;
            }
        }
        
        /// <remarks/>
        public float hoursWorked {
            get {
                return this.hoursWorkedField;
            }
            set {
                this.hoursWorkedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hoursWorkedSpecified {
            get {
                return this.hoursWorkedFieldSpecified;
            }
            set {
                this.hoursWorkedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class jobWorked {
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string jobDescrField;
        
        private float jobHoursField;
        
        private bool jobHoursFieldSpecified;
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobDescr {
            get {
                return this.jobDescrField;
            }
            set {
                this.jobDescrField = value;
            }
        }
        
        /// <remarks/>
        public float jobHours {
            get {
                return this.jobHoursField;
            }
            set {
                this.jobHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool jobHoursSpecified {
            get {
                return this.jobHoursFieldSpecified;
            }
            set {
                this.jobHoursFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class customerCall : mspObject {
        
        private string customerIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string descriptionField;
        
        private string problemCodeField;
        
        private callType callTypeField;
        
        private bool callTypeFieldSpecified;
        
        private string takenByField;
        
        private priorityType callPriorityField;
        
        private bool callPriorityFieldSpecified;
        
        private outageLocation locationField;
        
        private message[] messageListField;
        
        private resolvedLevel resolvedLevelField;
        
        private bool resolvedLevelFieldSpecified;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string problemCode {
            get {
                return this.problemCodeField;
            }
            set {
                this.problemCodeField = value;
            }
        }
        
        /// <remarks/>
        public callType callType {
            get {
                return this.callTypeField;
            }
            set {
                this.callTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callTypeSpecified {
            get {
                return this.callTypeFieldSpecified;
            }
            set {
                this.callTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string takenBy {
            get {
                return this.takenByField;
            }
            set {
                this.takenByField = value;
            }
        }
        
        /// <remarks/>
        public priorityType callPriority {
            get {
                return this.callPriorityField;
            }
            set {
                this.callPriorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callPrioritySpecified {
            get {
                return this.callPriorityFieldSpecified;
            }
            set {
                this.callPriorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public outageLocation location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public message[] messageList {
            get {
                return this.messageListField;
            }
            set {
                this.messageListField = value;
            }
        }
        
        /// <remarks/>
        public resolvedLevel resolvedLevel {
            get {
                return this.resolvedLevelField;
            }
            set {
                this.resolvedLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolvedLevelSpecified {
            get {
                return this.resolvedLevelFieldSpecified;
            }
            set {
                this.resolvedLevelFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum callType {
        
        /// <remarks/>
        Call,
        
        /// <remarks/>
        CustomerServiceRep,
        
        /// <remarks/>
        InboundTelephoneDevice,
        
        /// <remarks/>
        Manual,
        
        /// <remarks/>
        IVR,
        
        /// <remarks/>
        Sensor,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum priorityType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        NeedsAttention,
        
        /// <remarks/>
        Urgent,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageLocation : mspObject {
        
        private string serviceLocationIDField;
        
        private meterID meterIDField;
        
        private string accountNumberField;
        
        private telephoneNumber telephoneNumberField;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public telephoneNumber telephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                this.telephoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum resolvedLevel {
        
        /// <remarks/>
        Meter,
        
        /// <remarks/>
        Address,
        
        /// <remarks/>
        Unresolved,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class switchingOrder : mspObject {
        
        private string titleField;
        
        private string descriptionField;
        
        private string purposeField;
        
        private string revisionField;
        
        private string requestedByField;
        
        private System.DateTime requestedDateTimeField;
        
        private bool requestedDateTimeFieldSpecified;
        
        private string createdByField;
        
        private System.DateTime createdDateTimeField;
        
        private bool createdDateTimeFieldSpecified;
        
        private string checkedByField;
        
        private System.DateTime checkedDateTimeField;
        
        private bool checkedDateTimeFieldSpecified;
        
        private string releasedByField;
        
        private string releasedDateTimeField;
        
        private System.DateTime lastModifiedDateTimeField;
        
        private bool lastModifiedDateTimeFieldSpecified;
        
        private string documentStatusField;
        
        private switchingSchedule switchingScheduleField;
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        public string revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
        
        /// <remarks/>
        public string requestedBy {
            get {
                return this.requestedByField;
            }
            set {
                this.requestedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime requestedDateTime {
            get {
                return this.requestedDateTimeField;
            }
            set {
                this.requestedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool requestedDateTimeSpecified {
            get {
                return this.requestedDateTimeFieldSpecified;
            }
            set {
                this.requestedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createdDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateTimeSpecified {
            get {
                return this.createdDateTimeFieldSpecified;
            }
            set {
                this.createdDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string checkedBy {
            get {
                return this.checkedByField;
            }
            set {
                this.checkedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime checkedDateTime {
            get {
                return this.checkedDateTimeField;
            }
            set {
                this.checkedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool checkedDateTimeSpecified {
            get {
                return this.checkedDateTimeFieldSpecified;
            }
            set {
                this.checkedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string releasedBy {
            get {
                return this.releasedByField;
            }
            set {
                this.releasedByField = value;
            }
        }
        
        /// <remarks/>
        public string releasedDateTime {
            get {
                return this.releasedDateTimeField;
            }
            set {
                this.releasedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastModifiedDateTime {
            get {
                return this.lastModifiedDateTimeField;
            }
            set {
                this.lastModifiedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastModifiedDateTimeSpecified {
            get {
                return this.lastModifiedDateTimeFieldSpecified;
            }
            set {
                this.lastModifiedDateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string documentStatus {
            get {
                return this.documentStatusField;
            }
            set {
                this.documentStatusField = value;
            }
        }
        
        /// <remarks/>
        public switchingSchedule switchingSchedule {
            get {
                return this.switchingScheduleField;
            }
            set {
                this.switchingScheduleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class materialManagementAssembly : mspObject {
        
        private string unitCodeField;
        
        private string unDescrField;
        
        private money unMatCostField;
        
        private unType unTypeField;
        
        private bool unTypeFieldSpecified;
        
        private CPR[] cPRListField;
        
        private materialComponent[] materialComponentListField;
        
        private laborComponent[] laborComponentListField;
        
        /// <remarks/>
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string unDescr {
            get {
                return this.unDescrField;
            }
            set {
                this.unDescrField = value;
            }
        }
        
        /// <remarks/>
        public money unMatCost {
            get {
                return this.unMatCostField;
            }
            set {
                this.unMatCostField = value;
            }
        }
        
        /// <remarks/>
        public unType unType {
            get {
                return this.unTypeField;
            }
            set {
                this.unTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unTypeSpecified {
            get {
                return this.unTypeFieldSpecified;
            }
            set {
                this.unTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CPR[] CPRList {
            get {
                return this.cPRListField;
            }
            set {
                this.cPRListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public materialComponent[] materialComponentList {
            get {
                return this.materialComponentListField;
            }
            set {
                this.materialComponentListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public laborComponent[] laborComponentList {
            get {
                return this.laborComponentListField;
            }
            set {
                this.laborComponentListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum unType {
        
        /// <remarks/>
        Anc,
        
        /// <remarks/>
        Cnd,
        
        /// <remarks/>
        Guy,
        
        /// <remarks/>
        OhA,
        
        /// <remarks/>
        OhP,
        
        /// <remarks/>
        OhS,
        
        /// <remarks/>
        OhT,
        
        /// <remarks/>
        OH,
        
        /// <remarks/>
        Pol,
        
        /// <remarks/>
        Sub,
        
        /// <remarks/>
        UgA,
        
        /// <remarks/>
        UgP,
        
        /// <remarks/>
        UgS,
        
        /// <remarks/>
        UgT,
        
        /// <remarks/>
        UG,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class materialComponent {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string stockNumberField;
        
        private float itemCountField;
        
        private bool itemCountFieldSpecified;
        
        private string poleVarField;
        
        private string wireVarField;
        
        private string neutVarField;
        
        private string miscVarField;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string stockNumber {
            get {
                return this.stockNumberField;
            }
            set {
                this.stockNumberField = value;
            }
        }
        
        /// <remarks/>
        public float itemCount {
            get {
                return this.itemCountField;
            }
            set {
                this.itemCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool itemCountSpecified {
            get {
                return this.itemCountFieldSpecified;
            }
            set {
                this.itemCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string poleVar {
            get {
                return this.poleVarField;
            }
            set {
                this.poleVarField = value;
            }
        }
        
        /// <remarks/>
        public string wireVar {
            get {
                return this.wireVarField;
            }
            set {
                this.wireVarField = value;
            }
        }
        
        /// <remarks/>
        public string neutVar {
            get {
                return this.neutVarField;
            }
            set {
                this.neutVarField = value;
            }
        }
        
        /// <remarks/>
        public string miscVar {
            get {
                return this.miscVarField;
            }
            set {
                this.miscVarField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class laborComponent {
        
        private extensions extensionsField;
        
        private extensionsItem[] extensionsListField;
        
        private string laborCategoryIDField;
        
        private float constMHField;
        
        private bool constMHFieldSpecified;
        
        private float retireMHField;
        
        private bool retireMHFieldSpecified;
        
        private float salvageMHField;
        
        private bool salvageMHFieldSpecified;
        
        private float transferMHField;
        
        private bool transferMHFieldSpecified;
        
        private float hotConstMHField;
        
        private bool hotConstMHFieldSpecified;
        
        private float hotRetireMHField;
        
        private bool hotRetireMHFieldSpecified;
        
        private float hotSalvageMHField;
        
        private bool hotSalvageMHFieldSpecified;
        
        private float hotTransferMHField;
        
        private bool hotTransferMHFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
        
        /// <remarks/>
        public string laborCategoryID {
            get {
                return this.laborCategoryIDField;
            }
            set {
                this.laborCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        public float constMH {
            get {
                return this.constMHField;
            }
            set {
                this.constMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constMHSpecified {
            get {
                return this.constMHFieldSpecified;
            }
            set {
                this.constMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float retireMH {
            get {
                return this.retireMHField;
            }
            set {
                this.retireMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool retireMHSpecified {
            get {
                return this.retireMHFieldSpecified;
            }
            set {
                this.retireMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float salvageMH {
            get {
                return this.salvageMHField;
            }
            set {
                this.salvageMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool salvageMHSpecified {
            get {
                return this.salvageMHFieldSpecified;
            }
            set {
                this.salvageMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float transferMH {
            get {
                return this.transferMHField;
            }
            set {
                this.transferMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool transferMHSpecified {
            get {
                return this.transferMHFieldSpecified;
            }
            set {
                this.transferMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hotConstMH {
            get {
                return this.hotConstMHField;
            }
            set {
                this.hotConstMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hotConstMHSpecified {
            get {
                return this.hotConstMHFieldSpecified;
            }
            set {
                this.hotConstMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hotRetireMH {
            get {
                return this.hotRetireMHField;
            }
            set {
                this.hotRetireMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hotRetireMHSpecified {
            get {
                return this.hotRetireMHFieldSpecified;
            }
            set {
                this.hotRetireMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hotSalvageMH {
            get {
                return this.hotSalvageMHField;
            }
            set {
                this.hotSalvageMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hotSalvageMHSpecified {
            get {
                return this.hotSalvageMHFieldSpecified;
            }
            set {
                this.hotSalvageMHFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hotTransferMH {
            get {
                return this.hotTransferMHField;
            }
            set {
                this.hotTransferMHField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hotTransferMHSpecified {
            get {
                return this.hotTransferMHFieldSpecified;
            }
            set {
                this.hotTransferMHFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class laborCategory : mspObject {
        
        private string descriptionField;
        
        private money installCostField;
        
        private money retireCostField;
        
        private money salvageCostField;
        
        private money transferCostField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public money installCost {
            get {
                return this.installCostField;
            }
            set {
                this.installCostField = value;
            }
        }
        
        /// <remarks/>
        public money retireCost {
            get {
                return this.retireCostField;
            }
            set {
                this.retireCostField = value;
            }
        }
        
        /// <remarks/>
        public money salvageCost {
            get {
                return this.salvageCostField;
            }
            set {
                this.salvageCostField = value;
            }
        }
        
        /// <remarks/>
        public money transferCost {
            get {
                return this.transferCostField;
            }
            set {
                this.transferCostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class materialItem : mspObject {
        
        private string stockNumberField;
        
        private string stockDescrField;
        
        private string itemField;
        
        private money avgCostField;
        
        private money newCostField;
        
        private float laborFactorField;
        
        private bool laborFactorFieldSpecified;
        
        private string materialTypeField;
        
        private materialUnits materialUnitsField;
        
        private bool materialUnitsFieldSpecified;
        
        private warehouseLocation[] warehouseLocationListField;
        
        private System.DateTime effectiveDateField;
        
        private bool effectiveDateFieldSpecified;
        
        private string materialClassField;
        
        /// <remarks/>
        public string stockNumber {
            get {
                return this.stockNumberField;
            }
            set {
                this.stockNumberField = value;
            }
        }
        
        /// <remarks/>
        public string stockDescr {
            get {
                return this.stockDescrField;
            }
            set {
                this.stockDescrField = value;
            }
        }
        
        /// <remarks/>
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public money avgCost {
            get {
                return this.avgCostField;
            }
            set {
                this.avgCostField = value;
            }
        }
        
        /// <remarks/>
        public money newCost {
            get {
                return this.newCostField;
            }
            set {
                this.newCostField = value;
            }
        }
        
        /// <remarks/>
        public float laborFactor {
            get {
                return this.laborFactorField;
            }
            set {
                this.laborFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool laborFactorSpecified {
            get {
                return this.laborFactorFieldSpecified;
            }
            set {
                this.laborFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string materialType {
            get {
                return this.materialTypeField;
            }
            set {
                this.materialTypeField = value;
            }
        }
        
        /// <remarks/>
        public materialUnits materialUnits {
            get {
                return this.materialUnitsField;
            }
            set {
                this.materialUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool materialUnitsSpecified {
            get {
                return this.materialUnitsFieldSpecified;
            }
            set {
                this.materialUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public warehouseLocation[] warehouseLocationList {
            get {
                return this.warehouseLocationListField;
            }
            set {
                this.warehouseLocationListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime effectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool effectiveDateSpecified {
            get {
                return this.effectiveDateFieldSpecified;
            }
            set {
                this.effectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string materialClass {
            get {
                return this.materialClassField;
            }
            set {
                this.materialClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum materialUnits {
        
        /// <remarks/>
        Feet,
        
        /// <remarks/>
        Meters,
        
        /// <remarks/>
        Inches,
        
        /// <remarks/>
        Pounds,
        
        /// <remarks/>
        Kilograms,
        
        /// <remarks/>
        Miles,
        
        /// <remarks/>
        ThousandFeet,
        
        /// <remarks/>
        Kilometers,
        
        /// <remarks/>
        Pair,
        
        /// <remarks/>
        Each,
        
        /// <remarks/>
        Hour,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        DoNotChange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class warehouseLocation {
        
        private string warehouseIDField;
        
        private string aisleField;
        
        private string binField;
        
        /// <remarks/>
        public string warehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public string aisle {
            get {
                return this.aisleField;
            }
            set {
                this.aisleField = value;
            }
        }
        
        /// <remarks/>
        public string bin {
            get {
                return this.binField;
            }
            set {
                this.binField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class historyLog : mspObject {
        
        private meterID meterIDField;
        
        private @event[] eventListField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public @event[] eventList {
            get {
                return this.eventListField;
            }
            set {
                this.eventListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class @event {
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private meterEvent meterEventField;
        
        private string userIDField;
        
        private string argumentField;
        
        private uint sequenceNumberField;
        
        private bool sequenceNumberFieldSpecified;
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterEvent meterEvent {
            get {
                return this.meterEventField;
            }
            set {
                this.meterEventField = value;
            }
        }
        
        /// <remarks/>
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string argument {
            get {
                return this.argumentField;
            }
            set {
                this.argumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceNumberSpecified {
            get {
                return this.sequenceNumberFieldSpecified;
            }
            set {
                this.sequenceNumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterEvent {
        
        private string domainField;
        
        private string domainPartField;
        
        private string typeField;
        
        private string indexField;
        
        private string valueField;
        
        private string codeStringField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        private string valueField1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string domainPart {
            get {
                return this.domainPartField;
            }
            set {
                this.domainPartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string codeString {
            get {
                return this.codeStringField;
            }
            set {
                this.codeStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField1;
            }
            set {
                this.valueField1 = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class profileObject : mspObject {
        
        private source[] sourceListField;
        
        private profileType[] loadProfileListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public source[] sourceList {
            get {
                return this.sourceListField;
            }
            set {
                this.sourceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("loadProfile", IsNullable=false)]
        public profileType[] loadProfileList {
            get {
                return this.loadProfileListField;
            }
            set {
                this.loadProfileListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class source {
        
        private uint sourceIDField;
        
        private bool sourceIDFieldSpecified;
        
        private quantityType quantityTypeField;
        
        private bool quantityTypeFieldSpecified;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        private accountability1 accountabilityField;
        
        private bool accountabilityFieldSpecified;
        
        private phaseAssociation phaseField;
        
        private bool phaseFieldSpecified;
        
        private string harmonicField;
        
        private transformerRatio transformerRatioField;
        
        private displayFormat displayFormatField;
        
        private bool multiplierAppliedField;
        
        private bool multiplierAppliedFieldSpecified;
        
        /// <remarks/>
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceIDSpecified {
            get {
                return this.sourceIDFieldSpecified;
            }
            set {
                this.sourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public quantityType quantityType {
            get {
                return this.quantityTypeField;
            }
            set {
                this.quantityTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantityTypeSpecified {
            get {
                return this.quantityTypeFieldSpecified;
            }
            set {
                this.quantityTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public accountability1 accountability {
            get {
                return this.accountabilityField;
            }
            set {
                this.accountabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountabilitySpecified {
            get {
                return this.accountabilityFieldSpecified;
            }
            set {
                this.accountabilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseAssociation phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseSpecified {
            get {
                return this.phaseFieldSpecified;
            }
            set {
                this.phaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string harmonic {
            get {
                return this.harmonicField;
            }
            set {
                this.harmonicField = value;
            }
        }
        
        /// <remarks/>
        public transformerRatio transformerRatio {
            get {
                return this.transformerRatioField;
            }
            set {
                this.transformerRatioField = value;
            }
        }
        
        /// <remarks/>
        public displayFormat displayFormat {
            get {
                return this.displayFormatField;
            }
            set {
                this.displayFormatField = value;
            }
        }
        
        /// <remarks/>
        public bool multiplierApplied {
            get {
                return this.multiplierAppliedField;
            }
            set {
                this.multiplierAppliedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierAppliedSpecified {
            get {
                return this.multiplierAppliedFieldSpecified;
            }
            set {
                this.multiplierAppliedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum quantityType {
        
        /// <remarks/>
        summation,
        
        /// <remarks/>
        demand,
        
        /// <remarks/>
        consumption,
        
        /// <remarks/>
        value,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="accountability", Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum accountability1 {
        
        /// <remarks/>
        Q1,
        
        /// <remarks/>
        Q2,
        
        /// <remarks/>
        Q3,
        
        /// <remarks/>
        Q4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2")]
        Q12,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3")]
        Q13,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-4")]
        Q14,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3")]
        Q23,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-4")]
        Q24,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q3-4")]
        Q34,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3")]
        Q123,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-4")]
        Q124,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-4")]
        Q134,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-4")]
        Q234,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-4")]
        Q1234,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-netFlow")]
        Q12netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-netFlow")]
        Q13netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-4-netFlow")]
        Q14netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-netFlow")]
        Q23netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-4-netFlow")]
        Q24netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q3-4-netFlow")]
        Q34netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-netFlow")]
        Q123netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-4-netFlow")]
        Q124netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-3-4-netFlow")]
        Q134netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q2-3-4-netFlow")]
        Q234netFlow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Q1-2-3-4-netFlow")]
        Q1234netFlow,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum phaseAssociation {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A-B")]
        AB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("B-C")]
        BC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C-A")]
        CA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Neutral-Gnd")]
        NeutralGnd,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("A-Neutral")]
        ANeutral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("B-Neutral")]
        BNeutral,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("C-Neutral")]
        CNeutral,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class transformerRatio {
        
        private bool appliedField;
        
        private bool appliedFieldSpecified;
        
        private double ctField;
        
        private bool ctFieldSpecified;
        
        private double ptField;
        
        private bool ptFieldSpecified;
        
        /// <remarks/>
        public bool applied {
            get {
                return this.appliedField;
            }
            set {
                this.appliedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool appliedSpecified {
            get {
                return this.appliedFieldSpecified;
            }
            set {
                this.appliedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ct {
            get {
                return this.ctField;
            }
            set {
                this.ctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ctSpecified {
            get {
                return this.ctFieldSpecified;
            }
            set {
                this.ctFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double pt {
            get {
                return this.ptField;
            }
            set {
                this.ptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ptSpecified {
            get {
                return this.ptFieldSpecified;
            }
            set {
                this.ptFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class displayFormat {
        
        private bool supressLeadingZeroField;
        
        private bool supressLeadingZeroFieldSpecified;
        
        private byte numberOfDigitsField;
        
        private bool numberOfDigitsFieldSpecified;
        
        private byte precisionField;
        
        private bool precisionFieldSpecified;
        
        private double displayMultiplierField;
        
        private bool displayMultiplierFieldSpecified;
        
        /// <remarks/>
        public bool supressLeadingZero {
            get {
                return this.supressLeadingZeroField;
            }
            set {
                this.supressLeadingZeroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool supressLeadingZeroSpecified {
            get {
                return this.supressLeadingZeroFieldSpecified;
            }
            set {
                this.supressLeadingZeroFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte numberOfDigits {
            get {
                return this.numberOfDigitsField;
            }
            set {
                this.numberOfDigitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberOfDigitsSpecified {
            get {
                return this.numberOfDigitsFieldSpecified;
            }
            set {
                this.numberOfDigitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte precision {
            get {
                return this.precisionField;
            }
            set {
                this.precisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool precisionSpecified {
            get {
                return this.precisionFieldSpecified;
            }
            set {
                this.precisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double displayMultiplier {
            get {
                return this.displayMultiplierField;
            }
            set {
                this.displayMultiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool displayMultiplierSpecified {
            get {
                return this.displayMultiplierFieldSpecified;
            }
            set {
                this.displayMultiplierFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class profileType {
        
        private meterID meterIDField;
        
        private byte dataSetNumberField;
        
        private bool dataSetNumberFieldSpecified;
        
        private channel[] channelListField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public byte dataSetNumber {
            get {
                return this.dataSetNumberField;
            }
            set {
                this.dataSetNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataSetNumberSpecified {
            get {
                return this.dataSetNumberFieldSpecified;
            }
            set {
                this.dataSetNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public channel[] channelList {
            get {
                return this.channelListField;
            }
            set {
                this.channelListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class channel {
        
        private channelBlock[] blockListField;
        
        private uint intervalSourceIDField;
        
        private uint endReadingSourceIDField;
        
        private bool endReadingSourceIDFieldSpecified;
        
        private uint channelNumberField;
        
        public channel() {
            this.channelNumberField = ((uint)(0));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("block", IsNullable=false)]
        public channelBlock[] blockList {
            get {
                return this.blockListField;
            }
            set {
                this.blockListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint intervalSourceID {
            get {
                return this.intervalSourceIDField;
            }
            set {
                this.intervalSourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint endReadingSourceID {
            get {
                return this.endReadingSourceIDField;
            }
            set {
                this.endReadingSourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endReadingSourceIDSpecified {
            get {
                return this.endReadingSourceIDFieldSpecified;
            }
            set {
                this.endReadingSourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "0")]
        public uint channelNumber {
            get {
                return this.channelNumberField;
            }
            set {
                this.channelNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class channelBlock {
        
        private blockStatus statusField;
        
        private interval[] intervalField;
        
        private System.DateTime endTimeField;
        
        private uint intervalPeriodField;
        
        private double endReadingField;
        
        private bool endReadingFieldSpecified;
        
        private uint endPulseField;
        
        private bool endPulseFieldSpecified;
        
        private uint sequenceNumberField;
        
        private bool sequenceNumberFieldSpecified;
        
        /// <remarks/>
        public blockStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("interval")]
        public interval[] interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint intervalPeriod {
            get {
                return this.intervalPeriodField;
            }
            set {
                this.intervalPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double endReading {
            get {
                return this.endReadingField;
            }
            set {
                this.endReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endReadingSpecified {
            get {
                return this.endReadingFieldSpecified;
            }
            set {
                this.endReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint endPulse {
            get {
                return this.endPulseField;
            }
            set {
                this.endPulseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endPulseSpecified {
            get {
                return this.endPulseFieldSpecified;
            }
            set {
                this.endPulseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sequenceNumberSpecified {
            get {
                return this.sequenceNumberFieldSpecified;
            }
            set {
                this.sequenceNumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class blockStatus {
        
        private bool[] itemsField;
        
        private ItemsChoiceType[] itemsElementNameField;
        
        private uint intervalIndexField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DSTinEffect", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("clockBackward", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("clockForward", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("configChanged", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("invalid", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("longInterval", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("manuallyEntered", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("manuallyModified", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("overflow", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("partialInterval", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("recorderStopped", typeof(bool))]
        [System.Xml.Serialization.XmlElementAttribute("testData", typeof(bool))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public bool[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint intervalIndex {
            get {
                return this.intervalIndexField;
            }
            set {
                this.intervalIndexField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release", IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        DSTinEffect,
        
        /// <remarks/>
        clockBackward,
        
        /// <remarks/>
        clockForward,
        
        /// <remarks/>
        configChanged,
        
        /// <remarks/>
        invalid,
        
        /// <remarks/>
        longInterval,
        
        /// <remarks/>
        manuallyEntered,
        
        /// <remarks/>
        manuallyModified,
        
        /// <remarks/>
        overflow,
        
        /// <remarks/>
        partialInterval,
        
        /// <remarks/>
        recorderStopped,
        
        /// <remarks/>
        testData,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class interval {
        
        private bool dSTinEffectField;
        
        private bool clockForwardField;
        
        private bool clockBackwardField;
        
        private bool overflowField;
        
        private bool partialIntervalField;
        
        private bool longIntervalField;
        
        private bool testDataField;
        
        private bool invalidField;
        
        private bool manuallyEnteredField;
        
        private bool manuallyModifiedField;
        
        private bool recorderStoppedField;
        
        private bool configChangedField;
        
        private double valueField;
        
        public interval() {
            this.dSTinEffectField = false;
            this.clockForwardField = false;
            this.clockBackwardField = false;
            this.overflowField = false;
            this.partialIntervalField = false;
            this.longIntervalField = false;
            this.testDataField = false;
            this.invalidField = false;
            this.manuallyEnteredField = false;
            this.manuallyModifiedField = false;
            this.recorderStoppedField = false;
            this.configChangedField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool DSTinEffect {
            get {
                return this.dSTinEffectField;
            }
            set {
                this.dSTinEffectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool clockForward {
            get {
                return this.clockForwardField;
            }
            set {
                this.clockForwardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool clockBackward {
            get {
                return this.clockBackwardField;
            }
            set {
                this.clockBackwardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool overflow {
            get {
                return this.overflowField;
            }
            set {
                this.overflowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool partialInterval {
            get {
                return this.partialIntervalField;
            }
            set {
                this.partialIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool longInterval {
            get {
                return this.longIntervalField;
            }
            set {
                this.longIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool testData {
            get {
                return this.testDataField;
            }
            set {
                this.testDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool invalid {
            get {
                return this.invalidField;
            }
            set {
                this.invalidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool manuallyEntered {
            get {
                return this.manuallyEnteredField;
            }
            set {
                this.manuallyEnteredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool manuallyModified {
            get {
                return this.manuallyModifiedField;
            }
            set {
                this.manuallyModifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool recorderStopped {
            get {
                return this.recorderStoppedField;
            }
            set {
                this.recorderStoppedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool configChanged {
            get {
                return this.configChangedField;
            }
            set {
                this.configChangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(voltageAlarm))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(blinkAlarm))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspAlarm : mspObject {
        
        private objectRef sourceIdentifierField;
        
        private System.DateTime eventTimeField;
        
        private meterEvent eventCodeField;
        
        /// <remarks/>
        public objectRef sourceIdentifier {
            get {
                return this.sourceIdentifierField;
            }
            set {
                this.sourceIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        public meterEvent eventCode {
            get {
                return this.eventCodeField;
            }
            set {
                this.eventCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class voltageAlarm : mspAlarm {
        
        private voltageAlarmItem[] voltageAlarmListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public voltageAlarmItem[] voltageAlarmList {
            get {
                return this.voltageAlarmListField;
            }
            set {
                this.voltageAlarmListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class voltageAlarmItem {
        
        private voltage voltageValueField;
        
        private unitPrefix1 unitPrefixField;
        
        private bool unitPrefixFieldSpecified;
        
        private qualityDescription1 qualityField;
        
        private bool qualityFieldSpecified;
        
        private analogCondition analogConditionField;
        
        private bool analogConditionFieldSpecified;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        /// <remarks/>
        public voltage voltageValue {
            get {
                return this.voltageValueField;
            }
            set {
                this.voltageValueField = value;
            }
        }
        
        /// <remarks/>
        public unitPrefix1 unitPrefix {
            get {
                return this.unitPrefixField;
            }
            set {
                this.unitPrefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitPrefixSpecified {
            get {
                return this.unitPrefixFieldSpecified;
            }
            set {
                this.unitPrefixFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public qualityDescription1 quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public analogCondition analogCondition {
            get {
                return this.analogConditionField;
            }
            set {
                this.analogConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool analogConditionSpecified {
            get {
                return this.analogConditionFieldSpecified;
            }
            set {
                this.analogConditionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class blinkAlarm : mspAlarm {
        
        private string countedValueField;
        
        private string ceilingValueField;
        
        private bool latchesAtMaximumField;
        
        private bool latchesAtMaximumFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string countedValue {
            get {
                return this.countedValueField;
            }
            set {
                this.countedValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string ceilingValue {
            get {
                return this.ceilingValueField;
            }
            set {
                this.ceilingValueField = value;
            }
        }
        
        /// <remarks/>
        public bool latchesAtMaximum {
            get {
                return this.latchesAtMaximumField;
            }
            set {
                this.latchesAtMaximumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latchesAtMaximumSpecified {
            get {
                return this.latchesAtMaximumFieldSpecified;
            }
            set {
                this.latchesAtMaximumFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingObject : mspObject {
        
        private source[] sourceListField;
        
        private meterReading[] readingListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public source[] sourceList {
            get {
                return this.sourceListField;
            }
            set {
                this.sourceListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterReading[] readingList {
            get {
                return this.readingListField;
            }
            set {
                this.readingListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class demandResponseEventDeprecated : mspObject {
        
        private meterID meterIDField;
        
        private string loadManagementIDField;
        
        private string portField;
        
        private string strategyField;
        
        private controlEventType controlEventTypeField;
        
        private bool controlEventTypeFieldSpecified;
        
        private duration durationField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string loadManagementID {
            get {
                return this.loadManagementIDField;
            }
            set {
                this.loadManagementIDField = value;
            }
        }
        
        /// <remarks/>
        public string port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public string strategy {
            get {
                return this.strategyField;
            }
            set {
                this.strategyField = value;
            }
        }
        
        /// <remarks/>
        public controlEventType controlEventType {
            get {
                return this.controlEventTypeField;
            }
            set {
                this.controlEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlEventTypeSpecified {
            get {
                return this.controlEventTypeFieldSpecified;
            }
            set {
                this.controlEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadManagementEvent : mspObject {
        
        private string substationNameField;
        
        private string feederNameField;
        
        private string feederNumberField;
        
        private long groupNameField;
        
        private bool groupNameFieldSpecified;
        
        private controlEventType controlEventTypeField;
        
        private bool controlEventTypeFieldSpecified;
        
        private float applicationRateField;
        
        private bool applicationRateFieldSpecified;
        
        private duration durationField;
        
        private duration cycleTimeField;
        
        private long dutyCycleField;
        
        private bool dutyCycleFieldSpecified;
        
        private float controlLoadField;
        
        private bool controlLoadFieldSpecified;
        
        private string pointIDField;
        
        private float targetField;
        
        private bool targetFieldSpecified;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        private strategy strategyField;
        
        private System.DateTime scheduleDateTimeField;
        
        private bool scheduleDateTimeFieldSpecified;
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederName {
            get {
                return this.feederNameField;
            }
            set {
                this.feederNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederNumber {
            get {
                return this.feederNumberField;
            }
            set {
                this.feederNumberField = value;
            }
        }
        
        /// <remarks/>
        public long groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool groupNameSpecified {
            get {
                return this.groupNameFieldSpecified;
            }
            set {
                this.groupNameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public controlEventType controlEventType {
            get {
                return this.controlEventTypeField;
            }
            set {
                this.controlEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlEventTypeSpecified {
            get {
                return this.controlEventTypeFieldSpecified;
            }
            set {
                this.controlEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float applicationRate {
            get {
                return this.applicationRateField;
            }
            set {
                this.applicationRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool applicationRateSpecified {
            get {
                return this.applicationRateFieldSpecified;
            }
            set {
                this.applicationRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public duration cycleTime {
            get {
                return this.cycleTimeField;
            }
            set {
                this.cycleTimeField = value;
            }
        }
        
        /// <remarks/>
        public long dutyCycle {
            get {
                return this.dutyCycleField;
            }
            set {
                this.dutyCycleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dutyCycleSpecified {
            get {
                return this.dutyCycleFieldSpecified;
            }
            set {
                this.dutyCycleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float controlLoad {
            get {
                return this.controlLoadField;
            }
            set {
                this.controlLoadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool controlLoadSpecified {
            get {
                return this.controlLoadFieldSpecified;
            }
            set {
                this.controlLoadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string pointID {
            get {
                return this.pointIDField;
            }
            set {
                this.pointIDField = value;
            }
        }
        
        /// <remarks/>
        public float target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool targetSpecified {
            get {
                return this.targetFieldSpecified;
            }
            set {
                this.targetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public strategy strategy {
            get {
                return this.strategyField;
            }
            set {
                this.strategyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime scheduleDateTime {
            get {
                return this.scheduleDateTimeField;
            }
            set {
                this.scheduleDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool scheduleDateTimeSpecified {
            get {
                return this.scheduleDateTimeFieldSpecified;
            }
            set {
                this.scheduleDateTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class strategy {
        
        private string strategyNameField;
        
        private objectRef[] applicationPointListField;
        
        /// <remarks/>
        public string strategyName {
            get {
                return this.strategyNameField;
            }
            set {
                this.strategyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("applicationPoint", IsNullable=false)]
        public objectRef[] applicationPointList {
            get {
                return this.applicationPointListField;
            }
            set {
                this.applicationPointListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class customersAttachedToDevice : mspObject {
        
        private objectRef deviceIDField;
        
        private string deviceDescriptionField;
        
        private affectedMeter[] affectedMetersField;
        
        /// <remarks/>
        public objectRef deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public affectedMeter[] affectedMeters {
            get {
                return this.affectedMetersField;
            }
            set {
                this.affectedMetersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class affectedMeter {
        
        private meterID meterIDField;
        
        private string serviceLocationIDField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class customersAffectedByOutage : mspObject {
        
        private string outageEventIDField;
        
        private affectedMeter[] affectedMetersField;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public affectedMeter[] affectedMeters {
            get {
                return this.affectedMetersField;
            }
            set {
                this.affectedMetersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class chargeableDeviceList : mspObject {
        
        private string accountNumberField;
        
        private chargeableDevice[] chargeableDeviceField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("chargeableDevice")]
        public chargeableDevice[] chargeableDevice {
            get {
                return this.chargeableDeviceField;
            }
            set {
                this.chargeableDeviceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class chargeableDevice : mspObject {
        
        private string chargeableDeviceTypeField;
        
        private string deviceDescriptionField;
        
        private string quantityField;
        
        private actionFlag actionFlagField;
        
        private bool actionFlagFieldSpecified;
        
        /// <remarks/>
        public string chargeableDeviceType {
            get {
                return this.chargeableDeviceTypeField;
            }
            set {
                this.chargeableDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                this.deviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public actionFlag actionFlag {
            get {
                return this.actionFlagField;
            }
            set {
                this.actionFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool actionFlagSpecified {
            get {
                return this.actionFlagFieldSpecified;
            }
            set {
                this.actionFlagFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum actionFlag {
        
        /// <remarks/>
        Enable,
        
        /// <remarks/>
        Disable,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class callBackList : mspObject {
        
        private string outageEventIDField;
        
        private outageStatus outageStatusField;
        
        private bool outageStatusFieldSpecified;
        
        private string outageDescriptionField;
        
        private outageCustomer[] outageCustomerListField;
        
        private message messageField;
        
        private string callBackListTypeField;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public outageStatus outageStatus {
            get {
                return this.outageStatusField;
            }
            set {
                this.outageStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageStatusSpecified {
            get {
                return this.outageStatusFieldSpecified;
            }
            set {
                this.outageStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string outageDescription {
            get {
                return this.outageDescriptionField;
            }
            set {
                this.outageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageCustomer[] outageCustomerList {
            get {
                return this.outageCustomerListField;
            }
            set {
                this.outageCustomerListField = value;
            }
        }
        
        /// <remarks/>
        public message message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string callBackListType {
            get {
                return this.callBackListTypeField;
            }
            set {
                this.callBackListTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageDetectionEvent : mspObject {
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private outageEventType outageEventTypeField;
        
        private bool outageEventTypeFieldSpecified;
        
        private string outageDetectionDeviceIDField;
        
        private outageDetectDeviceType outageDetectionDeviceTypeField;
        
        private bool outageDetectionDeviceTypeFieldSpecified;
        
        private outageLocation outageLocationField;
        
        private message[] messageListField;
        
        private outageCustomer outageCustomerField;
        
        private priorityType priorityField;
        
        private bool priorityFieldSpecified;
        
        private string percentConfidentField;
        
        private string problemCodeField;
        
        private resolvedLevel resolvedLevelField;
        
        private bool resolvedLevelFieldSpecified;
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public outageEventType outageEventType {
            get {
                return this.outageEventTypeField;
            }
            set {
                this.outageEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageEventTypeSpecified {
            get {
                return this.outageEventTypeFieldSpecified;
            }
            set {
                this.outageEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string outageDetectionDeviceID {
            get {
                return this.outageDetectionDeviceIDField;
            }
            set {
                this.outageDetectionDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceType outageDetectionDeviceType {
            get {
                return this.outageDetectionDeviceTypeField;
            }
            set {
                this.outageDetectionDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectionDeviceTypeSpecified {
            get {
                return this.outageDetectionDeviceTypeFieldSpecified;
            }
            set {
                this.outageDetectionDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public outageLocation outageLocation {
            get {
                return this.outageLocationField;
            }
            set {
                this.outageLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public message[] messageList {
            get {
                return this.messageListField;
            }
            set {
                this.messageListField = value;
            }
        }
        
        /// <remarks/>
        public outageCustomer outageCustomer {
            get {
                return this.outageCustomerField;
            }
            set {
                this.outageCustomerField = value;
            }
        }
        
        /// <remarks/>
        public priorityType priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string percentConfident {
            get {
                return this.percentConfidentField;
            }
            set {
                this.percentConfidentField = value;
            }
        }
        
        /// <remarks/>
        public string problemCode {
            get {
                return this.problemCodeField;
            }
            set {
                this.problemCodeField = value;
            }
        }
        
        /// <remarks/>
        public resolvedLevel resolvedLevel {
            get {
                return this.resolvedLevelField;
            }
            set {
                this.resolvedLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolvedLevelSpecified {
            get {
                return this.resolvedLevelFieldSpecified;
            }
            set {
                this.resolvedLevelFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum outageEventType {
        
        /// <remarks/>
        Instantaneous,
        
        /// <remarks/>
        Outage,
        
        /// <remarks/>
        Restoration,
        
        /// <remarks/>
        NoResponse,
        
        /// <remarks/>
        Inferred,
        
        /// <remarks/>
        PowerOn,
        
        /// <remarks/>
        PowerOff,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inspection : mspObject {
        
        private objectRef elementInspectedField;
        
        private System.DateTime inspectionDateField;
        
        private bool inspectionDateFieldSpecified;
        
        private string inspectedByField;
        
        private geometry geometryField;
        
        private gpsPoint gpsPointField;
        
        private GPSLocation gPSLocationField;
        
        private string elementStatusField;
        
        private string elementConditionField;
        
        private string serviceOrderIDField;
        
        private observation[] observationListField;
        
        private attachment[] attachmentsField;
        
        /// <remarks/>
        public objectRef elementInspected {
            get {
                return this.elementInspectedField;
            }
            set {
                this.elementInspectedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime inspectionDate {
            get {
                return this.inspectionDateField;
            }
            set {
                this.inspectionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool inspectionDateSpecified {
            get {
                return this.inspectionDateFieldSpecified;
            }
            set {
                this.inspectionDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string inspectedBy {
            get {
                return this.inspectedByField;
            }
            set {
                this.inspectedByField = value;
            }
        }
        
        /// <remarks/>
        public geometry geometry {
            get {
                return this.geometryField;
            }
            set {
                this.geometryField = value;
            }
        }
        
        /// <remarks/>
        public gpsPoint gpsPoint {
            get {
                return this.gpsPointField;
            }
            set {
                this.gpsPointField = value;
            }
        }
        
        /// <remarks/>
        public GPSLocation GPSLocation {
            get {
                return this.gPSLocationField;
            }
            set {
                this.gPSLocationField = value;
            }
        }
        
        /// <remarks/>
        public string elementStatus {
            get {
                return this.elementStatusField;
            }
            set {
                this.elementStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string elementCondition {
            get {
                return this.elementConditionField;
            }
            set {
                this.elementConditionField = value;
            }
        }
        
        /// <remarks/>
        public string serviceOrderID {
            get {
                return this.serviceOrderIDField;
            }
            set {
                this.serviceOrderIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public observation[] observationList {
            get {
                return this.observationListField;
            }
            set {
                this.observationListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public attachment[] attachments {
            get {
                return this.attachmentsField;
            }
            set {
                this.attachmentsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class observation {
        
        private string observationItemIDField;
        
        private string itemStatusField;
        
        private string itemConditionField;
        
        private string commentField;
        
        private observedValue valueField;
        
        /// <remarks/>
        public string observationItemID {
            get {
                return this.observationItemIDField;
            }
            set {
                this.observationItemIDField = value;
            }
        }
        
        /// <remarks/>
        public string itemStatus {
            get {
                return this.itemStatusField;
            }
            set {
                this.itemStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string itemCondition {
            get {
                return this.itemConditionField;
            }
            set {
                this.itemConditionField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public observedValue value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterExchanges : mspObject {
        
        private electricMeterExchange[] electricMeterExchangesField;
        
        private waterMeterExchange[] waterMeterExchangesField;
        
        private gasMeterExchange[] gasMeterExchangesField;
        
        private propaneMeterExchange[] propaneMeterExchangesField;
        
        private otherMeterExchange[] otherMeterExchangesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public electricMeterExchange[] electricMeterExchanges {
            get {
                return this.electricMeterExchangesField;
            }
            set {
                this.electricMeterExchangesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public waterMeterExchange[] waterMeterExchanges {
            get {
                return this.waterMeterExchangesField;
            }
            set {
                this.waterMeterExchangesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public gasMeterExchange[] gasMeterExchanges {
            get {
                return this.gasMeterExchangesField;
            }
            set {
                this.gasMeterExchangesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public propaneMeterExchange[] propaneMeterExchanges {
            get {
                return this.propaneMeterExchangesField;
            }
            set {
                this.propaneMeterExchangesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public otherMeterExchange[] otherMeterExchanges {
            get {
                return this.otherMeterExchangesField;
            }
            set {
                this.otherMeterExchangesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class electricMeterExchange : mspObject {
        
        private string serviceLocationIDField;
        
        private string electricServiceIDField;
        
        private meterReading outMeterReadingField;
        
        private meterReading inMeterReadingField;
        
        private meterReading lastReadField;
        
        private System.DateTime lastReadDateField;
        
        private bool lastReadDateFieldSpecified;
        
        private consumptionItem[] averageConsumptionField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string electricServiceID {
            get {
                return this.electricServiceIDField;
            }
            set {
                this.electricServiceIDField = value;
            }
        }
        
        /// <remarks/>
        public meterReading outMeterReading {
            get {
                return this.outMeterReadingField;
            }
            set {
                this.outMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading inMeterReading {
            get {
                return this.inMeterReadingField;
            }
            set {
                this.inMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading lastRead {
            get {
                return this.lastReadField;
            }
            set {
                this.lastReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadDate {
            get {
                return this.lastReadDateField;
            }
            set {
                this.lastReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadDateSpecified {
            get {
                return this.lastReadDateFieldSpecified;
            }
            set {
                this.lastReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public consumptionItem[] averageConsumption {
            get {
                return this.averageConsumptionField;
            }
            set {
                this.averageConsumptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class consumptionItem {
        
        private readingValue readingValueField;
        
        private timePeriod periodOfUseField;
        
        /// <remarks/>
        public readingValue readingValue {
            get {
                return this.readingValueField;
            }
            set {
                this.readingValueField = value;
            }
        }
        
        /// <remarks/>
        public timePeriod periodOfUse {
            get {
                return this.periodOfUseField;
            }
            set {
                this.periodOfUseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class waterMeterExchange : mspObject {
        
        private string serviceLocationIDField;
        
        private string waterServiceIDField;
        
        private meterReading outMeterReadingField;
        
        private meterReading inMeterReadingField;
        
        private meterReading lastReadField;
        
        private System.DateTime lastReadDateField;
        
        private bool lastReadDateFieldSpecified;
        
        private consumptionItem[] averageConsumptionField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string waterServiceID {
            get {
                return this.waterServiceIDField;
            }
            set {
                this.waterServiceIDField = value;
            }
        }
        
        /// <remarks/>
        public meterReading outMeterReading {
            get {
                return this.outMeterReadingField;
            }
            set {
                this.outMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading inMeterReading {
            get {
                return this.inMeterReadingField;
            }
            set {
                this.inMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading lastRead {
            get {
                return this.lastReadField;
            }
            set {
                this.lastReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadDate {
            get {
                return this.lastReadDateField;
            }
            set {
                this.lastReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadDateSpecified {
            get {
                return this.lastReadDateFieldSpecified;
            }
            set {
                this.lastReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public consumptionItem[] averageConsumption {
            get {
                return this.averageConsumptionField;
            }
            set {
                this.averageConsumptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class gasMeterExchange : mspObject {
        
        private string serviceLocationIDField;
        
        private string gasServiceIDField;
        
        private meterReading outMeterReadingField;
        
        private meterReading inMeterReadingField;
        
        private meterReading lastReadField;
        
        private System.DateTime lastReadDateField;
        
        private bool lastReadDateFieldSpecified;
        
        private consumptionItem[] averageConsumptionField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string gasServiceID {
            get {
                return this.gasServiceIDField;
            }
            set {
                this.gasServiceIDField = value;
            }
        }
        
        /// <remarks/>
        public meterReading outMeterReading {
            get {
                return this.outMeterReadingField;
            }
            set {
                this.outMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading inMeterReading {
            get {
                return this.inMeterReadingField;
            }
            set {
                this.inMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading lastRead {
            get {
                return this.lastReadField;
            }
            set {
                this.lastReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadDate {
            get {
                return this.lastReadDateField;
            }
            set {
                this.lastReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadDateSpecified {
            get {
                return this.lastReadDateFieldSpecified;
            }
            set {
                this.lastReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public consumptionItem[] averageConsumption {
            get {
                return this.averageConsumptionField;
            }
            set {
                this.averageConsumptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class propaneMeterExchange : mspObject {
        
        private string serviceLocationIDField;
        
        private string propaneServiceIDField;
        
        private meterReading outMeterReadingField;
        
        private meterReading inMeterReadingField;
        
        private meterReading lastReadField;
        
        private System.DateTime lastReadDateField;
        
        private bool lastReadDateFieldSpecified;
        
        private consumptionItem[] averageConsumptionField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string propaneServiceID {
            get {
                return this.propaneServiceIDField;
            }
            set {
                this.propaneServiceIDField = value;
            }
        }
        
        /// <remarks/>
        public meterReading outMeterReading {
            get {
                return this.outMeterReadingField;
            }
            set {
                this.outMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading inMeterReading {
            get {
                return this.inMeterReadingField;
            }
            set {
                this.inMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading lastRead {
            get {
                return this.lastReadField;
            }
            set {
                this.lastReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadDate {
            get {
                return this.lastReadDateField;
            }
            set {
                this.lastReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadDateSpecified {
            get {
                return this.lastReadDateFieldSpecified;
            }
            set {
                this.lastReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public consumptionItem[] averageConsumption {
            get {
                return this.averageConsumptionField;
            }
            set {
                this.averageConsumptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class otherMeterExchange : mspObject {
        
        private string serviceLocationIDField;
        
        private string otherServiceIDField;
        
        private meterReading outMeterReadingField;
        
        private meterReading inMeterReadingField;
        
        private meterReading lastReadField;
        
        private System.DateTime lastReadDateField;
        
        private bool lastReadDateFieldSpecified;
        
        private consumptionItem[] averageConsumptionField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string otherServiceID {
            get {
                return this.otherServiceIDField;
            }
            set {
                this.otherServiceIDField = value;
            }
        }
        
        /// <remarks/>
        public meterReading outMeterReading {
            get {
                return this.outMeterReadingField;
            }
            set {
                this.outMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading inMeterReading {
            get {
                return this.inMeterReadingField;
            }
            set {
                this.inMeterReadingField = value;
            }
        }
        
        /// <remarks/>
        public meterReading lastRead {
            get {
                return this.lastReadField;
            }
            set {
                this.lastReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadDate {
            get {
                return this.lastReadDateField;
            }
            set {
                this.lastReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadDateSpecified {
            get {
                return this.lastReadDateFieldSpecified;
            }
            set {
                this.lastReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public consumptionItem[] averageConsumption {
            get {
                return this.averageConsumptionField;
            }
            set {
                this.averageConsumptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ppmTransaction : mspObject {
        
        private money priorityBalanceField;
        
        private money sharedArrearsField;
        
        private money amountField;
        
        private string descriptionField;
        
        /// <remarks/>
        public money priorityBalance {
            get {
                return this.priorityBalanceField;
            }
            set {
                this.priorityBalanceField = value;
            }
        }
        
        /// <remarks/>
        public money sharedArrears {
            get {
                return this.sharedArrearsField;
            }
            set {
                this.sharedArrearsField = value;
            }
        }
        
        /// <remarks/>
        public money amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ppmBalanceAdjustment : mspObject {
        
        private string descriptionField;
        
        private string accountNumberField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string ppmLocationIDField;
        
        private adjustmentItem[] adjustmentItemListField;
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public adjustmentItem[] adjustmentItemList {
            get {
                return this.adjustmentItemListField;
            }
            set {
                this.adjustmentItemListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class adjustmentItem {
        
        private balanceType balanceTypeField;
        
        private money amountField;
        
        private string adjustmentItemIDField;
        
        /// <remarks/>
        public balanceType balanceType {
            get {
                return this.balanceTypeField;
            }
            set {
                this.balanceTypeField = value;
            }
        }
        
        /// <remarks/>
        public money amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string adjustmentItemID {
            get {
                return this.adjustmentItemIDField;
            }
            set {
                this.adjustmentItemIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum balanceType {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        priorityBalance,
        
        /// <remarks/>
        totalBalance,
        
        /// <remarks/>
        arrearsBalance,
        
        /// <remarks/>
        prepaidBalance,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class rate : mspObject {
        
        private string rateCodeField;
        
        private string rateCodeDescriptionField;
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private rateComponent[] rateComponentsField;
        
        private TOUSchedule[] tOUSchedulesField;
        
        /// <remarks/>
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string rateCodeDescription {
            get {
                return this.rateCodeDescriptionField;
            }
            set {
                this.rateCodeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public rateComponent[] rateComponents {
            get {
                return this.rateComponentsField;
            }
            set {
                this.rateComponentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TOUSchedule[] TOUSchedules {
            get {
                return this.tOUSchedulesField;
            }
            set {
                this.tOUSchedulesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class rateComponent {
        
        private currencyCode currencyCodeField;
        
        private bool currencyCodeFieldSpecified;
        
        private uom commodityUnitsField;
        
        private bool commodityUnitsFieldSpecified;
        
        private string rateComponentDescriptionField;
        
        private string rateCodeField;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public currencyCode currencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currencyCodeSpecified {
            get {
                return this.currencyCodeFieldSpecified;
            }
            set {
                this.currencyCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uom commodityUnits {
            get {
                return this.commodityUnitsField;
            }
            set {
                this.commodityUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool commodityUnitsSpecified {
            get {
                return this.commodityUnitsFieldSpecified;
            }
            set {
                this.commodityUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rateComponentDescription {
            get {
                return this.rateComponentDescriptionField;
            }
            set {
                this.rateComponentDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string rateCode {
            get {
                return this.rateCodeField;
            }
            set {
                this.rateCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ppmLocation : mspObject {
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private rate rateField;
        
        private string taxDistField;
        
        private string fuelCostAdjCodeField;
        
        private string[] fixedChargeCodeListField;
        
        private string serviceLocationIDField;
        
        private money priorityBalanceField;
        
        private money sharedArrearsField;
        
        private meterReading initialReadField;
        
        private customer customerField;
        
        private money totalBalanceField;
        
        private string lastMeterReadField;
        
        private System.DateTime lastReadingDateField;
        
        private bool lastReadingDateFieldSpecified;
        
        private money depositAmountField;
        
        private money depositPaidField;
        
        private float depositInterestField;
        
        private bool depositInterestFieldSpecified;
        
        private System.DateTime connectDateField;
        
        private bool connectDateFieldSpecified;
        
        private string billingCycleField;
        
        private System.DateTime meterSetDateField;
        
        private bool meterSetDateFieldSpecified;
        
        private meterID meterIDField;
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public rate rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string fuelCostAdjCode {
            get {
                return this.fuelCostAdjCodeField;
            }
            set {
                this.fuelCostAdjCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("fixedChargeCode", IsNullable=false)]
        public string[] fixedChargeCodeList {
            get {
                return this.fixedChargeCodeListField;
            }
            set {
                this.fixedChargeCodeListField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public money priorityBalance {
            get {
                return this.priorityBalanceField;
            }
            set {
                this.priorityBalanceField = value;
            }
        }
        
        /// <remarks/>
        public money sharedArrears {
            get {
                return this.sharedArrearsField;
            }
            set {
                this.sharedArrearsField = value;
            }
        }
        
        /// <remarks/>
        public meterReading initialRead {
            get {
                return this.initialReadField;
            }
            set {
                this.initialReadField = value;
            }
        }
        
        /// <remarks/>
        public customer customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        public money totalBalance {
            get {
                return this.totalBalanceField;
            }
            set {
                this.totalBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string lastMeterRead {
            get {
                return this.lastMeterReadField;
            }
            set {
                this.lastMeterReadField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastReadingDate {
            get {
                return this.lastReadingDateField;
            }
            set {
                this.lastReadingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastReadingDateSpecified {
            get {
                return this.lastReadingDateFieldSpecified;
            }
            set {
                this.lastReadingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money depositAmount {
            get {
                return this.depositAmountField;
            }
            set {
                this.depositAmountField = value;
            }
        }
        
        /// <remarks/>
        public money depositPaid {
            get {
                return this.depositPaidField;
            }
            set {
                this.depositPaidField = value;
            }
        }
        
        /// <remarks/>
        public float depositInterest {
            get {
                return this.depositInterestField;
            }
            set {
                this.depositInterestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool depositInterestSpecified {
            get {
                return this.depositInterestFieldSpecified;
            }
            set {
                this.depositInterestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime connectDate {
            get {
                return this.connectDateField;
            }
            set {
                this.connectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectDateSpecified {
            get {
                return this.connectDateFieldSpecified;
            }
            set {
                this.connectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime meterSetDate {
            get {
                return this.meterSetDateField;
            }
            set {
                this.meterSetDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool meterSetDateSpecified {
            get {
                return this.meterSetDateFieldSpecified;
            }
            set {
                this.meterSetDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class connectDisconnectList : mspObject {
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private CDCustomer[] cDListField;
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CDCustomer[] CDList {
            get {
                return this.cDListField;
            }
            set {
                this.cDListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CDCustomer {
        
        private string customerIDField;
        
        private string serviceLocationIDField;
        
        private meterID meterIDField;
        
        private loadActionCode loadActionCodeField;
        
        private bool loadActionCodeFieldSpecified;
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public loadActionCode loadActionCode {
            get {
                return this.loadActionCodeField;
            }
            set {
                this.loadActionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadActionCodeSpecified {
            get {
                return this.loadActionCodeFieldSpecified;
            }
            set {
                this.loadActionCodeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum loadActionCode {
        
        /// <remarks/>
        Connect,
        
        /// <remarks/>
        Disconnect,
        
        /// <remarks/>
        InitiatePowerLimitation,
        
        /// <remarks/>
        CancelPowerLimitation,
        
        /// <remarks/>
        Opened,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Close,
        
        /// <remarks/>
        Armed,
        
        /// <remarks/>
        Enabled,
        
        /// <remarks/>
        Disabled,
        
        /// <remarks/>
        Arm,
        
        /// <remarks/>
        Enable,
        
        /// <remarks/>
        Disable,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class connectDisconnectEvent : mspObject {
        
        private string serviceLocationIDField;
        
        private string customerIDField;
        
        private string gridLocationField;
        
        private string accountNumberField;
        
        private meterID meterIDField;
        
        private loadActionCode loadActionCodeField;
        
        private bool loadActionCodeFieldSpecified;
        
        private powerLimitationValue powerLimitationValueField;
        
        private CDReasonCode cDReasonCodeField;
        
        private bool cDReasonCodeFieldSpecified;
        
        private money amountDueField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string billingTermsField;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public loadActionCode loadActionCode {
            get {
                return this.loadActionCodeField;
            }
            set {
                this.loadActionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadActionCodeSpecified {
            get {
                return this.loadActionCodeFieldSpecified;
            }
            set {
                this.loadActionCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public powerLimitationValue powerLimitationValue {
            get {
                return this.powerLimitationValueField;
            }
            set {
                this.powerLimitationValueField = value;
            }
        }
        
        /// <remarks/>
        public CDReasonCode CDReasonCode {
            get {
                return this.cDReasonCodeField;
            }
            set {
                this.cDReasonCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CDReasonCodeSpecified {
            get {
                return this.cDReasonCodeFieldSpecified;
            }
            set {
                this.cDReasonCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money amountDue {
            get {
                return this.amountDueField;
            }
            set {
                this.amountDueField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingTerms {
            get {
                return this.billingTermsField;
            }
            set {
                this.billingTermsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class powerLimitationValue {
        
        private powerLimitationUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public powerLimitationUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum powerLimitationUnits {
        
        /// <remarks/>
        kWh,
        
        /// <remarks/>
        kW,
        
        /// <remarks/>
        A,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum CDReasonCode {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        PPMBalanceNegative,
        
        /// <remarks/>
        PPMBalancePositive,
        
        /// <remarks/>
        NonPayment,
        
        /// <remarks/>
        ServiceInactive,
        
        /// <remarks/>
        PaymentAgreement,
        
        /// <remarks/>
        PaymentReceived,
        
        /// <remarks/>
        NewCustomer,
        
        /// <remarks/>
        ServiceRestored,
        
        /// <remarks/>
        ServiceReconnected,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CDStateChange : mspObject {
        
        private meterID meterIDField;
        
        private loadActionCode stateChangeField;
        
        private bool stateChangeFieldSpecified;
        
        private meterEvent meterEventField;
        
        private System.DateTime timestampField;
        
        private bool timestampFieldSpecified;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public loadActionCode stateChange {
            get {
                return this.stateChangeField;
            }
            set {
                this.stateChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stateChangeSpecified {
            get {
                return this.stateChangeFieldSpecified;
            }
            set {
                this.stateChangeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterEvent meterEvent {
            get {
                return this.meterEventField;
            }
            set {
                this.meterEventField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timestampSpecified {
            get {
                return this.timestampFieldSpecified;
            }
            set {
                this.timestampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CDState : mspObject {
        
        private meterID meterIDField;
        
        private RCDState rCDStateField;
        
        private bool rCDStateFieldSpecified;
        
        private System.DateTime timestampField;
        
        private bool timestampFieldSpecified;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public RCDState RCDState {
            get {
                return this.rCDStateField;
            }
            set {
                this.rCDStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RCDStateSpecified {
            get {
                return this.rCDStateFieldSpecified;
            }
            set {
                this.rCDStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timestampSpecified {
            get {
                return this.timestampFieldSpecified;
            }
            set {
                this.timestampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum RCDState {
        
        /// <remarks/>
        Opened,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        Armed,
        
        /// <remarks/>
        Enabled,
        
        /// <remarks/>
        Disabled,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        InTransition,
        
        /// <remarks/>
        PowerLimitation,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class billingDetail : mspObject {
        
        private string accountNumberField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string serviceLocationIDField;
        
        private meterID meterIDField;
        
        private string ppmLocationIDField;
        
        private string revenueMonthField;
        
        private string revenueYearField;
        
        private System.DateTime cisBillDateField;
        
        private bool cisBillDateFieldSpecified;
        
        private string billingCycleField;
        
        private money priorBalanceField;
        
        private money paymentField;
        
        private money creditChargeField;
        
        private money debitChargeField;
        
        private chargeItem[] chargeItemListField;
        
        private money cISBalanceAfterBillingField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string revenueMonth {
            get {
                return this.revenueMonthField;
            }
            set {
                this.revenueMonthField = value;
            }
        }
        
        /// <remarks/>
        public string revenueYear {
            get {
                return this.revenueYearField;
            }
            set {
                this.revenueYearField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime cisBillDate {
            get {
                return this.cisBillDateField;
            }
            set {
                this.cisBillDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cisBillDateSpecified {
            get {
                return this.cisBillDateFieldSpecified;
            }
            set {
                this.cisBillDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public money priorBalance {
            get {
                return this.priorBalanceField;
            }
            set {
                this.priorBalanceField = value;
            }
        }
        
        /// <remarks/>
        public money payment {
            get {
                return this.paymentField;
            }
            set {
                this.paymentField = value;
            }
        }
        
        /// <remarks/>
        public money creditCharge {
            get {
                return this.creditChargeField;
            }
            set {
                this.creditChargeField = value;
            }
        }
        
        /// <remarks/>
        public money debitCharge {
            get {
                return this.debitChargeField;
            }
            set {
                this.debitChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public chargeItem[] chargeItemList {
            get {
                return this.chargeItemListField;
            }
            set {
                this.chargeItemListField = value;
            }
        }
        
        /// <remarks/>
        public money CISBalanceAfterBilling {
            get {
                return this.cISBalanceAfterBillingField;
            }
            set {
                this.cISBalanceAfterBillingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class chargeItem {
        
        private money chargeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public money charge {
            get {
                return this.chargeField;
            }
            set {
                this.chargeField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class billingData : mspObject {
        
        private string accountNumberField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string serviceLocationIDField;
        
        private string ppmLocationIDField;
        
        private meterID meterIDField;
        
        private money cISBalanceAfterBillingField;
        
        private System.DateTime billingDateField;
        
        private bool billingDateFieldSpecified;
        
        private System.DateTime billFromDateField;
        
        private bool billFromDateFieldSpecified;
        
        private System.DateTime billToDateField;
        
        private bool billToDateFieldSpecified;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public money CISBalanceAfterBilling {
            get {
                return this.cISBalanceAfterBillingField;
            }
            set {
                this.cISBalanceAfterBillingField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billingDate {
            get {
                return this.billingDateField;
            }
            set {
                this.billingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billingDateSpecified {
            get {
                return this.billingDateFieldSpecified;
            }
            set {
                this.billingDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billFromDate {
            get {
                return this.billFromDateField;
            }
            set {
                this.billFromDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billFromDateSpecified {
            get {
                return this.billFromDateFieldSpecified;
            }
            set {
                this.billFromDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime billToDate {
            get {
                return this.billToDateField;
            }
            set {
                this.billToDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool billToDateSpecified {
            get {
                return this.billToDateFieldSpecified;
            }
            set {
                this.billToDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class billingAccountLoad : mspObject {
        
        private string accountNumberField;
        
        private eaLoc eaLocField;
        
        private string substationField;
        
        private string feederField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private float kwhUseField;
        
        private bool kwhUseFieldSpecified;
        
        private long demandField;
        
        private bool demandFieldSpecified;
        
        private float hpField;
        
        private bool hpFieldSpecified;
        
        private float kvarDemandField;
        
        private bool kvarDemandFieldSpecified;
        
        private long stLiteKwhField;
        
        private bool stLiteKwhFieldSpecified;
        
        private meterID meterIDField;
        
        private string servTypeField;
        
        private string revenueClassField;
        
        private float kwhAdjField;
        
        private bool kwhAdjFieldSpecified;
        
        private long kwAdjField;
        
        private bool kwAdjFieldSpecified;
        
        private long xfmrKvaField;
        
        private bool xfmrKvaFieldSpecified;
        
        private string gLCodeField;
        
        private string zoneField;
        
        private GMLLocation gMLLocationField;
        
        private string gridLocationField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public string substation {
            get {
                return this.substationField;
            }
            set {
                this.substationField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kwhUse {
            get {
                return this.kwhUseField;
            }
            set {
                this.kwhUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwhUseSpecified {
            get {
                return this.kwhUseFieldSpecified;
            }
            set {
                this.kwhUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long demand {
            get {
                return this.demandField;
            }
            set {
                this.demandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool demandSpecified {
            get {
                return this.demandFieldSpecified;
            }
            set {
                this.demandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float hp {
            get {
                return this.hpField;
            }
            set {
                this.hpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hpSpecified {
            get {
                return this.hpFieldSpecified;
            }
            set {
                this.hpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float kvarDemand {
            get {
                return this.kvarDemandField;
            }
            set {
                this.kvarDemandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kvarDemandSpecified {
            get {
                return this.kvarDemandFieldSpecified;
            }
            set {
                this.kvarDemandFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long stLiteKwh {
            get {
                return this.stLiteKwhField;
            }
            set {
                this.stLiteKwhField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stLiteKwhSpecified {
            get {
                return this.stLiteKwhFieldSpecified;
            }
            set {
                this.stLiteKwhFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string servType {
            get {
                return this.servTypeField;
            }
            set {
                this.servTypeField = value;
            }
        }
        
        /// <remarks/>
        public string revenueClass {
            get {
                return this.revenueClassField;
            }
            set {
                this.revenueClassField = value;
            }
        }
        
        /// <remarks/>
        public float kwhAdj {
            get {
                return this.kwhAdjField;
            }
            set {
                this.kwhAdjField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwhAdjSpecified {
            get {
                return this.kwhAdjFieldSpecified;
            }
            set {
                this.kwhAdjFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long kwAdj {
            get {
                return this.kwAdjField;
            }
            set {
                this.kwAdjField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kwAdjSpecified {
            get {
                return this.kwAdjFieldSpecified;
            }
            set {
                this.kwAdjFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long xfmrKva {
            get {
                return this.xfmrKvaField;
            }
            set {
                this.xfmrKvaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool xfmrKvaSpecified {
            get {
                return this.xfmrKvaFieldSpecified;
            }
            set {
                this.xfmrKvaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string gLCode {
            get {
                return this.gLCodeField;
            }
            set {
                this.gLCodeField = value;
            }
        }
        
        /// <remarks/>
        public string zone {
            get {
                return this.zoneField;
            }
            set {
                this.zoneField = value;
            }
        }
        
        /// <remarks/>
        public GMLLocation GMLLocation {
            get {
                return this.gMLLocationField;
            }
            set {
                this.gMLLocationField = value;
            }
        }
        
        /// <remarks/>
        public string gridLocation {
            get {
                return this.gridLocationField;
            }
            set {
                this.gridLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class billedUsage : mspObject {
        
        private string accountNumberField;
        
        private serviceType serviceTypeField;
        
        private bool serviceTypeFieldSpecified;
        
        private string serviceLocationIDField;
        
        private meterID meterIDField;
        
        private string ppmLocationIDField;
        
        private string meterStatusField;
        
        private usageItem[] usageItemListField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public serviceType serviceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool serviceTypeSpecified {
            get {
                return this.serviceTypeFieldSpecified;
            }
            set {
                this.serviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterStatus {
            get {
                return this.meterStatusField;
            }
            set {
                this.meterStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public usageItem[] usageItemList {
            get {
                return this.usageItemListField;
            }
            set {
                this.usageItemListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class usageItem {
        
        private string usageTypeField;
        
        private float multiplierField;
        
        private bool multiplierFieldSpecified;
        
        private float previousReadingField;
        
        private bool previousReadingFieldSpecified;
        
        private System.DateTime previousReadDateField;
        
        private bool previousReadDateFieldSpecified;
        
        private float presentReadingField;
        
        private bool presentReadingFieldSpecified;
        
        private System.DateTime presentReadingDateField;
        
        private bool presentReadingDateFieldSpecified;
        
        /// <remarks/>
        public string usageType {
            get {
                return this.usageTypeField;
            }
            set {
                this.usageTypeField = value;
            }
        }
        
        /// <remarks/>
        public float multiplier {
            get {
                return this.multiplierField;
            }
            set {
                this.multiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool multiplierSpecified {
            get {
                return this.multiplierFieldSpecified;
            }
            set {
                this.multiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float previousReading {
            get {
                return this.previousReadingField;
            }
            set {
                this.previousReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousReadingSpecified {
            get {
                return this.previousReadingFieldSpecified;
            }
            set {
                this.previousReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime previousReadDate {
            get {
                return this.previousReadDateField;
            }
            set {
                this.previousReadDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousReadDateSpecified {
            get {
                return this.previousReadDateFieldSpecified;
            }
            set {
                this.previousReadDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float presentReading {
            get {
                return this.presentReadingField;
            }
            set {
                this.presentReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presentReadingSpecified {
            get {
                return this.presentReadingFieldSpecified;
            }
            set {
                this.presentReadingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime presentReadingDate {
            get {
                return this.presentReadingDateField;
            }
            set {
                this.presentReadingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool presentReadingDateSpecified {
            get {
                return this.presentReadingDateFieldSpecified;
            }
            set {
                this.presentReadingDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workStatus : mspObject {
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private multiPartIdentifier taskIdentifierField;
        
        private objectRef assignmentIDField;
        
        private assignmentStatus assignmentStatusField;
        
        private bool assignmentStatusFieldSpecified;
        
        private objectRef acceptedByField;
        
        private string workProgressField;
        
        private string remarksField;
        
        private scheduleModification scheduleModificationField;
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public multiPartIdentifier taskIdentifier {
            get {
                return this.taskIdentifierField;
            }
            set {
                this.taskIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public objectRef assignmentID {
            get {
                return this.assignmentIDField;
            }
            set {
                this.assignmentIDField = value;
            }
        }
        
        /// <remarks/>
        public assignmentStatus assignmentStatus {
            get {
                return this.assignmentStatusField;
            }
            set {
                this.assignmentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool assignmentStatusSpecified {
            get {
                return this.assignmentStatusFieldSpecified;
            }
            set {
                this.assignmentStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public objectRef acceptedBy {
            get {
                return this.acceptedByField;
            }
            set {
                this.acceptedByField = value;
            }
        }
        
        /// <remarks/>
        public string workProgress {
            get {
                return this.workProgressField;
            }
            set {
                this.workProgressField = value;
            }
        }
        
        /// <remarks/>
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        public scheduleModification scheduleModification {
            get {
                return this.scheduleModificationField;
            }
            set {
                this.scheduleModificationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum assignmentStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Received Assignment")]
        ReceivedAssignment,
        
        /// <remarks/>
        Delivered,
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Rejected,
        
        /// <remarks/>
        Queued,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Timed Out")]
        TimedOut,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Partially Complete")]
        PartiallyComplete,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("On Hold")]
        OnHold,
        
        /// <remarks/>
        Returned,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class scheduleModification {
        
        private System.DateTime cantStartUntilField;
        
        private bool cantStartUntilFieldSpecified;
        
        /// <remarks/>
        public System.DateTime cantStartUntil {
            get {
                return this.cantStartUntilField;
            }
            set {
                this.cantStartUntilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cantStartUntilSpecified {
            get {
                return this.cantStartUntilFieldSpecified;
            }
            set {
                this.cantStartUntilFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workRequest : mspObject {
        
        private System.DateTime createdDateField;
        
        private bool createdDateFieldSpecified;
        
        private string createdByField;
        
        private string workTypeField;
        
        private string descriptionField;
        
        private string titleField;
        
        private string priorityField;
        
        private workLocation workLocationField;
        
        private scheduleRequest[] scheduleRequestsField;
        
        /// <remarks/>
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool createdDateSpecified {
            get {
                return this.createdDateFieldSpecified;
            }
            set {
                this.createdDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string createdBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string workType {
            get {
                return this.workTypeField;
            }
            set {
                this.workTypeField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public workLocation workLocation {
            get {
                return this.workLocationField;
            }
            set {
                this.workLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public scheduleRequest[] scheduleRequests {
            get {
                return this.scheduleRequestsField;
            }
            set {
                this.scheduleRequestsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class unassignment : mspObject {
        
        private resource[] resourcesField;
        
        private objectRef assignmentIDField;
        
        private multiPartIdentifier taskIdentifierField;
        
        private string reasonField;
        
        private string actionByField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public resource[] resources {
            get {
                return this.resourcesField;
            }
            set {
                this.resourcesField = value;
            }
        }
        
        /// <remarks/>
        public objectRef assignmentID {
            get {
                return this.assignmentIDField;
            }
            set {
                this.assignmentIDField = value;
            }
        }
        
        /// <remarks/>
        public multiPartIdentifier taskIdentifier {
            get {
                return this.taskIdentifierField;
            }
            set {
                this.taskIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string actionBy {
            get {
                return this.actionByField;
            }
            set {
                this.actionByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class resource : mspObject {
        
        private worker[] workersField;
        
        private crew[] crewListField;
        
        private string[] vehicleListField;
        
        private string[] equipmentListField;
        
        private vehicle[] vehiclesField;
        
        private equipment[] crewEquipmentListField;
        
        private switchingSchedule[] switchingScheduleListField;
        
        private switchingStep[] switchingStepListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public worker[] workers {
            get {
                return this.workersField;
            }
            set {
                this.workersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public crew[] crewList {
            get {
                return this.crewListField;
            }
            set {
                this.crewListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("vehicleID", IsNullable=false)]
        public string[] vehicleList {
            get {
                return this.vehicleListField;
            }
            set {
                this.vehicleListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("equipmentID", IsNullable=false)]
        public string[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                this.equipmentListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public vehicle[] vehicles {
            get {
                return this.vehiclesField;
            }
            set {
                this.vehiclesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public equipment[] crewEquipmentList {
            get {
                return this.crewEquipmentListField;
            }
            set {
                this.crewEquipmentListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public switchingSchedule[] switchingScheduleList {
            get {
                return this.switchingScheduleListField;
            }
            set {
                this.switchingScheduleListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public switchingStep[] switchingStepList {
            get {
                return this.switchingStepListField;
            }
            set {
                this.switchingStepListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class crew : mspObject {
        
        private string crewNameField;
        
        private string foremanField;
        
        private contactInfo contactInfoField;
        
        private bool isForeignField;
        
        private bool isForeignFieldSpecified;
        
        private string baseLocationField;
        
        private string crewTypeField;
        
        private string[] vehicleListField;
        
        private string[] workerListField;
        
        private string[] equipmentListField;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private string[] capabilityListField;
        
        private vehicle[] vehiclesField;
        
        private worker[] workersField;
        
        private capabilities capabilitiesField;
        
        /// <remarks/>
        public string crewName {
            get {
                return this.crewNameField;
            }
            set {
                this.crewNameField = value;
            }
        }
        
        /// <remarks/>
        public string foreman {
            get {
                return this.foremanField;
            }
            set {
                this.foremanField = value;
            }
        }
        
        /// <remarks/>
        public contactInfo contactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool isForeign {
            get {
                return this.isForeignField;
            }
            set {
                this.isForeignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isForeignSpecified {
            get {
                return this.isForeignFieldSpecified;
            }
            set {
                this.isForeignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string baseLocation {
            get {
                return this.baseLocationField;
            }
            set {
                this.baseLocationField = value;
            }
        }
        
        /// <remarks/>
        public string crewType {
            get {
                return this.crewTypeField;
            }
            set {
                this.crewTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("vehicleID", IsNullable=false)]
        public string[] vehicleList {
            get {
                return this.vehicleListField;
            }
            set {
                this.vehicleListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("workerID", IsNullable=false)]
        public string[] workerList {
            get {
                return this.workerListField;
            }
            set {
                this.workerListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("equipmentID", IsNullable=false)]
        public string[] equipmentList {
            get {
                return this.equipmentListField;
            }
            set {
                this.equipmentListField = value;
            }
        }
        
        /// <remarks/>
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("capabilityID", IsNullable=false)]
        public string[] capabilityList {
            get {
                return this.capabilityListField;
            }
            set {
                this.capabilityListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public vehicle[] vehicles {
            get {
                return this.vehiclesField;
            }
            set {
                this.vehiclesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public worker[] workers {
            get {
                return this.workersField;
            }
            set {
                this.workersField = value;
            }
        }
        
        /// <remarks/>
        public capabilities capabilities {
            get {
                return this.capabilitiesField;
            }
            set {
                this.capabilitiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class vehicle : mspObject {
        
        private string vehicleTypeField;
        
        private bool isCompanyOwnedField;
        
        private bool isCompanyOwnedFieldSpecified;
        
        private string aVLIDField;
        
        /// <remarks/>
        public string vehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool isCompanyOwned {
            get {
                return this.isCompanyOwnedField;
            }
            set {
                this.isCompanyOwnedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isCompanyOwnedSpecified {
            get {
                return this.isCompanyOwnedFieldSpecified;
            }
            set {
                this.isCompanyOwnedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string AVLID {
            get {
                return this.aVLIDField;
            }
            set {
                this.aVLIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class capabilities {
        
        private capability capabilityField;
        
        /// <remarks/>
        public capability capability {
            get {
                return this.capabilityField;
            }
            set {
                this.capabilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class capability : mspObject {
        
        private string categoryField;
        
        private string descriptionField;
        
        private System.DateTime effectiveDateField;
        
        private bool effectiveDateFieldSpecified;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string performanceFactorField;
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime effectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool effectiveDateSpecified {
            get {
                return this.effectiveDateFieldSpecified;
            }
            set {
                this.effectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string performanceFactor {
            get {
                return this.performanceFactorField;
            }
            set {
                this.performanceFactorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class equipment : mspObject {
        
        private string equipmentTypeField;
        
        /// <remarks/>
        public string equipmentType {
            get {
                return this.equipmentTypeField;
            }
            set {
                this.equipmentTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class groupAssignment : mspObject {
        
        private objectRef workGroupIDField;
        
        private multiPartIdentifier taskIdentifierField;
        
        private workSchedule workScheduleField;
        
        private constraints constraintsField;
        
        private string actionByField;
        
        private string timeToLiveField;
        
        /// <remarks/>
        public objectRef workGroupID {
            get {
                return this.workGroupIDField;
            }
            set {
                this.workGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public multiPartIdentifier taskIdentifier {
            get {
                return this.taskIdentifierField;
            }
            set {
                this.taskIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public workSchedule workSchedule {
            get {
                return this.workScheduleField;
            }
            set {
                this.workScheduleField = value;
            }
        }
        
        /// <remarks/>
        public constraints constraints {
            get {
                return this.constraintsField;
            }
            set {
                this.constraintsField = value;
            }
        }
        
        /// <remarks/>
        public string actionBy {
            get {
                return this.actionByField;
            }
            set {
                this.actionByField = value;
            }
        }
        
        /// <remarks/>
        public string timeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workSchedule {
        
        private System.DateTime estimatedStartTimeField;
        
        private bool estimatedStartTimeFieldSpecified;
        
        private System.DateTime estimatedEndTimeField;
        
        private bool estimatedEndTimeFieldSpecified;
        
        private duration estimatedDriveTimeField;
        
        /// <remarks/>
        public System.DateTime estimatedStartTime {
            get {
                return this.estimatedStartTimeField;
            }
            set {
                this.estimatedStartTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estimatedStartTimeSpecified {
            get {
                return this.estimatedStartTimeFieldSpecified;
            }
            set {
                this.estimatedStartTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime estimatedEndTime {
            get {
                return this.estimatedEndTimeField;
            }
            set {
                this.estimatedEndTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estimatedEndTimeSpecified {
            get {
                return this.estimatedEndTimeFieldSpecified;
            }
            set {
                this.estimatedEndTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration estimatedDriveTime {
            get {
                return this.estimatedDriveTimeField;
            }
            set {
                this.estimatedDriveTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class constraints {
        
        private System.DateTime cantStartUntilField;
        
        private bool cantStartUntilFieldSpecified;
        
        private System.DateTime mustBeDoneByField;
        
        private bool mustBeDoneByFieldSpecified;
        
        /// <remarks/>
        public System.DateTime cantStartUntil {
            get {
                return this.cantStartUntilField;
            }
            set {
                this.cantStartUntilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cantStartUntilSpecified {
            get {
                return this.cantStartUntilFieldSpecified;
            }
            set {
                this.cantStartUntilFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime mustBeDoneBy {
            get {
                return this.mustBeDoneByField;
            }
            set {
                this.mustBeDoneByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mustBeDoneBySpecified {
            get {
                return this.mustBeDoneByFieldSpecified;
            }
            set {
                this.mustBeDoneByFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class assignment : mspObject {
        
        private resource[] resourcesField;
        
        private multiPartIdentifier taskIdentifierField;
        
        private workSchedule workScheduleField;
        
        private constraints constraintsField;
        
        private string actionByField;
        
        private duration timeToLiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public resource[] resources {
            get {
                return this.resourcesField;
            }
            set {
                this.resourcesField = value;
            }
        }
        
        /// <remarks/>
        public multiPartIdentifier taskIdentifier {
            get {
                return this.taskIdentifierField;
            }
            set {
                this.taskIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public workSchedule workSchedule {
            get {
                return this.workScheduleField;
            }
            set {
                this.workScheduleField = value;
            }
        }
        
        /// <remarks/>
        public constraints constraints {
            get {
                return this.constraintsField;
            }
            set {
                this.constraintsField = value;
            }
        }
        
        /// <remarks/>
        public string actionBy {
            get {
                return this.actionByField;
            }
            set {
                this.actionByField = value;
            }
        }
        
        /// <remarks/>
        public duration timeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class project : mspObject {
        
        private objectRef[] jobListField;
        
        private string remarksField;
        
        private workList workListField;
        
        private serviceOrder[] serviceOrderListField;
        
        private workOrder[] workOrderListField;
        
        private maintenanceOrder[] maintenanceOrderListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("jobID", IsNullable=false)]
        public objectRef[] jobList {
            get {
                return this.jobListField;
            }
            set {
                this.jobListField = value;
            }
        }
        
        /// <remarks/>
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        public workList workList {
            get {
                return this.workListField;
            }
            set {
                this.workListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public serviceOrder[] serviceOrderList {
            get {
                return this.serviceOrderListField;
            }
            set {
                this.serviceOrderListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public workOrder[] workOrderList {
            get {
                return this.workOrderListField;
            }
            set {
                this.workOrderListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public maintenanceOrder[] maintenanceOrderList {
            get {
                return this.maintenanceOrderListField;
            }
            set {
                this.maintenanceOrderListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class scadaStatus : mspObject {
        
        private qualityDescription1 qualityField;
        
        private bool qualityFieldSpecified;
        
        private statusIdentifiers statusField;
        
        private bool statusFieldSpecified;
        
        private long changeCounterField;
        
        private bool changeCounterFieldSpecified;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private string otherQualityCodeField;
        
        /// <remarks/>
        public qualityDescription1 quality {
            get {
                return this.qualityField;
            }
            set {
                this.qualityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qualitySpecified {
            get {
                return this.qualityFieldSpecified;
            }
            set {
                this.qualityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public statusIdentifiers status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long changeCounter {
            get {
                return this.changeCounterField;
            }
            set {
                this.changeCounterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool changeCounterSpecified {
            get {
                return this.changeCounterFieldSpecified;
            }
            set {
                this.changeCounterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string otherQualityCode {
            get {
                return this.otherQualityCodeField;
            }
            set {
                this.otherQualityCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum statusIdentifiers {
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Closed,
        
        /// <remarks/>
        Travel,
        
        /// <remarks/>
        OutofService,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class scadaPoints : mspObject {
        
        private scadaPoint[] scadaPointListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public scadaPoint[] scadaPointList {
            get {
                return this.scadaPointListField;
            }
            set {
                this.scadaPointListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(readingSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class schedule : mspObject {
        
        private string purposeField;
        
        private duration maximumRunTimeField;
        
        private timePeriod effectiveWindowField;
        
        private bool isEnabledField;
        
        private bool isEnabledFieldSpecified;
        
        private duration offsetField;
        
        private timePoint[] absoluteTimeScheduleField;
        
        private periodicSchedule periodicScheduleField;
        
        private cimTimePoints[] timePointsField;
        
        /// <remarks/>
        public string purpose {
            get {
                return this.purposeField;
            }
            set {
                this.purposeField = value;
            }
        }
        
        /// <remarks/>
        public duration maximumRunTime {
            get {
                return this.maximumRunTimeField;
            }
            set {
                this.maximumRunTimeField = value;
            }
        }
        
        /// <remarks/>
        public timePeriod effectiveWindow {
            get {
                return this.effectiveWindowField;
            }
            set {
                this.effectiveWindowField = value;
            }
        }
        
        /// <remarks/>
        public bool isEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isEnabledSpecified {
            get {
                return this.isEnabledFieldSpecified;
            }
            set {
                this.isEnabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public timePoint[] absoluteTimeSchedule {
            get {
                return this.absoluteTimeScheduleField;
            }
            set {
                this.absoluteTimeScheduleField = value;
            }
        }
        
        /// <remarks/>
        public periodicSchedule periodicSchedule {
            get {
                return this.periodicScheduleField;
            }
            set {
                this.periodicScheduleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TimePoints")]
        public cimTimePoints[] TimePoints {
            get {
                return this.timePointsField;
            }
            set {
                this.timePointsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class timePoint {
        
        private System.DateTime absoluteTimeField;
        
        private bool absoluteTimeFieldSpecified;
        
        private string sequenceNumberField;
        
        /// <remarks/>
        public System.DateTime absoluteTime {
            get {
                return this.absoluteTimeField;
            }
            set {
                this.absoluteTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool absoluteTimeSpecified {
            get {
                return this.absoluteTimeFieldSpecified;
            }
            set {
                this.absoluteTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class periodicSchedule {
        
        private System.DateTime startTimeField;
        
        private bool startTimeFieldSpecified;
        
        private period periodField;
        
        /// <remarks/>
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public period period {
            get {
                return this.periodField;
            }
            set {
                this.periodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class period {
        
        private timeUnits timeUnitsField;
        
        private bool timeUnitsFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public timeUnits timeUnits {
            get {
                return this.timeUnitsField;
            }
            set {
                this.timeUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeUnitsSpecified {
            get {
                return this.timeUnitsFieldSpecified;
            }
            set {
                this.timeUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="integer")]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class cimTimePoints {
        
        private System.DateTime absoluteTimeField;
        
        private bool absoluteTimeFieldSpecified;
        
        private duration relativeTimeIntervalField;
        
        private string sequenceNumberField;
        
        private timePeriod windowField;
        
        /// <remarks/>
        public System.DateTime absoluteTime {
            get {
                return this.absoluteTimeField;
            }
            set {
                this.absoluteTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool absoluteTimeSpecified {
            get {
                return this.absoluteTimeFieldSpecified;
            }
            set {
                this.absoluteTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration relativeTimeInterval {
            get {
                return this.relativeTimeIntervalField;
            }
            set {
                this.relativeTimeIntervalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string sequenceNumber {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public timePeriod window {
            get {
                return this.windowField;
            }
            set {
                this.windowField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingSchedule : schedule {
        
        private meterID[] meterListField;
        
        private string[] meterGroupListField;
        
        private string[] configurationGroupListField;
        
        private readingType[] readingTypeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterID[] meterList {
            get {
                return this.meterListField;
            }
            set {
                this.meterListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterGroupID", IsNullable=false)]
        public string[] meterGroupList {
            get {
                return this.meterGroupListField;
            }
            set {
                this.meterGroupListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("configurationGroupID", IsNullable=false)]
        public string[] configurationGroupList {
            get {
                return this.configurationGroupListField;
            }
            set {
                this.configurationGroupListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public readingType[] readingTypeList {
            get {
                return this.readingTypeListField;
            }
            set {
                this.readingTypeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class readingType : mspObject {
        
        private readingTypeCode readingTypeCodeField;
        
        private string measurementTypeField;
        
        private string measTypeCategoryField;
        
        private uom unitsField;
        
        private bool unitsFieldSpecified;
        
        private bool forwardChronologyField;
        
        private bool forwardChronologyFieldSpecified;
        
        private string defaultValueDataTypeField;
        
        private string defaultQualityField;
        
        private string dynamicConfigurationField;
        
        private string channelField;
        
        /// <remarks/>
        public readingTypeCode readingTypeCode {
            get {
                return this.readingTypeCodeField;
            }
            set {
                this.readingTypeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string measurementType {
            get {
                return this.measurementTypeField;
            }
            set {
                this.measurementTypeField = value;
            }
        }
        
        /// <remarks/>
        public string measTypeCategory {
            get {
                return this.measTypeCategoryField;
            }
            set {
                this.measTypeCategoryField = value;
            }
        }
        
        /// <remarks/>
        public uom units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool forwardChronology {
            get {
                return this.forwardChronologyField;
            }
            set {
                this.forwardChronologyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool forwardChronologySpecified {
            get {
                return this.forwardChronologyFieldSpecified;
            }
            set {
                this.forwardChronologyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string defaultValueDataType {
            get {
                return this.defaultValueDataTypeField;
            }
            set {
                this.defaultValueDataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string defaultQuality {
            get {
                return this.defaultQualityField;
            }
            set {
                this.defaultQualityField = value;
            }
        }
        
        /// <remarks/>
        public string dynamicConfiguration {
            get {
                return this.dynamicConfigurationField;
            }
            set {
                this.dynamicConfigurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string channel {
            get {
                return this.channelField;
            }
            set {
                this.channelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterGroups : mspObject {
        
        private meterGroup[] electricMeterGroupsField;
        
        private meterGroup[] gasMeterGroupsField;
        
        private meterGroup[] waterMeterGroupsField;
        
        private meterGroup[] propaneMeterGroupsField;
        
        private meterGroup[] mixedMeterGroupsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] electricMeterGroups {
            get {
                return this.electricMeterGroupsField;
            }
            set {
                this.electricMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] gasMeterGroups {
            get {
                return this.gasMeterGroupsField;
            }
            set {
                this.gasMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] waterMeterGroups {
            get {
                return this.waterMeterGroupsField;
            }
            set {
                this.waterMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] propaneMeterGroups {
            get {
                return this.propaneMeterGroupsField;
            }
            set {
                this.propaneMeterGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterGroup[] mixedMeterGroups {
            get {
                return this.mixedMeterGroupsField;
            }
            set {
                this.mixedMeterGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(configurationGroup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterGroup : mspObject {
        
        private string groupNameField;
        
        private meterID[] meterListField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterID[] meterList {
            get {
                return this.meterListField;
            }
            set {
                this.meterListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class configurationGroup : meterGroup {
        
        private configuredReadingType[] configuredReadingTypesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public configuredReadingType[] configuredReadingTypes {
            get {
                return this.configuredReadingTypesField;
            }
            set {
                this.configuredReadingTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class AVLPosition : mspObject {
        
        private string vehicleIDField;
        
        private string aVLIDField;
        
        private System.DateTime gMTTimeField;
        
        private speed speedField;
        
        private float headingField;
        
        private bool headingFieldSpecified;
        
        private string cardinalHeadingField;
        
        private GPS gpsField;
        
        private GPSLocation gPSLocationField;
        
        /// <remarks/>
        public string vehicleID {
            get {
                return this.vehicleIDField;
            }
            set {
                this.vehicleIDField = value;
            }
        }
        
        /// <remarks/>
        public string AVLID {
            get {
                return this.aVLIDField;
            }
            set {
                this.aVLIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime GMTTime {
            get {
                return this.gMTTimeField;
            }
            set {
                this.gMTTimeField = value;
            }
        }
        
        /// <remarks/>
        public speed speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        public float heading {
            get {
                return this.headingField;
            }
            set {
                this.headingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool headingSpecified {
            get {
                return this.headingFieldSpecified;
            }
            set {
                this.headingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string cardinalHeading {
            get {
                return this.cardinalHeadingField;
            }
            set {
                this.cardinalHeadingField = value;
            }
        }
        
        /// <remarks/>
        public GPS gps {
            get {
                return this.gpsField;
            }
            set {
                this.gpsField = value;
            }
        }
        
        /// <remarks/>
        public GPSLocation GPSLocation {
            get {
                return this.gPSLocationField;
            }
            set {
                this.gPSLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class speed {
        
        private speedUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public speedUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum speedUnits {
        
        /// <remarks/>
        mph,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("feet per second")]
        feetpersecond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km per hour")]
        kmperhour,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("km per second")]
        kmpersecond,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("m per second")]
        mpersecond,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class GPS {
        
        private bool gPSValidityField;
        
        private bool gPSValidityFieldSpecified;
        
        private double latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private double longitudeField;
        
        private bool longitudeFieldSpecified;
        
        /// <remarks/>
        public bool GPSValidity {
            get {
                return this.gPSValidityField;
            }
            set {
                this.gPSValidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GPSValiditySpecified {
            get {
                return this.gPSValidityFieldSpecified;
            }
            set {
                this.gPSValidityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool latitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool longitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class formattedBlockTemplate : mspObject {
        
        private string templateNameField;
        
        private formattedBlock formattedBlockField;
        
        /// <remarks/>
        public string templateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public formattedBlock formattedBlock {
            get {
                return this.formattedBlockField;
            }
            set {
                this.formattedBlockField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class formattedBlock {
        
        private string separatorField;
        
        private string contentNounTypeField;
        
        private string contentIDField;
        
        private string commentField;
        
        private syntaxItem[] valSyntaxField;
        
        private string[] valueListField;
        
        /// <remarks/>
        public string separator {
            get {
                return this.separatorField;
            }
            set {
                this.separatorField = value;
            }
        }
        
        /// <remarks/>
        public string contentNounType {
            get {
                return this.contentNounTypeField;
            }
            set {
                this.contentNounTypeField = value;
            }
        }
        
        /// <remarks/>
        public string contentID {
            get {
                return this.contentIDField;
            }
            set {
                this.contentIDField = value;
            }
        }
        
        /// <remarks/>
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public syntaxItem[] valSyntax {
            get {
                return this.valSyntaxField;
            }
            set {
                this.valSyntaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("val", IsNullable=false)]
        public string[] valueList {
            get {
                return this.valueListField;
            }
            set {
                this.valueListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class syntaxItem {
        
        private string fieldNameField;
        
        private string positionField;
        
        private uom uomField;
        
        private bool uomFieldSpecified;
        
        /// <remarks/>
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public uom uom {
            get {
                return this.uomField;
            }
            set {
                this.uomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uomSpecified {
            get {
                return this.uomFieldSpecified;
            }
            set {
                this.uomFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterReadingC1219 : mspObject {
        
        private meterID meterIDField;
        
        private string meterNoField;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private System.DateTime acquisitionTimeField;
        
        private bool acquisitionTimeFieldSpecified;
        
        private byte seasonField;
        
        private bool seasonFieldSpecified;
        
        private uint numberOfResetsField;
        
        private bool numberOfResetsFieldSpecified;
        
        private readingStatus[] statusField;
        
        private registers[] registersField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterNo {
            get {
                return this.meterNoField;
            }
            set {
                this.meterNoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime acquisitionTime {
            get {
                return this.acquisitionTimeField;
            }
            set {
                this.acquisitionTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acquisitionTimeSpecified {
            get {
                return this.acquisitionTimeFieldSpecified;
            }
            set {
                this.acquisitionTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public byte season {
            get {
                return this.seasonField;
            }
            set {
                this.seasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool seasonSpecified {
            get {
                return this.seasonFieldSpecified;
            }
            set {
                this.seasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint numberOfResets {
            get {
                return this.numberOfResetsField;
            }
            set {
                this.numberOfResetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool numberOfResetsSpecified {
            get {
                return this.numberOfResetsFieldSpecified;
            }
            set {
                this.numberOfResetsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public readingStatus[] status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("registers")]
        public registers[] registers {
            get {
                return this.registersField;
            }
            set {
                this.registersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum readingStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        suspiciousRead,
        
        /// <remarks/>
        DSTinEffect,
        
        /// <remarks/>
        manuallyUpdated,
        
        /// <remarks/>
        manuallyEntered,
        
        /// <remarks/>
        reset,
        
        /// <remarks/>
        seasonChange,
        
        /// <remarks/>
        firstRead,
        
        /// <remarks/>
        billingRead,
        
        /// <remarks/>
        afterCorrection,
        
        /// <remarks/>
        beforeCorrection,
        
        /// <remarks/>
        finalRead,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class registers {
        
        private object[] itemsField;
        
        private uint tierField;
        
        private bool tierFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("coincidentalValue", typeof(coincidentalValue))]
        [System.Xml.Serialization.XmlElementAttribute("cumDemand", typeof(cumDemand))]
        [System.Xml.Serialization.XmlElementAttribute("demand", typeof(flowDemand))]
        [System.Xml.Serialization.XmlElementAttribute("summation", typeof(summation))]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint tier {
            get {
                return this.tierField;
            }
            set {
                this.tierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tierSpecified {
            get {
                return this.tierFieldSpecified;
            }
            set {
                this.tierFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class coincidentalValue {
        
        private uint sourceIDField;
        
        private bool sourceIDFieldSpecified;
        
        private uint triggerSourceIDField;
        
        private bool triggerSourceIDFieldSpecified;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceIDSpecified {
            get {
                return this.sourceIDFieldSpecified;
            }
            set {
                this.sourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint triggerSourceID {
            get {
                return this.triggerSourceIDField;
            }
            set {
                this.triggerSourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool triggerSourceIDSpecified {
            get {
                return this.triggerSourceIDFieldSpecified;
            }
            set {
                this.triggerSourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class cumDemand {
        
        private uint sourceIDField;
        
        private bool sourceIDFieldSpecified;
        
        private cumDemandType cumDemandTypeField;
        
        private bool cumDemandTypeFieldSpecified;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceIDSpecified {
            get {
                return this.sourceIDFieldSpecified;
            }
            set {
                this.sourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public cumDemandType cumDemandType {
            get {
                return this.cumDemandTypeField;
            }
            set {
                this.cumDemandTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cumDemandTypeSpecified {
            get {
                return this.cumDemandTypeFieldSpecified;
            }
            set {
                this.cumDemandTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum cumDemandType {
        
        /// <remarks/>
        max,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        continousMax,
        
        /// <remarks/>
        continousMin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class flowDemand {
        
        private uint sourceIDField;
        
        private bool sourceIDFieldSpecified;
        
        private flowDemandType flowDemandTypeField;
        
        private bool flowDemandTypeFieldSpecified;
        
        private byte occurrenceField;
        
        private bool occurrenceFieldSpecified;
        
        private System.DateTime dateTimeField;
        
        private bool dateTimeFieldSpecified;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceIDSpecified {
            get {
                return this.sourceIDFieldSpecified;
            }
            set {
                this.sourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public flowDemandType flowDemandType {
            get {
                return this.flowDemandTypeField;
            }
            set {
                this.flowDemandTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool flowDemandTypeSpecified {
            get {
                return this.flowDemandTypeFieldSpecified;
            }
            set {
                this.flowDemandTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte occurrence {
            get {
                return this.occurrenceField;
            }
            set {
                this.occurrenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool occurrenceSpecified {
            get {
                return this.occurrenceFieldSpecified;
            }
            set {
                this.occurrenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dateTimeSpecified {
            get {
                return this.dateTimeFieldSpecified;
            }
            set {
                this.dateTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum flowDemandType {
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        max,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class summation {
        
        private uint sourceIDField;
        
        private bool sourceIDFieldSpecified;
        
        private double valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public uint sourceID {
            get {
                return this.sourceIDField;
            }
            set {
                this.sourceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceIDSpecified {
            get {
                return this.sourceIDFieldSpecified;
            }
            set {
                this.sourceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thresholdNotificationItem : mspObject {
        
        private meterID meterIDField;
        
        private readingValue readingValueField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public readingValue readingValue {
            get {
                return this.readingValueField;
            }
            set {
                this.readingValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thresholdMonitoringItem : mspObject {
        
        private meterID meterIDField;
        
        private float valueField;
        
        private readingTypeCode readingTypeCodeField;
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public float value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public readingTypeCode readingTypeCode {
            get {
                return this.readingTypeCodeField;
            }
            set {
                this.readingTypeCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class eventMonitoringItem : mspObject {
        
        private meterEvent[] eventTypesField;
        
        private string[] meterGroupListField;
        
        private meterID[] meterListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterEvent[] eventTypes {
            get {
                return this.eventTypesField;
            }
            set {
                this.eventTypesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("meterGroupID", IsNullable=false)]
        public string[] meterGroupList {
            get {
                return this.meterGroupListField;
            }
            set {
                this.meterGroupListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public meterID[] meterList {
            get {
                return this.meterListField;
            }
            set {
                this.meterListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class circuitElement : mspObject {
        
        private string elementNameField;
        
        private string parentNameField;
        
        private circuitElementType elementTypeField;
        
        private bool elementTypeFieldSpecified;
        
        private string substationNameField;
        
        private string feederNameField;
        
        private string feederNoField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private circuitElementStatus circuitElementStatusField;
        
        /// <remarks/>
        public string elementName {
            get {
                return this.elementNameField;
            }
            set {
                this.elementNameField = value;
            }
        }
        
        /// <remarks/>
        public string parentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
            }
        }
        
        /// <remarks/>
        public circuitElementType elementType {
            get {
                return this.elementTypeField;
            }
            set {
                this.elementTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool elementTypeSpecified {
            get {
                return this.elementTypeFieldSpecified;
            }
            set {
                this.elementTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string substationName {
            get {
                return this.substationNameField;
            }
            set {
                this.substationNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederName {
            get {
                return this.feederNameField;
            }
            set {
                this.feederNameField = value;
            }
        }
        
        /// <remarks/>
        public string feederNo {
            get {
                return this.feederNoField;
            }
            set {
                this.feederNoField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public circuitElementStatus circuitElementStatus {
            get {
                return this.circuitElementStatusField;
            }
            set {
                this.circuitElementStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum circuitElementType {
        
        /// <remarks/>
        ohPrimaryLine,
        
        /// <remarks/>
        ohSecondaryLine,
        
        /// <remarks/>
        ohTransmissionLine,
        
        /// <remarks/>
        ugPrimaryLine,
        
        /// <remarks/>
        ugSecondaryLine,
        
        /// <remarks/>
        ugTransissionLine,
        
        /// <remarks/>
        capacitorBank,
        
        /// <remarks/>
        overcurrentDeviceBank,
        
        /// <remarks/>
        regulatorBank,
        
        /// <remarks/>
        switchingDeviceBank,
        
        /// <remarks/>
        transformerBank,
        
        /// <remarks/>
        equivalentSource,
        
        /// <remarks/>
        root,
        
        /// <remarks/>
        electricService,
        
        /// <remarks/>
        fakeNodeSection,
        
        /// <remarks/>
        inducationMachine,
        
        /// <remarks/>
        synchronousMachine,
        
        /// <remarks/>
        streetLight,
        
        /// <remarks/>
        securityLight,
        
        /// <remarks/>
        trafficLight,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class circuitElementStatus {
        
        private string outageEventIDField;
        
        private phaseCode outagedPhaseField;
        
        private bool outagedPhaseFieldSpecified;
        
        private circuitElementState circuitElementStateField;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode outagedPhase {
            get {
                return this.outagedPhaseField;
            }
            set {
                this.outagedPhaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outagedPhaseSpecified {
            get {
                return this.outagedPhaseFieldSpecified;
            }
            set {
                this.outagedPhaseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public circuitElementState circuitElementState {
            get {
                return this.circuitElementStateField;
            }
            set {
                this.circuitElementStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum circuitElementState {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        PossibleBreak,
        
        /// <remarks/>
        PossibleClosed,
        
        /// <remarks/>
        PossibleOpen,
        
        /// <remarks/>
        PredictedBreak,
        
        /// <remarks/>
        PredictedClosed,
        
        /// <remarks/>
        PredictedOpen,
        
        /// <remarks/>
        TempBreak,
        
        /// <remarks/>
        TempClosed,
        
        /// <remarks/>
        TempOpen,
        
        /// <remarks/>
        UplineTempBreak,
        
        /// <remarks/>
        UplineTempClosed,
        
        /// <remarks/>
        UplineTempOpen,
        
        /// <remarks/>
        UplineVerifiedClosedNoPower,
        
        /// <remarks/>
        VerifiedBreak,
        
        /// <remarks/>
        VerifiedClosedNoPower,
        
        /// <remarks/>
        VerifiedClosedWithPower,
        
        /// <remarks/>
        VerifiedOpen,
        
        /// <remarks/>
        NormalOrRestored,
        
        /// <remarks/>
        NoChange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageDurationEvent : mspObject {
        
        private string outageEventIDField;
        
        private string outageDescriptionField;
        
        private meterID meterIDField;
        
        private string serviceLocationIDField;
        
        private serviceID serviceIDField;
        
        private string accountNumberField;
        
        private System.DateTime timeOfInterruptionField;
        
        private bool timeOfInterruptionFieldSpecified;
        
        private System.DateTime timeRestoredField;
        
        private bool timeRestoredFieldSpecified;
        
        private string interruptionDurationField;
        
        private bool customerResponsibleField;
        
        private bool customerResponsibleFieldSpecified;
        
        private string durationDisplayField;
        
        /// <remarks/>
        public string outageEventID {
            get {
                return this.outageEventIDField;
            }
            set {
                this.outageEventIDField = value;
            }
        }
        
        /// <remarks/>
        public string outageDescription {
            get {
                return this.outageDescriptionField;
            }
            set {
                this.outageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfInterruption {
            get {
                return this.timeOfInterruptionField;
            }
            set {
                this.timeOfInterruptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfInterruptionSpecified {
            get {
                return this.timeOfInterruptionFieldSpecified;
            }
            set {
                this.timeOfInterruptionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeRestored {
            get {
                return this.timeRestoredField;
            }
            set {
                this.timeRestoredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeRestoredSpecified {
            get {
                return this.timeRestoredFieldSpecified;
            }
            set {
                this.timeRestoredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string interruptionDuration {
            get {
                return this.interruptionDurationField;
            }
            set {
                this.interruptionDurationField = value;
            }
        }
        
        /// <remarks/>
        public bool customerResponsible {
            get {
                return this.customerResponsibleField;
            }
            set {
                this.customerResponsibleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool customerResponsibleSpecified {
            get {
                return this.customerResponsibleFieldSpecified;
            }
            set {
                this.customerResponsibleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string durationDisplay {
            get {
                return this.durationDisplayField;
            }
            set {
                this.durationDisplayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageDetectionLog : mspObject {
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private loggedOutageDetectionEvent[] loggedODEventListField;
        
        private outageLocation outageLocationField;
        
        private message[] messageListField;
        
        private outageCustomer outageCustomerField;
        
        private priorityType priorityField;
        
        private bool priorityFieldSpecified;
        
        private resolvedLevel resolvedLevelField;
        
        private bool resolvedLevelFieldSpecified;
        
        private System.DateTime timeTroubleBeganField;
        
        private bool timeTroubleBeganFieldSpecified;
        
        private System.DateTime timeOfInitialEventField;
        
        private bool timeOfInitialEventFieldSpecified;
        
        private System.DateTime timeOfLastEventField;
        
        private bool timeOfLastEventFieldSpecified;
        
        private long eventsLoggedField;
        
        private bool eventsLoggedFieldSpecified;
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public loggedOutageDetectionEvent[] loggedODEventList {
            get {
                return this.loggedODEventListField;
            }
            set {
                this.loggedODEventListField = value;
            }
        }
        
        /// <remarks/>
        public outageLocation outageLocation {
            get {
                return this.outageLocationField;
            }
            set {
                this.outageLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public message[] messageList {
            get {
                return this.messageListField;
            }
            set {
                this.messageListField = value;
            }
        }
        
        /// <remarks/>
        public outageCustomer outageCustomer {
            get {
                return this.outageCustomerField;
            }
            set {
                this.outageCustomerField = value;
            }
        }
        
        /// <remarks/>
        public priorityType priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool prioritySpecified {
            get {
                return this.priorityFieldSpecified;
            }
            set {
                this.priorityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public resolvedLevel resolvedLevel {
            get {
                return this.resolvedLevelField;
            }
            set {
                this.resolvedLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resolvedLevelSpecified {
            get {
                return this.resolvedLevelFieldSpecified;
            }
            set {
                this.resolvedLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeTroubleBegan {
            get {
                return this.timeTroubleBeganField;
            }
            set {
                this.timeTroubleBeganField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeTroubleBeganSpecified {
            get {
                return this.timeTroubleBeganFieldSpecified;
            }
            set {
                this.timeTroubleBeganFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfInitialEvent {
            get {
                return this.timeOfInitialEventField;
            }
            set {
                this.timeOfInitialEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfInitialEventSpecified {
            get {
                return this.timeOfInitialEventFieldSpecified;
            }
            set {
                this.timeOfInitialEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeOfLastEvent {
            get {
                return this.timeOfLastEventField;
            }
            set {
                this.timeOfLastEventField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeOfLastEventSpecified {
            get {
                return this.timeOfLastEventFieldSpecified;
            }
            set {
                this.timeOfLastEventFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long eventsLogged {
            get {
                return this.eventsLoggedField;
            }
            set {
                this.eventsLoggedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventsLoggedSpecified {
            get {
                return this.eventsLoggedFieldSpecified;
            }
            set {
                this.eventsLoggedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loggedOutageDetectionEvent : mspObject {
        
        private string outageDetectionRecordIDField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string outageDetectDeviceIDField;
        
        private outageDetectDeviceType outageDetectDeviceTypeField;
        
        private bool outageDetectDeviceTypeFieldSpecified;
        
        private string problemCodeField;
        
        private outageEventType outageEventTypeField;
        
        private bool outageEventTypeFieldSpecified;
        
        private string takenByField;
        
        private callType callTypeField;
        
        private bool callTypeFieldSpecified;
        
        private string descriptionField;
        
        /// <remarks/>
        public string outageDetectionRecordID {
            get {
                return this.outageDetectionRecordIDField;
            }
            set {
                this.outageDetectionRecordIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string outageDetectDeviceID {
            get {
                return this.outageDetectDeviceIDField;
            }
            set {
                this.outageDetectDeviceIDField = value;
            }
        }
        
        /// <remarks/>
        public outageDetectDeviceType outageDetectDeviceType {
            get {
                return this.outageDetectDeviceTypeField;
            }
            set {
                this.outageDetectDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageDetectDeviceTypeSpecified {
            get {
                return this.outageDetectDeviceTypeFieldSpecified;
            }
            set {
                this.outageDetectDeviceTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string problemCode {
            get {
                return this.problemCodeField;
            }
            set {
                this.problemCodeField = value;
            }
        }
        
        /// <remarks/>
        public outageEventType outageEventType {
            get {
                return this.outageEventTypeField;
            }
            set {
                this.outageEventTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outageEventTypeSpecified {
            get {
                return this.outageEventTypeFieldSpecified;
            }
            set {
                this.outageEventTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string takenBy {
            get {
                return this.takenByField;
            }
            set {
                this.takenByField = value;
            }
        }
        
        /// <remarks/>
        public callType callType {
            get {
                return this.callTypeField;
            }
            set {
                this.callTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool callTypeSpecified {
            get {
                return this.callTypeFieldSpecified;
            }
            set {
                this.callTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ppmMeterExchange : mspObject {
        
        private string ppmLocationIDField;
        
        private meterReading outMeterReadField;
        
        private meterReading inMeterReadField;
        
        /// <remarks/>
        public string ppmLocationID {
            get {
                return this.ppmLocationIDField;
            }
            set {
                this.ppmLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public meterReading outMeterRead {
            get {
                return this.outMeterReadField;
            }
            set {
                this.outMeterReadField = value;
            }
        }
        
        /// <remarks/>
        public meterReading inMeterRead {
            get {
                return this.inMeterReadField;
            }
            set {
                this.inMeterReadField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class AVLLog : mspObject {
        
        private string vehicleIDField;
        
        private string aVLIDField;
        
        private AVLState[] aVLStateListField;
        
        /// <remarks/>
        public string vehicleID {
            get {
                return this.vehicleIDField;
            }
            set {
                this.vehicleIDField = value;
            }
        }
        
        /// <remarks/>
        public string AVLID {
            get {
                return this.aVLIDField;
            }
            set {
                this.aVLIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public AVLState[] AVLStateList {
            get {
                return this.aVLStateListField;
            }
            set {
                this.aVLStateListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class AVLState : mspObject {
        
        private System.DateTime gMTTimeField;
        
        private bool gMTTimeFieldSpecified;
        
        private string triggerEventField;
        
        private GPS gPSField;
        
        private AVLAddress aVLAddressField;
        
        private telemetry telemetryField;
        
        private GPSLocation gPSLocationField;
        
        /// <remarks/>
        public System.DateTime GMTTime {
            get {
                return this.gMTTimeField;
            }
            set {
                this.gMTTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GMTTimeSpecified {
            get {
                return this.gMTTimeFieldSpecified;
            }
            set {
                this.gMTTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string triggerEvent {
            get {
                return this.triggerEventField;
            }
            set {
                this.triggerEventField = value;
            }
        }
        
        /// <remarks/>
        public GPS GPS {
            get {
                return this.gPSField;
            }
            set {
                this.gPSField = value;
            }
        }
        
        /// <remarks/>
        public AVLAddress AVLAddress {
            get {
                return this.aVLAddressField;
            }
            set {
                this.aVLAddressField = value;
            }
        }
        
        /// <remarks/>
        public telemetry telemetry {
            get {
                return this.telemetryField;
            }
            set {
                this.telemetryField = value;
            }
        }
        
        /// <remarks/>
        public GPSLocation GPSLocation {
            get {
                return this.gPSLocationField;
            }
            set {
                this.gPSLocationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class AVLAddress {
        
        private string streetField;
        
        private string crossStreetField;
        
        private string cityField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        private string pOINameField;
        
        private string pOITypeField;
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string crossStreet {
            get {
                return this.crossStreetField;
            }
            set {
                this.crossStreetField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string POIName {
            get {
                return this.pOINameField;
            }
            set {
                this.pOINameField = value;
            }
        }
        
        /// <remarks/>
        public string POIType {
            get {
                return this.pOITypeField;
            }
            set {
                this.pOITypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class telemetry {
        
        private speed speedField;
        
        private float headingField;
        
        private bool headingFieldSpecified;
        
        private string cardinalHeadingField;
        
        private odometer odometerField;
        
        private speed maxVehSpeedLastReadingField;
        
        private string maxEngineSpeedLastReadingField;
        
        private ignitionState ignitionStateField;
        
        private bool ignitionStateFieldSpecified;
        
        private string gearShiftPositionField;
        
        private PTOState pTOStateField;
        
        private bool pTOStateFieldSpecified;
        
        private extensionsItem[] extensionsListField;
        
        /// <remarks/>
        public speed speed {
            get {
                return this.speedField;
            }
            set {
                this.speedField = value;
            }
        }
        
        /// <remarks/>
        public float heading {
            get {
                return this.headingField;
            }
            set {
                this.headingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool headingSpecified {
            get {
                return this.headingFieldSpecified;
            }
            set {
                this.headingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string cardinalHeading {
            get {
                return this.cardinalHeadingField;
            }
            set {
                this.cardinalHeadingField = value;
            }
        }
        
        /// <remarks/>
        public odometer odometer {
            get {
                return this.odometerField;
            }
            set {
                this.odometerField = value;
            }
        }
        
        /// <remarks/>
        public speed maxVehSpeedLastReading {
            get {
                return this.maxVehSpeedLastReadingField;
            }
            set {
                this.maxVehSpeedLastReadingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="positiveInteger")]
        public string maxEngineSpeedLastReading {
            get {
                return this.maxEngineSpeedLastReadingField;
            }
            set {
                this.maxEngineSpeedLastReadingField = value;
            }
        }
        
        /// <remarks/>
        public ignitionState ignitionState {
            get {
                return this.ignitionStateField;
            }
            set {
                this.ignitionStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ignitionStateSpecified {
            get {
                return this.ignitionStateFieldSpecified;
            }
            set {
                this.ignitionStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string gearShiftPosition {
            get {
                return this.gearShiftPositionField;
            }
            set {
                this.gearShiftPositionField = value;
            }
        }
        
        /// <remarks/>
        public PTOState PTOState {
            get {
                return this.pTOStateField;
            }
            set {
                this.pTOStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PTOStateSpecified {
            get {
                return this.pTOStateFieldSpecified;
            }
            set {
                this.pTOStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public extensionsItem[] extensionsList {
            get {
                return this.extensionsListField;
            }
            set {
                this.extensionsListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class odometer {
        
        private lengthUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lengthUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum ignitionState {
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum PTOState {
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(sectionalizerEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(synchronousMachineEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ZsmImpedanceEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadMixEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(transformerEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(switchEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(regulatorEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(recloserEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(fuseEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(breakerEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lineEnvironmentalAttributes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(materialAttributes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(serviceDropEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(secondaryConductorEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(lineConstructionEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(tapeShieldCableEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(concentricNeutralCableEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(conductorEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inductionMachineEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ROWAttributes))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspElectricalDefinition : mspObject {
        
        private string entryNameField;
        
        private equipmentType equipmentTypeField;
        
        private bool equipmentTypeFieldSpecified;
        
        /// <remarks/>
        public string entryName {
            get {
                return this.entryNameField;
            }
            set {
                this.entryNameField = value;
            }
        }
        
        /// <remarks/>
        public equipmentType equipmentType {
            get {
                return this.equipmentTypeField;
            }
            set {
                this.equipmentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool equipmentTypeSpecified {
            get {
                return this.equipmentTypeFieldSpecified;
            }
            set {
                this.equipmentTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class sectionalizerEntry : mspElectricalDefinition {
        
        private voltage ratedVoltageField;
        
        private apparentPower ratedPowerField;
        
        private current ratedCurrentField;
        
        private voltage bilField;
        
        private frequency frequencyField;
        
        private string numberPhasesField;
        
        private bool isGangedField;
        
        private bool isGangedFieldSpecified;
        
        private string maximumCountsField;
        
        private bool isLoadBreakField;
        
        private bool isLoadBreakFieldSpecified;
        
        private duration resetTimeField;
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedPower {
            get {
                return this.ratedPowerField;
            }
            set {
                this.ratedPowerField = value;
            }
        }
        
        /// <remarks/>
        public current ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        public voltage bil {
            get {
                return this.bilField;
            }
            set {
                this.bilField = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberPhases {
            get {
                return this.numberPhasesField;
            }
            set {
                this.numberPhasesField = value;
            }
        }
        
        /// <remarks/>
        public bool isGanged {
            get {
                return this.isGangedField;
            }
            set {
                this.isGangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGangedSpecified {
            get {
                return this.isGangedFieldSpecified;
            }
            set {
                this.isGangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string maximumCounts {
            get {
                return this.maximumCountsField;
            }
            set {
                this.maximumCountsField = value;
            }
        }
        
        /// <remarks/>
        public bool isLoadBreak {
            get {
                return this.isLoadBreakField;
            }
            set {
                this.isLoadBreakField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isLoadBreakSpecified {
            get {
                return this.isLoadBreakFieldSpecified;
            }
            set {
                this.isLoadBreakFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration resetTime {
            get {
                return this.resetTimeField;
            }
            set {
                this.resetTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class synchronousMachineEntry : mspElectricalDefinition {
        
        private voltage ratedVoltageField;
        
        private eaEquipID ssImpedanceIDField;
        
        private eaEquipID tranImpedanceIDField;
        
        private eaEquipID stImpedanceIDField;
        
        private reactivePower maxLeadQField;
        
        private reactivePower maxLagQField;
        
        private voltage maximumVoltageField;
        
        private voltage minimumVoltageField;
        
        private reactivePower maxQField;
        
        private reactivePower minQField;
        
        private apparentPower ratedMVAField;
        
        private synchronousMachineImpedances impedancesField;
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID ssImpedanceID {
            get {
                return this.ssImpedanceIDField;
            }
            set {
                this.ssImpedanceIDField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID tranImpedanceID {
            get {
                return this.tranImpedanceIDField;
            }
            set {
                this.tranImpedanceIDField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID stImpedanceID {
            get {
                return this.stImpedanceIDField;
            }
            set {
                this.stImpedanceIDField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower maxLeadQ {
            get {
                return this.maxLeadQField;
            }
            set {
                this.maxLeadQField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower maxLagQ {
            get {
                return this.maxLagQField;
            }
            set {
                this.maxLagQField = value;
            }
        }
        
        /// <remarks/>
        public voltage maximumVoltage {
            get {
                return this.maximumVoltageField;
            }
            set {
                this.maximumVoltageField = value;
            }
        }
        
        /// <remarks/>
        public voltage minimumVoltage {
            get {
                return this.minimumVoltageField;
            }
            set {
                this.minimumVoltageField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower maxQ {
            get {
                return this.maxQField;
            }
            set {
                this.maxQField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower minQ {
            get {
                return this.minQField;
            }
            set {
                this.minQField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedMVA {
            get {
                return this.ratedMVAField;
            }
            set {
                this.ratedMVAField = value;
            }
        }
        
        /// <remarks/>
        public synchronousMachineImpedances impedances {
            get {
                return this.impedancesField;
            }
            set {
                this.impedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ZsmImpedanceEntry : mspElectricalDefinition {
        
        private apparentPower basePowerField;
        
        private voltage baseVoltageField;
        
        private complexImpedanceWithLeakage selfImpedanceField;
        
        private complexImpedanceWithLeakage mutualForwardImpedanceField;
        
        private complexImpedanceWithLeakage mutualReverseImpedanceField;
        
        private complexImpedance positiveSequenceZField;
        
        private complexImpedance negativeSequenceZField;
        
        private complexImpedance zeroSequenceZField;
        
        /// <remarks/>
        public apparentPower basePower {
            get {
                return this.basePowerField;
            }
            set {
                this.basePowerField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltage {
            get {
                return this.baseVoltageField;
            }
            set {
                this.baseVoltageField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedanceWithLeakage selfImpedance {
            get {
                return this.selfImpedanceField;
            }
            set {
                this.selfImpedanceField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedanceWithLeakage mutualForwardImpedance {
            get {
                return this.mutualForwardImpedanceField;
            }
            set {
                this.mutualForwardImpedanceField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedanceWithLeakage mutualReverseImpedance {
            get {
                return this.mutualReverseImpedanceField;
            }
            set {
                this.mutualReverseImpedanceField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance positiveSequenceZ {
            get {
                return this.positiveSequenceZField;
            }
            set {
                this.positiveSequenceZField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance negativeSequenceZ {
            get {
                return this.negativeSequenceZField;
            }
            set {
                this.negativeSequenceZField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance zeroSequenceZ {
            get {
                return this.zeroSequenceZField;
            }
            set {
                this.zeroSequenceZField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class complexImpedanceWithLeakage {
        
        private string rField;
        
        private string xField;
        
        private string bField;
        
        private string unitsField;
        
        /// <remarks/>
        public string r {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
            }
        }
        
        /// <remarks/>
        public string x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
            }
        }
        
        /// <remarks/>
        public string b {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadMixEntry : mspElectricalDefinition {
        
        private float constantPowerField;
        
        private bool constantPowerFieldSpecified;
        
        private float constantImpedanceField;
        
        private bool constantImpedanceFieldSpecified;
        
        private float constantCurrentField;
        
        private bool constantCurrentFieldSpecified;
        
        private ldConnection connectionField;
        
        private bool connectionFieldSpecified;
        
        private bool conformingLoadFlagField;
        
        private bool conformingLoadFlagFieldSpecified;
        
        private float powerFactorField;
        
        private bool powerFactorFieldSpecified;
        
        private float pFrequencyExponentField;
        
        private bool pFrequencyExponentFieldSpecified;
        
        private float pVoltageExponentField;
        
        private bool pVoltageExponentFieldSpecified;
        
        private float qFrequencyExponentField;
        
        private bool qFrequencyExponentFieldSpecified;
        
        private float qVoltageExponentField;
        
        private bool qVoltageExponentFieldSpecified;
        
        private CIMLoadCharacteristics cIMLoadCharacteristicsField;
        
        /// <remarks/>
        public float constantPower {
            get {
                return this.constantPowerField;
            }
            set {
                this.constantPowerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constantPowerSpecified {
            get {
                return this.constantPowerFieldSpecified;
            }
            set {
                this.constantPowerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float constantImpedance {
            get {
                return this.constantImpedanceField;
            }
            set {
                this.constantImpedanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constantImpedanceSpecified {
            get {
                return this.constantImpedanceFieldSpecified;
            }
            set {
                this.constantImpedanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float constantCurrent {
            get {
                return this.constantCurrentField;
            }
            set {
                this.constantCurrentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool constantCurrentSpecified {
            get {
                return this.constantCurrentFieldSpecified;
            }
            set {
                this.constantCurrentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ldConnection connection {
            get {
                return this.connectionField;
            }
            set {
                this.connectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool connectionSpecified {
            get {
                return this.connectionFieldSpecified;
            }
            set {
                this.connectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool conformingLoadFlag {
            get {
                return this.conformingLoadFlagField;
            }
            set {
                this.conformingLoadFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool conformingLoadFlagSpecified {
            get {
                return this.conformingLoadFlagFieldSpecified;
            }
            set {
                this.conformingLoadFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float powerFactor {
            get {
                return this.powerFactorField;
            }
            set {
                this.powerFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool powerFactorSpecified {
            get {
                return this.powerFactorFieldSpecified;
            }
            set {
                this.powerFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pFrequencyExponent {
            get {
                return this.pFrequencyExponentField;
            }
            set {
                this.pFrequencyExponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pFrequencyExponentSpecified {
            get {
                return this.pFrequencyExponentFieldSpecified;
            }
            set {
                this.pFrequencyExponentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pVoltageExponent {
            get {
                return this.pVoltageExponentField;
            }
            set {
                this.pVoltageExponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pVoltageExponentSpecified {
            get {
                return this.pVoltageExponentFieldSpecified;
            }
            set {
                this.pVoltageExponentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float qFrequencyExponent {
            get {
                return this.qFrequencyExponentField;
            }
            set {
                this.qFrequencyExponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qFrequencyExponentSpecified {
            get {
                return this.qFrequencyExponentFieldSpecified;
            }
            set {
                this.qFrequencyExponentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float qVoltageExponent {
            get {
                return this.qVoltageExponentField;
            }
            set {
                this.qVoltageExponentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool qVoltageExponentSpecified {
            get {
                return this.qVoltageExponentFieldSpecified;
            }
            set {
                this.qVoltageExponentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public CIMLoadCharacteristics CIMLoadCharacteristics {
            get {
                return this.cIMLoadCharacteristicsField;
            }
            set {
                this.cIMLoadCharacteristicsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum ldConnection {
        
        /// <remarks/>
        Wye,
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Center tap")]
        Centertap,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CIMLoadCharacteristics {
        
        private ConformLoadSchedule conformLoadScheduleField;
        
        private NonConformLoadSchedule nonConformLoadScheduleField;
        
        private PerCent feederLoadMgtFactorField;
        
        private PerCent mVArColdPickUpFactorField;
        
        private PerCent mWColdPickUpFactorField;
        
        private float loadAllocationFactorField;
        
        private bool loadAllocationFactorFieldSpecified;
        
        private string subLoadAreaIDField;
        
        /// <remarks/>
        public ConformLoadSchedule conformLoadSchedule {
            get {
                return this.conformLoadScheduleField;
            }
            set {
                this.conformLoadScheduleField = value;
            }
        }
        
        /// <remarks/>
        public NonConformLoadSchedule nonConformLoadSchedule {
            get {
                return this.nonConformLoadScheduleField;
            }
            set {
                this.nonConformLoadScheduleField = value;
            }
        }
        
        /// <remarks/>
        public PerCent feederLoadMgtFactor {
            get {
                return this.feederLoadMgtFactorField;
            }
            set {
                this.feederLoadMgtFactorField = value;
            }
        }
        
        /// <remarks/>
        public PerCent mVArColdPickUpFactor {
            get {
                return this.mVArColdPickUpFactorField;
            }
            set {
                this.mVArColdPickUpFactorField = value;
            }
        }
        
        /// <remarks/>
        public PerCent mWColdPickUpFactor {
            get {
                return this.mWColdPickUpFactorField;
            }
            set {
                this.mWColdPickUpFactorField = value;
            }
        }
        
        /// <remarks/>
        public float loadAllocationFactor {
            get {
                return this.loadAllocationFactorField;
            }
            set {
                this.loadAllocationFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadAllocationFactorSpecified {
            get {
                return this.loadAllocationFactorFieldSpecified;
            }
            set {
                this.loadAllocationFactorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string subLoadAreaID {
            get {
                return this.subLoadAreaIDField;
            }
            set {
                this.subLoadAreaIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class transformerEntry : mspElectricalDefinition {
        
        private realPower noLoadLossField;
        
        private winding[] windingAttributesField;
        
        private windingPair[] windingPairAttributesField;
        
        /// <remarks/>
        public realPower noLoadLoss {
            get {
                return this.noLoadLossField;
            }
            set {
                this.noLoadLossField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public winding[] windingAttributes {
            get {
                return this.windingAttributesField;
            }
            set {
                this.windingAttributesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public windingPair[] windingPairAttributes {
            get {
                return this.windingPairAttributesField;
            }
            set {
                this.windingPairAttributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class winding {
        
        private string windingNumberField;
        
        private voltage ratedVoltageField;
        
        private apparentPower ratedPowerField;
        
        private apparentPower emergencyRatingField;
        
        private voltage insulationBILField;
        
        private windingConnection windingConnectionField;
        
        private bool windingConnectionFieldSpecified;
        
        private clockPosition phaseShiftField;
        
        private bool phaseShiftFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string windingNumber {
            get {
                return this.windingNumberField;
            }
            set {
                this.windingNumberField = value;
            }
        }
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedPower {
            get {
                return this.ratedPowerField;
            }
            set {
                this.ratedPowerField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower emergencyRating {
            get {
                return this.emergencyRatingField;
            }
            set {
                this.emergencyRatingField = value;
            }
        }
        
        /// <remarks/>
        public voltage insulationBIL {
            get {
                return this.insulationBILField;
            }
            set {
                this.insulationBILField = value;
            }
        }
        
        /// <remarks/>
        public windingConnection windingConnection {
            get {
                return this.windingConnectionField;
            }
            set {
                this.windingConnectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool windingConnectionSpecified {
            get {
                return this.windingConnectionFieldSpecified;
            }
            set {
                this.windingConnectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public clockPosition phaseShift {
            get {
                return this.phaseShiftField;
            }
            set {
                this.phaseShiftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseShiftSpecified {
            get {
                return this.phaseShiftFieldSpecified;
            }
            set {
                this.phaseShiftFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum windingConnection {
        
        /// <remarks/>
        Delta,
        
        /// <remarks/>
        Wye,
        
        /// <remarks/>
        Zigzag,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Center tap")]
        Centertap,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum clockPosition {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class windingPair {
        
        private string firstWindingNumberField;
        
        private string secondWindingNumberField;
        
        private realPower loadLossField;
        
        private complexImpedance positiveSeqImpedanceField;
        
        private complexImpedance zeroSeqImpedanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string firstWindingNumber {
            get {
                return this.firstWindingNumberField;
            }
            set {
                this.firstWindingNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string secondWindingNumber {
            get {
                return this.secondWindingNumberField;
            }
            set {
                this.secondWindingNumberField = value;
            }
        }
        
        /// <remarks/>
        public realPower loadLoss {
            get {
                return this.loadLossField;
            }
            set {
                this.loadLossField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance positiveSeqImpedance {
            get {
                return this.positiveSeqImpedanceField;
            }
            set {
                this.positiveSeqImpedanceField = value;
            }
        }
        
        /// <remarks/>
        public complexImpedance zeroSeqImpedance {
            get {
                return this.zeroSeqImpedanceField;
            }
            set {
                this.zeroSeqImpedanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class switchEntry : mspElectricalDefinition {
        
        private voltage ratedVoltageField;
        
        private apparentPower ratedPowerField;
        
        private current ratedCurrentField;
        
        private voltage bilField;
        
        private frequency frequencyField;
        
        private string numberPhasesField;
        
        private bool isGangedField;
        
        private bool isGangedFieldSpecified;
        
        private bool isRemotelyOperableField;
        
        private bool isRemotelyOperableFieldSpecified;
        
        private current interruptingRatingField;
        
        private bool isLoadBreakField;
        
        private bool isLoadBreakFieldSpecified;
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedPower {
            get {
                return this.ratedPowerField;
            }
            set {
                this.ratedPowerField = value;
            }
        }
        
        /// <remarks/>
        public current ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        public voltage bil {
            get {
                return this.bilField;
            }
            set {
                this.bilField = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberPhases {
            get {
                return this.numberPhasesField;
            }
            set {
                this.numberPhasesField = value;
            }
        }
        
        /// <remarks/>
        public bool isGanged {
            get {
                return this.isGangedField;
            }
            set {
                this.isGangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGangedSpecified {
            get {
                return this.isGangedFieldSpecified;
            }
            set {
                this.isGangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRemotelyOperable {
            get {
                return this.isRemotelyOperableField;
            }
            set {
                this.isRemotelyOperableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRemotelyOperableSpecified {
            get {
                return this.isRemotelyOperableFieldSpecified;
            }
            set {
                this.isRemotelyOperableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public current interruptingRating {
            get {
                return this.interruptingRatingField;
            }
            set {
                this.interruptingRatingField = value;
            }
        }
        
        /// <remarks/>
        public bool isLoadBreak {
            get {
                return this.isLoadBreakField;
            }
            set {
                this.isLoadBreakField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isLoadBreakSpecified {
            get {
                return this.isLoadBreakFieldSpecified;
            }
            set {
                this.isLoadBreakFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class regulatorEntry : mspElectricalDefinition {
        
        private voltage ratedVoltageField;
        
        private apparentPower ratedPowerField;
        
        private current ampacityField;
        
        private voltage bilField;
        
        private string numberOfStepsField;
        
        private float stepVoltageIncrementField;
        
        private bool stepVoltageIncrementFieldSpecified;
        
        private double ptRatioField;
        
        private bool ptRatioFieldSpecified;
        
        private current ctRatingField;
        
        private regulatorWindingType windingTypeField;
        
        private bool windingTypeFieldSpecified;
        
        private frequency frequencyField;
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedPower {
            get {
                return this.ratedPowerField;
            }
            set {
                this.ratedPowerField = value;
            }
        }
        
        /// <remarks/>
        public current ampacity {
            get {
                return this.ampacityField;
            }
            set {
                this.ampacityField = value;
            }
        }
        
        /// <remarks/>
        public voltage bil {
            get {
                return this.bilField;
            }
            set {
                this.bilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberOfSteps {
            get {
                return this.numberOfStepsField;
            }
            set {
                this.numberOfStepsField = value;
            }
        }
        
        /// <remarks/>
        public float stepVoltageIncrement {
            get {
                return this.stepVoltageIncrementField;
            }
            set {
                this.stepVoltageIncrementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool stepVoltageIncrementSpecified {
            get {
                return this.stepVoltageIncrementFieldSpecified;
            }
            set {
                this.stepVoltageIncrementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ptRatio {
            get {
                return this.ptRatioField;
            }
            set {
                this.ptRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ptRatioSpecified {
            get {
                return this.ptRatioFieldSpecified;
            }
            set {
                this.ptRatioFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public current ctRating {
            get {
                return this.ctRatingField;
            }
            set {
                this.ctRatingField = value;
            }
        }
        
        /// <remarks/>
        public regulatorWindingType windingType {
            get {
                return this.windingTypeField;
            }
            set {
                this.windingTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool windingTypeSpecified {
            get {
                return this.windingTypeFieldSpecified;
            }
            set {
                this.windingTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum regulatorWindingType {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class recloserEntry : mspElectricalDefinition {
        
        private voltage ratedVoltageField;
        
        private apparentPower ratedPowerField;
        
        private current ratedCurrentField;
        
        private voltage bilField;
        
        private frequency frequencyField;
        
        private string numberPhasesField;
        
        private bool isGangedField;
        
        private bool isGangedFieldSpecified;
        
        private bool isRemotelyOperableField;
        
        private bool isRemotelyOperableFieldSpecified;
        
        private bool isLoadBreakField;
        
        private bool isLoadBreakFieldSpecified;
        
        private current interruptingRatingField;
        
        private current phaseTripField;
        
        private string numRecloseLockoutField;
        
        private bool isGroundTripCapableField;
        
        private bool isGroundTripCapableFieldSpecified;
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedPower {
            get {
                return this.ratedPowerField;
            }
            set {
                this.ratedPowerField = value;
            }
        }
        
        /// <remarks/>
        public current ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        public voltage bil {
            get {
                return this.bilField;
            }
            set {
                this.bilField = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberPhases {
            get {
                return this.numberPhasesField;
            }
            set {
                this.numberPhasesField = value;
            }
        }
        
        /// <remarks/>
        public bool isGanged {
            get {
                return this.isGangedField;
            }
            set {
                this.isGangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGangedSpecified {
            get {
                return this.isGangedFieldSpecified;
            }
            set {
                this.isGangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isRemotelyOperable {
            get {
                return this.isRemotelyOperableField;
            }
            set {
                this.isRemotelyOperableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isRemotelyOperableSpecified {
            get {
                return this.isRemotelyOperableFieldSpecified;
            }
            set {
                this.isRemotelyOperableFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isLoadBreak {
            get {
                return this.isLoadBreakField;
            }
            set {
                this.isLoadBreakField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isLoadBreakSpecified {
            get {
                return this.isLoadBreakFieldSpecified;
            }
            set {
                this.isLoadBreakFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public current interruptingRating {
            get {
                return this.interruptingRatingField;
            }
            set {
                this.interruptingRatingField = value;
            }
        }
        
        /// <remarks/>
        public current phaseTrip {
            get {
                return this.phaseTripField;
            }
            set {
                this.phaseTripField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numRecloseLockout {
            get {
                return this.numRecloseLockoutField;
            }
            set {
                this.numRecloseLockoutField = value;
            }
        }
        
        /// <remarks/>
        public bool isGroundTripCapable {
            get {
                return this.isGroundTripCapableField;
            }
            set {
                this.isGroundTripCapableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGroundTripCapableSpecified {
            get {
                return this.isGroundTripCapableFieldSpecified;
            }
            set {
                this.isGroundTripCapableFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class fuseEntry : mspElectricalDefinition {
        
        private voltage ratedVoltageField;
        
        private current ratedCurrentField;
        
        private voltage bilField;
        
        private current linkRtgField;
        
        private string fuseSpeedField;
        
        private frequency frequencyField;
        
        private string numberPhasesField;
        
        private bool isGangedField;
        
        private bool isGangedFieldSpecified;
        
        private current interruptingRatingField;
        
        private bool isLoadBreakField;
        
        private bool isLoadBreakFieldSpecified;
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public current ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        public voltage bil {
            get {
                return this.bilField;
            }
            set {
                this.bilField = value;
            }
        }
        
        /// <remarks/>
        public current linkRtg {
            get {
                return this.linkRtgField;
            }
            set {
                this.linkRtgField = value;
            }
        }
        
        /// <remarks/>
        public string fuseSpeed {
            get {
                return this.fuseSpeedField;
            }
            set {
                this.fuseSpeedField = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberPhases {
            get {
                return this.numberPhasesField;
            }
            set {
                this.numberPhasesField = value;
            }
        }
        
        /// <remarks/>
        public bool isGanged {
            get {
                return this.isGangedField;
            }
            set {
                this.isGangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGangedSpecified {
            get {
                return this.isGangedFieldSpecified;
            }
            set {
                this.isGangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public current interruptingRating {
            get {
                return this.interruptingRatingField;
            }
            set {
                this.interruptingRatingField = value;
            }
        }
        
        /// <remarks/>
        public bool isLoadBreak {
            get {
                return this.isLoadBreakField;
            }
            set {
                this.isLoadBreakField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isLoadBreakSpecified {
            get {
                return this.isLoadBreakFieldSpecified;
            }
            set {
                this.isLoadBreakFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class breakerEntry : mspElectricalDefinition {
        
        private voltage ratedVoltageField;
        
        private apparentPower ratedPowerField;
        
        private current ratedCurrentField;
        
        private voltage bilField;
        
        private frequency frequencyField;
        
        private string numberPhasesField;
        
        private bool isGangedField;
        
        private bool isGangedFieldSpecified;
        
        private current interruptingRatingField;
        
        private seconds inTransitTimeField;
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower ratedPower {
            get {
                return this.ratedPowerField;
            }
            set {
                this.ratedPowerField = value;
            }
        }
        
        /// <remarks/>
        public current ratedCurrent {
            get {
                return this.ratedCurrentField;
            }
            set {
                this.ratedCurrentField = value;
            }
        }
        
        /// <remarks/>
        public voltage bil {
            get {
                return this.bilField;
            }
            set {
                this.bilField = value;
            }
        }
        
        /// <remarks/>
        public frequency frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberPhases {
            get {
                return this.numberPhasesField;
            }
            set {
                this.numberPhasesField = value;
            }
        }
        
        /// <remarks/>
        public bool isGanged {
            get {
                return this.isGangedField;
            }
            set {
                this.isGangedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isGangedSpecified {
            get {
                return this.isGangedFieldSpecified;
            }
            set {
                this.isGangedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public current interruptingRating {
            get {
                return this.interruptingRatingField;
            }
            set {
                this.interruptingRatingField = value;
            }
        }
        
        /// <remarks/>
        public seconds inTransitTime {
            get {
                return this.inTransitTimeField;
            }
            set {
                this.inTransitTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class lineEnvironmentalAttributes : mspElectricalDefinition {
        
        private resistivity soilResistivityField;
        
        private resistance defaultPoleGroundResistanceField;
        
        private temperature temperatureField;
        
        private string groundSpacingField;
        
        private length spanLengthField;
        
        /// <remarks/>
        public resistivity soilResistivity {
            get {
                return this.soilResistivityField;
            }
            set {
                this.soilResistivityField = value;
            }
        }
        
        /// <remarks/>
        public resistance defaultPoleGroundResistance {
            get {
                return this.defaultPoleGroundResistanceField;
            }
            set {
                this.defaultPoleGroundResistanceField = value;
            }
        }
        
        /// <remarks/>
        public temperature temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string groundSpacing {
            get {
                return this.groundSpacingField;
            }
            set {
                this.groundSpacingField = value;
            }
        }
        
        /// <remarks/>
        public length spanLength {
            get {
                return this.spanLengthField;
            }
            set {
                this.spanLengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class resistivity {
        
        private resistivityUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public resistivityUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum resistivityUnits {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ohm-meter")]
        Ohmmeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ohm-inch")]
        Ohminch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Ohm-centimeter")]
        Ohmcentimeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Microohm-centimeter")]
        Microohmcentimeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Microohm-inch")]
        Microohminch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Statohm-centimeter")]
        Statohmcentimeter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Abohm-centimetercircular")]
        Abohmcentimetercircular,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Circular mil ohm/foot")]
        Circularmilohmfoot,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class materialAttributes : mspElectricalDefinition {
        
        private resistivity resistivityField;
        
        private thermalCoefficientOfResistance mField;
        
        private float dielectricConstantField;
        
        private bool dielectricConstantFieldSpecified;
        
        private float relativePermeabilityField;
        
        private bool relativePermeabilityFieldSpecified;
        
        /// <remarks/>
        public resistivity resistivity {
            get {
                return this.resistivityField;
            }
            set {
                this.resistivityField = value;
            }
        }
        
        /// <remarks/>
        public thermalCoefficientOfResistance m {
            get {
                return this.mField;
            }
            set {
                this.mField = value;
            }
        }
        
        /// <remarks/>
        public float dielectricConstant {
            get {
                return this.dielectricConstantField;
            }
            set {
                this.dielectricConstantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dielectricConstantSpecified {
            get {
                return this.dielectricConstantFieldSpecified;
            }
            set {
                this.dielectricConstantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float relativePermeability {
            get {
                return this.relativePermeabilityField;
            }
            set {
                this.relativePermeabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool relativePermeabilitySpecified {
            get {
                return this.relativePermeabilityFieldSpecified;
            }
            set {
                this.relativePermeabilityFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thermalCoefficientOfResistance {
        
        private thermalCoefficientOfResistanceUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public thermalCoefficientOfResistanceUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum thermalCoefficientOfResistanceUnits {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Reciprocal degrees C")]
        ReciprocaldegreesC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Reciprocal degrees K")]
        ReciprocaldegreesK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Reciprocal degrees F")]
        ReciprocaldegreesF,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class serviceDropEntry : mspElectricalDefinition {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class secondaryConductorEntry : mspElectricalDefinition {
        
        private string numberPhaseConductorsField;
        
        private eaEquipID conductorMaterialField;
        
        private conductorSize phaseSizeField;
        
        private string phaseStrandingField;
        
        private thickness insulationThicknessField;
        
        private eaEquipID insulatorMaterialField;
        
        private eaEquipID neutralMaterialField;
        
        private conductorSize neutralSizeField;
        
        private string neutralStrandingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string numberPhaseConductors {
            get {
                return this.numberPhaseConductorsField;
            }
            set {
                this.numberPhaseConductorsField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID conductorMaterial {
            get {
                return this.conductorMaterialField;
            }
            set {
                this.conductorMaterialField = value;
            }
        }
        
        /// <remarks/>
        public conductorSize phaseSize {
            get {
                return this.phaseSizeField;
            }
            set {
                this.phaseSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string phaseStranding {
            get {
                return this.phaseStrandingField;
            }
            set {
                this.phaseStrandingField = value;
            }
        }
        
        /// <remarks/>
        public thickness insulationThickness {
            get {
                return this.insulationThicknessField;
            }
            set {
                this.insulationThicknessField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID insulatorMaterial {
            get {
                return this.insulatorMaterialField;
            }
            set {
                this.insulatorMaterialField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID neutralMaterial {
            get {
                return this.neutralMaterialField;
            }
            set {
                this.neutralMaterialField = value;
            }
        }
        
        /// <remarks/>
        public conductorSize neutralSize {
            get {
                return this.neutralSizeField;
            }
            set {
                this.neutralSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string neutralStranding {
            get {
                return this.neutralStrandingField;
            }
            set {
                this.neutralStrandingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class conductorSize {
        
        private sizeUnits sizeUnitsField;
        
        private bool sizeUnitsFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public sizeUnits sizeUnits {
            get {
                return this.sizeUnitsField;
            }
            set {
                this.sizeUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sizeUnitsSpecified {
            get {
                return this.sizeUnitsFieldSpecified;
            }
            set {
                this.sizeUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum sizeUnits {
        
        /// <remarks/>
        AWG,
        
        /// <remarks/>
        kcmil,
        
        /// <remarks/>
        MCM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("square mm")]
        squaremm,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thickness {
        
        private thicknessUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public thicknessUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum thicknessUnits {
        
        /// <remarks/>
        Mils,
        
        /// <remarks/>
        Inches,
        
        /// <remarks/>
        Micrometers,
        
        /// <remarks/>
        Millimeters,
        
        /// <remarks/>
        Centimeters,
        
        /// <remarks/>
        Microns,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class lineConstructionEntry : mspElectricalDefinition {
        
        private lineConstructionEntryType typeField;
        
        private bool typeFieldSpecified;
        
        private voltage maximumVoltageField;
        
        private conductorItem[] conductorListField;
        
        private conductorItem[] neutralConductorListField;
        
        private string downleadConductorIDField;
        
        private length downleadLengthField;
        
        private resistance groundResistanceField;
        
        /// <remarks/>
        public lineConstructionEntryType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage maximumVoltage {
            get {
                return this.maximumVoltageField;
            }
            set {
                this.maximumVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public conductorItem[] conductorList {
            get {
                return this.conductorListField;
            }
            set {
                this.conductorListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public conductorItem[] neutralConductorList {
            get {
                return this.neutralConductorListField;
            }
            set {
                this.neutralConductorListField = value;
            }
        }
        
        /// <remarks/>
        public string downleadConductorID {
            get {
                return this.downleadConductorIDField;
            }
            set {
                this.downleadConductorIDField = value;
            }
        }
        
        /// <remarks/>
        public length downleadLength {
            get {
                return this.downleadLengthField;
            }
            set {
                this.downleadLengthField = value;
            }
        }
        
        /// <remarks/>
        public resistance groundResistance {
            get {
                return this.groundResistanceField;
            }
            set {
                this.groundResistanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum lineConstructionEntryType {
        
        /// <remarks/>
        OH,
        
        /// <remarks/>
        CN,
        
        /// <remarks/>
        TS,
        
        /// <remarks/>
        Secondary,
        
        /// <remarks/>
        ServiceDrop,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class conductorItem {
        
        private string positionNumberField;
        
        private length hCoordinateField;
        
        private length vCoordinateField;
        
        private string bundleCountField;
        
        private length bundleSeparationField;
        
        /// <remarks/>
        public string positionNumber {
            get {
                return this.positionNumberField;
            }
            set {
                this.positionNumberField = value;
            }
        }
        
        /// <remarks/>
        public length hCoordinate {
            get {
                return this.hCoordinateField;
            }
            set {
                this.hCoordinateField = value;
            }
        }
        
        /// <remarks/>
        public length vCoordinate {
            get {
                return this.vCoordinateField;
            }
            set {
                this.vCoordinateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string bundleCount {
            get {
                return this.bundleCountField;
            }
            set {
                this.bundleCountField = value;
            }
        }
        
        /// <remarks/>
        public length bundleSeparation {
            get {
                return this.bundleSeparationField;
            }
            set {
                this.bundleSeparationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class tapeShieldCableEntry : mspElectricalDefinition {
        
        private conductorSize conductorSizeField;
        
        private current ampacityField;
        
        private string coreStrandingField;
        
        private eaEquipID coreMaterialField;
        
        private length phaseGMRField;
        
        private eaEquipID insulationMaterialField;
        
        private thickness insulationThicknessField;
        
        private eaEquipID shieldMaterialField;
        
        private thickness oDInsulationField;
        
        private thickness oDScreenField;
        
        private thickness oDCoreField;
        
        private thickness tapeThicknessField;
        
        private float lapField;
        
        private bool lapFieldSpecified;
        
        private bool isJacketedField;
        
        private bool isJacketedFieldSpecified;
        
        private thickness oDJacketField;
        
        private resistancePerUnitLength rACField;
        
        private capacitancePerUnitLength capacitanceField;
        
        private float coefficientOfFrictionField;
        
        private bool coefficientOfFrictionFieldSpecified;
        
        private weightPerLength weightPerLengthField;
        
        private length minimumBendingRadiusField;
        
        private weight maximumPullingTensionField;
        
        /// <remarks/>
        public conductorSize conductorSize {
            get {
                return this.conductorSizeField;
            }
            set {
                this.conductorSizeField = value;
            }
        }
        
        /// <remarks/>
        public current ampacity {
            get {
                return this.ampacityField;
            }
            set {
                this.ampacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string coreStranding {
            get {
                return this.coreStrandingField;
            }
            set {
                this.coreStrandingField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID coreMaterial {
            get {
                return this.coreMaterialField;
            }
            set {
                this.coreMaterialField = value;
            }
        }
        
        /// <remarks/>
        public length phaseGMR {
            get {
                return this.phaseGMRField;
            }
            set {
                this.phaseGMRField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID insulationMaterial {
            get {
                return this.insulationMaterialField;
            }
            set {
                this.insulationMaterialField = value;
            }
        }
        
        /// <remarks/>
        public thickness insulationThickness {
            get {
                return this.insulationThicknessField;
            }
            set {
                this.insulationThicknessField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID shieldMaterial {
            get {
                return this.shieldMaterialField;
            }
            set {
                this.shieldMaterialField = value;
            }
        }
        
        /// <remarks/>
        public thickness ODInsulation {
            get {
                return this.oDInsulationField;
            }
            set {
                this.oDInsulationField = value;
            }
        }
        
        /// <remarks/>
        public thickness ODScreen {
            get {
                return this.oDScreenField;
            }
            set {
                this.oDScreenField = value;
            }
        }
        
        /// <remarks/>
        public thickness ODCore {
            get {
                return this.oDCoreField;
            }
            set {
                this.oDCoreField = value;
            }
        }
        
        /// <remarks/>
        public thickness tapeThickness {
            get {
                return this.tapeThicknessField;
            }
            set {
                this.tapeThicknessField = value;
            }
        }
        
        /// <remarks/>
        public float lap {
            get {
                return this.lapField;
            }
            set {
                this.lapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lapSpecified {
            get {
                return this.lapFieldSpecified;
            }
            set {
                this.lapFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isJacketed {
            get {
                return this.isJacketedField;
            }
            set {
                this.isJacketedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isJacketedSpecified {
            get {
                return this.isJacketedFieldSpecified;
            }
            set {
                this.isJacketedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public thickness ODJacket {
            get {
                return this.oDJacketField;
            }
            set {
                this.oDJacketField = value;
            }
        }
        
        /// <remarks/>
        public resistancePerUnitLength rAC {
            get {
                return this.rACField;
            }
            set {
                this.rACField = value;
            }
        }
        
        /// <remarks/>
        public capacitancePerUnitLength capacitance {
            get {
                return this.capacitanceField;
            }
            set {
                this.capacitanceField = value;
            }
        }
        
        /// <remarks/>
        public float coefficientOfFriction {
            get {
                return this.coefficientOfFrictionField;
            }
            set {
                this.coefficientOfFrictionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool coefficientOfFrictionSpecified {
            get {
                return this.coefficientOfFrictionFieldSpecified;
            }
            set {
                this.coefficientOfFrictionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public weightPerLength weightPerLength {
            get {
                return this.weightPerLengthField;
            }
            set {
                this.weightPerLengthField = value;
            }
        }
        
        /// <remarks/>
        public length minimumBendingRadius {
            get {
                return this.minimumBendingRadiusField;
            }
            set {
                this.minimumBendingRadiusField = value;
            }
        }
        
        /// <remarks/>
        public weight maximumPullingTension {
            get {
                return this.maximumPullingTensionField;
            }
            set {
                this.maximumPullingTensionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class resistancePerUnitLength {
        
        private zUnits resistanceUnitsField;
        
        private bool resistanceUnitsFieldSpecified;
        
        private lengthUnits lengthUnitsField;
        
        private bool lengthUnitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public zUnits resistanceUnits {
            get {
                return this.resistanceUnitsField;
            }
            set {
                this.resistanceUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resistanceUnitsSpecified {
            get {
                return this.resistanceUnitsFieldSpecified;
            }
            set {
                this.resistanceUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lengthUnits lengthUnits {
            get {
                return this.lengthUnitsField;
            }
            set {
                this.lengthUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lengthUnitsSpecified {
            get {
                return this.lengthUnitsFieldSpecified;
            }
            set {
                this.lengthUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class capacitancePerUnitLength {
        
        private capacitanceUnits capacitanceUnitsField;
        
        private bool capacitanceUnitsFieldSpecified;
        
        private lengthUnits lengthUnitsField;
        
        private bool lengthUnitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public capacitanceUnits capacitanceUnits {
            get {
                return this.capacitanceUnitsField;
            }
            set {
                this.capacitanceUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool capacitanceUnitsSpecified {
            get {
                return this.capacitanceUnitsFieldSpecified;
            }
            set {
                this.capacitanceUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lengthUnits lengthUnits {
            get {
                return this.lengthUnitsField;
            }
            set {
                this.lengthUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lengthUnitsSpecified {
            get {
                return this.lengthUnitsFieldSpecified;
            }
            set {
                this.lengthUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum capacitanceUnits {
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        mF,
        
        /// <remarks/>
        microF,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class weightPerLength {
        
        private weightUnits weightUnitsField;
        
        private bool weightUnitsFieldSpecified;
        
        private lengthUnits lengthUnitsField;
        
        private bool lengthUnitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public weightUnits weightUnits {
            get {
                return this.weightUnitsField;
            }
            set {
                this.weightUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weightUnitsSpecified {
            get {
                return this.weightUnitsFieldSpecified;
            }
            set {
                this.weightUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public lengthUnits lengthUnits {
            get {
                return this.lengthUnitsField;
            }
            set {
                this.lengthUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lengthUnitsSpecified {
            get {
                return this.lengthUnitsFieldSpecified;
            }
            set {
                this.lengthUnitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum weightUnits {
        
        /// <remarks/>
        Pound,
        
        /// <remarks/>
        Kilogram,
        
        /// <remarks/>
        Gram,
        
        /// <remarks/>
        Centigram,
        
        /// <remarks/>
        Milligram,
        
        /// <remarks/>
        Microgram,
        
        /// <remarks/>
        Tonne,
        
        /// <remarks/>
        Grain,
        
        /// <remarks/>
        Ounce,
        
        /// <remarks/>
        Stone,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Long ton")]
        Longton,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Short ton")]
        Shortton,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class weight {
        
        private weightUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public weightUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class concentricNeutralCableEntry : mspElectricalDefinition {
        
        private conductorSize conductorSizeField;
        
        private current ampacityField;
        
        private string coreStrandingField;
        
        private eaEquipID coreMaterialField;
        
        private length phaseGMRField;
        
        private eaEquipID insulationMaterialField;
        
        private thickness insulationThicknessField;
        
        private thickness oDInsulationField;
        
        private thickness oDScreenField;
        
        private thickness oDCoreField;
        
        private thickness oDNeutralField;
        
        private eaEquipID cNMaterialField;
        
        private conductorSize cNStrandSizeField;
        
        private string cNStrandCountField;
        
        private bool isJacketedField;
        
        private bool isJacketedFieldSpecified;
        
        private thickness oDJacketField;
        
        private resistancePerUnitLength rACField;
        
        private capacitancePerUnitLength capacitanceField;
        
        private float coefficientOfFrictionField;
        
        private bool coefficientOfFrictionFieldSpecified;
        
        private weightPerLength weightPerLengthField;
        
        private weight maximumPullingTensionField;
        
        private length minimumBendingRadiusField;
        
        /// <remarks/>
        public conductorSize conductorSize {
            get {
                return this.conductorSizeField;
            }
            set {
                this.conductorSizeField = value;
            }
        }
        
        /// <remarks/>
        public current ampacity {
            get {
                return this.ampacityField;
            }
            set {
                this.ampacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string coreStranding {
            get {
                return this.coreStrandingField;
            }
            set {
                this.coreStrandingField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID coreMaterial {
            get {
                return this.coreMaterialField;
            }
            set {
                this.coreMaterialField = value;
            }
        }
        
        /// <remarks/>
        public length phaseGMR {
            get {
                return this.phaseGMRField;
            }
            set {
                this.phaseGMRField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID insulationMaterial {
            get {
                return this.insulationMaterialField;
            }
            set {
                this.insulationMaterialField = value;
            }
        }
        
        /// <remarks/>
        public thickness insulationThickness {
            get {
                return this.insulationThicknessField;
            }
            set {
                this.insulationThicknessField = value;
            }
        }
        
        /// <remarks/>
        public thickness ODInsulation {
            get {
                return this.oDInsulationField;
            }
            set {
                this.oDInsulationField = value;
            }
        }
        
        /// <remarks/>
        public thickness ODScreen {
            get {
                return this.oDScreenField;
            }
            set {
                this.oDScreenField = value;
            }
        }
        
        /// <remarks/>
        public thickness ODCore {
            get {
                return this.oDCoreField;
            }
            set {
                this.oDCoreField = value;
            }
        }
        
        /// <remarks/>
        public thickness ODNeutral {
            get {
                return this.oDNeutralField;
            }
            set {
                this.oDNeutralField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID CNMaterial {
            get {
                return this.cNMaterialField;
            }
            set {
                this.cNMaterialField = value;
            }
        }
        
        /// <remarks/>
        public conductorSize CNStrandSize {
            get {
                return this.cNStrandSizeField;
            }
            set {
                this.cNStrandSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string CNStrandCount {
            get {
                return this.cNStrandCountField;
            }
            set {
                this.cNStrandCountField = value;
            }
        }
        
        /// <remarks/>
        public bool isJacketed {
            get {
                return this.isJacketedField;
            }
            set {
                this.isJacketedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isJacketedSpecified {
            get {
                return this.isJacketedFieldSpecified;
            }
            set {
                this.isJacketedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public thickness ODJacket {
            get {
                return this.oDJacketField;
            }
            set {
                this.oDJacketField = value;
            }
        }
        
        /// <remarks/>
        public resistancePerUnitLength rAC {
            get {
                return this.rACField;
            }
            set {
                this.rACField = value;
            }
        }
        
        /// <remarks/>
        public capacitancePerUnitLength capacitance {
            get {
                return this.capacitanceField;
            }
            set {
                this.capacitanceField = value;
            }
        }
        
        /// <remarks/>
        public float coefficientOfFriction {
            get {
                return this.coefficientOfFrictionField;
            }
            set {
                this.coefficientOfFrictionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool coefficientOfFrictionSpecified {
            get {
                return this.coefficientOfFrictionFieldSpecified;
            }
            set {
                this.coefficientOfFrictionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public weightPerLength weightPerLength {
            get {
                return this.weightPerLengthField;
            }
            set {
                this.weightPerLengthField = value;
            }
        }
        
        /// <remarks/>
        public weight maximumPullingTension {
            get {
                return this.maximumPullingTensionField;
            }
            set {
                this.maximumPullingTensionField = value;
            }
        }
        
        /// <remarks/>
        public length minimumBendingRadius {
            get {
                return this.minimumBendingRadiusField;
            }
            set {
                this.minimumBendingRadiusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class conductorEntry : mspElectricalDefinition {
        
        private conductorSize conductorSizeField;
        
        private current ampacityField;
        
        private string strandingField;
        
        private material materialField;
        
        private bool materialFieldSpecified;
        
        private string conductorNameField;
        
        private thickness coreDiameterField;
        
        private thickness outsideDiameterField;
        
        private length gMRField;
        
        private resistancePerUnitLength rDC1Field;
        
        private resistancePerUnitLength rAC1Field;
        
        private resistancePerUnitLength rAC2Field;
        
        private resistancePerUnitLength rAC3Field;
        
        private weightPerLength weightPerLengthField;
        
        private weight breakingStrengthField;
        
        private float defaultStringingTensionField;
        
        private bool defaultStringingTensionFieldSpecified;
        
        /// <remarks/>
        public conductorSize conductorSize {
            get {
                return this.conductorSizeField;
            }
            set {
                this.conductorSizeField = value;
            }
        }
        
        /// <remarks/>
        public current ampacity {
            get {
                return this.ampacityField;
            }
            set {
                this.ampacityField = value;
            }
        }
        
        /// <remarks/>
        public string stranding {
            get {
                return this.strandingField;
            }
            set {
                this.strandingField = value;
            }
        }
        
        /// <remarks/>
        public material material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool materialSpecified {
            get {
                return this.materialFieldSpecified;
            }
            set {
                this.materialFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string conductorName {
            get {
                return this.conductorNameField;
            }
            set {
                this.conductorNameField = value;
            }
        }
        
        /// <remarks/>
        public thickness coreDiameter {
            get {
                return this.coreDiameterField;
            }
            set {
                this.coreDiameterField = value;
            }
        }
        
        /// <remarks/>
        public thickness outsideDiameter {
            get {
                return this.outsideDiameterField;
            }
            set {
                this.outsideDiameterField = value;
            }
        }
        
        /// <remarks/>
        public length GMR {
            get {
                return this.gMRField;
            }
            set {
                this.gMRField = value;
            }
        }
        
        /// <remarks/>
        public resistancePerUnitLength rDC1 {
            get {
                return this.rDC1Field;
            }
            set {
                this.rDC1Field = value;
            }
        }
        
        /// <remarks/>
        public resistancePerUnitLength rAC1 {
            get {
                return this.rAC1Field;
            }
            set {
                this.rAC1Field = value;
            }
        }
        
        /// <remarks/>
        public resistancePerUnitLength rAC2 {
            get {
                return this.rAC2Field;
            }
            set {
                this.rAC2Field = value;
            }
        }
        
        /// <remarks/>
        public resistancePerUnitLength rAC3 {
            get {
                return this.rAC3Field;
            }
            set {
                this.rAC3Field = value;
            }
        }
        
        /// <remarks/>
        public weightPerLength weightPerLength {
            get {
                return this.weightPerLengthField;
            }
            set {
                this.weightPerLengthField = value;
            }
        }
        
        /// <remarks/>
        public weight breakingStrength {
            get {
                return this.breakingStrengthField;
            }
            set {
                this.breakingStrengthField = value;
            }
        }
        
        /// <remarks/>
        public float defaultStringingTension {
            get {
                return this.defaultStringingTensionField;
            }
            set {
                this.defaultStringingTensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultStringingTensionSpecified {
            get {
                return this.defaultStringingTensionFieldSpecified;
            }
            set {
                this.defaultStringingTensionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum material {
        
        /// <remarks/>
        AAAC,
        
        /// <remarks/>
        AAC,
        
        /// <remarks/>
        ACAR,
        
        /// <remarks/>
        ACSR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ACSR/T2")]
        ACSRT2,
        
        /// <remarks/>
        AlumoWeld,
        
        /// <remarks/>
        Anaconda,
        
        /// <remarks/>
        CopperWeld,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CopperWeld copper")]
        CopperWeldcopper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Expanded ACSR")]
        ExpandedACSR,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Galvanized steel")]
        Galvanizedsteel,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hard drawn aluminum")]
        Harddrawnaluminum,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hard drawn copper")]
        Harddrawncopper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HH hollow copper")]
        HHhollowcopper,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("High strength steel")]
        Highstrengthsteel,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Stainless steel strand")]
        Stainlesssteelstrand,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inductionMachineEntry : mspElectricalDefinition {
        
        private float hpField;
        
        private bool hpFieldSpecified;
        
        private float pfField;
        
        private bool pfFieldSpecified;
        
        private float efficiencyField;
        
        private bool efficiencyFieldSpecified;
        
        private voltage ratedVoltageField;
        
        private voltage lgVoltsField;
        
        private float dropoutField;
        
        private bool dropoutFieldSpecified;
        
        private nemaType nemaTypeField;
        
        private bool nemaTypeFieldSpecified;
        
        private float limitVoltageField;
        
        private bool limitVoltageFieldSpecified;
        
        private float lockedRotorPFField;
        
        private bool lockedRotorPFFieldSpecified;
        
        private float lockedRotorMultiplierField;
        
        private bool lockedRotorMultiplierFieldSpecified;
        
        private inductionMachineImpedances impedancesField;
        
        /// <remarks/>
        public float hp {
            get {
                return this.hpField;
            }
            set {
                this.hpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool hpSpecified {
            get {
                return this.hpFieldSpecified;
            }
            set {
                this.hpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pf {
            get {
                return this.pfField;
            }
            set {
                this.pfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pfSpecified {
            get {
                return this.pfFieldSpecified;
            }
            set {
                this.pfFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float efficiency {
            get {
                return this.efficiencyField;
            }
            set {
                this.efficiencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool efficiencySpecified {
            get {
                return this.efficiencyFieldSpecified;
            }
            set {
                this.efficiencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage ratedVoltage {
            get {
                return this.ratedVoltageField;
            }
            set {
                this.ratedVoltageField = value;
            }
        }
        
        /// <remarks/>
        public voltage lgVolts {
            get {
                return this.lgVoltsField;
            }
            set {
                this.lgVoltsField = value;
            }
        }
        
        /// <remarks/>
        public float dropout {
            get {
                return this.dropoutField;
            }
            set {
                this.dropoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dropoutSpecified {
            get {
                return this.dropoutFieldSpecified;
            }
            set {
                this.dropoutFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public nemaType nemaType {
            get {
                return this.nemaTypeField;
            }
            set {
                this.nemaTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nemaTypeSpecified {
            get {
                return this.nemaTypeFieldSpecified;
            }
            set {
                this.nemaTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float limitVoltage {
            get {
                return this.limitVoltageField;
            }
            set {
                this.limitVoltageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool limitVoltageSpecified {
            get {
                return this.limitVoltageFieldSpecified;
            }
            set {
                this.limitVoltageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lockedRotorPF {
            get {
                return this.lockedRotorPFField;
            }
            set {
                this.lockedRotorPFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lockedRotorPFSpecified {
            get {
                return this.lockedRotorPFFieldSpecified;
            }
            set {
                this.lockedRotorPFFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float lockedRotorMultiplier {
            get {
                return this.lockedRotorMultiplierField;
            }
            set {
                this.lockedRotorMultiplierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lockedRotorMultiplierSpecified {
            get {
                return this.lockedRotorMultiplierFieldSpecified;
            }
            set {
                this.lockedRotorMultiplierFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public inductionMachineImpedances impedances {
            get {
                return this.impedancesField;
            }
            set {
                this.impedancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ROWAttributes : mspElectricalDefinition {
        
        private circuit[] circuitListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public circuit[] circuitList {
            get {
                return this.circuitListField;
            }
            set {
                this.circuitListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class circuit {
        
        private objectRef electricLineIDField;
        
        private eaEquipID lineConstructionTypeField;
        
        private length hCoordinateField;
        
        /// <remarks/>
        public objectRef electricLineID {
            get {
                return this.electricLineIDField;
            }
            set {
                this.electricLineIDField = value;
            }
        }
        
        /// <remarks/>
        public eaEquipID lineConstructionType {
            get {
                return this.lineConstructionTypeField;
            }
            set {
                this.lineConstructionTypeField = value;
            }
        }
        
        /// <remarks/>
        public length hCoordinate {
            get {
                return this.hCoordinateField;
            }
            set {
                this.hCoordinateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ZigBeePublishPrice : mspObject {
        
        private string currencyField;
        
        private System.DateTime currentTimeField;
        
        private string issuerEventIDField;
        
        private string providerIDField;
        
        private string rateLabelField;
        
        private string unitOfMeasureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime currentTime {
            get {
                return this.currentTimeField;
            }
            set {
                this.currentTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string issuerEventID {
            get {
                return this.issuerEventIDField;
            }
            set {
                this.issuerEventIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string providerID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string rateLabel {
            get {
                return this.rateLabelField;
            }
            set {
                this.rateLabelField = value;
            }
        }
        
        /// <remarks/>
        public string unitOfMeasure {
            get {
                return this.unitOfMeasureField;
            }
            set {
                this.unitOfMeasureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(meterBaseExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(inHomeDisplayExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CDDeviceExchange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LMDeviceExchange))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspDeviceExchange : mspObject {
        
        private string serviceLocationIDField;
        
        private serviceID serviceIDField;
        
        private string meterBaseIDField;
        
        private meterID meterIDField;
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string meterBaseID {
            get {
                return this.meterBaseIDField;
            }
            set {
                this.meterBaseIDField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterBaseExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class inHomeDisplayExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class CDDeviceExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class LMDeviceExchange : mspDeviceExchange {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class DRProgram : mspObject {
        
        private string dRProgramNameField;
        
        private string dRProgramOwnerField;
        
        private string dRProgramDescriptionField;
        
        private System.DateTime dRProgramStartDateField;
        
        private bool dRProgramStartDateFieldSpecified;
        
        private System.DateTime dRProgramEndDateField;
        
        private bool dRProgramEndDateFieldSpecified;
        
        private bool isDRDeviceRequiredField;
        
        private bool isDRDeviceRequiredFieldSpecified;
        
        private string hANDeviceTypeField;
        
        private DRProgramStatus dRProgramStatusField;
        
        private string otherDRProgramStatusField;
        
        private string dRProgramTypeField;
        
        /// <remarks/>
        public string DRProgramName {
            get {
                return this.dRProgramNameField;
            }
            set {
                this.dRProgramNameField = value;
            }
        }
        
        /// <remarks/>
        public string DRProgramOwner {
            get {
                return this.dRProgramOwnerField;
            }
            set {
                this.dRProgramOwnerField = value;
            }
        }
        
        /// <remarks/>
        public string DRProgramDescription {
            get {
                return this.dRProgramDescriptionField;
            }
            set {
                this.dRProgramDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DRProgramStartDate {
            get {
                return this.dRProgramStartDateField;
            }
            set {
                this.dRProgramStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DRProgramStartDateSpecified {
            get {
                return this.dRProgramStartDateFieldSpecified;
            }
            set {
                this.dRProgramStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DRProgramEndDate {
            get {
                return this.dRProgramEndDateField;
            }
            set {
                this.dRProgramEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DRProgramEndDateSpecified {
            get {
                return this.dRProgramEndDateFieldSpecified;
            }
            set {
                this.dRProgramEndDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isDRDeviceRequired {
            get {
                return this.isDRDeviceRequiredField;
            }
            set {
                this.isDRDeviceRequiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isDRDeviceRequiredSpecified {
            get {
                return this.isDRDeviceRequiredFieldSpecified;
            }
            set {
                this.isDRDeviceRequiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string HANDeviceType {
            get {
                return this.hANDeviceTypeField;
            }
            set {
                this.hANDeviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public DRProgramStatus DRProgramStatus {
            get {
                return this.dRProgramStatusField;
            }
            set {
                this.dRProgramStatusField = value;
            }
        }
        
        /// <remarks/>
        public string otherDRProgramStatus {
            get {
                return this.otherDRProgramStatusField;
            }
            set {
                this.otherDRProgramStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DRProgramType {
            get {
                return this.dRProgramTypeField;
            }
            set {
                this.dRProgramTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum DRProgramStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        Rescinded,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(shortCircuitAnalysisResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(loadFlowResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public abstract partial class mspResultsBase : mspObject {
        
        private resultsType resultsTypeField;
        
        private bool resultsTypeFieldSpecified;
        
        private string sourceField;
        
        private string feederField;
        
        private eaLoc eaLocField;
        
        private objectRef parentIDField;
        
        private phaseCode phaseCodeField;
        
        private bool phaseCodeFieldSpecified;
        
        private loadConnection loadConField;
        
        private bool loadConFieldSpecified;
        
        private string equipRefField;
        
        private length distanceFromSourceField;
        
        private length sectionLengthField;
        
        private voltage baseVoltageAField;
        
        private voltage baseVoltageBField;
        
        private voltage baseVoltageCField;
        
        private voltage baseVoltageBalancedField;
        
        private apparentPower basePowerField;
        
        /// <remarks/>
        public resultsType resultsType {
            get {
                return this.resultsTypeField;
            }
            set {
                this.resultsTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool resultsTypeSpecified {
            get {
                return this.resultsTypeFieldSpecified;
            }
            set {
                this.resultsTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string feeder {
            get {
                return this.feederField;
            }
            set {
                this.feederField = value;
            }
        }
        
        /// <remarks/>
        public eaLoc eaLoc {
            get {
                return this.eaLocField;
            }
            set {
                this.eaLocField = value;
            }
        }
        
        /// <remarks/>
        public objectRef parentID {
            get {
                return this.parentIDField;
            }
            set {
                this.parentIDField = value;
            }
        }
        
        /// <remarks/>
        public phaseCode phaseCode {
            get {
                return this.phaseCodeField;
            }
            set {
                this.phaseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool phaseCodeSpecified {
            get {
                return this.phaseCodeFieldSpecified;
            }
            set {
                this.phaseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public loadConnection loadCon {
            get {
                return this.loadConField;
            }
            set {
                this.loadConField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loadConSpecified {
            get {
                return this.loadConFieldSpecified;
            }
            set {
                this.loadConFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string equipRef {
            get {
                return this.equipRefField;
            }
            set {
                this.equipRefField = value;
            }
        }
        
        /// <remarks/>
        public length distanceFromSource {
            get {
                return this.distanceFromSourceField;
            }
            set {
                this.distanceFromSourceField = value;
            }
        }
        
        /// <remarks/>
        public length sectionLength {
            get {
                return this.sectionLengthField;
            }
            set {
                this.sectionLengthField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltageA {
            get {
                return this.baseVoltageAField;
            }
            set {
                this.baseVoltageAField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltageB {
            get {
                return this.baseVoltageBField;
            }
            set {
                this.baseVoltageBField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltageC {
            get {
                return this.baseVoltageCField;
            }
            set {
                this.baseVoltageCField = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltageBalanced {
            get {
                return this.baseVoltageBalancedField;
            }
            set {
                this.baseVoltageBalancedField = value;
            }
        }
        
        /// <remarks/>
        public apparentPower basePower {
            get {
                return this.basePowerField;
            }
            set {
                this.basePowerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum resultsType {
        
        /// <remarks/>
        loadFlow,
        
        /// <remarks/>
        shortCircuit,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class shortCircuitAnalysisResult : mspResultsBase {
        
        private complexImpedance faultImpedanceField;
        
        private current minimumLGFaultField;
        
        private current maximumLGFaultField;
        
        private current maximumLLFaultField;
        
        private current maximumLLGFaultField;
        
        private current maximumLLLGFaultField;
        
        private impedance positiveSequenceZField;
        
        private impedance negativeSequenceZField;
        
        private impedance zeroSequenceZField;
        
        /// <remarks/>
        public complexImpedance faultImpedance {
            get {
                return this.faultImpedanceField;
            }
            set {
                this.faultImpedanceField = value;
            }
        }
        
        /// <remarks/>
        public current minimumLGFault {
            get {
                return this.minimumLGFaultField;
            }
            set {
                this.minimumLGFaultField = value;
            }
        }
        
        /// <remarks/>
        public current maximumLGFault {
            get {
                return this.maximumLGFaultField;
            }
            set {
                this.maximumLGFaultField = value;
            }
        }
        
        /// <remarks/>
        public current maximumLLFault {
            get {
                return this.maximumLLFaultField;
            }
            set {
                this.maximumLLFaultField = value;
            }
        }
        
        /// <remarks/>
        public current maximumLLGFault {
            get {
                return this.maximumLLGFaultField;
            }
            set {
                this.maximumLLGFaultField = value;
            }
        }
        
        /// <remarks/>
        public current maximumLLLGFault {
            get {
                return this.maximumLLLGFaultField;
            }
            set {
                this.maximumLLLGFaultField = value;
            }
        }
        
        /// <remarks/>
        public impedance positiveSequenceZ {
            get {
                return this.positiveSequenceZField;
            }
            set {
                this.positiveSequenceZField = value;
            }
        }
        
        /// <remarks/>
        public impedance negativeSequenceZ {
            get {
                return this.negativeSequenceZField;
            }
            set {
                this.negativeSequenceZField = value;
            }
        }
        
        /// <remarks/>
        public impedance zeroSequenceZ {
            get {
                return this.zeroSequenceZField;
            }
            set {
                this.zeroSequenceZField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class impedance {
        
        private zUnits unitsField;
        
        private bool unitsFieldSpecified;
        
        private float valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public zUnits units {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool unitsSpecified {
            get {
                return this.unitsFieldSpecified;
            }
            set {
                this.unitsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public float Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class loadFlowResult : mspResultsBase {
        
        private voltage priKvAField;
        
        private voltage priKvBField;
        
        private voltage priKvCField;
        
        private voltage priKvBalField;
        
        private sectionDrop sectionDropAField;
        
        private sectionDrop sectionDropBField;
        
        private sectionDrop sectionDropCField;
        
        private sectionDrop sectionDropBalField;
        
        private cumulativeDrop cumulativeDropAField;
        
        private cumulativeDrop cumulativeDropBField;
        
        private cumulativeDrop cumulativeDropCField;
        
        private cumulativeDrop cumulativeDropBalField;
        
        private current thruCurrentAField;
        
        private current thruCurrentBField;
        
        private current thruCurrentCField;
        
        private current thruCurrentBalField;
        
        private float pctCapAField;
        
        private bool pctCapAFieldSpecified;
        
        private float pctCapBField;
        
        private bool pctCapBFieldSpecified;
        
        private float pctCapCField;
        
        private bool pctCapCFieldSpecified;
        
        private float pctCapBalField;
        
        private bool pctCapBalFieldSpecified;
        
        private realPower thruPowerAField;
        
        private realPower thruPowerBField;
        
        private realPower thruPowerCField;
        
        private realPower thruPowerBalField;
        
        private reactivePower thruReactiveAField;
        
        private reactivePower thruReactiveBField;
        
        private reactivePower thruReactiveCField;
        
        private reactivePower thruReactiveBalField;
        
        private float pctPfAField;
        
        private bool pctPfAFieldSpecified;
        
        private float pctPfBField;
        
        private bool pctPfBFieldSpecified;
        
        private float pctPfCField;
        
        private bool pctPfCFieldSpecified;
        
        private float pctPfBalField;
        
        private bool pctPfBalFieldSpecified;
        
        private float pctLossField;
        
        private bool pctLossFieldSpecified;
        
        private realPower sectPowerAField;
        
        private realPower sectPowerBField;
        
        private realPower sectPowerCField;
        
        private realPower sectPowerBalField;
        
        private reactivePower secReactiveAField;
        
        private reactivePower secReactiveBField;
        
        private reactivePower secReactiveCField;
        
        private reactivePower secReactiveBalField;
        
        private long consOnAField;
        
        private bool consOnAFieldSpecified;
        
        private long consOnBField;
        
        private bool consOnBFieldSpecified;
        
        private long consOnCField;
        
        private bool consOnCFieldSpecified;
        
        private long consOnBalField;
        
        private bool consOnBalFieldSpecified;
        
        private long consThruAField;
        
        private bool consThruAFieldSpecified;
        
        private long consThruBField;
        
        private bool consThruBFieldSpecified;
        
        private long consThruCField;
        
        private bool consThruCFieldSpecified;
        
        private long consThruBalField;
        
        private bool consThruBalFieldSpecified;
        
        private voltage baseVoltageField;
        
        /// <remarks/>
        public voltage priKvA {
            get {
                return this.priKvAField;
            }
            set {
                this.priKvAField = value;
            }
        }
        
        /// <remarks/>
        public voltage priKvB {
            get {
                return this.priKvBField;
            }
            set {
                this.priKvBField = value;
            }
        }
        
        /// <remarks/>
        public voltage priKvC {
            get {
                return this.priKvCField;
            }
            set {
                this.priKvCField = value;
            }
        }
        
        /// <remarks/>
        public voltage priKvBal {
            get {
                return this.priKvBalField;
            }
            set {
                this.priKvBalField = value;
            }
        }
        
        /// <remarks/>
        public sectionDrop sectionDropA {
            get {
                return this.sectionDropAField;
            }
            set {
                this.sectionDropAField = value;
            }
        }
        
        /// <remarks/>
        public sectionDrop sectionDropB {
            get {
                return this.sectionDropBField;
            }
            set {
                this.sectionDropBField = value;
            }
        }
        
        /// <remarks/>
        public sectionDrop sectionDropC {
            get {
                return this.sectionDropCField;
            }
            set {
                this.sectionDropCField = value;
            }
        }
        
        /// <remarks/>
        public sectionDrop sectionDropBal {
            get {
                return this.sectionDropBalField;
            }
            set {
                this.sectionDropBalField = value;
            }
        }
        
        /// <remarks/>
        public cumulativeDrop cumulativeDropA {
            get {
                return this.cumulativeDropAField;
            }
            set {
                this.cumulativeDropAField = value;
            }
        }
        
        /// <remarks/>
        public cumulativeDrop cumulativeDropB {
            get {
                return this.cumulativeDropBField;
            }
            set {
                this.cumulativeDropBField = value;
            }
        }
        
        /// <remarks/>
        public cumulativeDrop cumulativeDropC {
            get {
                return this.cumulativeDropCField;
            }
            set {
                this.cumulativeDropCField = value;
            }
        }
        
        /// <remarks/>
        public cumulativeDrop cumulativeDropBal {
            get {
                return this.cumulativeDropBalField;
            }
            set {
                this.cumulativeDropBalField = value;
            }
        }
        
        /// <remarks/>
        public current thruCurrentA {
            get {
                return this.thruCurrentAField;
            }
            set {
                this.thruCurrentAField = value;
            }
        }
        
        /// <remarks/>
        public current thruCurrentB {
            get {
                return this.thruCurrentBField;
            }
            set {
                this.thruCurrentBField = value;
            }
        }
        
        /// <remarks/>
        public current thruCurrentC {
            get {
                return this.thruCurrentCField;
            }
            set {
                this.thruCurrentCField = value;
            }
        }
        
        /// <remarks/>
        public current thruCurrentBal {
            get {
                return this.thruCurrentBalField;
            }
            set {
                this.thruCurrentBalField = value;
            }
        }
        
        /// <remarks/>
        public float pctCapA {
            get {
                return this.pctCapAField;
            }
            set {
                this.pctCapAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapASpecified {
            get {
                return this.pctCapAFieldSpecified;
            }
            set {
                this.pctCapAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctCapB {
            get {
                return this.pctCapBField;
            }
            set {
                this.pctCapBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapBSpecified {
            get {
                return this.pctCapBFieldSpecified;
            }
            set {
                this.pctCapBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctCapC {
            get {
                return this.pctCapCField;
            }
            set {
                this.pctCapCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapCSpecified {
            get {
                return this.pctCapCFieldSpecified;
            }
            set {
                this.pctCapCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctCapBal {
            get {
                return this.pctCapBalField;
            }
            set {
                this.pctCapBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctCapBalSpecified {
            get {
                return this.pctCapBalFieldSpecified;
            }
            set {
                this.pctCapBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public realPower thruPowerA {
            get {
                return this.thruPowerAField;
            }
            set {
                this.thruPowerAField = value;
            }
        }
        
        /// <remarks/>
        public realPower thruPowerB {
            get {
                return this.thruPowerBField;
            }
            set {
                this.thruPowerBField = value;
            }
        }
        
        /// <remarks/>
        public realPower thruPowerC {
            get {
                return this.thruPowerCField;
            }
            set {
                this.thruPowerCField = value;
            }
        }
        
        /// <remarks/>
        public realPower thruPowerBal {
            get {
                return this.thruPowerBalField;
            }
            set {
                this.thruPowerBalField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower thruReactiveA {
            get {
                return this.thruReactiveAField;
            }
            set {
                this.thruReactiveAField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower thruReactiveB {
            get {
                return this.thruReactiveBField;
            }
            set {
                this.thruReactiveBField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower thruReactiveC {
            get {
                return this.thruReactiveCField;
            }
            set {
                this.thruReactiveCField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower thruReactiveBal {
            get {
                return this.thruReactiveBalField;
            }
            set {
                this.thruReactiveBalField = value;
            }
        }
        
        /// <remarks/>
        public float pctPfA {
            get {
                return this.pctPfAField;
            }
            set {
                this.pctPfAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfASpecified {
            get {
                return this.pctPfAFieldSpecified;
            }
            set {
                this.pctPfAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctPfB {
            get {
                return this.pctPfBField;
            }
            set {
                this.pctPfBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfBSpecified {
            get {
                return this.pctPfBFieldSpecified;
            }
            set {
                this.pctPfBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctPfC {
            get {
                return this.pctPfCField;
            }
            set {
                this.pctPfCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfCSpecified {
            get {
                return this.pctPfCFieldSpecified;
            }
            set {
                this.pctPfCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctPfBal {
            get {
                return this.pctPfBalField;
            }
            set {
                this.pctPfBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctPfBalSpecified {
            get {
                return this.pctPfBalFieldSpecified;
            }
            set {
                this.pctPfBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float pctLoss {
            get {
                return this.pctLossField;
            }
            set {
                this.pctLossField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pctLossSpecified {
            get {
                return this.pctLossFieldSpecified;
            }
            set {
                this.pctLossFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public realPower sectPowerA {
            get {
                return this.sectPowerAField;
            }
            set {
                this.sectPowerAField = value;
            }
        }
        
        /// <remarks/>
        public realPower sectPowerB {
            get {
                return this.sectPowerBField;
            }
            set {
                this.sectPowerBField = value;
            }
        }
        
        /// <remarks/>
        public realPower sectPowerC {
            get {
                return this.sectPowerCField;
            }
            set {
                this.sectPowerCField = value;
            }
        }
        
        /// <remarks/>
        public realPower sectPowerBal {
            get {
                return this.sectPowerBalField;
            }
            set {
                this.sectPowerBalField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower secReactiveA {
            get {
                return this.secReactiveAField;
            }
            set {
                this.secReactiveAField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower secReactiveB {
            get {
                return this.secReactiveBField;
            }
            set {
                this.secReactiveBField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower secReactiveC {
            get {
                return this.secReactiveCField;
            }
            set {
                this.secReactiveCField = value;
            }
        }
        
        /// <remarks/>
        public reactivePower secReactiveBal {
            get {
                return this.secReactiveBalField;
            }
            set {
                this.secReactiveBalField = value;
            }
        }
        
        /// <remarks/>
        public long consOnA {
            get {
                return this.consOnAField;
            }
            set {
                this.consOnAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnASpecified {
            get {
                return this.consOnAFieldSpecified;
            }
            set {
                this.consOnAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consOnB {
            get {
                return this.consOnBField;
            }
            set {
                this.consOnBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnBSpecified {
            get {
                return this.consOnBFieldSpecified;
            }
            set {
                this.consOnBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consOnC {
            get {
                return this.consOnCField;
            }
            set {
                this.consOnCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnCSpecified {
            get {
                return this.consOnCFieldSpecified;
            }
            set {
                this.consOnCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consOnBal {
            get {
                return this.consOnBalField;
            }
            set {
                this.consOnBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consOnBalSpecified {
            get {
                return this.consOnBalFieldSpecified;
            }
            set {
                this.consOnBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruA {
            get {
                return this.consThruAField;
            }
            set {
                this.consThruAField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruASpecified {
            get {
                return this.consThruAFieldSpecified;
            }
            set {
                this.consThruAFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruB {
            get {
                return this.consThruBField;
            }
            set {
                this.consThruBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruBSpecified {
            get {
                return this.consThruBFieldSpecified;
            }
            set {
                this.consThruBFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruC {
            get {
                return this.consThruCField;
            }
            set {
                this.consThruCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruCSpecified {
            get {
                return this.consThruCFieldSpecified;
            }
            set {
                this.consThruCFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long consThruBal {
            get {
                return this.consThruBalField;
            }
            set {
                this.consThruBalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool consThruBalSpecified {
            get {
                return this.consThruBalFieldSpecified;
            }
            set {
                this.consThruBalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public voltage baseVoltage {
            get {
                return this.baseVoltageField;
            }
            set {
                this.baseVoltageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class meterEventList : mspObject {
        
        private eventInstance[] eventInstancesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public eventInstance[] eventInstances {
            get {
                return this.eventInstancesField;
            }
            set {
                this.eventInstancesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class eventInstance {
        
        private extensions extensionsField;
        
        private meterID meterIDField;
        
        private meterEvent meterEventField;
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        /// <remarks/>
        public extensions extensions {
            get {
                return this.extensionsField;
            }
            set {
                this.extensionsField = value;
            }
        }
        
        /// <remarks/>
        public meterID meterID {
            get {
                return this.meterIDField;
            }
            set {
                this.meterIDField = value;
            }
        }
        
        /// <remarks/>
        public meterEvent meterEvent {
            get {
                return this.meterEventField;
            }
            set {
                this.meterEventField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool timeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class demandResponseEventStatus : mspObject {
        
        private string eventIDField;
        
        private HANDeviceID deviceIDField;
        
        private string eventStatusField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        public string eventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
            }
        }
        
        /// <remarks/>
        public HANDeviceID deviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string eventStatus {
            get {
                return this.eventStatusField;
            }
            set {
                this.eventStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class demandResponseEvent : mspObject {
        
        private string utilityEnrollmentGroupField;
        
        private string[] deviceClassesField;
        
        private System.DateTime eventStartTimeField;
        
        private bool eventStartTimeFieldSpecified;
        
        private duration eventDurationField;
        
        private bool randomizeEventStartField;
        
        private bool randomizeEventEndField;
        
        private temperature heatingSetPointField;
        
        private temperature coolingSetPointField;
        
        private temperature heatingOffsetField;
        
        private temperature coolingOffsetField;
        
        private float averageLoadAdjustmentField;
        
        private bool averageLoadAdjustmentFieldSpecified;
        
        private float dutyCycleField;
        
        private bool dutyCycleFieldSpecified;
        
        private string criticalityField;
        
        public demandResponseEvent() {
            this.randomizeEventStartField = true;
            this.randomizeEventEndField = true;
        }
        
        /// <remarks/>
        public string utilityEnrollmentGroup {
            get {
                return this.utilityEnrollmentGroupField;
            }
            set {
                this.utilityEnrollmentGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deviceClasses")]
        public string[] deviceClasses {
            get {
                return this.deviceClassesField;
            }
            set {
                this.deviceClassesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime eventStartTime {
            get {
                return this.eventStartTimeField;
            }
            set {
                this.eventStartTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventStartTimeSpecified {
            get {
                return this.eventStartTimeFieldSpecified;
            }
            set {
                this.eventStartTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public duration eventDuration {
            get {
                return this.eventDurationField;
            }
            set {
                this.eventDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool randomizeEventStart {
            get {
                return this.randomizeEventStartField;
            }
            set {
                this.randomizeEventStartField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool randomizeEventEnd {
            get {
                return this.randomizeEventEndField;
            }
            set {
                this.randomizeEventEndField = value;
            }
        }
        
        /// <remarks/>
        public temperature heatingSetPoint {
            get {
                return this.heatingSetPointField;
            }
            set {
                this.heatingSetPointField = value;
            }
        }
        
        /// <remarks/>
        public temperature coolingSetPoint {
            get {
                return this.coolingSetPointField;
            }
            set {
                this.coolingSetPointField = value;
            }
        }
        
        /// <remarks/>
        public temperature heatingOffset {
            get {
                return this.heatingOffsetField;
            }
            set {
                this.heatingOffsetField = value;
            }
        }
        
        /// <remarks/>
        public temperature coolingOffset {
            get {
                return this.coolingOffsetField;
            }
            set {
                this.coolingOffsetField = value;
            }
        }
        
        /// <remarks/>
        public float averageLoadAdjustment {
            get {
                return this.averageLoadAdjustmentField;
            }
            set {
                this.averageLoadAdjustmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool averageLoadAdjustmentSpecified {
            get {
                return this.averageLoadAdjustmentFieldSpecified;
            }
            set {
                this.averageLoadAdjustmentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float dutyCycle {
            get {
                return this.dutyCycleField;
            }
            set {
                this.dutyCycleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dutyCycleSpecified {
            get {
                return this.dutyCycleFieldSpecified;
            }
            set {
                this.dutyCycleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string criticality {
            get {
                return this.criticalityField;
            }
            set {
                this.criticalityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class demandResponseParameters : mspObject {
        
        private string utilityEnrollmentCodeField;
        
        private duration startRandomizationDurationField;
        
        private duration stopRandomizationDurationField;
        
        /// <remarks/>
        public string utilityEnrollmentCode {
            get {
                return this.utilityEnrollmentCodeField;
            }
            set {
                this.utilityEnrollmentCodeField = value;
            }
        }
        
        /// <remarks/>
        public duration startRandomizationDuration {
            get {
                return this.startRandomizationDurationField;
            }
            set {
                this.startRandomizationDurationField = value;
            }
        }
        
        /// <remarks/>
        public duration stopRandomizationDuration {
            get {
                return this.stopRandomizationDurationField;
            }
            set {
                this.stopRandomizationDurationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class DRProgramEnrollment : mspObject {
        
        private string dRProgramIDField;
        
        private string dRProgramNameField;
        
        private serviceID serviceIDField;
        
        private string serviceLocationIDField;
        
        private string customerIDField;
        
        private string accountNumberField;
        
        private HANDeviceID[] hANDeviceListField;
        
        private System.DateTime dRProgramEnrollDateField;
        
        private bool dRProgramEnrollDateFieldSpecified;
        
        private System.DateTime dRProgramParticStartDateField;
        
        private bool dRProgramParticStartDateFieldSpecified;
        
        private System.DateTime dRProgramParticEndDateField;
        
        private bool dRProgramParticEndDateFieldSpecified;
        
        private DRProgramEnrollmentStatus dRProgramEnrollmentStatusField;
        
        private bool dRProgramEnrollmentStatusFieldSpecified;
        
        private string otherDRProgramEnrollmentStatusField;
        
        /// <remarks/>
        public string DRProgramID {
            get {
                return this.dRProgramIDField;
            }
            set {
                this.dRProgramIDField = value;
            }
        }
        
        /// <remarks/>
        public string DRProgramName {
            get {
                return this.dRProgramNameField;
            }
            set {
                this.dRProgramNameField = value;
            }
        }
        
        /// <remarks/>
        public serviceID serviceID {
            get {
                return this.serviceIDField;
            }
            set {
                this.serviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string serviceLocationID {
            get {
                return this.serviceLocationIDField;
            }
            set {
                this.serviceLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public string customerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public HANDeviceID[] HANDeviceList {
            get {
                return this.hANDeviceListField;
            }
            set {
                this.hANDeviceListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DRProgramEnrollDate {
            get {
                return this.dRProgramEnrollDateField;
            }
            set {
                this.dRProgramEnrollDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DRProgramEnrollDateSpecified {
            get {
                return this.dRProgramEnrollDateFieldSpecified;
            }
            set {
                this.dRProgramEnrollDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DRProgramParticStartDate {
            get {
                return this.dRProgramParticStartDateField;
            }
            set {
                this.dRProgramParticStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DRProgramParticStartDateSpecified {
            get {
                return this.dRProgramParticStartDateFieldSpecified;
            }
            set {
                this.dRProgramParticStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DRProgramParticEndDate {
            get {
                return this.dRProgramParticEndDateField;
            }
            set {
                this.dRProgramParticEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DRProgramParticEndDateSpecified {
            get {
                return this.dRProgramParticEndDateFieldSpecified;
            }
            set {
                this.dRProgramParticEndDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public DRProgramEnrollmentStatus DRProgramEnrollmentStatus {
            get {
                return this.dRProgramEnrollmentStatusField;
            }
            set {
                this.dRProgramEnrollmentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DRProgramEnrollmentStatusSpecified {
            get {
                return this.dRProgramEnrollmentStatusFieldSpecified;
            }
            set {
                this.dRProgramEnrollmentStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string otherDRProgramEnrollmentStatus {
            get {
                return this.otherDRProgramEnrollmentStatusField;
            }
            set {
                this.otherDRProgramEnrollmentStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum DRProgramEnrollmentStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class HANCommission : mspObject {
        
        private HANInterfaceID interfaceIDField;
        
        private HANCommissionStatus commissionStatusField;
        
        /// <remarks/>
        public HANInterfaceID interfaceID {
            get {
                return this.interfaceIDField;
            }
            set {
                this.interfaceIDField = value;
            }
        }
        
        /// <remarks/>
        public HANCommissionStatus commissionStatus {
            get {
                return this.commissionStatusField;
            }
            set {
                this.commissionStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum HANCommissionStatus {
        
        /// <remarks/>
        Commissioned,
        
        /// <remarks/>
        Decommissioned,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class HANDeviceGroup : mspObject {
        
        private string groupNameField;
        
        private HANDeviceID[] hANDeviceListField;
        
        /// <remarks/>
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public HANDeviceID[] HANDeviceList {
            get {
                return this.hANDeviceListField;
            }
            set {
                this.hANDeviceListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(thermostatCurrentConfiguration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thermostatConfiguration : mspObject {
        
        private thermostatMode thermostatModeField;
        
        private bool thermostatModeFieldSpecified;
        
        private thermostatFan thermostatFanField;
        
        private bool thermostatFanFieldSpecified;
        
        private string thermostatHoldField;
        
        private temperature coolingSetPointField;
        
        private temperature heatingSetPointField;
        
        /// <remarks/>
        public thermostatMode thermostatMode {
            get {
                return this.thermostatModeField;
            }
            set {
                this.thermostatModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thermostatModeSpecified {
            get {
                return this.thermostatModeFieldSpecified;
            }
            set {
                this.thermostatModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public thermostatFan thermostatFan {
            get {
                return this.thermostatFanField;
            }
            set {
                this.thermostatFanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool thermostatFanSpecified {
            get {
                return this.thermostatFanFieldSpecified;
            }
            set {
                this.thermostatFanFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string thermostatHold {
            get {
                return this.thermostatHoldField;
            }
            set {
                this.thermostatHoldField = value;
            }
        }
        
        /// <remarks/>
        public temperature coolingSetPoint {
            get {
                return this.coolingSetPointField;
            }
            set {
                this.coolingSetPointField = value;
            }
        }
        
        /// <remarks/>
        public temperature heatingSetPoint {
            get {
                return this.heatingSetPointField;
            }
            set {
                this.heatingSetPointField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum thermostatMode {
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Heat,
        
        /// <remarks/>
        Cool,
        
        /// <remarks/>
        Auto,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum thermostatFan {
        
        /// <remarks/>
        Auto,
        
        /// <remarks/>
        On,
        
        /// <remarks/>
        Cycle,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class thermostatCurrentConfiguration : thermostatConfiguration {
        
        private string rateLabelField;
        
        private temperature insideTemperatureField;
        
        private temperature outsideTemperatureField;
        
        private float humidityField;
        
        private bool humidityFieldSpecified;
        
        private string occupancyModeField;
        
        private System.DateTime currentTimeField;
        
        /// <remarks/>
        public string rateLabel {
            get {
                return this.rateLabelField;
            }
            set {
                this.rateLabelField = value;
            }
        }
        
        /// <remarks/>
        public temperature insideTemperature {
            get {
                return this.insideTemperatureField;
            }
            set {
                this.insideTemperatureField = value;
            }
        }
        
        /// <remarks/>
        public temperature outsideTemperature {
            get {
                return this.outsideTemperatureField;
            }
            set {
                this.outsideTemperatureField = value;
            }
        }
        
        /// <remarks/>
        public float humidity {
            get {
                return this.humidityField;
            }
            set {
                this.humidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool humiditySpecified {
            get {
                return this.humidityFieldSpecified;
            }
            set {
                this.humidityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string occupancyMode {
            get {
                return this.occupancyModeField;
            }
            set {
                this.occupancyModeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime currentTime {
            get {
                return this.currentTimeField;
            }
            set {
                this.currentTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageReasonContainer : mspObject {
        
        private outageReasonItem[] outageReasonListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public outageReasonItem[] outageReasonList {
            get {
                return this.outageReasonListField;
            }
            set {
                this.outageReasonListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class outageReasonItem {
        
        private string categoryField;
        
        private outageReason outageReasonField;
        
        private string categoryGroupField;
        
        /// <remarks/>
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public outageReason outageReason {
            get {
                return this.outageReasonField;
            }
            set {
                this.outageReasonField = value;
            }
        }
        
        /// <remarks/>
        public string categoryGroup {
            get {
                return this.categoryGroupField;
            }
            set {
                this.categoryGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workTicket : mspObject {
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string descriptionField;
        
        private string statusCodeField;
        
        private string locationField;
        
        private string countyField;
        
        private string taxDistField;
        
        private string franchiseDistField;
        
        private string schoolDistField;
        
        private string districtField;
        
        private voltage systemVoltsField;
        
        private string woTypeField;
        
        private string cd740cField;
        
        private string ext740cField;
        
        private string loanNoField;
        
        private string cwpYrField;
        
        private string cwpCdField;
        
        private string budgetPurField;
        
        private long acNoField;
        
        private bool acNoFieldSpecified;
        
        private long budgetCodeField;
        
        private bool budgetCodeFieldSpecified;
        
        private string actCodeField;
        
        private long deptCodeField;
        
        private bool deptCodeFieldSpecified;
        
        private string warehouseIDField;
        
        private long grpCodeField;
        
        private bool grpCodeFieldSpecified;
        
        private string crewIDField;
        
        private System.DateTime startDateField;
        
        private bool startDateFieldSpecified;
        
        private System.DateTime clsDateField;
        
        private bool clsDateFieldSpecified;
        
        private System.DateTime estDateField;
        
        private bool estDateFieldSpecified;
        
        private bool contCodeField;
        
        private bool contCodeFieldSpecified;
        
        private string priorityField;
        
        private duration durationField;
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string taxDist {
            get {
                return this.taxDistField;
            }
            set {
                this.taxDistField = value;
            }
        }
        
        /// <remarks/>
        public string franchiseDist {
            get {
                return this.franchiseDistField;
            }
            set {
                this.franchiseDistField = value;
            }
        }
        
        /// <remarks/>
        public string schoolDist {
            get {
                return this.schoolDistField;
            }
            set {
                this.schoolDistField = value;
            }
        }
        
        /// <remarks/>
        public string district {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        public voltage systemVolts {
            get {
                return this.systemVoltsField;
            }
            set {
                this.systemVoltsField = value;
            }
        }
        
        /// <remarks/>
        public string woType {
            get {
                return this.woTypeField;
            }
            set {
                this.woTypeField = value;
            }
        }
        
        /// <remarks/>
        public string cd740c {
            get {
                return this.cd740cField;
            }
            set {
                this.cd740cField = value;
            }
        }
        
        /// <remarks/>
        public string ext740c {
            get {
                return this.ext740cField;
            }
            set {
                this.ext740cField = value;
            }
        }
        
        /// <remarks/>
        public string loanNo {
            get {
                return this.loanNoField;
            }
            set {
                this.loanNoField = value;
            }
        }
        
        /// <remarks/>
        public string cwpYr {
            get {
                return this.cwpYrField;
            }
            set {
                this.cwpYrField = value;
            }
        }
        
        /// <remarks/>
        public string cwpCd {
            get {
                return this.cwpCdField;
            }
            set {
                this.cwpCdField = value;
            }
        }
        
        /// <remarks/>
        public string budgetPur {
            get {
                return this.budgetPurField;
            }
            set {
                this.budgetPurField = value;
            }
        }
        
        /// <remarks/>
        public long acNo {
            get {
                return this.acNoField;
            }
            set {
                this.acNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool acNoSpecified {
            get {
                return this.acNoFieldSpecified;
            }
            set {
                this.acNoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long budgetCode {
            get {
                return this.budgetCodeField;
            }
            set {
                this.budgetCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool budgetCodeSpecified {
            get {
                return this.budgetCodeFieldSpecified;
            }
            set {
                this.budgetCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string actCode {
            get {
                return this.actCodeField;
            }
            set {
                this.actCodeField = value;
            }
        }
        
        /// <remarks/>
        public long deptCode {
            get {
                return this.deptCodeField;
            }
            set {
                this.deptCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deptCodeSpecified {
            get {
                return this.deptCodeFieldSpecified;
            }
            set {
                this.deptCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string warehouseID {
            get {
                return this.warehouseIDField;
            }
            set {
                this.warehouseIDField = value;
            }
        }
        
        /// <remarks/>
        public long grpCode {
            get {
                return this.grpCodeField;
            }
            set {
                this.grpCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool grpCodeSpecified {
            get {
                return this.grpCodeFieldSpecified;
            }
            set {
                this.grpCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string crewID {
            get {
                return this.crewIDField;
            }
            set {
                this.crewIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startDateSpecified {
            get {
                return this.startDateFieldSpecified;
            }
            set {
                this.startDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime clsDate {
            get {
                return this.clsDateField;
            }
            set {
                this.clsDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool clsDateSpecified {
            get {
                return this.clsDateFieldSpecified;
            }
            set {
                this.clsDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime estDate {
            get {
                return this.estDateField;
            }
            set {
                this.estDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool estDateSpecified {
            get {
                return this.estDateFieldSpecified;
            }
            set {
                this.estDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool contCode {
            get {
                return this.contCodeField;
            }
            set {
                this.contCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool contCodeSpecified {
            get {
                return this.contCodeFieldSpecified;
            }
            set {
                this.contCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public duration duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class workOrderSelection : mspObject {
        
        private string projectIDField;
        
        private string woNumberField;
        
        private string jobNumberField;
        
        private string jobDescrField;
        
        private string statusCodeField;
        
        /// <remarks/>
        public string projectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public string woNumber {
            get {
                return this.woNumberField;
            }
            set {
                this.woNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        public string jobDescr {
            get {
                return this.jobDescrField;
            }
            set {
                this.jobDescrField = value;
            }
        }
        
        /// <remarks/>
        public string statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class payableItem : mspObject {
        
        private money pastDueAmountField;
        
        private money currentAmountField;
        
        private string descriptionField;
        
        private string chargeCodeField;
        
        private System.DateTime dueDateField;
        
        private bool dueDateFieldSpecified;
        
        private System.DateTime disconnectDateField;
        
        private bool disconnectDateFieldSpecified;
        
        private money lastPaymentAmountField;
        
        private System.DateTime lastPaymentDateField;
        
        private bool lastPaymentDateFieldSpecified;
        
        /// <remarks/>
        public money pastDueAmount {
            get {
                return this.pastDueAmountField;
            }
            set {
                this.pastDueAmountField = value;
            }
        }
        
        /// <remarks/>
        public money currentAmount {
            get {
                return this.currentAmountField;
            }
            set {
                this.currentAmountField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string chargeCode {
            get {
                return this.chargeCodeField;
            }
            set {
                this.chargeCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dueDateSpecified {
            get {
                return this.dueDateFieldSpecified;
            }
            set {
                this.dueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime disconnectDate {
            get {
                return this.disconnectDateField;
            }
            set {
                this.disconnectDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool disconnectDateSpecified {
            get {
                return this.disconnectDateFieldSpecified;
            }
            set {
                this.disconnectDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public money lastPaymentAmount {
            get {
                return this.lastPaymentAmountField;
            }
            set {
                this.lastPaymentAmountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastPaymentDate {
            get {
                return this.lastPaymentDateField;
            }
            set {
                this.lastPaymentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastPaymentDateSpecified {
            get {
                return this.lastPaymentDateFieldSpecified;
            }
            set {
                this.lastPaymentDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class tender : mspObject {
        
        private money amountField;
        
        private money convenienceFeeField;
        
        private money utilityFeeField;
        
        private money totalField;
        
        private string authorizationCodeField;
        
        private payableItemList payableItemListField;
        
        private string paymentModeField;
        
        private responseCode responseCodeField;
        
        private bool responseCodeFieldSpecified;
        
        private string financialTransactionIDField;
        
        /// <remarks/>
        public money amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public money convenienceFee {
            get {
                return this.convenienceFeeField;
            }
            set {
                this.convenienceFeeField = value;
            }
        }
        
        /// <remarks/>
        public money utilityFee {
            get {
                return this.utilityFeeField;
            }
            set {
                this.utilityFeeField = value;
            }
        }
        
        /// <remarks/>
        public money total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        public string authorizationCode {
            get {
                return this.authorizationCodeField;
            }
            set {
                this.authorizationCodeField = value;
            }
        }
        
        /// <remarks/>
        public payableItemList payableItemList {
            get {
                return this.payableItemListField;
            }
            set {
                this.payableItemListField = value;
            }
        }
        
        /// <remarks/>
        public string paymentMode {
            get {
                return this.paymentModeField;
            }
            set {
                this.paymentModeField = value;
            }
        }
        
        /// <remarks/>
        public responseCode responseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool responseCodeSpecified {
            get {
                return this.responseCodeFieldSpecified;
            }
            set {
                this.responseCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string financialTransactionID {
            get {
                return this.financialTransactionIDField;
            }
            set {
                this.financialTransactionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class payableItemList {
        
        private payableItem[] payableItemField;
        
        private string[] allowableTransactionTypesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("payableItem")]
        public payableItem[] payableItem {
            get {
                return this.payableItemField;
            }
            set {
                this.payableItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("transactionType", IsNullable=false)]
        public string[] allowableTransactionTypes {
            get {
                return this.allowableTransactionTypesField;
            }
            set {
                this.allowableTransactionTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum responseCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class ppmStatus {
        
        private string meterStatusField;
        
        private errorObject errorObjectField;
        
        private remainingBalance remainingBalanceField;
        
        /// <remarks/>
        public string meterStatus {
            get {
                return this.meterStatusField;
            }
            set {
                this.meterStatusField = value;
            }
        }
        
        /// <remarks/>
        public errorObject errorObject {
            get {
                return this.errorObjectField;
            }
            set {
                this.errorObjectField = value;
            }
        }
        
        /// <remarks/>
        public remainingBalance remainingBalance {
            get {
                return this.remainingBalanceField;
            }
            set {
                this.remainingBalanceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class errorObject {
        
        private string objectIDField;
        
        private string errorStringField;
        
        private string nounTypeField;
        
        private System.DateTime eventTimeField;
        
        private bool eventTimeFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string objectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorString {
            get {
                return this.errorStringField;
            }
            set {
                this.errorStringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string nounType {
            get {
                return this.nounTypeField;
            }
            set {
                this.nounTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime eventTime {
            get {
                return this.eventTimeField;
            }
            set {
                this.eventTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool eventTimeSpecified {
            get {
                return this.eventTimeFieldSpecified;
            }
            set {
                this.eventTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class cashPayment {
        
        private tender tenderField;
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class achPayment {
        
        private checkInfo checkInfoField;
        
        private tender tenderField;
        
        /// <remarks/>
        public checkInfo checkInfo {
            get {
                return this.checkInfoField;
            }
            set {
                this.checkInfoField = value;
            }
        }
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class checkInfo {
        
        private string checkingAccountNumberField;
        
        private string bankRoutingNumberField;
        
        private string nameOnCheckField;
        
        private string checkNumberField;
        
        /// <remarks/>
        public string checkingAccountNumber {
            get {
                return this.checkingAccountNumberField;
            }
            set {
                this.checkingAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string bankRoutingNumber {
            get {
                return this.bankRoutingNumberField;
            }
            set {
                this.bankRoutingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string nameOnCheck {
            get {
                return this.nameOnCheckField;
            }
            set {
                this.nameOnCheckField = value;
            }
        }
        
        /// <remarks/>
        public string checkNumber {
            get {
                return this.checkNumberField;
            }
            set {
                this.checkNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class eCheckPayment {
        
        private checkInfo checkInfoField;
        
        private tender tenderField;
        
        /// <remarks/>
        public checkInfo checkInfo {
            get {
                return this.checkInfoField;
            }
            set {
                this.checkInfoField = value;
            }
        }
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class creditCardInfo {
        
        private string typeField;
        
        private string creditCardNumberField;
        
        private string creditCardExpDateField;
        
        private string cardVerificationValueField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string mNameField;
        
        private string suffixField;
        
        private address addressField;
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string creditCardNumber {
            get {
                return this.creditCardNumberField;
            }
            set {
                this.creditCardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string creditCardExpDate {
            get {
                return this.creditCardExpDateField;
            }
            set {
                this.creditCardExpDateField = value;
            }
        }
        
        /// <remarks/>
        public string cardVerificationValue {
            get {
                return this.cardVerificationValueField;
            }
            set {
                this.cardVerificationValueField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string mName {
            get {
                return this.mNameField;
            }
            set {
                this.mNameField = value;
            }
        }
        
        /// <remarks/>
        public string suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class creditCardPayment {
        
        private creditCardInfo creditCardInfoField;
        
        private tender tenderField;
        
        /// <remarks/>
        public creditCardInfo creditCardInfo {
            get {
                return this.creditCardInfoField;
            }
            set {
                this.creditCardInfoField = value;
            }
        }
        
        /// <remarks/>
        public tender tender {
            get {
                return this.tenderField;
            }
            set {
                this.tenderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public partial class paymentTransaction {
        
        private string accountNumberField;
        
        private string typeServiceField;
        
        private creditCardPayment[] creditCardPaymentField;
        
        private eCheckPayment[] eCheckPaymentField;
        
        private achPayment[] achPaymentField;
        
        private cashPayment[] cashPaymentField;
        
        /// <remarks/>
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string typeService {
            get {
                return this.typeServiceField;
            }
            set {
                this.typeServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("creditCardPayment")]
        public creditCardPayment[] creditCardPayment {
            get {
                return this.creditCardPaymentField;
            }
            set {
                this.creditCardPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("eCheckPayment")]
        public eCheckPayment[] eCheckPayment {
            get {
                return this.eCheckPaymentField;
            }
            set {
                this.eCheckPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("achPayment")]
        public achPayment[] achPayment {
            get {
                return this.achPaymentField;
            }
            set {
                this.achPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cashPayment")]
        public cashPayment[] cashPayment {
            get {
                return this.cashPaymentField;
            }
            set {
                this.cashPaymentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum IHDMessageStatus {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Accepted,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Displayed,
        
        /// <remarks/>
        Off,
        
        /// <remarks/>
        Expired,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2556.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.multispeak.org/Version_4.1_Release")]
    public enum IHDMessageType {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        BillingMessage,
        
        /// <remarks/>
        Message,
        
        /// <remarks/>
        Unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPPMPaymentsCompletedEventHandler(object sender, GetPPMPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPMPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPMPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public paymentTransaction[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((paymentTransaction[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceOrderByServiceOrderIDCompletedEventHandler(object sender, GetServiceOrderByServiceOrderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrderByServiceOrderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrderByServiceOrderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceOrder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceOrder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceOrdersByServiceLocationCompletedEventHandler(object sender, GetServiceOrdersByServiceLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrdersByServiceLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrdersByServiceLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceOrder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceOrdersByStatusCompletedEventHandler(object sender, GetServiceOrdersByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceOrdersByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceOrdersByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceOrder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AdjustPPMBalanceCompletedEventHandler(object sender, AdjustPPMBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustPPMBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustPPMBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CommitPaymentTransactionCompletedEventHandler(object sender, CommitPaymentTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitPaymentTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitPaymentTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public paymentTransaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((paymentTransaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EnrollPPMCustomerCompletedEventHandler(object sender, EnrollPPMCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnrollPPMCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnrollPPMCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UnenrollPPMCustomerCompletedEventHandler(object sender, UnenrollPPMCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnenrollPPMCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnenrollPPMCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPrePayStatusCompletedEventHandler(object sender, GetPrePayStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrePayStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrePayStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ppmStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ppmStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterConnectivityByMeterIDCompletedEventHandler(object sender, GetMeterConnectivityByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterConnectivityByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterConnectivityByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateMeterEventMonitoringCompletedEventHandler(object sender, InitiateMeterEventMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterEventMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterEventMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelMeterEventMonitoringCompletedEventHandler(object sender, CancelMeterEventMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelMeterEventMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelMeterEventMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersByMeterConnectionStatusCompletedEventHandler(object sender, GetMetersByMeterConnectionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByMeterConnectionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByMeterConnectionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterByTransponderIDCompletedEventHandler(object sender, GetMeterByTransponderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByTransponderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByTransponderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsCDSupportedCompletedEventHandler(object sender, IsCDSupportedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCDSupportedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCDSupportedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateThresholdMonitoringCompletedEventHandler(object sender, InitiateThresholdMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateThresholdMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateThresholdMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AdjustThresholdMonitoringCompletedEventHandler(object sender, AdjustThresholdMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdjustThresholdMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdjustThresholdMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelThresholdMonitoringCompletedEventHandler(object sender, CancelThresholdMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelThresholdMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelThresholdMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ThresholdEventNotificationCompletedEventHandler(object sender, ThresholdEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThresholdEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThresholdEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateMeterExchangeCompletedEventHandler(object sender, InitiateMeterExchangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterExchangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterExchangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterExchangedNotificationCompletedEventHandler(object sender, MeterExchangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterExchangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterExchangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCustomersAffectedByOutageCompletedEventHandler(object sender, GetCustomersAffectedByOutageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersAffectedByOutageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersAffectedByOutageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customersAffectedByOutage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customersAffectedByOutage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterConfigurationNotificationCompletedEventHandler(object sender, MeterConfigurationNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterConfigurationNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterConfigurationNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RateChangedNotificationCompletedEventHandler(object sender, RateChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RateChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RateChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateMeterInstallationCompletedEventHandler(object sender, InitiateMeterInstallationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterInstallationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterInstallationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateInHomeDisplayBillingMessageCompletedEventHandler(object sender, InitiateInHomeDisplayBillingMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateInHomeDisplayBillingMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateInHomeDisplayBillingMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelInHomeDisplayBillingMessageCompletedEventHandler(object sender, CancelInHomeDisplayBillingMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelInHomeDisplayBillingMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelInHomeDisplayBillingMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateHistoricalMeterReadingsByMeterIDAndDateCompletedEventHandler(object sender, InitiateHistoricalMeterReadingsByMeterIDAndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateHistoricalMeterReadingsByMeterIDAndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateHistoricalMeterReadingsByMeterIDAndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSupportedMeterEventCodesCompletedEventHandler(object sender, GetSupportedMeterEventCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportedMeterEventCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportedMeterEventCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateBillingDeterminantsCompletedEventHandler(object sender, InitiateBillingDeterminantsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateBillingDeterminantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateBillingDeterminantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LMDeviceInstalledNotificationCompletedEventHandler(object sender, LMDeviceInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HANPricingNotificationCompletedEventHandler(object sender, HANPricingNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HANPricingNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HANPricingNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateIHDCapabilitySettingsCompletedEventHandler(object sender, InitiateIHDCapabilitySettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateIHDCapabilitySettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateIHDCapabilitySettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateIHDCapabilitySettingsToGroupCompletedEventHandler(object sender, InitiateIHDCapabilitySettingsToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateIHDCapabilitySettingsToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateIHDCapabilitySettingsToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateManufacturerSpecificCommandCompletedEventHandler(object sender, InitiateManufacturerSpecificCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateManufacturerSpecificCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateManufacturerSpecificCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateManufacturerSpecificCommandToGroupCompletedEventHandler(object sender, InitiateManufacturerSpecificCommandToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateManufacturerSpecificCommandToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateManufacturerSpecificCommandToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ManufacturerSpecificCommandNotificationCompletedEventHandler(object sender, ManufacturerSpecificCommandNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManufacturerSpecificCommandNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManufacturerSpecificCommandNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ThermostatAddNotificationCompletedEventHandler(object sender, ThermostatAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThermostatAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThermostatAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ThermostatRemoveNotificationCompletedEventHandler(object sender, ThermostatRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThermostatRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThermostatRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ThermostatScheduleNotificationCompletedEventHandler(object sender, ThermostatScheduleNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThermostatScheduleNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThermostatScheduleNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ThermostatScheduleConfirmedNotificationCompletedEventHandler(object sender, ThermostatScheduleConfirmedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThermostatScheduleConfirmedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThermostatScheduleConfirmedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ThermostatConfigurationNotificationCompletedEventHandler(object sender, ThermostatConfigurationNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThermostatConfigurationNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ThermostatConfigurationNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateThermostatScheduleCompletedEventHandler(object sender, InitiateThermostatScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateThermostatScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateThermostatScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateThermostatScheduleRequestCompletedEventHandler(object sender, InitiateThermostatScheduleRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateThermostatScheduleRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateThermostatScheduleRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateThermostatConfigurationCompletedEventHandler(object sender, InitiateThermostatConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateThermostatConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateThermostatConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateThermostatConfigurationRequestCompletedEventHandler(object sender, InitiateThermostatConfigurationRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateThermostatConfigurationRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateThermostatConfigurationRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IHDCapabilitySettingsNotificationCompletedEventHandler(object sender, IHDCapabilitySettingsNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHDCapabilitySettingsNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IHDCapabilitySettingsNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetIHDGroupNamesByInHomeDisplayIDCompletedEventHandler(object sender, GetIHDGroupNamesByInHomeDisplayIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIHDGroupNamesByInHomeDisplayIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIHDGroupNamesByInHomeDisplayIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EstablishIHDGroupCompletedEventHandler(object sender, EstablishIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteIHDGroupCompletedEventHandler(object sender, DeleteIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteHANDeviceGroupCompletedEventHandler(object sender, DeleteHANDeviceGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteHANDeviceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteHANDeviceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayMessageNotificationCompletedEventHandler(object sender, InHomeDisplayMessageNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayMessageNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayMessageNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateInHomeDisplayMessageToGroupCompletedEventHandler(object sender, InitiateInHomeDisplayMessageToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateInHomeDisplayMessageToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateInHomeDisplayMessageToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateInHomeDisplayMessageCompletedEventHandler(object sender, InitiateInHomeDisplayMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateInHomeDisplayMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateInHomeDisplayMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateHANCommissioningCompletedEventHandler(object sender, InitiateHANCommissioningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateHANCommissioningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateHANCommissioningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HANCommissioningNotificationCompletedEventHandler(object sender, HANCommissioningNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HANCommissioningNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HANCommissioningNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelInHomeDisplayMessageCompletedEventHandler(object sender, CancelInHomeDisplayMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelInHomeDisplayMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelInHomeDisplayMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelInHomeDisplayMessageToGroupCompletedEventHandler(object sender, CancelInHomeDisplayMessageToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelInHomeDisplayMessageToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelInHomeDisplayMessageToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayBillingMessageNotificationCompletedEventHandler(object sender, InHomeDisplayBillingMessageNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayBillingMessageNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayBillingMessageNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReadingScheduleResultNotificationCompletedEventHandler(object sender, ReadingScheduleResultNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadingScheduleResultNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadingScheduleResultNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterEventNotificationCompletedEventHandler(object sender, MeterEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterBaseExchangeNotificationCompletedEventHandler(object sender, MeterBaseExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterBaseInstalledNotificationCompletedEventHandler(object sender, MeterBaseInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterBaseChangedNotificationCompletedEventHandler(object sender, MeterBaseChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterBaseRemoveNotificationCompletedEventHandler(object sender, MeterBaseRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterBaseRetireNotificationCompletedEventHandler(object sender, MeterBaseRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterBaseAddNotificationCompletedEventHandler(object sender, MeterBaseAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterBaseAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterBaseAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ConnectDisconnectChangedNotificationCompletedEventHandler(object sender, ConnectDisconnectChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConnectDisconnectChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConnectDisconnectChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PricingTiersChangedNotificationCompletedEventHandler(object sender, PricingTiersChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PricingTiersChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PricingTiersChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TemperatureTiersChangedNotificationCompletedEventHandler(object sender, TemperatureTiersChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TemperatureTiersChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TemperatureTiersChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LoadCycleTiersChangedNotificationCompletedEventHandler(object sender, LoadCycleTiersChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCycleTiersChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCycleTiersChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ServiceOrderChangedNotificationCompletedEventHandler(object sender, ServiceOrderChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceOrderChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceOrderChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ServiceOrderOpenedNotificationCompletedEventHandler(object sender, ServiceOrderOpenedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceOrderOpenedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceOrderOpenedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ServiceOrderClosedNotificationCompletedEventHandler(object sender, ServiceOrderClosedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceOrderClosedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceOrderClosedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UsageMonitoringNotificationCompletedEventHandler(object sender, UsageMonitoringNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsageMonitoringNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsageMonitoringNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LMDeviceAddNotificationCompletedEventHandler(object sender, LMDeviceAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LMDeviceChangedNotificationCompletedEventHandler(object sender, LMDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LMDeviceExchangeNotificationCompletedEventHandler(object sender, LMDeviceExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LMDeviceRemoveNotificationCompletedEventHandler(object sender, LMDeviceRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LMDeviceRetireNotificationCompletedEventHandler(object sender, LMDeviceRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMDeviceRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMDeviceRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAAnalogChangedNotificationCompletedEventHandler(object sender, SCADAAnalogChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAAnalogChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAAnalogChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAAnalogChangedNotificationByPointIDCompletedEventHandler(object sender, SCADAAnalogChangedNotificationByPointIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAAnalogChangedNotificationByPointIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAAnalogChangedNotificationByPointIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAAnalogChangedNotificationForPowerCompletedEventHandler(object sender, SCADAAnalogChangedNotificationForPowerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAAnalogChangedNotificationForPowerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAAnalogChangedNotificationForPowerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAAnalogChangedNotificationForVoltageCompletedEventHandler(object sender, SCADAAnalogChangedNotificationForVoltageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAAnalogChangedNotificationForVoltageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAAnalogChangedNotificationForVoltageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAPointChangedNotificationCompletedEventHandler(object sender, SCADAPointChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAPointChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAPointChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAPointChangedNotificationForAnalogCompletedEventHandler(object sender, SCADAPointChangedNotificationForAnalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAPointChangedNotificationForAnalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAPointChangedNotificationForAnalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAPointChangedNotificationForStatusCompletedEventHandler(object sender, SCADAPointChangedNotificationForStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAPointChangedNotificationForStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAPointChangedNotificationForStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAStatusChangedNotificationCompletedEventHandler(object sender, SCADAStatusChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAStatusChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAStatusChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SCADAStatusChangedNotificationByPointIDCompletedEventHandler(object sender, SCADAStatusChangedNotificationByPointIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCADAStatusChangedNotificationByPointIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCADAStatusChangedNotificationByPointIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void StatusChangedNotificationByPointIDCompletedEventHandler(object sender, StatusChangedNotificationByPointIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatusChangedNotificationByPointIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatusChangedNotificationByPointIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AnalogChangedNotificationByPointIDCompletedEventHandler(object sender, AnalogChangedNotificationByPointIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnalogChangedNotificationByPointIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnalogChangedNotificationByPointIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSubstationNamesCompletedEventHandler(object sender, GetSubstationNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubstationNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubstationNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDownlineCircuitElementsCompletedEventHandler(object sender, GetDownlineCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownlineCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownlineCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetUplineCircuitElementsCompletedEventHandler(object sender, GetUplineCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUplineCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUplineCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetChildCircuitElementsCompletedEventHandler(object sender, GetChildCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetParentCircuitElementsCompletedEventHandler(object sender, GetParentCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllCircuitElementsCompletedEventHandler(object sender, GetAllCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetModifiedCircuitElementsCompletedEventHandler(object sender, GetModifiedCircuitElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedCircuitElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedCircuitElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDownlineMeterConnectivityCompletedEventHandler(object sender, GetDownlineMeterConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownlineMeterConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownlineMeterConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetUplineMeterConnectivityCompletedEventHandler(object sender, GetUplineMeterConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUplineMeterConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUplineMeterConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSiblingMeterConnectivityCompletedEventHandler(object sender, GetSiblingMeterConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiblingMeterConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiblingMeterConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllOtherMetersCompletedEventHandler(object sender, GetAllOtherMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOtherMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOtherMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public otherMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((otherMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllServiceLocationsCompletedEventHandler(object sender, GetAllServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetBilledUsageCompletedEventHandler(object sender, GetBilledUsageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBilledUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBilledUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public billedUsage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billedUsage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetBillingDataCompletedEventHandler(object sender, GetBillingDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public billingData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetBillingDetailCompletedEventHandler(object sender, GetBillingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public billingDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetChargeableDevicesByAccountNumberCompletedEventHandler(object sender, GetChargeableDevicesByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChargeableDevicesByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChargeableDevicesByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public chargeableDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((chargeableDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetIHDGroupMembersCompletedEventHandler(object sender, GetIHDGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIHDGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIHDGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public inHomeDisplayGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((inHomeDisplayGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetIHDGroupNamesCompletedEventHandler(object sender, GetIHDGroupNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIHDGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIHDGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateHANRegistrationCompletedEventHandler(object sender, InitiateHANRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateHANRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateHANRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelHANRegistrationCompletedEventHandler(object sender, CancelHANRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelHANRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelHANRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateHANRegistrationStatusRequestCompletedEventHandler(object sender, InitiateHANRegistrationStatusRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateHANRegistrationStatusRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateHANRegistrationStatusRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HANRegistrationNotificationCompletedEventHandler(object sender, HANRegistrationNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HANRegistrationNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HANRegistrationNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterHistoryByMeterIDCompletedEventHandler(object sender, GetMeterHistoryByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterHistoryByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterHistoryByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterHistoryEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterHistoryEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPPMBalanceAdjustmentsCompletedEventHandler(object sender, GetPPMBalanceAdjustmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPMBalanceAdjustmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPMBalanceAdjustmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ppmBalanceAdjustment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ppmBalanceAdjustment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPPMCustomerCompletedEventHandler(object sender, GetPPMCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPMCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPMCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ppmLocation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ppmLocation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DisplayODMonitoringRequestsCompletedEventHandler(object sender, DisplayODMonitoringRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisplayODMonitoringRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisplayODMonitoringRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public objectRef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((objectRef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelODMonitoringRequestByObjectCompletedEventHandler(object sender, CancelODMonitoringRequestByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelODMonitoringRequestByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelODMonitoringRequestByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateConnectDisconnectCompletedEventHandler(object sender, InitiateConnectDisconnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateConnectDisconnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateConnectDisconnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDStateChangedNotificationCompletedEventHandler(object sender, CDStateChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDStateChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDStateChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDStatesChangedNotificationCompletedEventHandler(object sender, CDStatesChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDStatesChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDStatesChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateServiceLocationDisplaysCompletedEventHandler(object sender, UpdateServiceLocationDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateServiceLocationDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateServiceLocationDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IntervalDataNotificationCompletedEventHandler(object sender, IntervalDataNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntervalDataNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IntervalDataNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateLPMeterReadingsByMeterIDCompletedEventHandler(object sender, InitiateLPMeterReadingsByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateLPMeterReadingsByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateLPMeterReadingsByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateCDStateRequestCompletedEventHandler(object sender, InitiateCDStateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateCDStateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateCDStateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDStateNotificationCompletedEventHandler(object sender, CDStateNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDStateNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDStateNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDStatesNotificationCompletedEventHandler(object sender, CDStatesNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDStatesNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDStatesNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelDemandResponseEventCompletedEventHandler(object sender, CancelDemandResponseEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDemandResponseEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDemandResponseEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelDemandResponseEventToGroupCompletedEventHandler(object sender, CancelDemandResponseEventToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDemandResponseEventToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDemandResponseEventToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DemandResponseEventNotificationCompletedEventHandler(object sender, DemandResponseEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DemandResponseEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DemandResponseEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DemandResponseSetupNotificationCompletedEventHandler(object sender, DemandResponseSetupNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DemandResponseSetupNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DemandResponseSetupNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDemandResponseEventCompletedEventHandler(object sender, InitiateDemandResponseEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDemandResponseEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDemandResponseEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDemandResponseEventStatusRequestCompletedEventHandler(object sender, InitiateDemandResponseEventStatusRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDemandResponseEventStatusRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDemandResponseEventStatusRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDemandResponseEventToGroupCompletedEventHandler(object sender, InitiateDemandResponseEventToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDemandResponseEventToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDemandResponseEventToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDemandResponseEventStatusRequestToGroupCompletedEventHandler(object sender, InitiateDemandResponseEventStatusRequestToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDemandResponseEventStatusRequestToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDemandResponseEventStatusRequestToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDemandResponseSetupCompletedEventHandler(object sender, InitiateDemandResponseSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDemandResponseSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDemandResponseSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDemandResetCompletedEventHandler(object sender, InitiateDemandResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDemandResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDemandResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateArmCDDeviceCompletedEventHandler(object sender, InitiateArmCDDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateArmCDDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateArmCDDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateEnableCDDeviceCompletedEventHandler(object sender, InitiateEnableCDDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateEnableCDDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateEnableCDDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDisableCDDeviceCompletedEventHandler(object sender, InitiateDisableCDDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDisableCDDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDisableCDDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EstablishSchedulesCompletedEventHandler(object sender, EstablishSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EstablishReadingSchedulesCompletedEventHandler(object sender, EstablishReadingSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishReadingSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishReadingSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EnableReadingSchedulesCompletedEventHandler(object sender, EnableReadingSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableReadingSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableReadingSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DisableReadingScheduleCompletedEventHandler(object sender, DisableReadingScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableReadingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableReadingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteReadingScheduleCompletedEventHandler(object sender, DeleteReadingScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReadingScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReadingScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateMeterReadingsByFieldNameCompletedEventHandler(object sender, InitiateMeterReadingsByFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadingsByFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadingsByFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateODEventRequestByServiceLocationCompletedEventHandler(object sender, InitiateODEventRequestByServiceLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateODEventRequestByServiceLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateODEventRequestByServiceLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllActiveOutageEventsCompletedEventHandler(object sender, GetAllActiveOutageEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllActiveOutageEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllActiveOutageEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetOutageEventCompletedEventHandler(object sender, GetOutageEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCircuitElementByObjectCompletedEventHandler(object sender, GetCircuitElementByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCircuitElementByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCircuitElementByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllLoadManagementDevicesCompletedEventHandler(object sender, GetAllLoadManagementDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLoadManagementDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLoadManagementDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public loadManagementDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loadManagementDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAmountOfControllableLoadCompletedEventHandler(object sender, GetAmountOfControllableLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountOfControllableLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountOfControllableLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAmountOfControlledLoadCompletedEventHandler(object sender, GetAmountOfControlledLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAmountOfControlledLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAmountOfControlledLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLoadManagementDeviceByMeterIDCompletedEventHandler(object sender, GetLoadManagementDeviceByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoadManagementDeviceByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoadManagementDeviceByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public loadManagementDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loadManagementDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLoadManagementDeviceByServiceLocationIDCompletedEventHandler(object sender, GetLoadManagementDeviceByServiceLocationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoadManagementDeviceByServiceLocationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoadManagementDeviceByServiceLocationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public loadManagementDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((loadManagementDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsLoadManagementActiveCompletedEventHandler(object sender, IsLoadManagementActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLoadManagementActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLoadManagementActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllSubstationLoadControlStatusesCompletedEventHandler(object sender, GetAllSubstationLoadControlStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSubstationLoadControlStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSubstationLoadControlStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public substationLoadControlStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((substationLoadControlStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ModifyODDataForOutageDetectionDeviceCompletedEventHandler(object sender, ModifyODDataForOutageDetectionDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyODDataForOutageDetectionDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyODDataForOutageDetectionDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void BlinkAlarmNotificationCompletedEventHandler(object sender, BlinkAlarmNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlinkAlarmNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BlinkAlarmNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void VoltageAlarmNotificationCompletedEventHandler(object sender, VoltageAlarmNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VoltageAlarmNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VoltageAlarmNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CustomerChangedNotificationCompletedEventHandler(object sender, CustomerChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AccountChangedNotificationCompletedEventHandler(object sender, AccountChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ServiceLocationChangedNotificationCompletedEventHandler(object sender, ServiceLocationChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceLocationChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceLocationChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterChangedNotificationCompletedEventHandler(object sender, MeterChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterRemoveNotificationCompletedEventHandler(object sender, MeterRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterRetireNotificationCompletedEventHandler(object sender, MeterRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterAddNotificationCompletedEventHandler(object sender, MeterAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterExchangeNotificationCompletedEventHandler(object sender, MeterExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CustomersAffectedByOutageNotificationCompletedEventHandler(object sender, CustomersAffectedByOutageNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomersAffectedByOutageNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomersAffectedByOutageNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterConnectivityNotificationCompletedEventHandler(object sender, MeterConnectivityNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterConnectivityNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterConnectivityNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EndDeviceShipmentNotificationCompletedEventHandler(object sender, EndDeviceShipmentNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EndDeviceShipmentNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EndDeviceShipmentNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FormattedBlockNotificationCompletedEventHandler(object sender, FormattedBlockNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormattedBlockNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormattedBlockNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ODEventNotificationCompletedEventHandler(object sender, ODEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ODEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ODEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ODDeviceChangedNotificationCompletedEventHandler(object sender, ODDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ODDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ODDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDDeviceAddNotificationCompletedEventHandler(object sender, CDDeviceAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDDeviceChangedNotificationCompletedEventHandler(object sender, CDDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDDeviceExchangeNotificationCompletedEventHandler(object sender, CDDeviceExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDDeviceRemoveNotificationCompletedEventHandler(object sender, CDDeviceRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDDeviceInstalledNotificationCompletedEventHandler(object sender, CDDeviceInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CDDeviceRetireNotificationCompletedEventHandler(object sender, CDDeviceRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CDDeviceRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CDDeviceRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HistoryLogChangedNotificationCompletedEventHandler(object sender, HistoryLogChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HistoryLogChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HistoryLogChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void LoadProfileChangedNotificationCompletedEventHandler(object sender, LoadProfileChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProfileChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProfileChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterTestNotificationCompletedEventHandler(object sender, MeterTestNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterTestNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterTestNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MeterInstalledNotificationCompletedEventHandler(object sender, MeterInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MeterInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MeterInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PPMMeterExchangeNotificationCompletedEventHandler(object sender, PPMMeterExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PPMMeterExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PPMMeterExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ChargeableDeviceChangedNotificationCompletedEventHandler(object sender, ChargeableDeviceChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChargeableDeviceChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChargeableDeviceChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ModifyCBDataForCustomerCompletedEventHandler(object sender, ModifyCBDataForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCBDataForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCBDataForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ModifyCBDataForServiceLocationsCompletedEventHandler(object sender, ModifyCBDataForServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCBDataForServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCBDataForServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ModifyCBDataForMetersCompletedEventHandler(object sender, ModifyCBDataForMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyCBDataForMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyCBDataForMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReadingChangedNotificationCompletedEventHandler(object sender, ReadingChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadingChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadingChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IHDMessageStatusNotificationCompletedEventHandler(object sender, IHDMessageStatusNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHDMessageStatusNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IHDMessageStatusNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IHDMessageConfirmedNotificationCompletedEventHandler(object sender, IHDMessageConfirmedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHDMessageConfirmedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IHDMessageConfirmedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayAddNotificationCompletedEventHandler(object sender, InHomeDisplayAddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayAddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayAddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayChangedNotificationCompletedEventHandler(object sender, InHomeDisplayChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayExchangeNotificationCompletedEventHandler(object sender, InHomeDisplayExchangeNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayExchangeNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayExchangeNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayInstalledNotificationCompletedEventHandler(object sender, InHomeDisplayInstalledNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayInstalledNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayInstalledNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayRemoveNotificationCompletedEventHandler(object sender, InHomeDisplayRemoveNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayRemoveNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayRemoveNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InHomeDisplayRetireNotificationCompletedEventHandler(object sender, InHomeDisplayRetireNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InHomeDisplayRetireNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InHomeDisplayRetireNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateHANPricingCompletedEventHandler(object sender, InitiateHANPricingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateHANPricingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateHANPricingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateHANPricingRequestCompletedEventHandler(object sender, InitiateHANPricingRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateHANPricingRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateHANPricingRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByMeterIDCompletedEventHandler(object sender, GetServiceLocationByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByAccountNumberCompletedEventHandler(object sender, GetServiceLocationByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByGridLocationCompletedEventHandler(object sender, GetServiceLocationByGridLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByGridLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByGridLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByPhaseCodeCompletedEventHandler(object sender, GetServiceLocationByPhaseCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByPhaseCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByPhaseCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByLoadGroupCompletedEventHandler(object sender, GetServiceLocationByLoadGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByLoadGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByLoadGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByServiceTypeCompletedEventHandler(object sender, GetServiceLocationByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByShutOffDateCompletedEventHandler(object sender, GetServiceLocationByShutOffDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByShutOffDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByShutOffDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersByEALocationCompletedEventHandler(object sender, GetMetersByEALocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByEALocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByEALocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersByFacilityIDCompletedEventHandler(object sender, GetMetersByFacilityIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByFacilityIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByFacilityIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersBySiteIDCompletedEventHandler(object sender, GetMetersBySiteIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersBySiteIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersBySiteIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersByCustomerNameCompletedEventHandler(object sender, GetMetersByCustomerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByCustomerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByCustomerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersByHomePhoneCompletedEventHandler(object sender, GetMetersByHomePhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByHomePhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByHomePhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersBySearchStringCompletedEventHandler(object sender, GetMetersBySearchStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersBySearchStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersBySearchStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLPReadingsByMeterIDFormattedBlockCompletedEventHandler(object sender, GetLPReadingsByMeterIDFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPReadingsByMeterIDFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPReadingsByMeterIDFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLPReadingsByDateFormattedBlockCompletedEventHandler(object sender, GetLPReadingsByDateFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPReadingsByDateFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPReadingsByDateFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLPReadingsByBillingCycleCompletedEventHandler(object sender, GetLPReadingsByBillingCycleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPReadingsByBillingCycleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPReadingsByBillingCycleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllAccountsCompletedEventHandler(object sender, GetAllAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public account[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((account[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAccountsByCustomerIDCompletedEventHandler(object sender, GetAccountsByCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountsByCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountsByCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public account[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((account[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAccountByMeterIDCompletedEventHandler(object sender, GetAccountByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAccountByServiceLocationIDAndServiceTypeCompletedEventHandler(object sender, GetAccountByServiceLocationIDAndServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountByServiceLocationIDAndServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountByServiceLocationIDAndServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public account Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((account)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetConfigurationGroupNamesCompletedEventHandler(object sender, GetConfigurationGroupNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetConfigurationGroupNamesByMeterIDCompletedEventHandler(object sender, GetConfigurationGroupNamesByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationGroupNamesByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationGroupNamesByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetConfigurationGroupMembersCompletedEventHandler(object sender, GetConfigurationGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public configurationGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((configurationGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSchedulesCompletedEventHandler(object sender, GetSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public schedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((schedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetScheduleByIDCompletedEventHandler(object sender, GetScheduleByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public schedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((schedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingSchedulesCompletedEventHandler(object sender, GetReadingSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public readingSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((readingSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingScheduleByIDCompletedEventHandler(object sender, GetReadingScheduleByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingScheduleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingScheduleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public readingSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((readingSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingsByMeterIDListCompletedEventHandler(object sender, GetLatestReadingsByMeterIDListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsByMeterIDListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsByMeterIDListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterBaseByObjectIDCompletedEventHandler(object sender, GetMeterBaseByObjectIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterBaseByObjectIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterBaseByObjectIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterBase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterBase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetFormattedBlockTemplatesCompletedEventHandler(object sender, GetFormattedBlockTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormattedBlockTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormattedBlockTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlockTemplate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlockTemplate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingsByMeterListFormattedBlockCompletedEventHandler(object sender, GetLatestReadingsByMeterListFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsByMeterListFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsByMeterListFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllConnectDisconnectEventsByReasonCodeCompletedEventHandler(object sender, GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllConnectDisconnectEventsByReasonCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public connectDisconnectEvent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((connectDisconnectEvent[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSupportedReadingStatusCodesCompletedEventHandler(object sender, GetSupportedReadingStatusCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportedReadingStatusCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportedReadingStatusCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public readingStatusCodeEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((readingStatusCodeEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLPReadingsByMeterIDIntervalDataCompletedEventHandler(object sender, GetLPReadingsByMeterIDIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPReadingsByMeterIDIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPReadingsByMeterIDIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLPReadingsByDateIntervalDataCompletedEventHandler(object sender, GetLPReadingsByDateIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPReadingsByDateIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPReadingsByDateIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLPReadingsByBillingCycleIntervalDataCompletedEventHandler(object sender, GetLPReadingsByBillingCycleIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPReadingsByBillingCycleIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPReadingsByBillingCycleIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByBillingCycleIntervalDataCompletedEventHandler(object sender, GetReadingsByBillingCycleIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByBillingCycleIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByBillingCycleIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingByMeterIDIntervalDataCompletedEventHandler(object sender, GetReadingByMeterIDIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingByMeterIDIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingByMeterIDIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByDateIntervalDataCompletedEventHandler(object sender, GetReadingsByDateIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventHandler(object sender, GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestMeterReadingsByMeterGroupIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventHandler(object sender, GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByMeterIDAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingByFieldNameIntervalDataCompletedEventHandler(object sender, GetLatestReadingByFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByDateAndFieldNameIntervalDataCompletedEventHandler(object sender, GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByMeterIDAndFieldNameIntervalDataCompletedEventHandler(object sender, GetReadingsByMeterIDAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByMeterIDAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByMeterIDAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingsByMeterIDListIntervalDataCompletedEventHandler(object sender, GetLatestReadingsByMeterIDListIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsByMeterIDListIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsByMeterIDListIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingsByMeterListIntervalDataCompletedEventHandler(object sender, GetLatestReadingsByMeterListIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsByMeterListIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsByMeterListIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void OutageReasonChangedNotificationCompletedEventHandler(object sender, OutageReasonChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutageReasonChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutageReasonChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void OutageReasonContainerChangedNotificationCompletedEventHandler(object sender, OutageReasonContainerChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutageReasonContainerChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutageReasonContainerChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void OutageEventChangedNotificationCompletedEventHandler(object sender, OutageEventChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OutageEventChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OutageEventChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertInHomeDisplayInIHDGroupCompletedEventHandler(object sender, InsertInHomeDisplayInIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertInHomeDisplayInIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertInHomeDisplayInIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveInHomeDisplayFromIHDGroupCompletedEventHandler(object sender, RemoveInHomeDisplayFromIHDGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveInHomeDisplayFromIHDGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveInHomeDisplayFromIHDGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelCriticalPeakPriceEventCompletedEventHandler(object sender, CancelCriticalPeakPriceEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelCriticalPeakPriceEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelCriticalPeakPriceEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelCriticalPeakPriceEventToGroupCompletedEventHandler(object sender, CancelCriticalPeakPriceEventToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelCriticalPeakPriceEventToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelCriticalPeakPriceEventToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CriticalPeakPriceEventNotificationCompletedEventHandler(object sender, CriticalPeakPriceEventNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CriticalPeakPriceEventNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CriticalPeakPriceEventNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateCriticalPeakPriceEventCompletedEventHandler(object sender, InitiateCriticalPeakPriceEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateCriticalPeakPriceEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateCriticalPeakPriceEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateCriticalPeakPriceEventToGroupCompletedEventHandler(object sender, InitiateCriticalPeakPriceEventToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateCriticalPeakPriceEventToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateCriticalPeakPriceEventToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateLoadManagementEventCompletedEventHandler(object sender, InitiateLoadManagementEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateLoadManagementEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateLoadManagementEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateLoadManagementEventsCompletedEventHandler(object sender, InitiateLoadManagementEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateLoadManagementEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateLoadManagementEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiatePowerFactorManagementEventCompletedEventHandler(object sender, InitiatePowerFactorManagementEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiatePowerFactorManagementEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiatePowerFactorManagementEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiatePlannedOutageCompletedEventHandler(object sender, InitiatePlannedOutageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiatePlannedOutageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiatePlannedOutageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelPlannedOutageCompletedEventHandler(object sender, CancelPlannedOutageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelPlannedOutageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelPlannedOutageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateUsageMonitoringCompletedEventHandler(object sender, InitiateUsageMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateUsageMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateUsageMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelUsageMonitoringCompletedEventHandler(object sender, CancelUsageMonitoringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelUsageMonitoringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelUsageMonitoringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateDisconnectedStatusCompletedEventHandler(object sender, InitiateDisconnectedStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateDisconnectedStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateDisconnectedStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelDisconnectedStatusCompletedEventHandler(object sender, CancelDisconnectedStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelDisconnectedStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelDisconnectedStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateMeterReadingsByMeterIDCompletedEventHandler(object sender, InitiateMeterReadingsByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadingsByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadingsByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EstablishMeterGroupCompletedEventHandler(object sender, EstablishMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void EstablishHANDeviceGroupCompletedEventHandler(object sender, EstablishHANDeviceGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EstablishHANDeviceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EstablishHANDeviceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertIntoHANDeviceGroupCompletedEventHandler(object sender, InsertIntoHANDeviceGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertIntoHANDeviceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertIntoHANDeviceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveFromHANDeviceGroupCompletedEventHandler(object sender, RemoveFromHANDeviceGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFromHANDeviceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFromHANDeviceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetHANDeviceGroupNamesCompletedEventHandler(object sender, GetHANDeviceGroupNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHANDeviceGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHANDeviceGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetHANDeviceGroupMembersCompletedEventHandler(object sender, GetHANDeviceGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHANDeviceGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHANDeviceGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HANDeviceGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HANDeviceGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetHANDeviceGroupNamesByHANDeviceIDCompletedEventHandler(object sender, GetHANDeviceGroupNamesByHANDeviceIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHANDeviceGroupNamesByHANDeviceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHANDeviceGroupNamesByHANDeviceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteMeterGroupCompletedEventHandler(object sender, DeleteMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertMeterInMeterGroupCompletedEventHandler(object sender, InsertMeterInMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMeterInMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMeterInMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveMetersFromMeterGroupCompletedEventHandler(object sender, RemoveMetersFromMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMetersFromMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMetersFromMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertMeterInConfigurationGroupCompletedEventHandler(object sender, InsertMeterInConfigurationGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMeterInConfigurationGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMeterInConfigurationGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RemoveMetersFromConfigurationGroupCompletedEventHandler(object sender, RemoveMetersFromConfigurationGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMetersFromConfigurationGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMetersFromConfigurationGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateGroupMeterReadingCompletedEventHandler(object sender, InitiateGroupMeterReadingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateGroupMeterReadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateGroupMeterReadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ScheduleGroupMeterReadingCompletedEventHandler(object sender, ScheduleGroupMeterReadingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScheduleGroupMeterReadingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScheduleGroupMeterReadingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateMeterReadingByMeterIDAndFieldNameCompletedEventHandler(object sender, InitiateMeterReadingByMeterIDAndFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadingByMeterIDAndFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadingByMeterIDAndFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateMeterReadingByObjectCompletedEventHandler(object sender, InitiateMeterReadingByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateMeterReadingByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateMeterReadingByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateOutageDetectionEventRequestCompletedEventHandler(object sender, InitiateOutageDetectionEventRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateOutageDetectionEventRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateOutageDetectionEventRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateODEventRequestByObjectCompletedEventHandler(object sender, InitiateODEventRequestByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateODEventRequestByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateODEventRequestByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InitiateODMonitoringRequestByObjectCompletedEventHandler(object sender, InitiateODMonitoringRequestByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateODMonitoringRequestByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateODMonitoringRequestByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PingURLCompletedEventHandler(object sender, PingURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PingURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PingURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMethodsCompletedEventHandler(object sender, GetMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDomainNamesCompletedEventHandler(object sender, GetDomainNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDomainMembersCompletedEventHandler(object sender, GetDomainMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public domainMember[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((domainMember[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RequestRegistrationIDCompletedEventHandler(object sender, RequestRegistrationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestRegistrationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestRegistrationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RegisterForServiceCompletedEventHandler(object sender, RegisterForServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterForServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterForServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UnregisterForServiceCompletedEventHandler(object sender, UnregisterForServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnregisterForServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnregisterForServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetRegistrationInfoByIDCompletedEventHandler(object sender, GetRegistrationInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrationInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrationInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public registrationInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((registrationInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPublishMethodsCompletedEventHandler(object sender, GetPublishMethodsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPublishMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPublishMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DomainMembersChangedNotificationCompletedEventHandler(object sender, DomainMembersChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DomainMembersChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DomainMembersChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DomainNamesChangedNotificationCompletedEventHandler(object sender, DomainNamesChangedNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DomainNamesChangedNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DomainNamesChangedNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public errorObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((errorObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllMetersCompletedEventHandler(object sender, GetAllMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAMRSupportedMetersCompletedEventHandler(object sender, GetAMRSupportedMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAMRSupportedMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAMRSupportedMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetModifiedAMRMetersCompletedEventHandler(object sender, GetModifiedAMRMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedAMRMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedAMRMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsAMRMeterCompletedEventHandler(object sender, IsAMRMeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAMRMeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAMRMeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByDateCompletedEventHandler(object sender, GetReadingsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterReading[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterReading[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByMeterIDCompletedEventHandler(object sender, GetReadingsByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterReading[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterReading[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByMeterIDListAndFieldNameIntervalDataCompletedEventHandler(object sender, GetReadingsByMeterIDListAndFieldNameIntervalDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByMeterIDListAndFieldNameIntervalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByMeterIDListAndFieldNameIntervalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public intervalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((intervalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingByMeterIDCompletedEventHandler(object sender, GetLatestReadingByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterReading Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterReading)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByBillingCycleCompletedEventHandler(object sender, GetReadingsByBillingCycleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByBillingCycleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByBillingCycleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingByMeterIDFormattedBlockCompletedEventHandler(object sender, GetReadingByMeterIDFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingByMeterIDFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingByMeterIDFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByDateFormattedBlockCompletedEventHandler(object sender, GetReadingsByDateFormattedBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateFormattedBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateFormattedBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetHistoryLogByMeterIDCompletedEventHandler(object sender, GetHistoryLogByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetHistoryLogsByDateCompletedEventHandler(object sender, GetHistoryLogsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetHistoryLogsByMeterIDAndEventCodeCompletedEventHandler(object sender, GetHistoryLogsByMeterIDAndEventCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogsByMeterIDAndEventCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogsByMeterIDAndEventCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetHistoryLogsByDateAndEventCodeCompletedEventHandler(object sender, GetHistoryLogsByDateAndEventCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryLogsByDateAndEventCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryLogsByDateAndEventCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public historyLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((historyLog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestMeterReadingsByMeterGroupCompletedEventHandler(object sender, GetLatestMeterReadingsByMeterGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestMeterReadingsByMeterGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestMeterReadingsByMeterGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingByMeterIDAndFieldNameCompletedEventHandler(object sender, GetLatestReadingByMeterIDAndFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByMeterIDAndFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByMeterIDAndFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingByFieldNameCompletedEventHandler(object sender, GetLatestReadingByFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingByFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingByFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByDateAndFieldNameCompletedEventHandler(object sender, GetReadingsByDateAndFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByDateAndFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByDateAndFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSupportedFieldNamesCompletedEventHandler(object sender, GetSupportedFieldNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportedFieldNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportedFieldNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByMeterIDAndFieldNameCompletedEventHandler(object sender, GetReadingsByMeterIDAndFieldNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByMeterIDAndFieldNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByMeterIDAndFieldNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public formattedBlock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((formattedBlock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLatestReadingsCompletedEventHandler(object sender, GetLatestReadingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReadingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReadingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterReading[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterReading[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllInHomeDisplaysCompletedEventHandler(object sender, GetAllInHomeDisplaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllInHomeDisplaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllInHomeDisplaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public inHomeDisplay[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((inHomeDisplay[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetReadingsByUOMAndDateCompletedEventHandler(object sender, GetReadingsByUOMAndDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReadingsByUOMAndDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReadingsByUOMAndDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterReading[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterReading[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllOutageDetectionDevicesCompletedEventHandler(object sender, GetAllOutageDetectionDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOutageDetectionDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOutageDetectionDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetOutageDetectionDevicesByMeterIDCompletedEventHandler(object sender, GetOutageDetectionDevicesByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageDetectionDevicesByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageDetectionDevicesByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetOutageDetectionDevicesByStatusCompletedEventHandler(object sender, GetOutageDetectionDevicesByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageDetectionDevicesByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageDetectionDevicesByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetOutageDetectionDevicesByTypeCompletedEventHandler(object sender, GetOutageDetectionDevicesByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageDetectionDevicesByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageDetectionDevicesByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetOutagedODDevicesCompletedEventHandler(object sender, GetOutagedODDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutagedODDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutagedODDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageDetectionDevice[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageDetectionDevice[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCDSupportedMetersCompletedEventHandler(object sender, GetCDSupportedMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCDSupportedMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCDSupportedMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetModifiedCDMetersCompletedEventHandler(object sender, GetModifiedCDMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedCDMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedCDMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCDMeterStateCompletedEventHandler(object sender, GetCDMeterStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCDMeterStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCDMeterStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CDState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CDState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetOutageEventStatusCompletedEventHandler(object sender, GetOutageEventStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageEventStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageEventStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageEventStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageEventStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetActiveOutagesCompletedEventHandler(object sender, GetActiveOutagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveOutagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveOutagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetOutageEventStatusByOutageLocationCompletedEventHandler(object sender, GetOutageEventStatusByOutageLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutageEventStatusByOutageLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutageEventStatusByOutageLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public outageEventStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((outageEventStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllElectricMetersCompletedEventHandler(object sender, GetAllElectricMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllElectricMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllElectricMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public electricMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((electricMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllGasMetersCompletedEventHandler(object sender, GetAllGasMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGasMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGasMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gasMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gasMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllWaterMetersCompletedEventHandler(object sender, GetAllWaterMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllWaterMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllWaterMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public waterMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((waterMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllPropaneMetersCompletedEventHandler(object sender, GetAllPropaneMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPropaneMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPropaneMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public propaneMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((propaneMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetElectricMetersByAccountNumberCompletedEventHandler(object sender, GetElectricMetersByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetElectricMetersByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetElectricMetersByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public electricMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((electricMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetGasMetersByAccountNumberCompletedEventHandler(object sender, GetGasMetersByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGasMetersByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGasMetersByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public gasMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((gasMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetWaterMetersByAccountNumberCompletedEventHandler(object sender, GetWaterMetersByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaterMetersByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaterMetersByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public waterMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((waterMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPropaneMetersByAccountNumberCompletedEventHandler(object sender, GetPropaneMetersByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropaneMetersByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropaneMetersByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public propaneMeter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((propaneMeter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllCustomersByServiceTypeCompletedEventHandler(object sender, GetAllCustomersByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomersByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomersByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllMetersByServiceTypeCompletedEventHandler(object sender, GetAllMetersByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMetersByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMetersByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllServiceLocationsByServiceTypeCompletedEventHandler(object sender, GetAllServiceLocationsByServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllServiceLocationsByServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllServiceLocationsByServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersByAccountNumberAndServiceTypeCompletedEventHandler(object sender, GetMetersByAccountNumberAndServiceTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByAccountNumberAndServiceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByAccountNumberAndServiceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllCustomersCompletedEventHandler(object sender, GetAllCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetModifiedCustomersCompletedEventHandler(object sender, GetModifiedCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetModifiedServiceLocationsCompletedEventHandler(object sender, GetModifiedServiceLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedServiceLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedServiceLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCustomerByCustomerIDCompletedEventHandler(object sender, GetCustomerByCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCustomerByMeterIDCompletedEventHandler(object sender, GetCustomerByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCustomerByNameCompletedEventHandler(object sender, GetCustomerByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCustomerByDBANameCompletedEventHandler(object sender, GetCustomerByDBANameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByDBANameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByDBANameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDeviceTreeConnectivityCompletedEventHandler(object sender, GetDeviceTreeConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceTreeConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceTreeConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public circuitElement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((circuitElement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterConnectivityBySubstationCompletedEventHandler(object sender, GetMeterConnectivityBySubstationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterConnectivityBySubstationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterConnectivityBySubstationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterConnectivity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterConnectivity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetEndDeviceShipmentByShipmentIDCompletedEventHandler(object sender, GetEndDeviceShipmentByShipmentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentByShipmentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentByShipmentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetEndDeviceShipmentsByDateRangeCompletedEventHandler(object sender, GetEndDeviceShipmentsByDateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentsByDateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentsByDateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetEndDeviceShipmentByMeterIDCompletedEventHandler(object sender, GetEndDeviceShipmentByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetEndDeviceShipmentByTransponderIDCompletedEventHandler(object sender, GetEndDeviceShipmentByTransponderIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEndDeviceShipmentByTransponderIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEndDeviceShipmentByTransponderIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public endDeviceShipment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((endDeviceShipment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLPDataByMeterIDCompletedEventHandler(object sender, GetLPDataByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLPDataByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLPDataByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public profileObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((profileObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterByMeterIDCompletedEventHandler(object sender, GetMeterByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterByServiceLocationIDCompletedEventHandler(object sender, GetMeterByServiceLocationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByServiceLocationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByServiceLocationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetAllMetersByAccountNumberCompletedEventHandler(object sender, GetAllMetersByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMetersByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMetersByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterByCustomerIDCompletedEventHandler(object sender, GetMeterByCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterByCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterByCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMetersByAMRTypeCompletedEventHandler(object sender, GetMetersByAMRTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetersByAMRTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMetersByAMRTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterGroupNamesCompletedEventHandler(object sender, GetMeterGroupNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterGroupNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterGroupNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterGroupNamesByMeterIDCompletedEventHandler(object sender, GetMeterGroupNamesByMeterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterGroupNamesByMeterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterGroupNamesByMeterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMeterGroupMembersCompletedEventHandler(object sender, GetMeterGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeterGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeterGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meterGroups Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meterGroups)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetModifiedMetersCompletedEventHandler(object sender, GetModifiedMetersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetModifiedMetersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetModifiedMetersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public meters Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((meters)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByServiceStatusCompletedEventHandler(object sender, GetServiceLocationByServiceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByServiceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByServiceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByServiceLocationIDCompletedEventHandler(object sender, GetServiceLocationByServiceLocationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByServiceLocationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByServiceLocationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetServiceLocationByCustomerIDCompletedEventHandler(object sender, GetServiceLocationByCustomerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceLocationByCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceLocationByCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public serviceLocation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((serviceLocation[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591